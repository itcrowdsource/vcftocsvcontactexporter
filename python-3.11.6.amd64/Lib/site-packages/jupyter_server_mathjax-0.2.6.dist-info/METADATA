Metadata-Version: 2.1
Name: jupyter-server-mathjax
Version: 0.2.6
Summary: MathJax resources as a Jupyter Server Extension.
Home-page: http://jupyter.org
Author: Jupyter Development Team
Author-email: jupyter@googlegroups.com
License: BSD 3-Clause License
Keywords: ipython,jupyter,jupyter-server
Platform: Linux
Platform: Mac OS X
Platform: Windows
Classifier: Framework :: Jupyter
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: jupyter-server (>=1.1)
Provides-Extra: test
Requires-Dist: jupyter-server[test] ; extra == 'test'
Requires-Dist: pytest ; extra == 'test'

# MathJax resources endpoints for Jupyter Server

![Testing](https://github.com/jupyter-server/jupyter_server_mathjax/workflows/Testing/badge.svg)



## Basic Usage

Install from PyPI:

```sh
> pip install jupyter_server_mathjax
```

This will automatically enable the extension in Jupyter Server.

To test the installation, you can run Jupyter Server and visit the `/static/jupyter_server_mathjax/MathJax.js` endpoint:

```sh
> jupyter server
```

## Maintenance Notes

To install an editable install locally for development, first clone the repository locally,
then run:

```sh
`pip install -e .[test]`
```

Note that the editable install will not install the data file that
automatically configures the extension for use. To manually enable it, run:

```sh
jupyter server extension enable --py jupyter_server_mathjax
```

To build for distribution, use the `build` package:

```sh
pip install build
python -m build
```

Then release using twine:

```sh
twine check dist/*
twine check dist/*
```
