{"version":3,"file":"3436.nbdime.js","mappings":"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","sources":["webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/core/OutputJax.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/core/Tree/Wrapper.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/core/Tree/WrapperFactory.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Notation.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrapper.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/WrapperFactory.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/TeXAtom.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/TextNode.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/maction.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/math.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/menclose.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mfenced.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mfrac.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mglyph.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mi.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mmultiscripts.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mn.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mo.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mpadded.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mroot.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mrow.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/ms.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mspace.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/msqrt.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/msubsup.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mtable.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mtd.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mtext.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/mtr.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/munderover.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/scriptbase.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/chtml/Wrappers/semantics.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Notation.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/OutputJax.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrapper.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/WrapperFactory.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/TeXAtom.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/TextNode.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/maction.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/math.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/menclose.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mfenced.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mfrac.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mglyph.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mi.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mmultiscripts.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mn.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mo.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mpadded.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mroot.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mrow.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/ms.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mspace.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/msqrt.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/msubsup.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mtable.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mtd.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mtext.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/mtr.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/munderover.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/scriptbase.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/output/common/Wrappers/semantics.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/util/BBox.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/util/FunctionList.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/util/PrioritizedList.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/util/StyleList.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/util/Styles.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/util/numeric.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the interface and abstract class for the OutputJax\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {userOptions, defaultOptions, OptionList} from '../util/Options.js';\nimport {MathDocument} from './MathDocument.js';\nimport {MathItem} from './MathItem.js';\nimport {DOMAdaptor} from '../core/DOMAdaptor.js';\nimport {FunctionList} from '../util/FunctionList.js';\n\n/*****************************************************************/\n/**\n *  The OutputJax interface\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport interface OutputJax<N, T, D> {\n  /**\n   * The name of this output jax class\n   */\n  name: string;\n\n  /**\n   * The options for the instance\n   */\n  options: OptionList;\n\n  /**\n   * Lists of post-filters to call after typesetting the math\n   */\n  postFilters: FunctionList;\n\n  /**\n   * The DOM adaptor for managing HTML elements\n   */\n  adaptor: DOMAdaptor<N, T, D>;\n\n  /**\n   * @param {DOMAdaptor} adaptor The adaptor to use in this jax\n   */\n  setAdaptor(adaptor: DOMAdaptor<N, T, D>): void;\n\n  /**\n   * Do any initialization that depends on the document being set up\n   */\n  initialize(): void;\n\n  /**\n   * Reset any needed features of the output jax\n   *\n   * @param {any[]} args   The arguments needed by the reset operation\n   */\n  reset(...args: any[]): void;\n\n  /**\n   * Typset a given MathItem\n   *\n   * @param {MathItem} math          The MathItem to be typeset\n   * @param {MathDocument} document  The MathDocument in which the typesetting should occur\n   * @return {N}                     The DOM tree for the typeset math\n   */\n  typeset(math: MathItem<N, T, D>, document?: MathDocument<N, T, D>): N;\n\n  /**\n   * Handle an escaped character (e.g., \\$ from the TeX input jax preventing it from being a delimiter)\n   *\n   * @param {MathItem} math          The MathItem to be escaped\n   * @param {MathDocument} document  The MathDocument in which the math occurs\n   * @return {N}                     The DOM tree for the escaped item\n   */\n  escaped(math: MathItem<N, T, D>, document?: MathDocument<N, T, D>): N;\n\n  /**\n   * Get the metric information for all math in the given document\n   *\n   * @param {MathDocument} document  The MathDocument being processed\n   */\n  getMetrics(document: MathDocument<N, T, D>): void;\n\n  /**\n   * Produce the stylesheet needed for this output jax\n   *\n   * @param {MathDocument} document  The MathDocument being processed\n   */\n  styleSheet(document: MathDocument<N, T, D>): N;\n\n  /**\n   * Produce any page-specific elements needed for this output jax\n   *\n   * @param {MathDocument} document  The MathDocument being processed\n   */\n  pageElements(document: MathDocument<N, T, D>): N;\n}\n\n\n/*****************************************************************/\n/**\n *  The OutputJax abstract class\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport abstract class AbstractOutputJax<N, T, D> implements OutputJax<N, T, D> {\n\n  /**\n   * The name for the output jax\n   */\n  public static NAME: string = 'generic';\n\n  /**\n   * The default options for the output jax\n   */\n  public static OPTIONS: OptionList = {};\n\n  /**\n   * The actual options supplied to the output jax\n   */\n  public options: OptionList;\n\n  /**\n   * Filters to run after the output is processed\n   */\n  public postFilters: FunctionList;\n\n  /**\n   * The MathDocument's DOMAdaptor\n   */\n  public adaptor: DOMAdaptor<N, T, D> = null;  // set by the handler\n\n  /**\n   * @param {OptionList} options  The options for this instance\n   */\n  constructor(options: OptionList = {}) {\n    let CLASS = this.constructor as typeof AbstractOutputJax;\n    this.options = userOptions(defaultOptions({}, CLASS.OPTIONS), options);\n    this.postFilters = new FunctionList();\n  }\n\n  /**\n   * @return {string}  The name for this output jax class\n   */\n  public get name(): string {\n    return (this.constructor as typeof AbstractOutputJax).NAME;\n  }\n\n  /**\n   * @override\n   */\n  public setAdaptor(adaptor: DOMAdaptor<N, T, D>) {\n    this.adaptor = adaptor;\n  }\n\n  /**\n   * @override\n   */\n  public initialize() {\n  }\n\n  /**\n   * @override\n   */\n  public reset(..._args: any[]) {\n  }\n\n  /**\n   * @override\n   */\n  public abstract typeset(math: MathItem<N, T, D>, document?: MathDocument<N, T, D>): N;\n\n  /**\n   * @override\n   */\n  public abstract escaped(math: MathItem<N, T, D>, document?: MathDocument<N, T, D>): N;\n\n  /**\n   * @override\n   */\n  public getMetrics(_document: MathDocument<N, T, D>) {\n  }\n\n  /**\n   * @override\n   */\n  public styleSheet(_document: MathDocument<N, T, D>) {\n    return null as N;\n  }\n\n  /**\n   * @override\n   */\n  public pageElements(_document: MathDocument<N, T, D>) {\n    return null as N;\n  }\n\n  /**\n   * Execute a set of filters, passing them the MathItem and any needed data,\n   *  and return the (possibly modified) data\n   *\n   * @param {FunctionList} filters   The list of functions to be performed\n   * @param {MathItem} math          The math item that is being processed\n   * @param {MathDocument} document  The math document contaiing the math item\n   * @param {any} data               Whatever other data is needed\n   * @return {any}                   The (possibly modified) data\n   */\n  protected executeFilters(\n    filters: FunctionList, math: MathItem<N, T, D>,\n    document: MathDocument<N, T, D>, data: any\n  ): any {\n    let args = {math, document, data};\n    filters.execute(args);\n    return args.data;\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Generic Wrapper class for adding methods to a Node class for visitors\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {Node} from './Node.js';\nimport {WrapperFactory} from './WrapperFactory.js';\n\n/*********************************************************/\n/**\n *  The Wrapper interface\n *\n *  It points to a Node object.  Subclasses add methods for the visitor to call.\n *\n * @template N  The Node type being wrapped\n * @template W  The Wrapper type being produced\n */\nexport interface Wrapper<N extends Node, W extends Wrapper<N, W>> {\n  node: N;\n  readonly kind: string;\n\n  /**\n   * @param {Node} node  A node to be wrapped\n   * @param {any[]} args  Any additional arguments needed when creating the wrapper\n   * @return {Wrapper}   The wrapped node\n   */\n  wrap(node: N, ...args: any[]): W;\n}\n\n/*********************************************************/\n/**\n *  The Wrapper class interface\n *\n * @template N  The Node type being wrapped\n * @template W  The Wrapper type being produced\n */\nexport interface WrapperClass<N extends Node, W extends Wrapper<N, W>> {\n  /**\n   * @param {WrapperFactory} factory  The factory used to create more wrappers\n   * @param {N} node  The node to be wrapped\n   * @param {any[]} args  Any additional arguments needed when creating the wrapper\n   * @return {W}  The wrapped node\n   */\n  new(factory: WrapperFactory<N, W, WrapperClass<N, W>>, node: N, ...args: any[]): W;\n}\n\n/*********************************************************/\n/**\n *  The abstract Wrapper class\n *\n * @template N  The Node type being created by the factory\n * @template W  The Wrapper type being produced\n */\nexport class AbstractWrapper<N extends Node, W extends Wrapper<N, W>> implements Wrapper<N, W> {\n  /**\n   * The Node object associated with this instance\n   */\n  public node: N;\n\n  /**\n   * The WrapperFactory to use to wrap child nodes, as needed\n   */\n  protected factory: WrapperFactory<N, W, WrapperClass<N, W>>;\n\n  /**\n   * The kind of this wrapper\n   */\n  get kind() {\n    return this.node.kind;\n  }\n\n  /**\n   * @param {WrapperFactory} factory  The WrapperFactory to use to wrap child nodes when needed\n   * @param {Node} node               The node to wrap\n   *\n   * @constructor\n   * @implements {Wrapper}\n   */\n  constructor(factory: WrapperFactory<N, W, WrapperClass<N, W>>, node: N) {\n    this.factory = factory;\n    this.node = node;\n  }\n\n  /**\n   * @override\n   */\n  public wrap(node: N) {\n    return this.factory.wrap(node);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Generic WrapperFactory class for creating Wrapper objects\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {Node} from './Node.js';\nimport {Wrapper, WrapperClass} from './Wrapper.js';\nimport {Factory, AbstractFactory} from './Factory.js';\n\n/*****************************************************************/\n/**\n * The generic WrapperFactory class\n *\n * @template N  The Node type being created by the factory\n * @template W  The Wrapper type being produced (instance type)\n * @template C  The Wrapper class (for static values)\n */\nexport interface WrapperFactory<N extends Node, W extends Wrapper<N, W>, C extends WrapperClass<N, W>>\nextends Factory<W, C> {\n  /**\n   * @param {N} node  The node to be wrapped\n   * @param {any[]} args  Any additional arguments needed when wrapping the node\n   * @return {W}  The newly wrapped node\n   */\n  wrap(node: N, ...args: any[]): W;\n}\n\n/*****************************************************************/\n/**\n * The generic WrapperFactory class\n *\n * @template N  The Node type being created by the factory\n * @template W  The Wrapper type being produced (instance type)\n * @template C  The Wrapper class (for static values)\n */\nexport abstract class AbstractWrapperFactory<N extends Node, W extends Wrapper<N, W>, C extends WrapperClass<N, W>>\nextends AbstractFactory<W, C> implements WrapperFactory<N, W, C> {\n  /**\n   * @param {N} node  The node to be wrapped\n   * @param {any[]} args  Any additional arguments needed when wrapping the node\n   * @return {W}  The newly wrapped node\n   */\n  public wrap(node: N, ...args: any[]): W {\n    return this.create(node.kind, node, ...args);\n  }\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTML OutputJax object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CommonOutputJax} from './common/OutputJax.js';\nimport {CommonWrapper} from './common/Wrapper.js';\nimport {StyleList} from '../util/Styles.js';\nimport {StyleList as CssStyleList, CssStyles} from '../util/StyleList.js';\nimport {OptionList} from '../util/Options.js';\nimport {MathDocument} from '../core/MathDocument.js';\nimport {MathItem} from '../core/MathItem.js';\nimport {MmlNode} from '../core/MmlTree/MmlNode.js';\nimport {CHTMLWrapper} from './chtml/Wrapper.js';\nimport {CHTMLWrapperFactory} from './chtml/WrapperFactory.js';\nimport {CHTMLFontData} from './chtml/FontData.js';\nimport {Usage} from './chtml/Usage.js';\nimport {TeXFont} from './chtml/fonts/tex.js';\nimport * as LENGTHS from '../util/lengths.js';\nimport {unicodeChars} from '../util/string.js';\n\n\n/*****************************************************************/\n/**\n *  Implements the CHTML class (extends AbstractOutputJax)\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class CHTML<N, T, D> extends\nCommonOutputJax<N, T, D, CHTMLWrapper<N, T, D>, CHTMLWrapperFactory<N, T, D>, CHTMLFontData, typeof CHTMLFontData> {\n\n  /**\n   * The name of this output jax\n   */\n  public static NAME: string = 'CHTML';\n\n  /**\n   * @override\n   */\n  public static OPTIONS: OptionList = {\n    ...CommonOutputJax.OPTIONS,\n    adaptiveCSS: true,            // true means only produce CSS that is used in the processed equations\n    matchFontHeight: true,        // true to match ex-height of surrounding font\n  };\n\n  /**\n   *  The default styles for CommonHTML\n   */\n  public static commonStyles: CssStyleList = {\n    'mjx-container[jax=\"CHTML\"]': {'line-height': 0},\n\n    'mjx-container [space=\"1\"]': {'margin-left': '.111em'},\n    'mjx-container [space=\"2\"]': {'margin-left': '.167em'},\n    'mjx-container [space=\"3\"]': {'margin-left': '.222em'},\n    'mjx-container [space=\"4\"]': {'margin-left': '.278em'},\n    'mjx-container [space=\"5\"]': {'margin-left': '.333em'},\n\n    'mjx-container [rspace=\"1\"]': {'margin-right': '.111em'},\n    'mjx-container [rspace=\"2\"]': {'margin-right': '.167em'},\n    'mjx-container [rspace=\"3\"]': {'margin-right': '.222em'},\n    'mjx-container [rspace=\"4\"]': {'margin-right': '.278em'},\n    'mjx-container [rspace=\"5\"]': {'margin-right': '.333em'},\n\n    'mjx-container [size=\"s\"]' : {'font-size': '70.7%'},\n    'mjx-container [size=\"ss\"]': {'font-size': '50%'},\n    'mjx-container [size=\"Tn\"]': {'font-size': '60%'},\n    'mjx-container [size=\"sm\"]': {'font-size': '85%'},\n    'mjx-container [size=\"lg\"]': {'font-size': '120%'},\n    'mjx-container [size=\"Lg\"]': {'font-size': '144%'},\n    'mjx-container [size=\"LG\"]': {'font-size': '173%'},\n    'mjx-container [size=\"hg\"]': {'font-size': '207%'},\n    'mjx-container [size=\"HG\"]': {'font-size': '249%'},\n\n    'mjx-container [width=\"full\"]': {width: '100%'},\n\n    'mjx-box': {display: 'inline-block'},\n    'mjx-block': {display: 'block'},\n    'mjx-itable': {display: 'inline-table'},\n    'mjx-row': {display: 'table-row'},\n    'mjx-row > *': {display: 'table-cell'},\n\n    //\n    //  These don't have Wrapper subclasses, so add their styles here\n    //\n    'mjx-mtext': {\n      display: 'inline-block'\n    },\n    'mjx-mstyle': {\n      display: 'inline-block'\n    },\n    'mjx-merror': {\n      display: 'inline-block',\n      color: 'red',\n      'background-color': 'yellow'\n    },\n    'mjx-mphantom': {\n      visibility: 'hidden'\n    },\n\n    //\n    //  WebKit-specific CSS to handle bug with clipped characters.\n    //  (test found at https://browserstrangeness.bitbucket.io/css_hacks.html#safari)\n    //\n    '_::-webkit-full-page-media, _:future, :root mjx-container': {\n      'will-change': 'opacity'\n    }\n  };\n\n  /**\n   * The ID for the stylesheet element for the styles for the SVG output\n   */\n  public static STYLESHEETID = 'MJX-CHTML-styles';\n\n  /**\n   *  Used to store the CHTMLWrapper factory.\n   */\n  public factory: CHTMLWrapperFactory<N, T, D>;\n\n  /**\n   * The usage information for the wrapper classes\n   */\n  public wrapperUsage: Usage<string>;\n\n  /**\n   * The CHTML stylesheet, once it is constructed\n   */\n  public chtmlStyles: N = null;\n\n  /**\n   * @override\n   * @constructor\n   */\n  constructor(options: OptionList = null) {\n    super(options, CHTMLWrapperFactory as any, TeXFont);\n    this.font.adaptiveCSS(this.options.adaptiveCSS);\n    this.wrapperUsage = new Usage<string>();\n  }\n\n  /**\n   * @override\n   */\n  public escaped(math: MathItem<N, T, D>, html: MathDocument<N, T, D>) {\n    this.setDocument(html);\n    return this.html('span', {}, [this.text(math.math)]);\n  }\n\n  /**\n   * @override\n   */\n  public styleSheet(html: MathDocument<N, T, D>) {\n    if (this.chtmlStyles) {\n      if (this.options.adaptiveCSS) {\n        //\n        // Update the style sheet rules\n        //\n        const styles = new CssStyles();\n        this.addWrapperStyles(styles);\n        this.updateFontStyles(styles);\n        this.adaptor.insertRules(this.chtmlStyles, styles.getStyleRules());\n      }\n      return this.chtmlStyles;  // stylesheet is already added to the document\n    }\n    const sheet = this.chtmlStyles = super.styleSheet(html);\n    this.adaptor.setAttribute(sheet, 'id', CHTML.STYLESHEETID);\n    this.wrapperUsage.update();\n    return sheet;\n  }\n\n  /**\n   * @param {CssStyles} styles   The styles to update with newly used character styles\n   */\n  protected updateFontStyles(styles: CssStyles) {\n    styles.addStyles(this.font.updateStyles({}));\n  }\n\n  /**\n   * @override\n   */\n  protected addWrapperStyles(styles: CssStyles) {\n    if (!this.options.adaptiveCSS) {\n      super.addWrapperStyles(styles);\n      return;\n    }\n    for (const kind of this.wrapperUsage.update()) {\n      const wrapper = this.factory.getNodeClass(kind) as any as typeof CommonWrapper;\n      wrapper && this.addClassStyles(wrapper, styles);\n    }\n  }\n\n  /**\n   * @override\n   */\n  protected addClassStyles(wrapper: typeof CommonWrapper, styles: CssStyles) {\n    const CLASS = wrapper as typeof CHTMLWrapper;\n    if (CLASS.autoStyle && CLASS.kind !== 'unknown') {\n      styles.addStyles({\n        ['mjx-' + CLASS.kind]: {\n          display: 'inline-block',\n          'text-align': 'left'\n        }\n      });\n    }\n    this.wrapperUsage.add(CLASS.kind);\n    super.addClassStyles(wrapper, styles);\n  }\n\n  /**\n   * @param {MmlNode} math  The MML node whose HTML is to be produced\n   * @param {N} parent      The HTML node to contain the HTML\n   */\n  protected processMath(math: MmlNode, parent: N) {\n    this.factory.wrap(math).toCHTML(parent);\n  }\n\n  /**\n   * Clear the cache of which items need their styles to be output\n   */\n  public clearCache() {\n    this.cssStyles.clear();\n    this.font.clearCache();\n    this.wrapperUsage.clear();\n    this.chtmlStyles = null;\n  }\n\n  /**\n   * @override\n   */\n  public reset() {\n    this.clearCache();\n  }\n\n  /*****************************************************************/\n\n  /**\n   * @override\n   */\n  public unknownText(text: string, variant: string, width: number = null) {\n    const styles: StyleList = {};\n    const scale = 100 / this.math.metrics.scale;\n    if (scale !== 100) {\n      styles['font-size'] = this.fixed(scale, 1) + '%';\n      styles.padding = LENGTHS.em(75 / scale) + ' 0 ' + LENGTHS.em(20 / scale) + ' 0';\n    }\n    if (variant !== '-explicitFont') {\n      const c = unicodeChars(text);\n      if (c.length !== 1 || c[0] < 0x1D400 || c[0] > 0x1D7FF) {\n        this.cssFontStyles(this.font.getCssFont(variant), styles);\n      }\n    }\n    //\n    // Work around Safari bug with the MJXZERO font by forcing the width.\n    //   (If MJXZERO can be made to work with Safari, then remove width parameter\n    //    and call to getBBox().w in TextNode.ts)\n    //\n    if (width !== null) {\n      const metrics = this.math.metrics;\n      styles.width = Math.round(width * metrics.em * metrics.scale) + 'px';\n    }\n    //\n    return this.html('mjx-utext', {variant: variant, style: styles}, [this.text(text)]);\n  }\n\n  /**\n   * Measure the width of a text element by placing it in the page\n   *  and looking up its size (fake the height and depth, since we can't measure that)\n   *\n   * @override\n   */\n\n  public measureTextNode(textNode: N) {\n    const adaptor = this.adaptor;\n    const text = adaptor.clone(textNode);\n    //\n    // Work arround Safari bug with the MJXZERO font.\n    //\n    adaptor.setStyle(text, 'font-family', adaptor.getStyle(text, 'font-family').replace(/MJXZERO, /g, ''));\n    //\n    const style = {position: 'absolute', 'white-space': 'nowrap'};\n    const node = this.html('mjx-measure-text', {style}, [text]);\n    adaptor.append(adaptor.parent(this.math.start.node), this.container);\n    adaptor.append(this.container, node);\n    let w = adaptor.nodeSize(text, this.math.metrics.em)[0] / this.math.metrics.scale;\n    adaptor.remove(this.container);\n    adaptor.remove(node);\n    return {w: w, h: .75, d: .2};\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements utilities for notations for menclose elements\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLmenclose} from './Wrappers/menclose.js';\nimport * as Notation from '../common/Notation.js';\nexport * from '../common/Notation.js';\n\n/*\n * Shorthands for common types\n */\nexport type RENDERER<N, T, D> = Notation.Renderer<CHTMLmenclose<N, T, D>, N>;\nexport type DEFPAIR<N, T, D> = Notation.DefPair<CHTMLmenclose<N, T, D>, N>;\n\n/**\n * Create a named element (handled by CSS), and adjust it if thickness is non-standard\n *\n * @param {string} name    The name of the element to create\n * @param {string} offset  The offset direction to adjust if thickness is non-standard\n * @return {RENDERER}      The renderer function for the given element name\n */\nexport const RenderElement = function<N, T, D>(name: string, offset: string = ''):  RENDERER<N, T, D> {\n  return ((node, _child) => {\n    const shape = node.adjustBorder(node.html('mjx-' + name));\n    if (offset) {\n      const d = node.getOffset(offset);\n      if (node.thickness !== Notation.THICKNESS || d)  {\n        const transform = `translate${offset}(${node.em(node.thickness / 2 - d)})`;\n        node.adaptor.setStyle(shape, 'transform', transform);\n      }\n    }\n    node.adaptor.append(node.chtml, shape);\n  }) as Notation.Renderer<CHTMLmenclose<N, T, D>, N>;\n};\n\n/**\n * @param {Notation.Side} side   The side on which a border should appear\n * @return {DEFPAIR}      The notation definition for the notation having a line on the given side\n */\nexport const Border = function<N, T, D>(side: Notation.Side): DEFPAIR<N, T, D> {\n  return Notation.CommonBorder<CHTMLmenclose<N, T, D>, N>((node, child) => {\n    node.adaptor.setStyle(child, 'border-' + side, node.em(node.thickness) + ' solid');\n  })(side);\n};\n\n\n/**\n * @param {string} name    The name of the notation to define\n * @param {Notation.Side} side1   The first side to get a border\n * @param {Notation.Side} side2   The second side to get a border\n * @return {DEFPAIR}       The notation definition for the notation having lines on two sides\n */\nexport const Border2 = function<N, T, D>(name: string, side1: Notation.Side, side2: Notation.Side): DEFPAIR<N, T, D> {\n  return Notation.CommonBorder2<CHTMLmenclose<N, T, D>, N>((node, child) => {\n    const border = node.em(node.thickness) + ' solid';\n    node.adaptor.setStyle(child, 'border-' + side1, border);\n    node.adaptor.setStyle(child, 'border-' + side2, border);\n  })(name, side1, side2);\n};\n\n/**\n * @param {string} name  The name of the diagonal strike to define\n * @param {number} neg   1 or -1 to use with the angle\n * @return {DEFPAIR}     The notation definition for the diagonal strike\n */\nexport const DiagonalStrike = function<N, T, D>(name: string, neg: number): DEFPAIR<N, T, D> {\n  return Notation.CommonDiagonalStrike<CHTMLmenclose<N, T, D>, N>((cname: string) => (node, _child) => {\n    const {w, h, d} = node.getBBox();\n    const [a, W] = node.getArgMod(w, h + d);\n    const t = neg * node.thickness / 2;\n    const strike = node.adjustBorder(node.html(cname, {style: {\n      width: node.em(W),\n      transform: 'rotate(' + node.fixed(-neg * a) + 'rad) translateY(' + t + 'em)',\n    }}));\n    node.adaptor.append(node.chtml, strike);\n  })(name);\n};\n\n/**\n * @param {string} name   The name of the diagonal arrow to define\n * @return {DEFPAIR}      The notation definition for the diagonal arrow\n */\nexport const DiagonalArrow = function<N, T, D>(name: string): DEFPAIR<N, T, D> {\n  return Notation.CommonDiagonalArrow<CHTMLmenclose<N, T, D>, N>((node, arrow) => {\n    node.adaptor.append(node.chtml, arrow);\n  })(name);\n};\n\n/**\n * @param {string} name   The name of the horizontal or vertical arrow to define\n * @return {DEFPAIR}      The notation definition for the arrow\n */\nexport const Arrow = function<N, T, D>(name: string): DEFPAIR<N, T, D> {\n  return Notation.CommonArrow<CHTMLmenclose<N, T, D>, N>((node, arrow) => {\n    node.adaptor.append(node.chtml, arrow);\n  })(name);\n};\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLWrapper class\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {OptionList} from '../../util/Options.js';\nimport * as LENGTHS from '../../util/lengths.js';\nimport {CommonWrapper, AnyWrapperClass, Constructor, StringMap} from '../common/Wrapper.js';\nimport {CHTML} from '../chtml.js';\nimport {CHTMLWrapperFactory} from './WrapperFactory.js';\nimport {BBox} from '../../util/BBox.js';\nimport {CHTMLFontData, CHTMLCharOptions, CHTMLDelimiterData} from './FontData.js';\n\nexport {Constructor, StringMap} from '../common/Wrapper.js';\n\n/*****************************************************************/\n\n/**\n * Some standard sizes to use in predefind CSS properties\n */\nexport const FONTSIZE: StringMap = {\n  '70.7%': 's',\n  '70%': 's',\n  '50%': 'ss',\n  '60%': 'Tn',\n  '85%': 'sm',\n  '120%': 'lg',\n  '144%': 'Lg',\n  '173%': 'LG',\n  '207%': 'hg',\n  '249%': 'HG'\n};\n\nexport const SPACE: StringMap = {\n  /* tslint:disable:whitespace */\n  [LENGTHS.em(2/18)]: '1',\n  [LENGTHS.em(3/18)]: '2',\n  [LENGTHS.em(4/18)]: '3',\n  [LENGTHS.em(5/18)]: '4',\n  [LENGTHS.em(6/18)]: '5'\n  /* tslint:enable */\n};\n\n\n/**\n * Shorthand for making a CHTMLWrapper constructor\n */\nexport type CHTMLConstructor<N, T, D> = Constructor<CHTMLWrapper<N, T, D>>;\n\n\n/*****************************************************************/\n/**\n *  The type of the CHTMLWrapper class (used when creating the wrapper factory for this class)\n */\nexport interface CHTMLWrapperClass extends AnyWrapperClass {\n\n  kind: string;\n\n  /**\n   * If true, this causes a style for the node type to be generated automatically\n   * that sets display:inline-block (as needed for the output for MmlNodes).\n   */\n  autoStyle: boolean;\n\n}\n\n/*****************************************************************/\n/**\n *  The base CHTMLWrapper class\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class CHTMLWrapper<N, T, D> extends\nCommonWrapper<\n  CHTML<N, T, D>,\n  CHTMLWrapper<N, T, D>,\n  CHTMLWrapperClass,\n  CHTMLCharOptions,\n  CHTMLDelimiterData,\n  CHTMLFontData\n> {\n\n  /**\n   * The wrapper type\n   */\n  public static kind: string = 'unknown';\n\n  /**\n   * If true, this causes a style for the node type to be generated automatically\n   * that sets display:inline-block (as needed for the output for MmlNodes).\n   */\n  public static autoStyle = true;\n\n  /**\n   * @override\n   */\n  protected factory: CHTMLWrapperFactory<N, T, D>;\n\n  /**\n   * @override\n   */\n  public parent: CHTMLWrapper<N, T, D>;\n  /**\n   * @override\n   */\n  public childNodes: CHTMLWrapper<N, T, D>[];\n\n  /**\n   * The HTML element generated for this wrapped node\n   */\n  public chtml: N = null;\n\n  /*******************************************************************/\n\n  /**\n   * Create the HTML for the wrapped node.\n   *\n   * @param {N} parent  The HTML node where the output is added\n   */\n  public toCHTML(parent: N) {\n    const chtml = this.standardCHTMLnode(parent);\n    for (const child of this.childNodes) {\n      child.toCHTML(chtml);\n    }\n  }\n\n  /*******************************************************************/\n\n  /**\n   * Create the standard CHTML element for the given wrapped node.\n   *\n   * @param {N} parent  The HTML element in which the node is to be created\n   * @returns {N}  The root of the HTML tree for the wrapped node's output\n   */\n  protected standardCHTMLnode(parent: N): N {\n    this.markUsed();\n    const chtml = this.createCHTMLnode(parent);\n    this.handleStyles();\n    this.handleVariant();\n    this.handleScale();\n    this.handleColor();\n    this.handleSpace();\n    this.handleAttributes();\n    this.handlePWidth();\n    return chtml;\n  }\n\n  /**\n   * Mark this class as having been typeset (so its styles will be output)\n   */\n  public markUsed() {\n    this.jax.wrapperUsage.add(this.kind);\n  }\n\n  /**\n   * @param {N} parent  The HTML element in which the node is to be created\n   * @returns {N}  The root of the HTML tree for the wrapped node's output\n   */\n  protected createCHTMLnode(parent: N): N {\n    const href = this.node.attributes.get('href');\n    if (href) {\n      parent = this.adaptor.append(parent, this.html('a', {href: href})) as N;\n    }\n    this.chtml = this.adaptor.append(parent, this.html('mjx-' + this.node.kind)) as N;\n    return this.chtml;\n  }\n\n  /**\n   * Set the CSS styles for the chtml element\n   */\n  protected handleStyles() {\n    if (!this.styles) return;\n    const styles = this.styles.cssText;\n    if (styles) {\n      this.adaptor.setAttribute(this.chtml, 'style', styles);\n      const family = this.styles.get('font-family');\n      if (family) {\n        this.adaptor.setStyle(this.chtml, 'font-family', 'MJXZERO, ' + family);\n      }\n    }\n  }\n\n  /**\n   * Set the CSS for the math variant\n   */\n  protected handleVariant() {\n    if (this.node.isToken && this.variant !== '-explicitFont') {\n      this.adaptor.setAttribute(this.chtml, 'class',\n                                (this.font.getVariant(this.variant) || this.font.getVariant('normal')).classes);\n    }\n  }\n\n  /**\n   * Set the (relative) scaling factor for the node\n   */\n  protected handleScale() {\n    this.setScale(this.chtml, this.bbox.rscale);\n  }\n\n  /**\n   * @param {N} chtml  The HTML node to scale\n   * @param {number} rscale      The relatie scale to apply\n   * @return {N}       The HTML node (for chaining)\n   */\n  protected setScale(chtml: N, rscale: number): N {\n    const scale = (Math.abs(rscale - 1) < .001 ? 1 : rscale);\n    if (chtml && scale !== 1) {\n      const size = this.percent(scale);\n      if (FONTSIZE[size]) {\n        this.adaptor.setAttribute(chtml, 'size', FONTSIZE[size]);\n      } else {\n        this.adaptor.setStyle(chtml, 'fontSize', size);\n      }\n    }\n    return chtml;\n  }\n\n  /**\n   * Add the proper spacing\n   */\n  protected handleSpace() {\n    for (const data of [[this.bbox.L, 'space',  'marginLeft'],\n                        [this.bbox.R, 'rspace', 'marginRight']]) {\n      const [dimen, name, margin] = data as [number, string, string];\n      if (dimen) {\n        const space = this.em(dimen);\n        if (SPACE[space]) {\n          this.adaptor.setAttribute(this.chtml, name, SPACE[space]);\n        } else {\n          this.adaptor.setStyle(this.chtml, margin, space);\n        }\n      }\n    }\n  }\n\n  /**\n   * Add the foreground and background colors\n   * (Only look at explicit attributes, since inherited ones will\n   *  be applied to a parent element, and we will inherit from that)\n   */\n  protected handleColor() {\n    const attributes = this.node.attributes;\n    const mathcolor = attributes.getExplicit('mathcolor') as string;\n    const color = attributes.getExplicit('color') as string;\n    const mathbackground = attributes.getExplicit('mathbackground') as string;\n    const background = attributes.getExplicit('background') as string;\n    if (mathcolor || color) {\n      this.adaptor.setStyle(this.chtml, 'color', mathcolor || color);\n    }\n    if (mathbackground || background) {\n      this.adaptor.setStyle(this.chtml, 'backgroundColor', mathbackground || background);\n    }\n  }\n\n  /**\n   * Copy RDFa, aria, and other tags from the MathML to the CHTML output nodes.\n   * Don't copy those in the skipAttributes list, or anything that already exists\n   * as a property of the node (e.g., no \"onlick\", etc.).  If a name in the\n   * skipAttributes object is set to false, then the attribute WILL be copied.\n   * Add the class to any other classes already in use.\n   */\n  protected handleAttributes() {\n    const attributes = this.node.attributes;\n    const defaults = attributes.getAllDefaults();\n    const skip = CHTMLWrapper.skipAttributes;\n    for (const name of attributes.getExplicitNames()) {\n      if (skip[name] === false || (!(name in defaults) && !skip[name] &&\n                                   !this.adaptor.hasAttribute(this.chtml, name))) {\n        this.adaptor.setAttribute(this.chtml, name, attributes.getExplicit(name) as string);\n      }\n    }\n    if (attributes.get('class')) {\n      const names = (attributes.get('class') as string).trim().split(/ +/);\n      for (const name of names) {\n        this.adaptor.addClass(this.chtml, name);\n      }\n    }\n  }\n\n  /**\n   * Handle the attributes needed for percentage widths\n   */\n  protected handlePWidth() {\n    if (this.bbox.pwidth) {\n      if (this.bbox.pwidth === BBox.fullWidth) {\n        this.adaptor.setAttribute(this.chtml, 'width', 'full');\n      } else {\n        this.adaptor.setStyle(this.chtml, 'width', this.bbox.pwidth);\n      }\n    }\n  }\n\n  /*******************************************************************/\n\n  /**\n   * @param {N} chtml       The HTML node whose indentation is to be adjusted\n   * @param {string} align  The alignment for the node\n   * @param {number} shift  The indent (positive or negative) for the node\n   */\n  protected setIndent(chtml: N, align: string, shift: number) {\n    const adaptor = this.adaptor;\n    if (align === 'center' || align === 'left') {\n      const L = this.getBBox().L;\n      adaptor.setStyle(chtml, 'margin-left', this.em(shift + L));\n    }\n    if (align === 'center' || align === 'right') {\n      const R = this.getBBox().R;\n      adaptor.setStyle(chtml, 'margin-right', this.em(-shift + R));\n    }\n  }\n\n  /*******************************************************************/\n  /**\n   * For debugging\n   */\n\n  public drawBBox() {\n    let {w, h, d, R}  = this.getBBox();\n    const box = this.html('mjx-box', {style: {\n      opacity: .25, 'margin-left': this.em(-w - R)\n    }}, [\n      this.html('mjx-box', {style: {\n        height: this.em(h),\n        width: this.em(w),\n        'background-color': 'red'\n      }}),\n      this.html('mjx-box', {style: {\n        height: this.em(d),\n        width: this.em(w),\n        'margin-left': this.em(-w),\n        'vertical-align': this.em(-d),\n        'background-color': 'green'\n      }})\n    ] as N[]);\n    const node = this.chtml || this.parent.chtml;\n    const size = this.adaptor.getAttribute(node, 'size');\n    if (size) {\n      this.adaptor.setAttribute(box, 'size', size);\n    }\n    const fontsize = this.adaptor.getStyle(node, 'fontSize');\n    if (fontsize) {\n      this.adaptor.setStyle(box, 'fontSize', fontsize);\n    }\n    this.adaptor.append(this.adaptor.parent(node), box);\n    this.adaptor.setStyle(node, 'backgroundColor', '#FFEE00');\n  }\n\n  /*******************************************************************/\n  /*\n   * Easy access to some utility routines\n   */\n\n  /**\n   * @param {string} type      The tag name of the HTML node to be created\n   * @param {OptionList} def   The properties to set for the created node\n   * @param {(N|T)[]} content  The child nodes for the created HTML node\n   * @return {N}               The generated HTML tree\n   */\n  public html(type: string, def: OptionList = {}, content: (N | T)[] = []): N {\n    return this.jax.html(type, def, content);\n  }\n\n  /**\n   * @param {string} text  The text from which to create an HTML text node\n   * @return {T}           The generated text node with the given text\n   */\n  public text(text: string): T {\n    return this.jax.text(text);\n  }\n\n  /**\n   * @param {number} n  A unicode code point to be converted to a character className reference.\n   * @return {string}   The className for the character\n   */\n  protected char(n: number): string {\n    return this.font.charSelector(n).substr(1);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLWrapperFactory class\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTML} from '../chtml.js';\nimport {CommonWrapperFactory} from '../common/WrapperFactory.js';\nimport {CHTMLWrapper, CHTMLWrapperClass} from './Wrapper.js';\nimport {CHTMLWrappers} from './Wrappers.js';\nimport {CHTMLCharOptions, CHTMLDelimiterData, CHTMLFontData} from './FontData.js';\n\n/*****************************************************************/\n/**\n *  The CHTMLWrapperFactory class for creating CHTMLWrapper nodes\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class CHTMLWrapperFactory<N, T, D> extends\nCommonWrapperFactory<\n  CHTML<N, T, D>,\n  CHTMLWrapper<N, T, D>,\n  CHTMLWrapperClass,\n  CHTMLCharOptions,\n  CHTMLDelimiterData,\n  CHTMLFontData\n> {\n\n  /**\n   * The default list of wrapper nodes this factory can create\n   */\n  public static defaultNodes = CHTMLWrappers;\n\n  /**\n   * The CHTML output jax associated with this factory\n   */\n  public jax: CHTML<N, T, D>;\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  An object listing all the CHTMLWrapper classes\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {WrapperConstructor} from '../common/Wrapper.js';\nimport {CHTMLWrapper} from './Wrapper.js';\nimport {CHTMLmath} from './Wrappers/math.js';\nimport {CHTMLmi} from './Wrappers/mi.js';\nimport {CHTMLmo} from './Wrappers/mo.js';\nimport {CHTMLmn} from './Wrappers/mn.js';\nimport {CHTMLms} from './Wrappers/ms.js';\nimport {CHTMLmtext} from './Wrappers/mtext.js';\nimport {CHTMLmspace} from './Wrappers/mspace.js';\nimport {CHTMLmpadded} from './Wrappers/mpadded.js';\nimport {CHTMLmenclose} from './Wrappers/menclose.js';\nimport {CHTMLmrow, CHTMLinferredMrow} from './Wrappers/mrow.js';\nimport {CHTMLmfenced} from './Wrappers/mfenced.js';\nimport {CHTMLmfrac} from './Wrappers/mfrac.js';\nimport {CHTMLmsqrt} from './Wrappers/msqrt.js';\nimport {CHTMLmroot} from './Wrappers/mroot.js';\nimport {CHTMLmsub, CHTMLmsup, CHTMLmsubsup} from './Wrappers/msubsup.js';\nimport {CHTMLmover, CHTMLmunder, CHTMLmunderover} from './Wrappers/munderover.js';\nimport {CHTMLmmultiscripts} from './Wrappers/mmultiscripts.js';\nimport {CHTMLmtable} from './Wrappers/mtable.js';\nimport {CHTMLmtr, CHTMLmlabeledtr} from './Wrappers/mtr.js';\nimport {CHTMLmtd} from './Wrappers/mtd.js';\nimport {CHTMLmaction} from './Wrappers/maction.js';\nimport {CHTMLmglyph} from './Wrappers/mglyph.js';\nimport {CHTMLsemantics, CHTMLannotation, CHTMLannotationXML, CHTMLxml} from './Wrappers/semantics.js';\nimport {CHTMLTeXAtom} from './Wrappers/TeXAtom.js';\nimport {CHTMLTextNode} from './Wrappers/TextNode.js';\n\nexport const CHTMLWrappers: {[kind: string]: WrapperConstructor}  = {\n  [CHTMLmath.kind]: CHTMLmath,\n  [CHTMLmrow.kind]: CHTMLmrow,\n  [CHTMLinferredMrow.kind]: CHTMLinferredMrow,\n  [CHTMLmi.kind]: CHTMLmi,\n  [CHTMLmo.kind]: CHTMLmo,\n  [CHTMLmn.kind]: CHTMLmn,\n  [CHTMLms.kind]: CHTMLms,\n  [CHTMLmtext.kind]: CHTMLmtext,\n  [CHTMLmspace.kind]: CHTMLmspace,\n  [CHTMLmpadded.kind]: CHTMLmpadded,\n  [CHTMLmenclose.kind]: CHTMLmenclose,\n  [CHTMLmfrac.kind]: CHTMLmfrac,\n  [CHTMLmsqrt.kind]: CHTMLmsqrt,\n  [CHTMLmroot.kind]: CHTMLmroot,\n  [CHTMLmsub.kind]: CHTMLmsub,\n  [CHTMLmsup.kind]: CHTMLmsup,\n  [CHTMLmsubsup.kind]: CHTMLmsubsup,\n  [CHTMLmunder.kind]: CHTMLmunder,\n  [CHTMLmover.kind]: CHTMLmover,\n  [CHTMLmunderover.kind]: CHTMLmunderover,\n  [CHTMLmmultiscripts.kind]: CHTMLmmultiscripts,\n  [CHTMLmfenced.kind]: CHTMLmfenced,\n  [CHTMLmtable.kind]: CHTMLmtable,\n  [CHTMLmtr.kind]: CHTMLmtr,\n  [CHTMLmlabeledtr.kind]: CHTMLmlabeledtr,\n  [CHTMLmtd.kind]: CHTMLmtd,\n  [CHTMLmaction.kind]: CHTMLmaction,\n  [CHTMLmglyph.kind]: CHTMLmglyph,\n  [CHTMLsemantics.kind]: CHTMLsemantics,\n  [CHTMLannotation.kind]: CHTMLannotation,\n  [CHTMLannotationXML.kind]: CHTMLannotationXML,\n  [CHTMLxml.kind]: CHTMLxml,\n  [CHTMLTeXAtom.kind]: CHTMLTeXAtom,\n  [CHTMLTextNode.kind]: CHTMLTextNode,\n  [CHTMLWrapper.kind]: CHTMLWrapper\n};\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLTeXAtom wrapper for the MmlTeXAtom object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonTeXAtomMixin} from '../../common/Wrappers/TeXAtom.js';\nimport {TeXAtom} from '../../../core/MmlTree/MmlNodes/TeXAtom.js';\nimport {TEXCLASS, TEXCLASSNAMES} from '../../../core/MmlTree/MmlNode.js';\n\n/*****************************************************************/\n/**\n * The CHTMLTeXAtom wrapper for the TeXAtom object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLTeXAtom<N, T, D> extends\nCommonTeXAtomMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The TeXAtom wrapper\n   */\n  public static kind = TeXAtom.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    super.toCHTML(parent);\n    this.adaptor.setAttribute(this.chtml, 'texclass', TEXCLASSNAMES[this.node.texClass]);\n    //\n    // Center VCENTER atoms vertically\n    //\n    if (this.node.texClass === TEXCLASS.VCENTER) {\n      const bbox = this.childNodes[0].getBBox();  // get unmodified bbox of children\n      const {h, d} = bbox;\n      const a = this.font.params.axis_height;\n      const dh = ((h + d) / 2 + a) - h;  // new height minus old height\n      this.adaptor.setStyle(this.chtml, 'verticalAlign', this.em(dh));\n    }\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLTextNode wrapper for the TextNode object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {TextNode} from '../../../core/MmlTree/MmlNode.js';\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonTextNodeMixin} from '../../common/Wrappers/TextNode.js';\nimport {StyleList} from '../../../util/StyleList.js';\n\n/*****************************************************************/\n/**\n *  The CHTMLTextNode wrapper for the TextNode object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLTextNode<N, T, D> extends\nCommonTextNodeMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The TextNode wrapper\n   */\n  public static kind = TextNode.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static autoStyle = false;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-c': {\n      display: 'inline-block'\n    },\n    'mjx-utext': {\n      display: 'inline-block',\n      padding: '.75em 0 .2em 0'\n    }\n  };\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    this.markUsed();\n    const adaptor = this.adaptor;\n    const variant = this.parent.variant;\n    const text = (this.node as TextNode).getText();\n    if (text.length === 0) return;\n    if (variant === '-explicitFont') {\n      adaptor.append(parent, this.jax.unknownText(text, variant, this.getBBox().w));\n    } else {\n      const chars = this.remappedText(text, variant);\n      for (const n of chars) {\n        const data = this.getVariantChar(variant, n)[3];\n        const font = (data.f ? ' TEX-' + data.f : '');\n        const node = (data.unknown ?\n                      this.jax.unknownText(String.fromCodePoint(n), variant) :\n                      this.html('mjx-c', {class: this.char(n) + font}));\n        adaptor.append(parent, node);\n        !data.unknown && this.font.charUsage.add([variant, n]);\n      }\n    }\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmaction wrapper for the MmlMaction object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonMactionMixin} from '../../common/Wrappers/maction.js';\nimport {ActionDef} from '../../common/Wrappers/maction.js';\nimport {EventHandler, TooltipData} from '../../common/Wrappers/maction.js';\nimport {MmlMaction} from '../../../core/MmlTree/MmlNodes/maction.js';\nimport {TextNode} from '../../../core/MmlTree/MmlNode.js';\nimport {StyleList} from '../../../util/StyleList.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmaction wrapper for the MmlMaction object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmaction<N, T, D> extends\nCommonMactionMixin<CHTMLWrapper<any, any, any>, CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The maction wrapper\n   */\n  public static kind = MmlMaction.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-maction': {\n      position: 'relative'\n    },\n    'mjx-maction > mjx-tool': {\n      display: 'none',\n      position: 'absolute',\n      bottom: 0, right: 0,\n      width: 0, height: 0,\n      'z-index': 500\n    },\n    'mjx-tool > mjx-tip': {\n      display: 'inline-block',\n      padding: '.2em',\n      border: '1px solid #888',\n      'font-size': '70%',\n      'background-color': '#F8F8F8',\n      color: 'black',\n      'box-shadow': '2px 2px 5px #AAAAAA'\n    },\n    'mjx-maction[toggle]': {\n      cursor: 'pointer'\n    },\n    'mjx-status': {\n      display: 'block',\n      position: 'fixed',\n      left: '1em',\n      bottom: '1em',\n      'min-width': '25%',\n      padding: '.2em .4em',\n      border: '1px solid #888',\n      'font-size': '90%',\n      'background-color': '#F8F8F8',\n      color: 'black'\n    }\n  };\n\n  /**\n   * The valid action types and their handlers\n   */\n  public static actions = new Map([\n    ['toggle', [(node, _data) => {\n      //\n      // Mark which child is selected\n      //\n      node.adaptor.setAttribute(node.chtml, 'toggle', node.node.attributes.get('selection') as string);\n      //\n      // Cache the data needed to select another node\n      //\n      const math = node.factory.jax.math;\n      const document = node.factory.jax.document;\n      const mml = node.node as MmlMaction;\n      //\n      // Add a click handler that changes the selection and rerenders the expression\n      //\n      node.setEventHandler('click', (event: Event) => {\n        if (!math.end.node) {\n          //\n          // If the MathItem was created by hand, it might not have a node\n          // telling it where to replace the existing math, so set it.\n          //\n          math.start.node = math.end.node = math.typesetRoot;\n          math.start.n = math.end.n = 0;\n        }\n        mml.nextToggleSelection();\n        math.rerender(document);\n        event.stopPropagation();\n      });\n    }, {}]],\n\n    ['tooltip', [(node, data) => {\n      const tip = node.childNodes[1];\n      if (!tip) return;\n      if (tip.node.isKind('mtext')) {\n        //\n        // Text tooltips are handled through title attributes\n        //\n        const text = (tip.node as TextNode).getText();\n        node.adaptor.setAttribute(node.chtml, 'title', text);\n      } else {\n        //\n        // Math tooltips are handled through hidden nodes and event handlers\n        //\n        const adaptor = node.adaptor;\n        const tool = adaptor.append(node.chtml, node.html('mjx-tool', {\n          style: {bottom: node.em(-node.dy), right: node.em(-node.dx)}\n        }, [node.html('mjx-tip')]));\n        tip.toCHTML(adaptor.firstChild(tool));\n        //\n        // Set up the event handlers to display and remove the tooltip\n        //\n        node.setEventHandler('mouseover', (event: Event) => {\n          data.stopTimers(node, data);\n          const timeout = setTimeout(() => adaptor.setStyle(tool, 'display', 'block'), data.postDelay);\n          data.hoverTimer.set(node, timeout);\n          event.stopPropagation();\n        });\n        node.setEventHandler('mouseout',  (event: Event) => {\n          data.stopTimers(node, data);\n          const timeout = setTimeout(() => adaptor.setStyle(tool, 'display', ''), data.clearDelay);\n          data.clearTimer.set(node, timeout);\n          event.stopPropagation();\n        });\n      }\n    }, TooltipData]],\n\n    ['statusline', [(node, data) => {\n      const tip = node.childNodes[1];\n      if (!tip) return;\n      if (tip.node.isKind('mtext')) {\n        const adaptor = node.adaptor;\n        const text = (tip.node as TextNode).getText();\n        adaptor.setAttribute(node.chtml, 'statusline', text);\n        //\n        // Set up event handlers to change the status window\n        //\n        node.setEventHandler('mouseover', (event: Event) => {\n          if (data.status === null) {\n            const body = adaptor.body(adaptor.document);\n            data.status = adaptor.append(body, node.html('mjx-status', {}, [node.text(text)]));\n          }\n          event.stopPropagation();\n        });\n        node.setEventHandler('mouseout', (event: Event) => {\n          if (data.status) {\n            adaptor.remove(data.status);\n            data.status = null;\n          }\n          event.stopPropagation();\n        });\n      }\n    }, {\n      status: null  // cached status line\n    }]]\n\n  ] as ActionDef<CHTMLmaction<any, any, any>>[]);\n\n  /*************************************************************/\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    const chtml = this.standardCHTMLnode(parent);\n    const child = this.selected;\n    child.toCHTML(chtml);\n    this.action(this, this.data);\n  }\n\n  /**\n   * Add an event handler to the output for this maction\n   */\n  public setEventHandler(type: string, handler: EventHandler) {\n    (this.chtml as any).addEventListener(type, handler);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmath wrapper for the MmlMath object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonMathMixin} from '../../common/Wrappers/math.js';\nimport {MmlMath} from '../../../core/MmlTree/MmlNodes/math.js';\nimport {StyleList} from '../../../util/StyleList.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmath wrapper for the MmlMath object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmath<N, T, D> extends\nCommonMathMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The math wrapper\n   */\n  public static kind = MmlMath.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-math': {\n      'line-height': 0,\n      'text-align': 'left',\n      'text-indent': 0,\n      'font-style': 'normal',\n      'font-weight': 'normal',\n      'font-size': '100%',\n      'font-size-adjust': 'none',\n      'letter-spacing': 'normal',\n      'border-collapse': 'collapse',\n      'word-wrap': 'normal',\n      'word-spacing': 'normal',\n      'white-space': 'nowrap',\n      'direction': 'ltr',\n      'padding': '1px 0'\n    },\n    'mjx-container[jax=\"CHTML\"][display=\"true\"]': {\n      display: 'block',\n      'text-align': 'center',\n      margin: '1em 0'\n    },\n    'mjx-container[jax=\"CHTML\"][display=\"true\"][width=\"full\"]': {\n      display: 'flex'\n    },\n    'mjx-container[jax=\"CHTML\"][display=\"true\"] mjx-math': {\n      padding: 0\n    },\n    'mjx-container[jax=\"CHTML\"][justify=\"left\"]': {\n      'text-align': 'left'\n    },\n    'mjx-container[jax=\"CHTML\"][justify=\"right\"]': {\n      'text-align': 'right'\n    }\n  };\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    super.toCHTML(parent);\n    const chtml = this.chtml;\n    const adaptor = this.adaptor;\n    const display = (this.node.attributes.get('display') === 'block');\n    if (display) {\n      adaptor.setAttribute(chtml, 'display', 'true');\n      adaptor.setAttribute(parent, 'display', 'true');\n      this.handleDisplay(parent);\n    } else {\n      this.handleInline(parent);\n    }\n    adaptor.addClass(chtml, 'MJX-TEX');\n  }\n\n  /**\n   *  Handle displayed equations (set min-width, and so on).\n   */\n  protected handleDisplay(parent: N) {\n    const adaptor = this.adaptor;\n    const [align, shift] = this.getAlignShift();\n    if (align !== 'center') {\n      adaptor.setAttribute(parent, 'justify', align);\n    }\n    if (this.bbox.pwidth === BBox.fullWidth) {\n      adaptor.setAttribute(parent, 'width', 'full');\n      if (this.jax.table) {\n        let {L, w, R} = this.jax.table.getOuterBBox();\n        if (align === 'right') {\n          R = Math.max(R || -shift, -shift);\n        } else if (align === 'left') {\n          L = Math.max(L || shift, shift);\n        } else if (align === 'center') {\n          w += 2 * Math.abs(shift);\n        }\n        const W = this.em(Math.max(0, L + w + R));\n        adaptor.setStyle(parent, 'min-width', W);\n        adaptor.setStyle(this.jax.table.chtml, 'min-width', W);\n      }\n    } else {\n      this.setIndent(this.chtml, align, shift);\n    }\n  }\n\n  /**\n   * Handle in-line expressions\n   */\n  protected handleInline(parent: N) {\n    //\n    // Transfer right margin to container (for things like $x\\hskip -2em y$)\n    //\n    const adaptor = this.adaptor;\n    const margin = adaptor.getStyle(this.chtml, 'margin-right');\n    if (margin) {\n      adaptor.setStyle(this.chtml, 'margin-right', '');\n      adaptor.setStyle(parent, 'margin-right', margin);\n      adaptor.setStyle(parent, 'width', '0');\n    }\n  }\n\n  /**\n   * @override\n   */\n  public setChildPWidths(recompute: boolean, w: number = null, clear: boolean = true) {\n    return (this.parent ? super.setChildPWidths(recompute, w, clear) : false);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmenclose wrapper for the MmlMenclose object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonMencloseMixin} from '../../common/Wrappers/menclose.js';\nimport {CHTMLmsqrt} from './msqrt.js';\nimport * as Notation from '../Notation.js';\nimport {MmlMenclose} from '../../../core/MmlTree/MmlNodes/menclose.js';\nimport {OptionList} from '../../../util/Options.js';\nimport {StyleList} from '../../../util/StyleList.js';\nimport {em} from '../../../util/lengths.js';\n\n/*****************************************************************/\n\n/**\n *  The skew angle needed for the arrow head pieces\n */\nfunction Angle(x: number, y: number) {\n  return Math.atan2(x, y).toFixed(3).replace(/\\.?0+$/, '');\n}\n\nconst ANGLE = Angle(Notation.ARROWDX, Notation.ARROWY);\n\n/*****************************************************************/\n/**\n * The CHTMLmenclose wrapper for the MmlMenclose object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmenclose<N, T, D> extends\nCommonMencloseMixin<\n  CHTMLWrapper<any, any, any>,\n  CHTMLmsqrt<any, any, any>,\n  any,\n  CHTMLConstructor<any, any, any>\n>(CHTMLWrapper) {\n\n  /**\n   * The menclose wrapper\n   */\n  public static kind = MmlMenclose.prototype.kind;\n\n  /**\n   * Styles needed for the various notations\n   */\n  public static styles: StyleList = {\n    'mjx-menclose': {\n      position: 'relative'\n    },\n    'mjx-menclose > mjx-dstrike': {\n      display: 'inline-block',\n      left: 0, top: 0,\n      position: 'absolute',\n      'border-top': Notation.SOLID,\n      'transform-origin': 'top left'\n    },\n    'mjx-menclose > mjx-ustrike': {\n      display: 'inline-block',\n      left: 0, bottom: 0,\n      position: 'absolute',\n      'border-top': Notation.SOLID,\n      'transform-origin': 'bottom left'\n    },\n    'mjx-menclose > mjx-hstrike': {\n      'border-top': Notation.SOLID,\n      position: 'absolute',\n      left: 0, right: 0, bottom: '50%',\n      transform: 'translateY(' + em(Notation.THICKNESS / 2) + ')'\n    },\n    'mjx-menclose > mjx-vstrike': {\n      'border-left': Notation.SOLID,\n      position: 'absolute',\n      top: 0, bottom: 0, right: '50%',\n      transform: 'translateX(' + em(Notation.THICKNESS / 2) + ')'\n    },\n    'mjx-menclose > mjx-rbox': {\n      position: 'absolute',\n      top: 0, bottom: 0, right: 0, left: 0,\n      'border': Notation.SOLID,\n      'border-radius': em(Notation.THICKNESS + Notation.PADDING)\n    },\n    'mjx-menclose > mjx-cbox': {\n      position: 'absolute',\n      top: 0, bottom: 0, right: 0, left: 0,\n      'border': Notation.SOLID,\n      'border-radius': '50%'\n    },\n    'mjx-menclose > mjx-arrow': {\n      position: 'absolute',\n      left: 0, bottom: '50%', height: 0, width: 0\n    },\n    'mjx-menclose > mjx-arrow > *': {\n      display: 'block',\n      position: 'absolute',\n      'transform-origin': 'bottom',\n      'border-left': em(Notation.THICKNESS * Notation.ARROWX) + ' solid',\n      'border-right': 0,\n      'box-sizing': 'border-box'\n    },\n    'mjx-menclose > mjx-arrow > mjx-aline': {\n      left: 0, top: em(-Notation.THICKNESS / 2),\n      right: em(Notation.THICKNESS * (Notation.ARROWX - 1)), height: 0,\n      'border-top': em(Notation.THICKNESS) + ' solid',\n      'border-left': 0\n    },\n    'mjx-menclose > mjx-arrow[double] > mjx-aline': {\n      left: em(Notation.THICKNESS * (Notation.ARROWX - 1)), height: 0,\n    },\n    'mjx-menclose > mjx-arrow > mjx-rthead': {\n      transform: 'skewX(' + ANGLE + 'rad)',\n      right: 0, bottom: '-1px',\n      'border-bottom': '1px solid transparent',\n      'border-top': em(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'\n    },\n    'mjx-menclose > mjx-arrow > mjx-rbhead': {\n      transform: 'skewX(-' + ANGLE + 'rad)',\n      'transform-origin': 'top',\n      right: 0, top: '-1px',\n      'border-top': '1px solid transparent',\n      'border-bottom': em(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'\n    },\n    'mjx-menclose > mjx-arrow > mjx-lthead': {\n      transform: 'skewX(-' + ANGLE + 'rad)',\n      left: 0, bottom: '-1px',\n      'border-left': 0,\n      'border-right': em(Notation.THICKNESS * Notation.ARROWX) + ' solid',\n      'border-bottom': '1px solid transparent',\n      'border-top': em(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'\n    },\n    'mjx-menclose > mjx-arrow > mjx-lbhead': {\n      transform: 'skewX(' + ANGLE + 'rad)',\n      'transform-origin': 'top',\n      left: 0, top: '-1px',\n      'border-left': 0,\n      'border-right': em(Notation.THICKNESS * Notation.ARROWX) + ' solid',\n      'border-top': '1px solid transparent',\n      'border-bottom': em(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'\n    },\n    'mjx-menclose > dbox': {\n      position: 'absolute',\n      top: 0, bottom: 0, left: em(-1.5 * Notation.PADDING),\n      width: em(3 * Notation.PADDING),\n      border: em(Notation.THICKNESS) + ' solid',\n      'border-radius': '50%',\n      'clip-path': 'inset(0 0 0 ' + em(1.5 * Notation.PADDING) + ')',\n      'box-sizing': 'border-box'\n    }\n  };\n\n  /**\n   *  The definitions of the various notations\n   */\n  public static notations: Notation.DefList<CHTMLmenclose<any, any, any>, any> = new Map([\n\n    Notation.Border('top'),\n    Notation.Border('right'),\n    Notation.Border('bottom'),\n    Notation.Border('left'),\n\n    Notation.Border2('actuarial', 'top', 'right'),\n    Notation.Border2('madruwb', 'bottom', 'right'),\n\n    Notation.DiagonalStrike('up', 1),\n    Notation.DiagonalStrike('down', -1),\n\n    ['horizontalstrike', {\n      renderer: Notation.RenderElement('hstrike', 'Y'),\n      bbox: (node) => [0, node.padding, 0, node.padding]\n    }],\n\n    ['verticalstrike', {\n      renderer: Notation.RenderElement('vstrike', 'X'),\n      bbox: (node) => [node.padding, 0, node.padding, 0]\n    }],\n\n    ['box', {\n      renderer: (node, child) => {\n        node.adaptor.setStyle(child, 'border', node.em(node.thickness) + ' solid');\n      },\n      bbox: Notation.fullBBox,\n      border: Notation.fullBorder,\n      remove: 'left right top bottom'\n    }],\n\n    ['roundedbox', {\n      renderer: Notation.RenderElement('rbox'),\n      bbox: Notation.fullBBox\n    }],\n\n    ['circle', {\n      renderer: Notation.RenderElement('cbox'),\n      bbox: Notation.fullBBox\n    }],\n\n    ['phasorangle', {\n      //\n      // Use a bottom border and an upward strike properly angled\n      //\n      renderer: (node, child) => {\n        const {h, d} = node.getBBox();\n        const [a, W] = node.getArgMod(1.75 * node.padding, h + d);\n        const t = node.thickness * Math.sin(a) * .9;\n        node.adaptor.setStyle(child, 'border-bottom', node.em(node.thickness) + ' solid');\n        const strike = node.adjustBorder(node.html('mjx-ustrike', {style: {\n          width: node.em(W),\n          transform: 'translateX(' + node.em(t) + ') rotate(' + node.fixed(-a) + 'rad)',\n        }}));\n        node.adaptor.append(node.chtml, strike);\n      },\n      bbox: (node) => {\n        const p = node.padding / 2;\n        const t = node.thickness;\n        return [2 * p, p, p + t, 3 * p + t];\n      },\n      border: (node) => [0, 0, node.thickness, 0],\n      remove: 'bottom'\n    }],\n\n    Notation.Arrow('up'),\n    Notation.Arrow('down'),\n    Notation.Arrow('left'),\n    Notation.Arrow('right'),\n\n    Notation.Arrow('updown'),\n    Notation.Arrow('leftright'),\n\n    Notation.DiagonalArrow('updiagonal'),  // backward compatibility\n    Notation.DiagonalArrow('northeast'),\n    Notation.DiagonalArrow('southeast'),\n    Notation.DiagonalArrow('northwest'),\n    Notation.DiagonalArrow('southwest'),\n\n    Notation.DiagonalArrow('northeastsouthwest'),\n    Notation.DiagonalArrow('northwestsoutheast'),\n\n    ['longdiv', {\n      //\n      // Use a line along the top followed by a half ellipse at the left\n      //\n      renderer: (node, child) => {\n        const adaptor = node.adaptor;\n        adaptor.setStyle(child, 'border-top', node.em(node.thickness) + ' solid');\n        const arc = adaptor.append(node.chtml, node.html('dbox'));\n        const t = node.thickness;\n        const p = node.padding;\n        if (t !== Notation.THICKNESS) {\n          adaptor.setStyle(arc, 'border-width', node.em(t));\n        }\n        if (p !== Notation.PADDING) {\n          adaptor.setStyle(arc, 'left', node.em(-1.5 * p));\n          adaptor.setStyle(arc, 'width', node.em(3 * p));\n          adaptor.setStyle(arc, 'clip-path', 'inset(0 0 0 ' + node.em(1.5 * p) + ')');\n        }\n      },\n      bbox: (node) => {\n        const p = node.padding;\n        const t = node.thickness;\n        return [p + t, p, p, 2 * p + t / 2];\n      }\n    }],\n\n    ['radical', {\n      //\n      //  Use the msqrt rendering, but remove the extra space due to the radical\n      //    (it is added in at the end, so other notations overlap the root)\n      //\n      renderer: (node, child) => {\n        node.msqrt.toCHTML(child);\n        const TRBL = node.sqrtTRBL();\n        node.adaptor.setStyle(node.msqrt.chtml, 'margin', TRBL.map(x => node.em(-x)).join(' '));\n      },\n      //\n      //  Create the needed msqrt wrapper\n      //\n      init: (node) => {\n        node.msqrt = node.createMsqrt(node.childNodes[0]);\n      },\n      //\n      //  Add back in the padding for the square root\n      //\n      bbox: (node) => node.sqrtTRBL(),\n      //\n      //  This notation replaces the child\n      //\n      renderChild: true\n    }]\n\n  ] as Notation.DefPair<CHTMLmenclose<any, any, any>, any>[]);\n\n  /********************************************************/\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    const adaptor = this.adaptor;\n    const chtml = this.standardCHTMLnode(parent);\n    //\n    //  Create a box for the child (that can have padding and borders added by the notations)\n    //    and add the child HTML into it\n    //\n    const block = adaptor.append(chtml, this.html('mjx-box')) as N;\n    if (this.renderChild) {\n      this.renderChild(this, block);\n    } else {\n      this.childNodes[0].toCHTML(block);\n    }\n    //\n    //  Render all the notations for this menclose element\n    //\n    for (const name of Object.keys(this.notations)) {\n      const notation = this.notations[name];\n      !notation.renderChild && notation.renderer(this, block);\n    }\n    //\n    //  Add the needed padding, if any\n    //\n    const pbox = this.getPadding();\n    for (const name of Notation.sideNames) {\n      const i = Notation.sideIndex[name];\n      pbox[i] > 0 && adaptor.setStyle(block, 'padding-' + name, this.em(pbox[i]));\n    }\n  }\n\n  /********************************************************/\n\n  /**\n   * Create an arrow using HTML elements\n   *\n   * @param {number} w        The length of the arrow\n   * @param {number} a        The angle for the arrow\n   * @param {boolean} double  True if this is a double-headed arrow\n   * @param {string} offset   'X' for vertical arrow, 'Y' for horizontal\n   * @param {number} dist     Distance to translate in the offset direction\n   * @return {N}              The newly created arrow\n   */\n  public arrow(w: number, a: number, double: boolean, offset: string = '', dist: number = 0): N {\n    const W = this.getBBox().w;\n    const style = {width: this.em(w)} as OptionList;\n    if (W !== w) {\n      style.left = this.em((W - w) / 2);\n    }\n    if (a) {\n      style.transform = 'rotate(' + this.fixed(a) + 'rad)';\n    }\n    const arrow = this.html('mjx-arrow', {style: style}, [\n      this.html('mjx-aline'), this.html('mjx-rthead'), this.html('mjx-rbhead')\n    ]);\n    if (double) {\n      this.adaptor.append(arrow, this.html('mjx-lthead'));\n      this.adaptor.append(arrow, this.html('mjx-lbhead'));\n      this.adaptor.setAttribute(arrow, 'double', 'true');\n    }\n    this.adjustArrow(arrow, double);\n    this.moveArrow(arrow, offset, dist);\n    return arrow;\n  }\n\n  /**\n   * @param {N} arrow          The arrow whose thickness and arrow head is to be adjusted\n   * @param {boolean} double   True if the arrow is double-headed\n   */\n  protected adjustArrow(arrow: N, double: boolean) {\n    const t = this.thickness;\n    const head = this.arrowhead;\n    if (head.x === Notation.ARROWX && head.y === Notation.ARROWY &&\n        head.dx === Notation.ARROWDX && t === Notation.THICKNESS) return;\n    const [x, y] = [t * head.x, t * head.y].map(x => this.em(x));\n    const a = Angle(head.dx, head.y);\n    const [line, rthead, rbhead, lthead, lbhead] = this.adaptor.childNodes(arrow);\n    this.adjustHead(rthead, [y, '0', '1px', x], a);\n    this.adjustHead(rbhead, ['1px', '0', y, x], '-' + a);\n    this.adjustHead(lthead, [y, x, '1px', '0'], '-' + a);\n    this.adjustHead(lbhead, ['1px', x, y, '0'], a);\n    this.adjustLine(line, t, head.x, double);\n  }\n\n  /**\n   * @param {N} head            The piece of arrow head to be adjusted\n   * @param {string[]} border   The border sizes [T, R, B, L]\n   * @param {string} a          The skew angle for the piece\n   */\n  protected adjustHead(head: N, border: string[], a: string) {\n    if (head) {\n      this.adaptor.setStyle(head, 'border-width', border.join(' '));\n      this.adaptor.setStyle(head, 'transform', 'skewX(' + a + 'rad)');\n    }\n  }\n\n  /**\n   * @param {N} line           The arrow shaft to be adjusted\n   * @param {number} t         The arrow shaft thickness\n   * @param {number} x         The arrow head x size\n   * @param {boolean} double   True if the arrow is double-headed\n   */\n  protected adjustLine(line: N, t: number, x: number, double: boolean) {\n    this.adaptor.setStyle(line, 'borderTop', this.em(t) + ' solid');\n    this.adaptor.setStyle(line, 'top', this.em(-t / 2));\n    this.adaptor.setStyle(line, 'right', this.em(t * (x - 1)));\n    if (double) {\n      this.adaptor.setStyle(line, 'left', this.em(t * (x - 1)));\n    }\n  }\n\n  /**\n   * @param {N} arrow        The arrow whose position is to be adjusted\n   * @param {string} offset  The direction to move the arrow\n   * @param {number} d       The distance to translate in that direction\n   */\n  protected moveArrow(arrow: N, offset: string, d: number) {\n    if (!d) return;\n    const transform = this.adaptor.getStyle(arrow, 'transform');\n    this.adaptor.setStyle(\n      arrow, 'transform', `translate${offset}(${this.em(-d)})${(transform ? ' ' + transform : '')}`\n    );\n  }\n\n  /********************************************************/\n\n  /**\n   * @param {N} node   The HTML element whose border width must be\n   *                   adjusted if the thickness isn't the default\n   * @return {N}       The adjusted element\n   */\n  public adjustBorder(node: N): N {\n    if (this.thickness !== Notation.THICKNESS) {\n      this.adaptor.setStyle(node, 'borderWidth', this.em(this.thickness));\n    }\n    return node;\n  }\n\n  /**\n   * @param {N} shape   The svg element whose stroke-thickness must be\n   *                    adjusted if the thickness isn't the default\n   * @return {N}        The adjusted element\n   */\n  public adjustThickness(shape: N): N {\n    if (this.thickness !== Notation.THICKNESS) {\n      this.adaptor.setStyle(shape, 'strokeWidth', this.fixed(this.thickness));\n    }\n    return shape;\n  }\n\n  /********************************************************/\n\n  /**\n   * @param {number} m    A number to be shown with a fixed number of digits\n   * @param {number=} n   The number of digits to use\n   * @return {string}     The formatted number\n   */\n  public fixed(m: number, n: number = 3): string {\n    if (Math.abs(m) < .0006) {\n      return '0';\n    }\n    return m.toFixed(n).replace(/\\.?0+$/, '');\n  }\n\n  /**\n   * @override\n   * (make it public so it can be called by the notation functions)\n   */\n  public em(m: number) {\n    return super.em(m);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmfenced wrapper for the MmlMfenced object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonMfencedMixin} from '../../common/Wrappers/mfenced.js';\nimport {MmlMfenced} from '../../../core/MmlTree/MmlNodes/mfenced.js';\nimport {CHTMLinferredMrow} from './mrow.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmfenced wrapper for the MmlMfenced object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class CHTMLmfenced<N, T, D> extends CommonMfencedMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The mfenced wrapper\n   */\n  public static kind = MmlMfenced.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    const chtml = this.standardCHTMLnode(parent);\n    (this.mrow as CHTMLinferredMrow<N, T, D>).toCHTML(chtml);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmfrac wrapper for the MmlMfrac object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonMfracMixin} from '../../common/Wrappers/mfrac.js';\nimport {MmlMfrac} from '../../../core/MmlTree/MmlNodes/mfrac.js';\nimport {CHTMLmo} from './mo.js';\nimport {StyleList} from '../../../util/StyleList.js';\nimport {OptionList} from '../../../util/Options.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmfrac wrapper for the MmlMfrac object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class CHTMLmfrac<N, T, D> extends CommonMfracMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The mfrac wrapper\n   */\n  public static kind = MmlMfrac.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-frac': {\n      display: 'inline-block',\n      'vertical-align': '0.17em',  // axis_height - 1.5 * rule_thickness\n      padding: '0 .22em'           // nulldelimiterspace + .1 (for line's -.1em margin)\n    },\n    'mjx-frac[type=\"d\"]': {\n      'vertical-align': '.04em'    // axis_height - 3.5 * rule_thickness\n    },\n    'mjx-frac[delims]': {\n      padding: '0 .1em'            // .1 (for line's -.1em margin)\n    },\n    'mjx-frac[atop]': {\n      padding: '0 .12em'           // nulldelimiterspace\n    },\n    'mjx-frac[atop][delims]': {\n      padding: '0'\n    },\n    'mjx-dtable': {\n      display: 'inline-table',\n      width: '100%'\n    },\n    'mjx-dtable > *': {\n      'font-size': '2000%'\n    },\n    'mjx-dbox': {\n      display: 'block',\n      'font-size': '5%'\n    },\n    'mjx-num': {\n      display: 'block',\n      'text-align': 'center'\n    },\n    'mjx-den': {\n      display: 'block',\n      'text-align': 'center'\n    },\n    'mjx-mfrac[bevelled] > mjx-num': {\n      display: 'inline-block'\n    },\n    'mjx-mfrac[bevelled] > mjx-den': {\n      display: 'inline-block'\n    },\n\n    'mjx-den[align=\"right\"], mjx-num[align=\"right\"]': {\n      'text-align': 'right'\n    },\n    'mjx-den[align=\"left\"], mjx-num[align=\"left\"]': {\n      'text-align': 'left'\n    },\n\n    'mjx-nstrut': {\n      display: 'inline-block',\n      height: '.054em',              // num2 - a - 1.5t\n      width: 0,\n      'vertical-align': '-.054em'    // ditto\n    },\n    'mjx-nstrut[type=\"d\"]': {\n      height: '.217em',              // num1 - a - 3.5t\n      'vertical-align': '-.217em',   // ditto\n    },\n    'mjx-dstrut': {\n      display: 'inline-block',\n      height: '.505em',              // denom2 + a - 1.5t\n      width: 0\n    },\n    'mjx-dstrut[type=\"d\"]': {\n      height: '.726em',              // denom1 + a - 3.5t\n    },\n\n    'mjx-line': {\n      display: 'block',\n      'box-sizing': 'border-box',\n      'min-height': '1px',\n      height: '.06em',               // t = rule_thickness\n      'border-top': '.06em solid',   // t\n      margin: '.06em -.1em',         // t\n      overflow: 'hidden'\n    },\n    'mjx-line[type=\"d\"]': {\n      margin: '.18em -.1em'          // 3t\n    }\n\n  };\n\n  /**\n   * An mop element to use for bevelled fractions\n   */\n  public bevel: CHTMLmo<N, T, D>;\n\n  /************************************************/\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    this.standardCHTMLnode(parent);\n    const {linethickness, bevelled} = this.node.attributes.getList('linethickness', 'bevelled');\n    const display = this.isDisplay();\n    if (bevelled) {\n      this.makeBevelled(display);\n    } else {\n      const thickness = this.length2em(String(linethickness), .06);\n      if (thickness === 0) {\n        this.makeAtop(display);\n      } else {\n        this.makeFraction(display, thickness);\n      }\n    }\n  }\n\n  /************************************************/\n\n  /**\n   * @param {boolean} display  True when fraction is in display mode\n   * @param {number} t         The rule line thickness\n   */\n  protected makeFraction(display: boolean, t: number) {\n    const {numalign, denomalign} = this.node.attributes.getList('numalign', 'denomalign');\n    const withDelims = this.node.getProperty('withDelims');\n    //\n    // Attributes to set for the different elements making up the fraction\n    //\n    const attr = (display ? {type: 'd'} : {}) as OptionList;\n    const fattr = (withDelims ? {...attr, delims: 'true'} : {...attr}) as OptionList;\n    const nattr = (numalign !== 'center' ? {align: numalign} : {}) as OptionList;\n    const dattr = (denomalign !== 'center' ? {align: denomalign} : {}) as OptionList;\n    const dsattr = {...attr}, nsattr = {...attr};\n    //\n    // Set the styles to handle the linethickness, if needed\n    //\n    const tex = this.font.params;\n    if (t !== .06) {\n      const a = tex.axis_height;\n      const tEm = this.em(t);\n      const {T, u, v} = this.getTUV(display, t);\n      const m = (display ? this.em(3 * t) : tEm) + ' -.1em';\n      attr.style = {height: tEm, 'border-top': tEm + ' solid', margin: m};\n      const nh = this.em(Math.max(0, u));\n      nsattr.style = {height: nh, 'vertical-align': '-' + nh};\n      dsattr.style = {height: this.em(Math.max(0, v))};\n      fattr.style  = {'vertical-align': this.em(a - T)};\n    }\n    //\n    // Create the DOM tree\n    //\n    let num, den;\n    this.adaptor.append(this.chtml, this.html('mjx-frac', fattr, [\n      num = this.html('mjx-num', nattr, [this.html('mjx-nstrut', nsattr)]),\n      this.html('mjx-dbox', {}, [\n        this.html('mjx-dtable', {}, [\n          this.html('mjx-line', attr),\n          this.html('mjx-row', {}, [\n            den = this.html('mjx-den', dattr, [this.html('mjx-dstrut', dsattr)])\n          ])\n        ])\n      ])\n    ]));\n    this.childNodes[0].toCHTML(num);\n    this.childNodes[1].toCHTML(den);\n  }\n\n  /************************************************/\n\n  /**\n   * @param {boolean} display  True when fraction is in display mode\n   */\n  protected makeAtop(display: boolean) {\n    const {numalign, denomalign} = this.node.attributes.getList('numalign', 'denomalign');\n    const withDelims = this.node.getProperty('withDelims');\n    //\n    // Attributes to set for the different elements making up the fraction\n    //\n    const attr = (display ? {type: 'd', atop: true} : {atop: true}) as OptionList;\n    const fattr = (withDelims ? {...attr, delims: true} : {...attr}) as OptionList;\n    const nattr = (numalign !== 'center' ? {align: numalign} : {}) as OptionList;\n    const dattr = (denomalign !== 'center' ? {align: denomalign} : {}) as OptionList;\n    //\n    // Determine sparation and positioning\n    //\n    const {v, q} = this.getUVQ(display);\n    nattr.style = {'padding-bottom': this.em(q)};\n    fattr.style = {'vertical-align': this.em(-v)};\n    //\n    // Create the DOM tree\n    //\n    let num, den;\n    this.adaptor.append(this.chtml, this.html('mjx-frac', fattr, [\n      num = this.html('mjx-num', nattr),\n      den = this.html('mjx-den', dattr)\n    ]));\n    this.childNodes[0].toCHTML(num);\n    this.childNodes[1].toCHTML(den);\n  }\n\n  /************************************************/\n\n  /**\n   * @param {boolean} display  True when fraction is in display mode\n   */\n  protected makeBevelled(display: boolean) {\n    const adaptor = this.adaptor;\n    //\n    //  Create HTML tree\n    //\n    adaptor.setAttribute(this.chtml, 'bevelled', 'ture');\n    const num = adaptor.append(this.chtml, this.html('mjx-num'));\n    this.childNodes[0].toCHTML(num);\n    this.bevel.toCHTML(this.chtml);\n    const den = adaptor.append(this.chtml, this.html('mjx-den'));\n    this.childNodes[1].toCHTML(den);\n    //\n    //  Place the parts\n    //\n    const {u, v, delta, nbox, dbox} = this.getBevelData(display);\n    if (u) {\n      adaptor.setStyle(num, 'verticalAlign', this.em(u / nbox.scale));\n    }\n    if (v) {\n      adaptor.setStyle(den, 'verticalAlign', this.em(v / dbox.scale));\n    }\n    const dx = this.em(-delta / 2);\n    adaptor.setStyle(this.bevel.chtml, 'marginLeft', dx);\n    adaptor.setStyle(this.bevel.chtml, 'marginRight', dx);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmglyph wrapper for the MmlMglyph object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonMglyphMixin} from '../../common/Wrappers/mglyph.js';\nimport {MmlMglyph} from '../../../core/MmlTree/MmlNodes/mglyph.js';\nimport {CHTMLTextNode} from './TextNode.js';\nimport {StyleList, StyleData} from '../../../util/StyleList.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmglyph wrapper for the MmlMglyph object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmglyph<N, T, D> extends\nCommonMglyphMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The mglyph wrapper\n   */\n  public static kind = MmlMglyph.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-mglyph > img': {\n      display: 'inline-block',\n      border: 0,\n      padding: 0\n    }\n  };\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    const chtml = this.standardCHTMLnode(parent);\n    if (this.charWrapper) {\n      (this.charWrapper as CHTMLTextNode<N, T, D>).toCHTML(chtml);\n      return;\n    }\n    const {src, alt} = this.node.attributes.getList('src', 'alt');\n    const styles: StyleData = {\n      width: this.em(this.width),\n      height: this.em(this.height)\n    };\n    if (this.valign) {\n      styles.verticalAlign = this.em(this.valign);\n    }\n    const img = this.html('img', {src: src, style: styles, alt: alt, title: alt});\n    this.adaptor.append(chtml, img);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmi wrapper for the MmlMi object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonMiMixin} from '../../common/Wrappers/mi.js';\nimport {MmlMi} from '../../../core/MmlTree/MmlNodes/mi.js';\n\n/*****************************************************************/\n/**\n *  The CHTMLmi wrapper for the MmlMi object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmi<N, T, D> extends\nCommonMiMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The mi wrapper\n   */\n  public static kind = MmlMi.prototype.kind;\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmmultiscripts wrapper for the MmlMmultiscripts object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, Constructor} from '../Wrapper.js';\nimport {CHTMLmsubsup} from './msubsup.js';\nimport {CommonMmultiscriptsMixin} from '../../common/Wrappers/mmultiscripts.js';\nimport {MmlMmultiscripts} from '../../../core/MmlTree/MmlNodes/mmultiscripts.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {StyleList} from '../../../util/StyleList.js';\nimport {split} from '../../../util/string.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmmultiscripts wrapper for the MmlMmultiscripts object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmmultiscripts<N, T, D> extends\nCommonMmultiscriptsMixin<CHTMLWrapper<any, any, any>, Constructor<CHTMLmsubsup<any, any, any>>>(CHTMLmsubsup) {\n\n  /**\n   * The mmultiscripts wrapper\n   */\n  public static kind = MmlMmultiscripts.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-prescripts': {\n      display: 'inline-table',\n      'padding-left': '.05em'   // scriptspace\n    },\n    'mjx-scripts': {\n      display: 'inline-table',\n      'padding-right': '.05em'   // scriptspace\n    },\n    'mjx-prescripts > mjx-row > mjx-cell': {\n      'text-align': 'right'\n    },\n    '[script-align=\"left\"] > mjx-row > mjx-cell': {\n      'text-align': 'left'\n    },\n    '[script-align=\"center\"] > mjx-row > mjx-cell': {\n      'text-align': 'center'\n    },\n    '[script-align=\"right\"] > mjx-row > mjx-cell': {\n      'text-align': 'right'\n    }\n  };\n\n  /*************************************************************/\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    const chtml = this.standardCHTMLnode(parent);\n    const data = this.scriptData;\n    //\n    //  Get the alignment for the scripts\n    //\n    const scriptalign = this.node.getProperty('scriptalign') || 'right left';\n    const [preAlign, postAlign] = split(scriptalign + ' ' + scriptalign);\n    //\n    //  Combine the bounding boxes of the pre- and post-scripts,\n    //  and get the resulting baseline offsets\n    //\n    const sub = this.combinePrePost(data.sub, data.psub);\n    const sup = this.combinePrePost(data.sup, data.psup);\n    const [u, v] = this.getUVQ(sub, sup);\n    //\n    //  Place the pre-scripts, then the base, then the post-scripts\n    //\n    if (data.numPrescripts) {\n      const scripts = this.addScripts(u, -v, true, data.psub, data.psup, this.firstPrescript, data.numPrescripts);\n      preAlign !== 'right' && this.adaptor.setAttribute(scripts, 'script-align', preAlign);\n    }\n    this.childNodes[0].toCHTML(chtml);\n    if (data.numScripts) {\n      const scripts = this.addScripts(u, -v, false, data.sub, data.sup, 1, data.numScripts);\n      postAlign !== 'left' && this.adaptor.setAttribute(scripts, 'script-align', postAlign);\n    }\n  }\n\n  /**\n   * Create a table with the super and subscripts properly separated and aligned.\n   *\n   * @param {number} u       The baseline offset for the superscripts\n   * @param {number} v       The baseline offset for the subscripts\n   * @param {boolean} isPre  True for prescripts, false for scripts\n   * @param {BBox} sub       The subscript bounding box\n   * @param {BBox} sup       The superscript bounding box\n   * @param {number} i       The starting index for the scripts\n   * @param {number} n       The number of sub/super-scripts\n   * @return {N}             The script table for these scripts\n   */\n  protected addScripts(u: number, v: number, isPre: boolean, sub: BBox, sup: BBox, i: number, n: number): N {\n    const adaptor = this.adaptor;\n    const q = (u - sup.d) + (v - sub.h);             // separation of scripts\n    const U = (u < 0 && v === 0 ? sub.h + u : u);    // vertical offset of table\n    const rowdef = (q > 0 ? {style: {height: this.em(q)}} : {});\n    const tabledef = (U ? {style: {'vertical-align': this.em(U)}} : {});\n    const supRow = this.html('mjx-row');\n    const sepRow = this.html('mjx-row', rowdef);\n    const subRow = this.html('mjx-row');\n    const name = 'mjx-' + (isPre ? 'pre' : '') + 'scripts';\n    let m = i + 2 * n;\n    while (i < m) {\n      this.childNodes[i++].toCHTML(adaptor.append(subRow, this.html('mjx-cell')) as N);\n      this.childNodes[i++].toCHTML(adaptor.append(supRow, this.html('mjx-cell')) as N);\n    }\n    return adaptor.append(this.chtml, this.html(name, tabledef, [supRow, sepRow, subRow]));\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmn wrapper for the MmlMn object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonMnMixin} from '../../common/Wrappers/mn.js';\nimport {MmlMn} from '../../../core/MmlTree/MmlNodes/mn.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmn wrapper for the MmlMn object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmn<N, T, D> extends\nCommonMnMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The mn wrapper\n   */\n  public static kind = MmlMn.prototype.kind;\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmo wrapper for the MmlMo object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor, StringMap} from '../Wrapper.js';\nimport {CommonMoMixin, DirectionVH} from '../../common/Wrappers/mo.js';\nimport {MmlMo} from '../../../core/MmlTree/MmlNodes/mo.js';\nimport {StyleList} from '../../../util/StyleList.js';\nimport {DIRECTION} from '../FontData.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmo wrapper for the MmlMo object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmo<N, T, D> extends\nCommonMoMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The mo wrapper\n   */\n  public static kind = MmlMo.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-stretchy-h': {\n      display: 'inline-table',\n      width: '100%'\n    },\n    'mjx-stretchy-h > *': {\n      display: 'table-cell',\n      width: 0\n    },\n    'mjx-stretchy-h > * > mjx-c': {\n      display: 'inline-block',\n      transform: 'scalex(1.0000001)'      // improves blink positioning\n    },\n    'mjx-stretchy-h > * > mjx-c::before': {\n      display: 'inline-block',\n      width: 'initial'\n    },\n    'mjx-stretchy-h > mjx-ext': {\n      '/* IE */ overflow': 'hidden',\n      '/* others */ overflow': 'clip visible',\n      width: '100%'\n    },\n    'mjx-stretchy-h > mjx-ext > mjx-c::before': {\n      transform: 'scalex(500)'\n    },\n    'mjx-stretchy-h > mjx-ext > mjx-c': {\n      width: 0\n    },\n    'mjx-stretchy-h > mjx-beg > mjx-c': {\n      'margin-right': '-.1em'\n    },\n    'mjx-stretchy-h > mjx-end > mjx-c': {\n      'margin-left': '-.1em'\n    },\n\n    'mjx-stretchy-v': {\n      display: 'inline-block'\n    },\n    'mjx-stretchy-v > *': {\n      display: 'block'\n    },\n    'mjx-stretchy-v > mjx-beg': {\n      height: 0\n    },\n    'mjx-stretchy-v > mjx-end > mjx-c': {\n      display: 'block'\n    },\n    'mjx-stretchy-v > * > mjx-c': {\n      transform: 'scaley(1.0000001)',       // improves Firefox and blink positioning\n      'transform-origin': 'left center',\n      overflow: 'hidden'\n    },\n    'mjx-stretchy-v > mjx-ext': {\n      display: 'block',\n      height: '100%',\n      'box-sizing': 'border-box',\n      border: '0px solid transparent',\n      '/* IE */ overflow': 'hidden',\n      '/* others */ overflow': 'visible clip',\n    },\n    'mjx-stretchy-v > mjx-ext > mjx-c::before': {\n      width: 'initial',\n      'box-sizing': 'border-box'\n    },\n    'mjx-stretchy-v > mjx-ext > mjx-c': {\n      transform: 'scaleY(500) translateY(.075em)',\n      overflow: 'visible'\n    },\n    'mjx-mark': {\n      display: 'inline-block',\n      height: '0px'\n    }\n\n  };\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    const attributes = this.node.attributes;\n    const symmetric = (attributes.get('symmetric') as boolean) && this.stretch.dir !== DIRECTION.Horizontal;\n    const stretchy = this.stretch.dir !== DIRECTION.None;\n    if (stretchy && this.size === null) {\n      this.getStretchedVariant([]);\n    }\n    let chtml = this.standardCHTMLnode(parent);\n    if (stretchy && this.size < 0) {\n      this.stretchHTML(chtml);\n    } else {\n      if (symmetric || attributes.get('largeop')) {\n        const u = this.em(this.getCenterOffset());\n        if (u !== '0') {\n          this.adaptor.setStyle(chtml, 'verticalAlign', u);\n        }\n      }\n      if (this.node.getProperty('mathaccent')) {\n        this.adaptor.setStyle(chtml, 'width', '0');\n        this.adaptor.setStyle(chtml, 'margin-left', this.em(this.getAccentOffset()));\n      }\n      for (const child of this.childNodes) {\n        child.toCHTML(chtml);\n      }\n    }\n  }\n\n  /**\n   * Create the HTML for a multi-character stretchy delimiter\n   *\n   * @param {N} chtml  The parent element in which to put the delimiter\n   */\n  protected stretchHTML(chtml: N) {\n    const c = this.getText().codePointAt(0);\n    this.font.delimUsage.add(c);\n    this.childNodes[0].markUsed();\n    const delim = this.stretch;\n    const stretch = delim.stretch;\n    const content: N[] = [];\n    //\n    //  Set up the beginning, extension, and end pieces\n    //\n    if (stretch[0]) {\n      content.push(this.html('mjx-beg', {}, [this.html('mjx-c')]));\n    }\n    content.push(this.html('mjx-ext', {}, [this.html('mjx-c')]));\n    if (stretch.length === 4) {\n      //\n      //  Braces have a middle and second extensible piece\n      //\n      content.push(\n        this.html('mjx-mid', {}, [this.html('mjx-c')]),\n        this.html('mjx-ext', {}, [this.html('mjx-c')])\n      );\n    }\n    if (stretch[2]) {\n      content.push(this.html('mjx-end', {}, [this.html('mjx-c')]));\n    }\n    //\n    //  Set the styles needed\n    //\n    const styles: StringMap = {};\n    const {h, d, w} = this.bbox;\n    if (delim.dir === DIRECTION.Vertical) {\n      //\n      //  Vertical needs an extra (empty) element to get vertical position right\n      //  in some browsers (e.g., Safari)\n      //\n      content.push(this.html('mjx-mark'));\n      styles.height = this.em(h + d);\n      styles.verticalAlign = this.em(-d);\n    } else {\n      styles.width = this.em(w);\n    }\n    //\n    //  Make the main element and add it to the parent\n    //\n    const dir = DirectionVH[delim.dir];\n    const properties = {class: this.char(delim.c || c), style: styles};\n    const html = this.html('mjx-stretchy-' + dir, properties, content);\n    this.adaptor.append(chtml, html);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmpadded wrapper for the MmlMpadded object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor, StringMap} from '../Wrapper.js';\nimport {CommonMpaddedMixin} from '../../common/Wrappers/mpadded.js';\nimport {MmlMpadded} from '../../../core/MmlTree/MmlNodes/mpadded.js';\nimport {StyleList} from '../../../util/StyleList.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmpadded wrapper for the MmlMpadded object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmpadded<N, T, D> extends\nCommonMpaddedMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The mpadded wrapper\n   */\n  public static kind = MmlMpadded.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-mpadded': {\n      display: 'inline-block'\n    },\n    'mjx-rbox': {\n      display: 'inline-block',\n      position: 'relative'\n    }\n  };\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    let chtml = this.standardCHTMLnode(parent);\n    const content: N[] = [];\n    const style: StringMap = {};\n    const [ , , W, dh, dd, dw, x, y, dx] = this.getDimens();\n    //\n    // If the width changed, set the width explicitly\n    //\n    if (dw) {\n      style.width = this.em(W + dw);\n    }\n    //\n    // If the height or depth changed, use margin to make the change\n    //\n    if (dh || dd) {\n      style.margin = this.em(dh) + ' 0 ' + this.em(dd);\n    }\n    //\n    // If there is a horizontal or vertical shift,\n    //   use relative positioning to move the contents\n    //\n    if (x + dx || y) {\n      style.position = 'relative';\n      const rbox = this.html('mjx-rbox', {\n        style: {left: this.em(x + dx), top: this.em(-y), 'max-width': style.width}\n      });\n      if (x + dx && this.childNodes[0].getBBox().pwidth) {\n        this.adaptor.setAttribute(rbox, 'width', 'full');\n        this.adaptor.setStyle(rbox, 'left', this.em(x));\n      }\n      content.push(rbox);\n    }\n    //\n    //  Create the HTML with the proper styles and content\n    //\n    chtml = this.adaptor.append(chtml, this.html('mjx-block', {style: style}, content)) as N;\n    for (const child of this.childNodes) {\n      child.toCHTML(content[0] || chtml);\n    }\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLMroot wrapper for the MmlMroot object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper} from '../Wrapper.js';\nimport {CHTMLmsqrt} from './msqrt.js';\nimport {CommonMrootMixin, MrootConstructor} from '../../common/Wrappers/mroot.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {MmlMroot} from '../../../core/MmlTree/MmlNodes/mroot.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmroot wrapper for the MmlMroot object (extends CHTMLmsqrt)\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class CHTMLmroot<N, T, D> extends CommonMrootMixin<MrootConstructor>(CHTMLmsqrt) {\n\n  /**\n   * The mroot wrapper\n   */\n  public static kind = MmlMroot.prototype.kind;\n\n  /**\n   * @override\n   */\n  protected addRoot(ROOT: N, root: CHTMLWrapper<N, T, D>, sbox: BBox, H: number) {\n    root.toCHTML(ROOT);\n    const [x, h, dx] = this.getRootDimens(sbox, H);\n    this.adaptor.setStyle(ROOT, 'verticalAlign', this.em(h));\n    this.adaptor.setStyle(ROOT, 'width', this.em(x));\n    if (dx) {\n      this.adaptor.setStyle(this.adaptor.firstChild(ROOT) as N, 'paddingLeft', this.em(dx));\n    }\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmrow wrapper for the MmlMrow object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMrowMixin} from '../../common/Wrappers/mrow.js';\nimport {CommonInferredMrowMixin} from '../../common/Wrappers/mrow.js';\nimport {MmlMrow, MmlInferredMrow} from '../../../core/MmlTree/MmlNodes/mrow.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmrow wrapper for the MmlMrow object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmrow<N, T, D> extends\nCommonMrowMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The mrow wrapper\n   */\n  public static kind = MmlMrow.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    const chtml = (this.node.isInferred ? (this.chtml = parent) : this.standardCHTMLnode(parent));\n    let hasNegative = false;\n    for (const child of this.childNodes) {\n      child.toCHTML(chtml);\n      if (child.bbox.w < 0) {\n        hasNegative = true;\n      }\n    }\n    // FIXME:  handle line breaks\n    if (hasNegative) {\n      const {w} = this.getBBox();\n      if (w) {\n        this.adaptor.setStyle(chtml, 'width', this.em(Math.max(0, w)));\n        if (w < 0) {\n          this.adaptor.setStyle(chtml, 'marginRight', this.em(w));\n        }\n      }\n    }\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  The CHTMLinferredMrow wrapper for the MmlInferredMrow object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLinferredMrow<N, T, D> extends\nCommonInferredMrowMixin<Constructor<CHTMLmrow<any, any, any>>>(CHTMLmrow) {\n\n  /**\n   * The inferred-mrow wrapper\n   */\n  public static kind = MmlInferredMrow.prototype.kind;\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLms wrapper for the MmlMs object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonMsMixin} from '../../common/Wrappers/ms.js';\nimport {MmlMs} from '../../../core/MmlTree/MmlNodes/ms.js';\n\n/*****************************************************************/\n/**\n * The CHTMLms wrapper for the MmlMs object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLms<N, T, D> extends\nCommonMsMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The ms wrapper\n   */\n  public static kind = MmlMs.prototype.kind;\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmspace wrapper for the MmlMspace object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonMspaceMixin} from '../../common/Wrappers/mspace.js';\nimport {MmlMspace} from '../../../core/MmlTree/MmlNodes/mspace.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmspace wrapper for the MmlMspace object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmspace<N, T, D> extends\nCommonMspaceMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The mspace wrapper\n   */\n  public static kind = MmlMspace.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    let chtml = this.standardCHTMLnode(parent);\n    let {w, h, d} = this.getBBox();\n    if (w < 0) {\n      this.adaptor.setStyle(chtml, 'marginRight', this.em(w));\n      w = 0;\n    }\n    if (w) {\n      this.adaptor.setStyle(chtml, 'width', this.em(w));\n    }\n    h = Math.max(0, h + d);\n    if (h) {\n      this.adaptor.setStyle(chtml, 'height', this.em(Math.max(0, h)));\n    }\n    if (d) {\n      this.adaptor.setStyle(chtml, 'verticalAlign', this.em(-d));\n    }\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmsqrt wrapper for the MmlMsqrt object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonMsqrtMixin} from '../../common/Wrappers/msqrt.js';\nimport {CHTMLmo} from './mo.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {MmlMsqrt} from '../../../core/MmlTree/MmlNodes/msqrt.js';\nimport {StyleList} from '../../../util/StyleList.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmsqrt wrapper for the MmlMsqrt object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class CHTMLmsqrt<N, T, D> extends CommonMsqrtMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The msqrt wrapper\n   */\n  public static kind = MmlMsqrt.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-root': {\n      display: 'inline-block',\n      'white-space': 'nowrap'\n    },\n    'mjx-surd': {\n      display: 'inline-block',\n      'vertical-align': 'top'\n    },\n    'mjx-sqrt': {\n      display: 'inline-block',\n      'padding-top': '.07em'\n    },\n    'mjx-sqrt > mjx-box': {\n      'border-top': '.07em solid'\n    },\n    'mjx-sqrt.mjx-tall > mjx-box': {\n      'padding-left': '.3em',\n      'margin-left': '-.3em'\n    }\n  };\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    const surd = this.childNodes[this.surd] as CHTMLmo<N, T, D>;\n    const base = this.childNodes[this.base];\n    //\n    //  Get the parameters for the spacing of the parts\n    //\n    const sbox = surd.getBBox();\n    const bbox = base.getOuterBBox();\n    const [ , q] = this.getPQ(sbox);\n    const t = this.font.params.rule_thickness;\n    const H = bbox.h + q + t;\n    //\n    //  Create the HTML structure for the root\n    //\n    const CHTML = this.standardCHTMLnode(parent);\n    let SURD, BASE, ROOT, root;\n    if (this.root != null) {\n      ROOT = this.adaptor.append(CHTML, this.html('mjx-root')) as N;\n      root = this.childNodes[this.root];\n    }\n    const SQRT = this.adaptor.append(CHTML, this.html('mjx-sqrt', {}, [\n      SURD = this.html('mjx-surd'),\n      BASE = this.html('mjx-box', {style: {paddingTop: this.em(q)}})\n    ])) as N;\n    //\n    //  Add the child content\n    //\n    this.addRoot(ROOT, root, sbox, H);\n    surd.toCHTML(SURD);\n    base.toCHTML(BASE);\n    if (surd.size < 0) {\n      //\n      // size < 0 means surd is multi-character.  The angle glyph at the\n      // top is hard to align with the horizontal line, so overlap them\n      // using CSS.\n      //\n      this.adaptor.addClass(SQRT, 'mjx-tall');\n    }\n  }\n\n  /**\n   * Add root HTML (overridden in mroot)\n   *\n   * @param {N} ROOT             The container for the root\n   * @param {CHTMLWrapper} root  The wrapped MML root content\n   * @param {BBox} sbox          The bounding box of the surd\n   * @param {number} H           The height of the root as a whole\n   */\n  protected addRoot(_ROOT: N, _root: CHTMLWrapper<N, T, D>, _sbox: BBox, _H: number) {\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmsubsup wrapper for the MmlMsubsup object\n *                and the special cases CHTMLmsub and CHTMLmsup\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, Constructor} from '../Wrapper.js';\nimport {CHTMLscriptbase} from './scriptbase.js';\nimport {CommonMsubMixin} from '../../common/Wrappers/msubsup.js';\nimport {CommonMsupMixin} from '../../common/Wrappers/msubsup.js';\nimport {CommonMsubsupMixin} from '../../common/Wrappers/msubsup.js';\nimport {MmlMsubsup, MmlMsub, MmlMsup} from '../../../core/MmlTree/MmlNodes/msubsup.js';\nimport {StyleList} from '../../../util/StyleList.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmsub wrapper for the MmlMsub object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmsub<N, T, D> extends\nCommonMsubMixin<CHTMLWrapper<any, any, any>, Constructor<CHTMLscriptbase<any, any, any>>>(CHTMLscriptbase)  {\n\n  /**\n   * The msub wrapper\n   */\n  public static kind = MmlMsub.prototype.kind;\n\n}\n\n/*****************************************************************/\n/**\n * The CHTMLmsup wrapper for the MmlMsup object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmsup<N, T, D> extends\nCommonMsupMixin<CHTMLWrapper<any, any, any>, Constructor<CHTMLscriptbase<any, any, any>>>(CHTMLscriptbase)  {\n\n  /**\n   * The msup wrapper\n   */\n  public static kind = MmlMsup.prototype.kind;\n\n}\n\n/*****************************************************************/\n/**\n * The CHTMLmsubsup wrapper for the MmlMsubsup object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmsubsup<N, T, D> extends\nCommonMsubsupMixin<CHTMLWrapper<any, any, any>, Constructor<CHTMLscriptbase<any, any, any>>>(CHTMLscriptbase)  {\n\n  /**\n   * The msubsup wrapper\n   */\n  public static kind = MmlMsubsup.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-script': {\n      display: 'inline-block',\n      'padding-right': '.05em',  // scriptspace\n      'padding-left': '.033em'   // extra_ic\n    },\n    'mjx-script > mjx-spacer': {\n      display: 'block'\n    }\n  };\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    const adaptor = this.adaptor;\n    const chtml = this.standardCHTMLnode(parent);\n    const [base, sup, sub] = [this.baseChild, this.supChild, this.subChild];\n    const [ , v, q] = this.getUVQ();\n    const style = {'vertical-align': this.em(v)};\n    base.toCHTML(chtml);\n    const stack = adaptor.append(chtml, this.html('mjx-script', {style})) as N;\n    sup.toCHTML(stack);\n    adaptor.append(stack, this.html('mjx-spacer', {style: {'margin-top': this.em(q)}}));\n    sub.toCHTML(stack);\n    const ic = this.getAdjustedIc();\n    if (ic) {\n      adaptor.setStyle(sup.chtml, 'marginLeft', this.em(ic / sup.bbox.rscale));\n    }\n    if (this.baseRemoveIc) {\n      adaptor.setStyle(stack, 'marginLeft', this.em(-this.baseIc));\n    }\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmtable wrapper for the MmlMtable object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CHTMLWrapperFactory} from '../WrapperFactory.js';\nimport {CommonMtableMixin} from '../../common/Wrappers/mtable.js';\nimport {CHTMLmtr} from './mtr.js';\nimport {CHTMLmtd} from './mtd.js';\nimport {MmlMtable} from '../../../core/MmlTree/MmlNodes/mtable.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport {StyleList} from '../../../util/StyleList.js';\nimport {isPercent} from '../../../util/string.js';\nimport {OptionList} from '../../../util/Options.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmtable wrapper for the MmlMtable object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class CHTMLmtable<N, T, D> extends\nCommonMtableMixin<CHTMLmtd<any, any, any>, CHTMLmtr<any, any, any>, CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The mtable wrapper\n   */\n  public static kind = MmlMtable.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-mtable': {\n      'vertical-align': '.25em',\n      'text-align': 'center',\n      'position': 'relative',\n      'box-sizing': 'border-box',\n      'border-spacing': 0,            // prevent this from being inherited from an outer table\n      'border-collapse': 'collapse'   // similarly here\n    },\n    'mjx-mstyle[size=\"s\"] mjx-mtable': {\n      'vertical-align': '.354em'\n    },\n    'mjx-labels': {\n      position: 'absolute',\n      left: 0,\n      top: 0\n    },\n    'mjx-table': {\n      'display': 'inline-block',\n      'vertical-align': '-.5ex',\n      'box-sizing': 'border-box'\n    },\n    'mjx-table > mjx-itable': {\n      'vertical-align': 'middle',\n      'text-align': 'left',\n      'box-sizing': 'border-box'\n    },\n    'mjx-labels > mjx-itable': {\n      position: 'absolute',\n      top: 0\n    },\n    'mjx-mtable[justify=\"left\"]': {\n      'text-align': 'left'\n    },\n    'mjx-mtable[justify=\"right\"]': {\n      'text-align': 'right'\n    },\n    'mjx-mtable[justify=\"left\"][side=\"left\"]': {\n      'padding-right': '0 ! important'\n    },\n    'mjx-mtable[justify=\"left\"][side=\"right\"]': {\n      'padding-left': '0 ! important'\n    },\n    'mjx-mtable[justify=\"right\"][side=\"left\"]': {\n      'padding-right': '0 ! important'\n    },\n    'mjx-mtable[justify=\"right\"][side=\"right\"]': {\n      'padding-left': '0 ! important'\n    },\n    'mjx-mtable[align]': {\n      'vertical-align': 'baseline'\n    },\n    'mjx-mtable[align=\"top\"] > mjx-table': {\n      'vertical-align': 'top'\n    },\n    'mjx-mtable[align=\"bottom\"] > mjx-table': {\n      'vertical-align': 'bottom'\n    },\n    'mjx-mtable[side=\"right\"] mjx-labels': {\n      'min-width': '100%'\n    }\n  };\n\n  /**\n   * The column for labels\n   */\n  public labels: N;\n\n  /**\n   * The inner table DOM node\n   */\n  public itable: N;\n\n  /******************************************************************/\n\n  /**\n   * @override\n   */\n  constructor(factory: CHTMLWrapperFactory<N, T, D>, node: MmlNode, parent: CHTMLWrapper<N, T, D> = null) {\n    super(factory, node, parent);\n    this.itable = this.html('mjx-itable');\n    this.labels = this.html('mjx-itable');\n  }\n\n  /**\n   * @override\n   */\n  public getAlignShift() {\n    const data = super.getAlignShift();\n    if (!this.isTop) {\n      data[1] = 0;\n    }\n    return data;\n  }\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    //\n    //  Create the rows inside an mjx-itable (which will be used to center the table on the math axis)\n    //\n    const chtml = this.standardCHTMLnode(parent);\n    this.adaptor.append(chtml, this.html('mjx-table', {}, [this.itable]));\n    for (const child of this.childNodes) {\n      child.toCHTML(this.itable);\n    }\n    //\n    //  Pad the rows of the table, if needed\n    //  Then set the column and row attributes for alignment, spacing, and lines\n    //  Finally, add the frame, if needed\n    //\n    this.padRows();\n    this.handleColumnSpacing();\n    this.handleColumnLines();\n    this.handleColumnWidths();\n    this.handleRowSpacing();\n    this.handleRowLines();\n    this.handleRowHeights();\n    this.handleFrame();\n    this.handleWidth();\n    this.handleLabels();\n    this.handleAlign();\n    this.handleJustify();\n    this.shiftColor();\n  }\n\n  /**\n   * Move background color (if any) to inner itable node so that labeled tables are\n   * only colored on the main part of the table.\n   */\n  protected shiftColor() {\n    const adaptor = this.adaptor;\n    const color = adaptor.getStyle(this.chtml, 'backgroundColor');\n    if (color) {\n      adaptor.setStyle(this.chtml, 'backgroundColor', '');\n      adaptor.setStyle(this.itable, 'backgroundColor', color);\n    }\n  }\n\n  /******************************************************************/\n\n  /**\n   * Pad any short rows with extra cells\n   */\n  protected padRows() {\n    const adaptor = this.adaptor;\n    for (const row of adaptor.childNodes(this.itable) as N[]) {\n      while (adaptor.childNodes(row).length < this.numCols) {\n        adaptor.append(row, this.html('mjx-mtd', {'extra': true}));\n      }\n    }\n  }\n\n  /**\n   * Set the inter-column spacing for all columns\n   *  (Use frame spacing on the outsides, if needed, and use half the column spacing on each\n   *   neighboring column, so that if column lines are needed, they fall in the middle\n   *   of the column space.)\n   */\n  protected handleColumnSpacing() {\n    const scale = (this.childNodes[0] ? 1 / this.childNodes[0].getBBox().rscale : 1);\n    const spacing = this.getEmHalfSpacing(this.fSpace[0], this.cSpace, scale);\n    const frame = this.frame;\n    //\n    //  For each row...\n    //\n    for (const row of this.tableRows) {\n      let i = 0;\n      //\n      //  For each cell in the row...\n      //\n      for (const cell of row.tableCells) {\n        //\n        //  Get the left and right-hand spacing\n        //\n        const lspace = spacing[i++];\n        const rspace = spacing[i];\n        //\n        //  Set the style for the spacing, if it is needed, and isn't the\n        //  default already set in the mtd styles\n        //\n        const styleNode = (cell ? cell.chtml : this.adaptor.childNodes(row.chtml)[i] as N);\n        if ((i > 1 && lspace !== '0.4em') || (frame && i === 1)) {\n          this.adaptor.setStyle(styleNode, 'paddingLeft', lspace);\n        }\n        if ((i < this.numCols && rspace !== '0.4em') || (frame && i === this.numCols)) {\n          this.adaptor.setStyle(styleNode, 'paddingRight', rspace);\n        }\n      }\n    }\n  }\n\n  /**\n   * Add borders to the left of cells to make the column lines\n   */\n  protected handleColumnLines() {\n    if (this.node.attributes.get('columnlines') === 'none') return;\n    const lines = this.getColumnAttributes('columnlines');\n    for (const row of this.childNodes) {\n      let i = 0;\n      for (const cell of this.adaptor.childNodes(row.chtml).slice(1) as N[]) {\n        const line = lines[i++];\n        if (line === 'none') continue;\n        this.adaptor.setStyle(cell, 'borderLeft', '.07em ' + line);\n      }\n    }\n  }\n\n  /**\n   * Add widths to the cells for the column widths\n   */\n  protected handleColumnWidths() {\n    for (const row of this.childNodes) {\n      let i = 0;\n      for (const cell of this.adaptor.childNodes(row.chtml) as N[]) {\n        const w = this.cWidths[i++];\n        if (w !== null) {\n          const width = (typeof w === 'number' ? this.em(w) : w);\n          this.adaptor.setStyle(cell, 'width', width);\n          this.adaptor.setStyle(cell, 'maxWidth', width);\n          this.adaptor.setStyle(cell, 'minWidth', width);\n        }\n      }\n    }\n  }\n\n  /**\n   * Set the inter-row spacing for all rows\n   *  (Use frame spacing on the outsides, if needed, and use half the row spacing on each\n   *   neighboring row, so that if row lines are needed, they fall in the middle\n   *   of the row space.)\n   */\n  protected handleRowSpacing() {\n    const scale = (this.childNodes[0] ? 1 / this.childNodes[0].getBBox().rscale : 1);\n    const spacing = this.getEmHalfSpacing(this.fSpace[1], this.rSpace, scale);\n    const frame = this.frame;\n    //\n    //  For each row...\n    //\n    let i = 0;\n    for (const row of this.childNodes) {\n      //\n      //  Get the top and bottom spacing\n      //\n      const tspace = spacing[i++];\n      const bspace = spacing[i];\n      //\n      //  For each cell in the row...\n      //\n      for (const cell of row.childNodes) {\n        //\n        //  Set the style for the spacing, if it is needed, and isn't the\n        //  default already set in the mtd styles\n        //\n        if ((i > 1 && tspace !== '0.215em') || (frame && i === 1)) {\n          this.adaptor.setStyle(cell.chtml, 'paddingTop', tspace);\n        }\n        if ((i < this.numRows && bspace !== '0.215em') || (frame && i === this.numRows)) {\n          this.adaptor.setStyle(cell.chtml, 'paddingBottom', bspace);\n        }\n      }\n    }\n  }\n\n  /**\n   * Add borders to the tops of cells to make the row lines\n   */\n  protected handleRowLines() {\n    if (this.node.attributes.get('rowlines') === 'none') return;\n    const lines = this.getRowAttributes('rowlines');\n    let i = 0;\n    for (const row of this.childNodes.slice(1)) {\n      const line = lines[i++];\n      if (line === 'none') continue;\n      for (const cell of this.adaptor.childNodes(row.chtml) as N[]) {\n        this.adaptor.setStyle(cell, 'borderTop', '.07em ' + line);\n      }\n    }\n  }\n\n  /**\n   * Adjust row heights for equal-sized rows\n   */\n  protected handleRowHeights() {\n    if (this.node.attributes.get('equalrows')) {\n      this.handleEqualRows();\n    }\n  }\n\n  /**\n   * Set the heights of all rows to be the same, and properly center\n   * baseline or axis rows within the newly sized\n   */\n  protected handleEqualRows() {\n    const space = this.getRowHalfSpacing();\n    const {H, D, NH, ND} = this.getTableData();\n    const HD = this.getEqualRowHeight();\n    //\n    // Loop through the rows and set their heights\n    //\n    for (let i = 0; i < this.numRows; i++) {\n      const row = this.childNodes[i];\n      this.setRowHeight(row, HD + space[i] + space[i + 1] + this.rLines[i]);\n      if (HD !== NH[i] + ND[i]) {\n        this.setRowBaseline(row, HD, (HD - H[i] + D[i]) / 2);\n      }\n    }\n  }\n\n  /**\n   * @param {CHTMLWrapper} row   The row whose height is to be set\n   * @param {number} HD          The height to be set for the row\n   */\n  protected setRowHeight(row: CHTMLWrapper<N, T, D>, HD: number) {\n      this.adaptor.setStyle(row.chtml, 'height', this.em(HD));\n  }\n\n  /**\n   * Make sure the baseline is in the right position for cells\n   *   that are row aligned to baseline ot axis\n   *\n   * @param {CHTMLWrapper} row   The row to be set\n   * @param {number} HD          The total height+depth for the row\n   * @param {number] D           The new depth for the row\n   */\n  protected setRowBaseline(row: CHTMLWrapper<N, T, D>, HD: number, D: number) {\n    const ralign = row.node.attributes.get('rowalign') as string;\n    //\n    //  Loop through the cells and set the strut height and depth.\n    //    The strut is the last element in the cell.\n    //\n    for (const cell of row.childNodes) {\n      if (this.setCellBaseline(cell, ralign, HD, D)) break;\n    }\n  }\n\n  /**\n   * Make sure the baseline is in the correct place for cells aligned on baseline or axis\n   *\n   * @param {CHTMLWrapper} cell  The cell to modify\n   * @param {string} ralign      The alignment of the row\n   * @param {number} HD          The total height+depth for the row\n   * @param {number] D           The new depth for the row\n   * @return {boolean}           True if no other cells in this row need to be processed\n   */\n  protected setCellBaseline(cell: CHTMLWrapper<N, T, D>, ralign: string, HD: number, D: number): boolean {\n    const calign = cell.node.attributes.get('rowalign');\n    if (calign === 'baseline' || calign === 'axis') {\n      const adaptor = this.adaptor;\n      const child = adaptor.lastChild(cell.chtml) as N;\n      adaptor.setStyle(child, 'height', this.em(HD));\n      adaptor.setStyle(child, 'verticalAlign', this.em(-D));\n      const row = cell.parent;\n      if ((!row.node.isKind('mlabeledtr') || cell !== row.childNodes[0]) &&\n          (ralign === 'baseline' || ralign === 'axis')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Add a frame to the mtable, if needed\n   */\n  protected handleFrame() {\n    if (this.frame && this.fLine) {\n      this.adaptor.setStyle(this.itable, 'border', '.07em ' + this.node.attributes.get('frame'));\n    }\n  }\n\n  /**\n   * Handle percentage widths and fixed widths\n   */\n  protected handleWidth() {\n    const adaptor = this.adaptor;\n    const {w, L, R} = this.getBBox();\n    adaptor.setStyle(this.chtml, 'minWidth', this.em(L + w + R));\n    let W = this.node.attributes.get('width') as string;\n    if (isPercent(W)) {\n      adaptor.setStyle(this.chtml, 'width', '');\n      adaptor.setAttribute(this.chtml, 'width', 'full');\n    } else if (!this.hasLabels) {\n      if (W === 'auto') return;\n      W = this.em(this.length2em(W) + 2 * this.fLine);\n    }\n    const table = adaptor.firstChild(this.chtml) as N;\n    adaptor.setStyle(table, 'width', W);\n    adaptor.setStyle(table, 'minWidth', this.em(w));\n    if (L || R) {\n      adaptor.setStyle(this.chtml, 'margin', '');\n      const style = (this.node.attributes.get('data-width-includes-label') ? 'padding' : 'margin');\n      if (L === R) {\n        adaptor.setStyle(table, style, '0 ' + this.em(R));\n      } else {\n        adaptor.setStyle(table, style, '0 ' + this.em(R) + ' 0 ' + this.em(L));\n      }\n    }\n    adaptor.setAttribute(this.itable, 'width', 'full');\n  }\n\n  /**\n   * Handle alignment of table to surrounding baseline\n   */\n  protected handleAlign() {\n    const [align, row] = this.getAlignmentRow();\n    if (row === null) {\n      if (align !== 'axis') {\n        this.adaptor.setAttribute(this.chtml, 'align', align);\n      }\n    } else {\n      const y = this.getVerticalPosition(row, align);\n      this.adaptor.setAttribute(this.chtml, 'align', 'top');\n      this.adaptor.setStyle(this.chtml, 'verticalAlign', this.em(y));\n    }\n  }\n\n  /**\n   * Mark the alignment of the table\n   */\n  protected handleJustify() {\n    const align = this.getAlignShift()[0];\n    if (align !== 'center') {\n      this.adaptor.setAttribute(this.chtml, 'justify', align);\n    }\n  }\n\n  /******************************************************************/\n\n  /**\n   * Handle addition of labels to the table\n   */\n  protected handleLabels() {\n    if (!this.hasLabels) return;\n    const labels = this.labels;\n    const attributes = this.node.attributes;\n    const adaptor = this.adaptor;\n    //\n    //  Set the side for the labels\n    //\n    const side = attributes.get('side') as string;\n    adaptor.setAttribute(this.chtml, 'side', side);\n    adaptor.setAttribute(labels, 'align', side);\n    adaptor.setStyle(labels, side, '0');\n    //\n    //  Make sure labels don't overlap table\n    //\n    const [align, shift] = this.addLabelPadding(side);\n    //\n    //  Handle indentation\n    //\n    if (shift) {\n      const table = adaptor.firstChild(this.chtml) as N;\n      this.setIndent(table, align, shift);\n    }\n    //\n    // Add the labels to the table\n    //\n    this.updateRowHeights();\n    this.addLabelSpacing();\n  }\n\n  /**\n   * @param {string} side         The side for the labels\n   * @return {[string, number]}   The alignment and shift values\n   */\n  protected addLabelPadding(side: string): [string, number] {\n    const [ , align, shift] = this.getPadAlignShift(side);\n    const styles: OptionList = {};\n    if (side === 'right' && !this.node.attributes.get('data-width-includes-label')) {\n      const W = this.node.attributes.get('width') as string;\n      const {w, L, R} = this.getBBox();\n      styles.style = {\n        width: (isPercent(W) ? 'calc(' + W + ' + ' + this.em(L + R) + ')' : this.em(L + w + R))\n      };\n    }\n    this.adaptor.append(this.chtml, this.html('mjx-labels', styles, [this.labels]));\n    return [align, shift] as [string, number];\n  }\n\n  /**\n   * Update any rows that are not naturally tall enough for the labels,\n   *   and set the baseline for labels that are baseline aligned.\n   */\n  protected updateRowHeights() {\n    let {H, D, NH, ND} = this.getTableData();\n    const space = this.getRowHalfSpacing();\n    for (let i = 0; i < this.numRows; i++) {\n      const row = this.childNodes[i];\n      this.setRowHeight(row, H[i] + D[i] + space[i] + space[i + 1] + this.rLines[i]);\n      if (H[i] !== NH[i] || D[i] !== ND[i]) {\n        this.setRowBaseline(row, H[i] + D[i], D[i]);\n      } else if (row.node.isKind('mlabeledtr')) {\n        this.setCellBaseline(row.childNodes[0], '', H[i] + D[i], D[i]);\n      }\n    }\n  }\n\n  /**\n   * Add spacing elements between the label rows to align them with the rest of the table\n   */\n  protected addLabelSpacing() {\n    const adaptor = this.adaptor;\n    const equal = this.node.attributes.get('equalrows') as boolean;\n    const {H, D} = this.getTableData();\n    const HD = (equal ? this.getEqualRowHeight() : 0);\n    const space = this.getRowHalfSpacing();\n    //\n    //  Start with frame size and add in spacing, height and depth,\n    //    and line thickness for each non-labeled row.\n    //\n    let h = this.fLine;\n    let current = adaptor.firstChild(this.labels) as N;\n    for (let i = 0; i < this.numRows; i++) {\n      const row = this.childNodes[i];\n      if (row.node.isKind('mlabeledtr')) {\n        h && adaptor.insert(this.html('mjx-mtr', {style: {height: this.em(h)}}), current);\n        adaptor.setStyle(current, 'height', this.em((equal ? HD : H[i] + D[i]) + space[i] + space[i + 1]));\n        current = adaptor.next(current) as N;\n        h = this.rLines[i];\n      } else {\n        h += space[i] + (equal ? HD : H[i] + D[i]) + space[i + 1] + this.rLines[i];\n      }\n    }\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmtd wrapper for the MmlMtd object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonMtdMixin} from '../../common/Wrappers/mtd.js';\nimport {MmlMtd} from '../../../core/MmlTree/MmlNodes/mtd.js';\nimport {StyleList} from '../../../util/StyleList.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmtd wrapper for the MmlMtd object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmtd<N, T, D> extends\nCommonMtdMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The mtd wrapper\n   */\n  public static kind = MmlMtd.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-mtd': {\n      display: 'table-cell',\n      'text-align': 'center',\n      'padding': '.215em .4em'\n    },\n    'mjx-mtd:first-child': {\n      'padding-left': 0\n    },\n    'mjx-mtd:last-child': {\n      'padding-right': 0\n    },\n    'mjx-mtable > * > mjx-itable > *:first-child > mjx-mtd': {\n      'padding-top': 0\n    },\n    'mjx-mtable > * > mjx-itable > *:last-child > mjx-mtd': {\n      'padding-bottom': 0\n    },\n    'mjx-tstrut': {\n      display: 'inline-block',\n      height: '1em',\n      'vertical-align': '-.25em'\n    },\n    'mjx-labels[align=\"left\"] > mjx-mtr > mjx-mtd': {\n      'text-align': 'left'\n    },\n    'mjx-labels[align=\"right\"] > mjx-mtr > mjx-mtd': {\n      'text-align': 'right'\n    },\n    'mjx-mtd[extra]': {\n      padding: 0\n    },\n    'mjx-mtd[rowalign=\"top\"]': {\n      'vertical-align': 'top'\n    },\n    'mjx-mtd[rowalign=\"center\"]': {\n      'vertical-align': 'middle'\n    },\n    'mjx-mtd[rowalign=\"bottom\"]': {\n      'vertical-align': 'bottom'\n    },\n    'mjx-mtd[rowalign=\"baseline\"]': {\n      'vertical-align': 'baseline'\n    },\n    'mjx-mtd[rowalign=\"axis\"]': {\n      'vertical-align': '.25em'\n    }\n  };\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    super.toCHTML(parent);\n    const ralign = this.node.attributes.get('rowalign') as string;\n    const calign = this.node.attributes.get('columnalign') as string;\n    const palign = this.parent.node.attributes.get('rowalign') as string;\n    if (ralign !== palign) {\n      this.adaptor.setAttribute(this.chtml, 'rowalign', ralign);\n    }\n    if (calign !== 'center' &&\n        (this.parent.kind !== 'mlabeledtr' || this !== this.parent.childNodes[0] ||\n         calign !== this.parent.parent.node.attributes.get('side'))) {\n      this.adaptor.setStyle(this.chtml, 'textAlign', calign);\n    }\n    //\n    // If we are using minimum row heights,\n    //   Include a strut to force minimum height and depth\n    //\n    if (this.parent.parent.node.getProperty('useHeight')) {\n      this.adaptor.append(this.chtml, this.html('mjx-tstrut'));\n    }\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmtext wrapper for the MmlMtext object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonMtextMixin} from '../../common/Wrappers/mtext.js';\nimport {MmlMtext} from '../../../core/MmlTree/MmlNodes/mtext.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmtext wrapper for the MmlMtext object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmtext<N, T, D> extends\nCommonMtextMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The mtext wrapper\n   */\n  public static kind = MmlMtext.prototype.kind;\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmtr wrapper for the MmlMtr object\n *                and CHTMLmlabeledtr for MmlMlabeledtr\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMtrMixin} from '../../common/Wrappers/mtr.js';\nimport {CommonMlabeledtrMixin} from '../../common/Wrappers/mtr.js';\nimport {CHTMLmtable} from './mtable.js';\nimport {CHTMLmtd} from './mtd.js';\nimport {MmlMtr, MmlMlabeledtr} from '../../../core/MmlTree/MmlNodes/mtr.js';\nimport {StyleList} from '../../../util/StyleList.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmtr wrapper for the MmlMtr object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmtr<N, T, D> extends\nCommonMtrMixin<CHTMLmtd<any, any, any>, CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The mtr wrapper\n   */\n  public static kind = MmlMtr.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-mtr': {\n      display: 'table-row',\n    },\n    'mjx-mtr[rowalign=\"top\"] > mjx-mtd': {\n      'vertical-align': 'top'\n    },\n    'mjx-mtr[rowalign=\"center\"] > mjx-mtd': {\n      'vertical-align': 'middle'\n    },\n    'mjx-mtr[rowalign=\"bottom\"] > mjx-mtd': {\n      'vertical-align': 'bottom'\n    },\n    'mjx-mtr[rowalign=\"baseline\"] > mjx-mtd': {\n      'vertical-align': 'baseline'\n    },\n    'mjx-mtr[rowalign=\"axis\"] > mjx-mtd': {\n      'vertical-align': '.25em'\n    }\n  };\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    super.toCHTML(parent);\n    const align = this.node.attributes.get('rowalign') as string;\n    if (align !== 'baseline') {\n      this.adaptor.setAttribute(this.chtml, 'rowalign', align);\n    }\n  }\n\n}\n\n/*****************************************************************/\n/**\n * The CHTMLlabeledmtr wrapper for the MmlMlabeledtr object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class CHTMLmlabeledtr<N, T, D> extends\nCommonMlabeledtrMixin<CHTMLmtd<any, any, any>, Constructor<CHTMLmtr<any, any, any>>>(CHTMLmtr) {\n\n  /**\n   * The mlabeledtr wrapper\n   */\n  public static kind = MmlMlabeledtr.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-mlabeledtr': {\n      display: 'table-row'\n    },\n    'mjx-mlabeledtr[rowalign=\"top\"] > mjx-mtd': {\n      'vertical-align': 'top'\n    },\n    'mjx-mlabeledtr[rowalign=\"center\"] > mjx-mtd': {\n      'vertical-align': 'middle'\n    },\n    'mjx-mlabeledtr[rowalign=\"bottom\"] > mjx-mtd': {\n      'vertical-align': 'bottom'\n    },\n    'mjx-mlabeledtr[rowalign=\"baseline\"] > mjx-mtd': {\n      'vertical-align': 'baseline'\n    },\n    'mjx-mlabeledtr[rowalign=\"axis\"] > mjx-mtd': {\n      'vertical-align': '.25em'\n    }\n  };\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    super.toCHTML(parent);\n    const child = this.adaptor.firstChild(this.chtml) as N;\n    if (child) {\n      //\n      // Remove label and put it into the labels box inside a row\n      //\n      this.adaptor.remove(child);\n      const align = this.node.attributes.get('rowalign') as string;\n      const attr = (align !== 'baseline' && align !== 'axis' ? {rowalign: align} : {});\n      const row = this.html('mjx-mtr', attr, [child]);\n      this.adaptor.append((this.parent as CHTMLmtable<N, T, D>).labels, row);\n    }\n  }\n\n  /**\n   * @override\n   */\n  public markUsed() {\n    super.markUsed();\n    this.jax.wrapperUsage.add(CHTMLmtr.kind);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLmunderover wrapper for the MmlMunderover object\n *                and the special cases CHTMLmunder and CHTMLmsup\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, Constructor} from '../Wrapper.js';\nimport {CHTMLmsubsup, CHTMLmsub, CHTMLmsup} from './msubsup.js';\nimport {CommonMunderMixin} from '../../common/Wrappers/munderover.js';\nimport {CommonMoverMixin} from '../../common/Wrappers/munderover.js';\nimport {CommonMunderoverMixin} from '../../common/Wrappers/munderover.js';\nimport {MmlMunderover, MmlMunder, MmlMover} from '../../../core/MmlTree/MmlNodes/munderover.js';\nimport {StyleList} from '../../../util/StyleList.js';\n\n/*****************************************************************/\n/**\n * The CHTMLmunder wrapper for the MmlMunder object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmunder<N, T, D> extends\nCommonMunderMixin<CHTMLWrapper<any, any, any>, Constructor<CHTMLmsub<any, any, any>>>(CHTMLmsub)  {\n\n  /**\n   * The munder wrapper\n   */\n  public static kind = MmlMunder.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-over': {\n      'text-align': 'left'\n    },\n    'mjx-munder:not([limits=\"false\"])': {\n      display: 'inline-table',\n    },\n    'mjx-munder > mjx-row': {\n      'text-align': 'left'\n    },\n    'mjx-under': {\n      'padding-bottom': '.1em'           // big_op_spacing5\n    }\n  };\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    if (this.hasMovableLimits()) {\n      super.toCHTML(parent);\n      this.adaptor.setAttribute(this.chtml, 'limits', 'false');\n      return;\n    }\n    this.chtml = this.standardCHTMLnode(parent);\n    const base = this.adaptor.append(\n      this.adaptor.append(this.chtml, this.html('mjx-row')) as N,\n      this.html('mjx-base')\n    ) as N;\n    const under = this.adaptor.append(\n      this.adaptor.append(this.chtml, this.html('mjx-row')) as N,\n      this.html('mjx-under')\n    ) as N;\n    this.baseChild.toCHTML(base);\n    this.scriptChild.toCHTML(under);\n    const basebox = this.baseChild.getOuterBBox();\n    const underbox = this.scriptChild.getOuterBBox();\n    const k = this.getUnderKV(basebox, underbox)[0];\n    const delta = (this.isLineBelow ? 0 : this.getDelta(true));\n    this.adaptor.setStyle(under, 'paddingTop', this.em(k));\n    this.setDeltaW([base, under], this.getDeltaW([basebox, underbox], [0, -delta]));\n    this.adjustUnderDepth(under, underbox);\n  }\n\n}\n\n/*****************************************************************/\n/**\n * The CHTMLmover wrapper for the MmlMover object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmover<N, T, D> extends\nCommonMoverMixin<CHTMLWrapper<any, any, any>, Constructor<CHTMLmsup<any, any, any>>>(CHTMLmsup)  {\n\n  /**\n   * The mover wrapper\n   */\n  public static kind = MmlMover.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-mover:not([limits=\"false\"])': {\n      'padding-top': '.1em'        // big_op_spacing5\n    },\n    'mjx-mover:not([limits=\"false\"]) > *': {\n      display: 'block',\n      'text-align': 'left'\n    }\n  };\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    if (this.hasMovableLimits()) {\n      super.toCHTML(parent);\n      this.adaptor.setAttribute(this.chtml, 'limits', 'false');\n      return;\n    }\n    this.chtml = this.standardCHTMLnode(parent);\n    const over = this.adaptor.append(this.chtml, this.html('mjx-over')) as N;\n    const base = this.adaptor.append(this.chtml, this.html('mjx-base')) as N;\n    this.scriptChild.toCHTML(over);\n    this.baseChild.toCHTML(base);\n    const overbox = this.scriptChild.getOuterBBox();\n    const basebox = this.baseChild.getOuterBBox();\n    this.adjustBaseHeight(base, basebox);\n    const k = this.getOverKU(basebox, overbox)[0];\n    const delta = (this.isLineAbove ? 0 : this.getDelta());\n    this.adaptor.setStyle(over, 'paddingBottom', this.em(k));\n    this.setDeltaW([base, over], this.getDeltaW([basebox, overbox], [0, delta]));\n    this.adjustOverDepth(over, overbox);\n  }\n\n}\n\n/*****************************************************************/\n/*\n * The CHTMLmunderover wrapper for the MmlMunderover object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLmunderover<N, T, D> extends\nCommonMunderoverMixin<CHTMLWrapper<any, any, any>, Constructor<CHTMLmsubsup<any, any, any>>>(CHTMLmsubsup)  {\n\n  /**\n   * The munderover wrapper\n   */\n  public static kind = MmlMunderover.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-munderover:not([limits=\"false\"])': {\n      'padding-top': '.1em'        // big_op_spacing5\n    },\n    'mjx-munderover:not([limits=\"false\"]) > *': {\n      display: 'block'\n    },\n  };\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    if (this.hasMovableLimits()) {\n      super.toCHTML(parent);\n      this.adaptor.setAttribute(this.chtml, 'limits', 'false');\n      return;\n    }\n    this.chtml = this.standardCHTMLnode(parent);\n    const over = this.adaptor.append(this.chtml, this.html('mjx-over')) as N;\n    const table = this.adaptor.append(\n      this.adaptor.append(this.chtml, this.html('mjx-box')) as N,\n      this.html('mjx-munder')\n    ) as N;\n    const base = this.adaptor.append(\n      this.adaptor.append(table, this.html('mjx-row')) as N,\n      this.html('mjx-base')\n    ) as N;\n    const under = this.adaptor.append(\n      this.adaptor.append(table, this.html('mjx-row')) as N,\n      this.html('mjx-under')\n    ) as N;\n    this.overChild.toCHTML(over);\n    this.baseChild.toCHTML(base);\n    this.underChild.toCHTML(under);\n    const overbox = this.overChild.getOuterBBox();\n    const basebox = this.baseChild.getOuterBBox();\n    const underbox = this.underChild.getOuterBBox();\n    this.adjustBaseHeight(base, basebox);\n    const ok = this.getOverKU(basebox, overbox)[0];\n    const uk = this.getUnderKV(basebox, underbox)[0];\n    const delta = this.getDelta();\n    this.adaptor.setStyle(over, 'paddingBottom', this.em(ok));\n    this.adaptor.setStyle(under, 'paddingTop', this.em(uk));\n    this.setDeltaW([base, under, over],\n                   this.getDeltaW([basebox, underbox, overbox],\n                                  [0, this.isLineBelow ? 0 : -delta, this.isLineAbove ? 0 : delta]));\n    this.adjustOverDepth(over, overbox);\n    this.adjustUnderDepth(under, underbox);\n  }\n\n  /**\n   * Make sure styles get output when called from munderover with movable limits\n   *\n   * @override\n   */\n  public markUsed() {\n    super.markUsed();\n    this.jax.wrapperUsage.add(CHTMLmsubsup.kind);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the a base class for CHTMLmsubsup, CHTMLmunderover\n *                and their relatives.  (Since munderover can become msubsup\n *                when movablelimits is set, munderover needs to be able to\n *                do the same thing as msubsup in some cases.)\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonScriptbaseMixin} from '../../common/Wrappers/scriptbase.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {StyleData} from '../../../util/StyleList.js';\n\n/*****************************************************************/\n/**\n * A base class for msup/msub/msubsup and munder/mover/munderover\n * wrapper implementations\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLscriptbase<N, T, D> extends\nCommonScriptbaseMixin<CHTMLWrapper<any, any, any>, CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The scriptbase wrapper\n   */\n  public static kind = 'scriptbase';\n\n  /**\n   * This gives the common output for msub and msup.  It is overridden\n   * for all the others (msubsup, munder, mover, munderover).\n   *\n   * @override\n   */\n  public toCHTML(parent: N) {\n    this.chtml = this.standardCHTMLnode(parent);\n    const [x, v] = this.getOffset();\n    const dx = x - (this.baseRemoveIc ? this.baseIc : 0);\n    const style: StyleData = {'vertical-align': this.em(v)};\n    if (dx) {\n      style['margin-left'] = this.em(dx);\n    }\n    this.baseChild.toCHTML(this.chtml);\n    this.scriptChild.toCHTML(this.adaptor.append(this.chtml, this.html('mjx-script', {style})) as N);\n  }\n\n  /**\n   * @param {N[]} nodes    The HTML elements to be centered in a stack\n   * @param {number[]} dx  The x offsets needed to center the elements\n   */\n  protected setDeltaW(nodes: N[], dx: number[]) {\n    for (let i = 0; i < dx.length; i++) {\n      if (dx[i]) {\n        this.adaptor.setStyle(nodes[i], 'paddingLeft', this.em(dx[i]));\n      }\n    }\n  }\n\n  /**\n   * @param {N} over        The HTML element for the overscript\n   * @param {BBox} overbox  The bbox for the overscript\n   */\n  protected adjustOverDepth(over: N, overbox: BBox) {\n    if (overbox.d >= 0) return;\n    this.adaptor.setStyle(over, 'marginBottom', this.em(overbox.d * overbox.rscale));\n  }\n\n  /**\n   * @param {N} under        The HTML element for the underscript\n   * @param {BBox} underbox  The bbox for the underscript\n   */\n  protected adjustUnderDepth(under: N, underbox: BBox) {\n    if (underbox.d >= 0) return;\n    const adaptor = this.adaptor;\n    const v = this.em(underbox.d);\n    const box = this.html('mjx-box', {style: {'margin-bottom': v, 'vertical-align': v}});\n    for (const child of adaptor.childNodes(adaptor.firstChild(under) as N) as N[]) {\n      adaptor.append(box, child);\n    }\n    adaptor.append(adaptor.firstChild(under) as N, box);\n  }\n\n  /**\n   * @param {N} base        The HTML element for the base\n   * @param {BBox} basebox  The bbox for the base\n   */\n  protected adjustBaseHeight(base: N, basebox: BBox) {\n    if (this.node.attributes.get('accent')) {\n      const minH = this.font.params.x_height * basebox.scale;\n      if (basebox.h < minH) {\n        this.adaptor.setStyle(base, 'paddingTop', this.em(minH - basebox.h));\n        basebox.h = minH;\n      }\n    }\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CHTMLsemantics wrapper for the MmlSemantics object\n *                and the associated wrappers for annotations\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CHTMLWrapper, CHTMLConstructor} from '../Wrapper.js';\nimport {CommonSemanticsMixin} from '../../common/Wrappers/semantics.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {MmlSemantics, MmlAnnotation, MmlAnnotationXML} from '../../../core/MmlTree/MmlNodes/semantics.js';\nimport {XMLNode} from '../../../core/MmlTree/MmlNode.js';\nimport {StyleList} from '../../../util/StyleList.js';\n\n/*****************************************************************/\n/**\n * The CHTMLsemantics wrapper for the MmlSemantics object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class CHTMLsemantics<N, T, D> extends\nCommonSemanticsMixin<CHTMLConstructor<any, any, any>>(CHTMLWrapper) {\n\n  /**\n   * The semantics wrapper\n   */\n  public static kind = MmlSemantics.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    const chtml = this.standardCHTMLnode(parent);\n    if (this.childNodes.length) {\n      this.childNodes[0].toCHTML(chtml);\n    }\n  }\n\n}\n\n\n/*****************************************************************/\n/**\n * The CHTMLannotation wrapper for the MmlAnnotation object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class CHTMLannotation<N, T, D> extends CHTMLWrapper<N, T, D> {\n\n  /**\n   * The annotation wrapper\n   */\n  public static kind = MmlAnnotation.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    // FIXME:  output as plain text\n    super.toCHTML(parent);\n  }\n\n  /**\n   * @override\n   */\n  public computeBBox() {\n    // FIXME:  compute using the DOM, if possible\n    return this.bbox;\n  }\n\n}\n\n/*****************************************************************/\n/**\n * The CHTMLannotationXML wrapper for the MmlAnnotationXML object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class CHTMLannotationXML<N, T, D> extends CHTMLWrapper<N, T, D> {\n\n  /**\n   * The annotation-xml wrapper\n   */\n  public static kind = MmlAnnotationXML.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'mjx-annotation-xml': {\n      'font-family': 'initial',\n      'line-height': 'normal'\n    }\n  };\n\n}\n\n/*****************************************************************/\n/**\n * The CHTMLxml wrapper for the XMLNode object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class CHTMLxml<N, T, D> extends CHTMLWrapper<N, T, D> {\n\n  /**\n   * The xml wrapper\n   */\n  public static kind = XMLNode.prototype.kind;\n\n  /**\n   * Don't set up inline-block styles for this\n   */\n  public static autoStyle = false;\n\n  /**\n   * @override\n   */\n  public toCHTML(parent: N) {\n    this.chtml = this.adaptor.append(parent, this.adaptor.clone((this.node as XMLNode).getXML() as N));\n  }\n\n  /**\n   * @override\n   */\n  public computeBBox(bbox: BBox, _recompute: boolean = false) {\n    const {w, h, d} = this.jax.measureXMLnode((this.node as XMLNode).getXML() as N);\n    bbox.w = w;\n    bbox.h = h;\n    bbox.d = d;\n  }\n\n  /**\n   * @override\n   */\n  protected getStyles() {}\n\n  /**\n   * @override\n   */\n  protected getScale() {}\n\n  /**\n   * @override\n   */\n  protected getVariant() {}\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements utilities for notations for menclose elements\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper} from './Wrapper.js';\nimport {CommonMenclose} from './Wrappers/menclose.js';\n\n/*****************************************************************/\n\nexport const ARROWX = 4, ARROWDX = 1, ARROWY = 2;  // default relative arrowhead values\n\nexport const THICKNESS = .067;  // default rule thickness\nexport const PADDING = .2;      // default padding\n\nexport const SOLID = THICKNESS + 'em solid';  // a solid border\n\n/*****************************************************************/\n\n/**\n * Shorthand for CommonMenclose\n */\nexport type Menclose = CommonMenclose<any, any, any>;\n\n/**\n * Top, right, bottom, left padding data\n */\nexport type PaddingData = [number, number, number, number];\n\n/**\n * The functions used for notation definitions\n *\n * @templare N  The DOM node class\n */\nexport type Renderer<W extends AnyWrapper, N> = (node: W, child: N) => void;\nexport type BBoxExtender<W extends AnyWrapper> = (node: W) => PaddingData;\nexport type BBoxBorder<W extends AnyWrapper> = (node: W) => PaddingData;\nexport type Initializer<W extends AnyWrapper> = (node: W) => void;\n\n/**\n * The definition of a notation\n *\n * @template W  The menclose wrapper class\n * @templare N  The DOM node class\n */\nexport type NotationDef<W extends AnyWrapper, N> = {\n  renderer: Renderer<W, N>;  // renders the DOM nodes for the notation\n  bbox: BBoxExtender<W>;     // gives the offsets to the child bounding box: [top, right, bottom, left]\n  border?: BBoxBorder<W>;    // gives the amount of the bbox offset that is due to borders on the child\n  renderChild?: boolean;     // true if the notation is used to render the child directly (e.g., radical)\n  init?: Initializer<W>;     // function to be called during wrapper construction\n  remove?: string;           // list of notations that are suppressed by this one\n};\n\n/**\n * For defining notation maps\n *\n * @template W  The menclose wrapper class\n * @templare N  The DOM node class\n */\nexport type DefPair<W extends AnyWrapper, N> = [string, NotationDef<W, N>];\nexport type DefList<W extends AnyWrapper, N> = Map<string, NotationDef<W, N>>;\n\nexport type DefPairF<T, W extends AnyWrapper, N> = (name: T) => DefPair<W, N>;\n\n/**\n * The list of notations for an menclose element\n *\n * @template W  The menclose wrapper class\n * @templare N  The DOM node class\n */\nexport type List<W extends AnyWrapper, N> = {[notation: string]: NotationDef<W, N>};\n\n/*****************************************************************/\n\n/**\n * The names and indices of sides for borders, padding, etc.\n */\nexport const sideIndex = {top: 0, right: 1, bottom: 2, left: 3};\nexport type Side = keyof typeof sideIndex;\nexport const sideNames = Object.keys(sideIndex) as Side[];\n\n/**\n * Common BBox and Border functions\n */\nexport const fullBBox = ((node) => new Array(4).fill(node.thickness + node.padding)) as BBoxExtender<Menclose>;\nexport const fullPadding = ((node) => new Array(4).fill(node.padding)) as BBoxExtender<Menclose>;\nexport const fullBorder = ((node) => new Array(4).fill(node.thickness)) as BBoxBorder<Menclose>;\n\n/*****************************************************************/\n\n/**\n * The length of an arrowhead\n */\nexport const arrowHead = (node: Menclose) => {\n  return Math.max(node.padding, node.thickness * (node.arrowhead.x + node.arrowhead.dx + 1));\n};\n\n/**\n * Adjust short bbox for tall arrow heads\n */\nexport const arrowBBoxHD = (node: Menclose, TRBL: PaddingData) => {\n  if (node.childNodes[0]) {\n    const {h, d} = node.childNodes[0].getBBox();\n    TRBL[0] = TRBL[2] = Math.max(0, node.thickness * node.arrowhead.y - (h + d) / 2);\n  }\n  return TRBL;\n};\n\n/**\n * Adjust thin bbox for wide arrow heads\n */\nexport const arrowBBoxW = (node: Menclose, TRBL: PaddingData) => {\n  if (node.childNodes[0]) {\n    const {w} = node.childNodes[0].getBBox();\n    TRBL[1] = TRBL[3] = Math.max(0, node.thickness * node.arrowhead.y - w / 2);\n  }\n  return TRBL;\n};\n\n/**\n * The data for horizontal and vertical arrow notations\n *   [angle, double, isVertical, remove]\n */\nexport const arrowDef = {\n  up:        [-Math.PI / 2, false, true,  'verticalstrike'],\n  down:      [ Math.PI / 2, false, true,  'verticakstrike'],\n  right:     [ 0,           false, false, 'horizontalstrike'],\n  left:      [ Math.PI,     false, false, 'horizontalstrike'],\n  updown:    [ Math.PI / 2, true,  true,  'verticalstrike uparrow downarrow'],\n  leftright: [ 0,           true,  false, 'horizontalstrike leftarrow rightarrow']\n} as {[name: string]: [number, boolean, boolean, string]};\n\n/**\n * The data for diagonal arrow notations\n *   [c, pi, double, remove]\n */\nexport const diagonalArrowDef = {\n  updiagonal:         [-1, 0,       false, 'updiagonalstrike northeastarrow'],\n  northeast:          [-1, 0,       false, 'updiagonalstrike updiagonalarrow'],\n  southeast:          [ 1, 0,       false, 'downdiagonalstrike'],\n  northwest:          [ 1, Math.PI, false, 'downdiagonalstrike'],\n  southwest:          [-1, Math.PI, false, 'updiagonalstrike'],\n  northeastsouthwest: [-1, 0,       true,  'updiagonalstrike northeastarrow updiagonalarrow southwestarrow'],\n  northwestsoutheast: [ 1, 0,       true,  'downdiagonalstrike northwestarrow southeastarrow']\n} as {[name: string]: [number, number, boolean, string]};\n\n/**\n * The BBox functions for horizontal and vertical arrows\n */\nexport const arrowBBox = {\n  up:    (node) => arrowBBoxW(node, [arrowHead(node), 0, node.padding, 0]),\n  down:  (node) => arrowBBoxW(node, [node.padding, 0, arrowHead(node), 0]),\n  right: (node) => arrowBBoxHD(node, [0, arrowHead(node), 0, node.padding]),\n  left:  (node) => arrowBBoxHD(node, [0, node.padding, 0, arrowHead(node)]),\n  updown:    (node) => arrowBBoxW(node, [arrowHead(node), 0, arrowHead(node), 0]),\n  leftright: (node) => arrowBBoxHD(node, [0, arrowHead(node), 0, arrowHead(node)])\n} as {[name: string]: BBoxExtender<Menclose>};\n\n/*****************************************************************/\n\n/**\n * @param {Renderer} render     The function for adding the border to the node\n * @return {string => DefPair}  The function returingn the notation definition\n *                              for the notation having a line on the given side\n */\nexport const CommonBorder = function<W extends Menclose, N>(render: Renderer<W, N>): DefPairF<Side, W, N> {\n  /**\n   * @param {string} side   The side on which a border should appear\n   * @return {DefPair}      The notation definition for the notation having a line on the given side\n   */\n  return (side: Side) => {\n    const i = sideIndex[side];\n    return [side, {\n      //\n      // Add the border to the main child object\n      //\n      renderer: render,\n      //\n      // Indicate the extra space on the given side\n      //\n      bbox: (node) => {\n        const bbox = [0, 0, 0, 0] as PaddingData;\n        bbox[i] = node.thickness + node.padding;\n        return bbox;\n      },\n      //\n      // Indicate the border on the given side\n      //\n      border: (node) => {\n        const bbox = [0, 0, 0, 0] as PaddingData;\n        bbox[i] = node.thickness;\n        return bbox;\n      }\n    }];\n  };\n};\n\n/**\n * @param {Renderer} render                    The function for adding the borders to the node\n * @return {(sring, Side, Side) => DefPair}    The function returning the notation definition\n *                                             for the notation having lines on two sides\n */\nexport const CommonBorder2 = function<W extends Menclose, N>(render: Renderer<W, N>):\n(name: string, side1: Side, side2: Side) => DefPair<W, N> {\n  /**\n   * @param {string} name    The name of the notation to define\n   * @param {Side} side1   The first side to get a border\n   * @param {Side} side2   The second side to get a border\n   * @return {DefPair}       The notation definition for the notation having lines on two sides\n   */\n  return (name: string, side1: Side, side2: Side) => {\n    const i1 = sideIndex[side1];\n    const i2 = sideIndex[side2];\n    return [name, {\n      //\n      // Add the border along the given sides\n      //\n      renderer: render,\n      //\n      // Mark the extra space along the two sides\n      //\n      bbox: (node) => {\n        const t = node.thickness + node.padding;\n        const bbox = [0, 0, 0, 0] as PaddingData;\n        bbox[i1] = bbox[i2] = t;\n        return bbox;\n      },\n      //\n      // Indicate the border on the two sides\n      //\n      border: (node) => {\n        const bbox = [0, 0, 0, 0] as PaddingData;\n        bbox[i1] = bbox[i2] = node.thickness;\n        return bbox;\n      },\n      //\n      // Remove the single side notations, if present\n      //\n      remove: side1 + ' ' + side2\n    }];\n  };\n};\n\n/*****************************************************************/\n\n/**\n * @param {string => Renderer} render      The function for adding the strike to the node\n * @return {string => DefPair}   The function returning the notation definition for the diagonal strike\n */\nexport const CommonDiagonalStrike = function<W extends Menclose, N>(render: (sname: string) => Renderer<W, N>):\nDefPairF<string, W, N> {\n  /**\n   * @param {string} name  The name of the diagonal strike to define\n   * @return {DefPair}     The notation definition for the diagonal strike\n   */\n  return (name: string) => {\n    const cname = 'mjx-' + name.charAt(0) + 'strike';\n    return [name + 'diagonalstrike', {\n      //\n      // Find the angle and width from the bounding box size and create the diagonal line\n      //\n      renderer: render(cname),\n      //\n      //  Add padding all around\n      //\n      bbox: fullBBox\n    }];\n  };\n};\n\n/*****************************************************************/\n\n/**\n * @param {Renderer} render     The function to add the arrow to the node\n * @return {string => DefPair}  The funciton returning the notation definition for the diagonal arrow\n */\nexport const CommonDiagonalArrow = function<W extends Menclose, N>(render: Renderer<W, N>): DefPairF<string, W, N> {\n  /**\n   * @param {string} name   The name of the diagonal arrow to define\n   * @return {DefPair}      The notation definition for the diagonal arrow\n   */\n  return (name: string) => {\n    const [c, pi, double, remove] = diagonalArrowDef[name];\n    return [name + 'arrow', {\n      //\n      // Find the angle and width from the bounding box size and create\n      //   the arrow from them and the other arrow data\n      //\n      renderer: (node, _child) => {\n        const [a, W] = node.arrowAW();\n       const arrow = node.arrow(W, c * (a - pi), double);\n        render(node, arrow);\n      },\n      //\n      // Add space for the arrowhead all around\n      //\n      bbox: (node) => {\n        const {a, x, y} = node.arrowData();\n        const [ax, ay, adx] = [node.arrowhead.x, node.arrowhead.y, node.arrowhead.dx];\n        const [b, ar] = node.getArgMod(ax + adx, ay);\n        const dy = y + (b > a ? node.thickness * ar * Math.sin(b - a) : 0);\n        const dx = x + (b > Math.PI / 2 - a ? node.thickness * ar * Math.sin(b + a - Math.PI / 2) : 0);\n        return [dy, dx, dy, dx];\n      },\n      //\n      // Remove redundant notations\n      //\n      remove: remove\n    }];\n  };\n};\n\n/**\n * @param {Renderer} render     The function to add the arrow to the node\n * @return {string => DefPair}  The function returning the notation definition for the arrow\n */\nexport const CommonArrow = function<W extends Menclose, N>(render: Renderer<W, N>): DefPairF<string, W, N> {\n  /**\n   * @param {string} name   The name of the horizontal or vertical arrow to define\n   * @return {DefPair}      The notation definition for the arrow\n   */\n  return (name: string) => {\n    const [angle, double, isVertical, remove] = arrowDef[name];\n    return [name + 'arrow', {\n      //\n      // Get the arrow height and depth from the bounding box and the arrow direction\n      //   then create the arrow from that and the other data\n      //\n      renderer: (node, _child) => {\n        const {w, h, d} = node.getBBox();\n        const [W, offset] = (isVertical ? [h + d, 'X'] : [w, 'Y']);\n        const dd = node.getOffset(offset);\n        const arrow = node.arrow(W, angle, double, offset, dd);\n        render(node, arrow);\n      },\n      //\n      // Add the padding to the proper sides\n      //\n      bbox: arrowBBox[name],\n      //\n      // Remove redundant notations\n      //\n      remove: remove\n    }];\n  };\n};\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the abstract class for the CommonOutputJax\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractOutputJax} from '../../core/OutputJax.js';\nimport {MathDocument} from '../../core/MathDocument.js';\nimport {MathItem, Metrics, STATE} from '../../core/MathItem.js';\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {FontData, FontDataClass, CharOptions, DelimiterData, CssFontData} from './FontData.js';\nimport {OptionList, separateOptions} from '../../util/Options.js';\nimport {CommonWrapper, AnyWrapper, AnyWrapperClass} from './Wrapper.js';\nimport {CommonWrapperFactory, AnyWrapperFactory} from './WrapperFactory.js';\nimport {percent} from '../../util/lengths.js';\nimport {StyleList, Styles} from '../../util/Styles.js';\nimport {StyleList as CssStyleList, CssStyles} from '../../util/StyleList.js';\n\n/*****************************************************************/\n\nexport interface ExtendedMetrics extends Metrics {\n  family: string;     // the font family for the surrounding text\n}\n\n/**\n * Maps linking a node to the test node it contains,\n *  and a map linking a node to the metrics within that node.\n */\nexport type MetricMap<N> = Map<N, ExtendedMetrics>;\ntype MetricDomMap<N> = Map<N, N>;\n\n/**\n * Maps for unknown characters\n */\nexport type UnknownBBox = {w: number, h: number, d: number};\nexport type UnknownMap = Map<string, UnknownBBox>;\nexport type UnknownVariantMap = Map<string, UnknownMap>;\n\n/*****************************************************************/\n\n/**\n *  The CommonOutputJax class on which the CHTML and SVG jax are built\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n * @template W  The Wrapper class\n * @template F  The WrapperFactory class\n * @template FD The FontData class\n * @template FC The FontDataClass object\n */\nexport abstract class CommonOutputJax<\n  N, T, D,\n  W extends AnyWrapper,\n  F extends AnyWrapperFactory,\n  FD extends FontData<any, any, any>,\n  FC extends FontDataClass<any, any, any>\n> extends AbstractOutputJax<N, T, D> {\n\n  /**\n   * The name of this output jax\n   */\n  public static NAME: string = 'Common';\n\n  /**\n   * @override\n   */\n  public static OPTIONS: OptionList = {\n      ...AbstractOutputJax.OPTIONS,\n    scale: 1,                      // global scaling factor for all expressions\n    minScale: .5,                  // smallest scaling factor to use\n    mtextInheritFont: false,       // true to make mtext elements use surrounding font\n    merrorInheritFont: false,      // true to make merror text use surrounding font\n    mtextFont: '',                 // font to use for mtext, if not inheriting (empty means use MathJax fonts)\n    merrorFont: 'serif',           // font to use for merror, if not inheriting (empty means use MathJax fonts)\n    mathmlSpacing: false,          // true for MathML spacing rules, false for TeX rules\n    skipAttributes: {},            // RFDa and other attributes NOT to copy to the output\n    exFactor: .5,                  // default size of ex in em units\n    displayAlign: 'center',        // default for indentalign when set to 'auto'\n    displayIndent: '0',            // default for indentshift when set to 'auto'\n    wrapperFactory: null,          // The wrapper factory to use\n    font: null,                    // The FontData object to use\n    cssStyles: null                // The CssStyles object to use\n  };\n\n  /**\n   *  The default styles for the output jax\n   */\n  public static commonStyles: CssStyleList = {};\n\n  /**\n   * Used for collecting styles needed for the output jax\n   */\n  public cssStyles: CssStyles;\n\n  /**\n   * The MathDocument for the math we find\n   */\n  public document: MathDocument<N, T, D>;\n\n  /**\n   * the MathItem currently being processed\n   */\n  public math: MathItem<N, T, D>;\n\n  /**\n   * The container element for the math\n   */\n  public container: N;\n\n  /**\n   * The top-level table, if any\n   */\n  public table: AnyWrapper;\n\n  /**\n   * The pixels per em for the math item being processed\n   */\n  public pxPerEm: number;\n\n  /**\n   * The data for the font in use\n   */\n  public font: FD;\n\n  /**\n   * The wrapper factory for the MathML nodes\n   */\n  public factory: F;\n\n  /**\n   * A map from the nodes in the expression currently being processed to the\n   * wrapper nodes for them (used by functions like core() to locate the wrappers\n   * from the core nodes)\n   */\n  public nodeMap: Map<MmlNode, W>;\n\n  /**\n   * Node used to test for in-line metric data\n   */\n  public testInline: N;\n\n  /**\n   * Node used to test for display metric data\n   */\n  public testDisplay: N;\n\n  /**\n   * Cache of unknonw character bounding boxes for this element\n   */\n  protected unknownCache: UnknownVariantMap;\n\n  /*****************************************************************/\n\n  /**\n   * Get the WrapperFactory and connect it to this output jax\n   * Get the cssStyle and font objects\n   *\n   * @param {OptionList} options         The configuration options\n   * @param {CommonWrapperFactory} defaultFactory  The default wrapper factory class\n   * @param {FC} defaultFont  The default FontData constructor\n   * @constructor\n   */\n  constructor(options: OptionList = null,\n              defaultFactory: typeof CommonWrapperFactory = null,\n              defaultFont: FC = null) {\n    const [jaxOptions, fontOptions] = separateOptions(options, defaultFont.OPTIONS);\n    super(jaxOptions);\n    this.factory = this.options.wrapperFactory ||\n      new defaultFactory<CommonOutputJax<N, T, D, W, F, FD, FC>, W,\n    AnyWrapperClass, CharOptions, DelimiterData, FD>();\n    this.factory.jax = this;\n    this.cssStyles = this.options.cssStyles || new CssStyles();\n    this.font = this.options.font || new defaultFont(fontOptions);\n    this.unknownCache = new Map();\n  }\n\n  /*****************************************************************/\n\n  /**\n   * Save the math document\n   * Create the mjx-container node\n   * Create the DOM output for the root MathML math node in the container\n   * Return the container node\n   *\n   * @override\n   */\n  public typeset(math: MathItem<N, T, D>, html: MathDocument<N, T, D>) {\n    this.setDocument(html);\n    let node = this.createNode();\n    this.toDOM(math, node, html);\n    return node;\n  }\n\n  /**\n   * @return {N}  The container DOM node for the typeset math\n   */\n  protected createNode(): N {\n    const jax = (this.constructor as typeof CommonOutputJax).NAME;\n    return this.html('mjx-container', {'class': 'MathJax', jax: jax});\n  }\n\n  /**\n   * @param {N} node   The container whose scale is to be set\n   */\n  protected setScale(node: N) {\n    const scale = this.math.metrics.scale * this.options.scale;\n    if (scale !== 1) {\n      this.adaptor.setStyle(node, 'fontSize', percent(scale));\n    }\n  }\n\n  /**\n   * Save the math document, if any, and the math item\n   * Set the document where HTML nodes will be created via the adaptor\n   * Recursively set the TeX classes for the nodes\n   * Set the scaling for the DOM node\n   * Create the nodeMap (maps MathML nodes to corresponding wrappers)\n   * Create the HTML output for the root MathML node in the container\n   * Clear the nodeMape\n   * Execute the post-filters\n   *\n   * @param {MathItem} math      The math item to convert\n   * @param {N} node             The contaier to place the result into\n   * @param {MathDocument} html  The document containing the math\n   */\n  public toDOM(math: MathItem<N, T, D>, node: N, html: MathDocument<N, T, D> = null) {\n    this.setDocument(html);\n    this.math = math;\n    this.pxPerEm = math.metrics.ex / this.font.params.x_height;\n    math.root.setTeXclass(null);\n    this.setScale(node);\n    this.nodeMap = new Map<MmlNode, W>();\n    this.container = node;\n    this.processMath(math.root, node);\n    this.nodeMap = null;\n    this.executeFilters(this.postFilters, math, html, node);\n  }\n\n  /**\n   * This is the actual typesetting function supplied by the subclass\n   *\n   * @param {MmlNode} math   The intenral MathML node of the root math element to process\n   * @param {N} node         The container node where the math is to be typeset\n   */\n  protected abstract processMath(math: MmlNode, node: N): void;\n\n  /*****************************************************************/\n\n  /**\n   * @param {MathItem} math      The MathItem to get the bounding box for\n   * @param {MathDocument} html  The MathDocument for the math\n   */\n  public getBBox(math: MathItem<N, T, D>, html: MathDocument<N, T, D>) {\n    this.setDocument(html);\n    this.math = math;\n    math.root.setTeXclass(null);\n    this.nodeMap = new Map<MmlNode, W>();\n    let bbox = this.factory.wrap(math.root).getOuterBBox();\n    this.nodeMap = null;\n    return bbox;\n  }\n\n  /*****************************************************************/\n\n  /**\n   * @override\n   */\n  public getMetrics(html: MathDocument<N, T, D>) {\n    this.setDocument(html);\n    const adaptor = this.adaptor;\n    const maps = this.getMetricMaps(html);\n    for (const math of html.math) {\n      const parent = adaptor.parent(math.start.node);\n      if (math.state() < STATE.METRICS && parent) {\n        const map = maps[math.display ? 1 : 0];\n        const {em, ex, containerWidth, lineWidth, scale, family} = map.get(parent);\n        math.setMetrics(em, ex, containerWidth, lineWidth, scale);\n        if (this.options.mtextInheritFont) {\n          math.outputData.mtextFamily = family;\n        }\n        if (this.options.merrorInheritFont) {\n          math.outputData.merrorFamily = family;\n        }\n        math.state(STATE.METRICS);\n      }\n    }\n  }\n\n  /**\n   * @param {N} node            The container node whose metrics are to be measured\n   * @param {boolean} display   True if the metrics are for displayed math\n   * @return {Metrics}          Object containing em, ex, containerWidth, etc.\n   */\n  public getMetricsFor(node: N, display: boolean): ExtendedMetrics {\n    const getFamily = (this.options.mtextInheritFont || this.options.merrorInheritFont);\n    const test = this.getTestElement(node, display);\n    const metrics = this.measureMetrics(test, getFamily);\n    this.adaptor.remove(test);\n    return metrics;\n  }\n\n  /**\n   * Get a MetricMap for the math list\n   *\n   * @param {MathDocument} html  The math document whose math list is to be processed.\n   * @return {MetricMap[]}       The node-to-metrics maps for all the containers that have math\n   */\n  protected getMetricMaps(html: MathDocument<N, T, D>): MetricMap<N>[] {\n    const adaptor = this.adaptor;\n    const domMaps = [new Map() as MetricDomMap<N>, new Map() as MetricDomMap<N>];\n    //\n    // Add the test elements all at once (so only one reflow)\n    // Currently, we do one test for each container element for in-line and one for display math\n    //   (since we need different techniques for the two forms to avoid a WebKit bug).\n    //   This may need to be changed to handle floating elements better, since that has to be\n    //   done at the location of the math itself, not necessarily the end of the container.\n    //\n    for (const math of html.math) {\n      const node = adaptor.parent(math.start.node);\n      if (node && math.state() < STATE.METRICS) {\n        const map = domMaps[math.display ? 1 : 0];\n        if (!map.has(node)) {\n          map.set(node, this.getTestElement(node, math.display));\n        }\n      }\n    }\n    //\n    // Measure the metrics for all the mapped elements\n    //\n    const getFamily = this.options.mtextInheritFont || this.options.merrorInheritFont;\n    const maps = [new Map() as MetricMap<N>, new Map() as MetricMap<N>];\n    for (const i of maps.keys()) {\n      for (const node of domMaps[i].keys()) {\n        maps[i].set(node, this.measureMetrics(domMaps[i].get(node), getFamily));\n      }\n    }\n    //\n    // Remove the test elements\n    //\n    for (const i of maps.keys()) {\n      for (const node of domMaps[i].values()) {\n        adaptor.remove(node);\n      }\n    }\n    return maps;\n  }\n\n  /**\n   * @param {N} node    The math element to be measured\n   * @return {N}        The test elements that were added\n   */\n  protected getTestElement(node: N, display: boolean): N {\n    const adaptor = this.adaptor;\n    if (!this.testInline) {\n      this.testInline = this.html('mjx-test', {style: {\n        display:            'inline-block',\n        width:              '100%',\n        'font-style':       'normal',\n        'font-weight':      'normal',\n        'font-size':        '100%',\n        'font-size-adjust': 'none',\n        'text-indent':      0,\n        'text-transform':   'none',\n        'letter-spacing':   'normal',\n        'word-spacing':     'normal',\n        overflow:           'hidden',\n        height:             '1px',\n        'margin-right':     '-1px'\n      }}, [\n        this.html('mjx-left-box', {style: {\n          display: 'inline-block',\n          width: 0,\n          'float': 'left'\n        }}),\n        this.html('mjx-ex-box', {style: {\n          position: 'absolute',\n          overflow: 'hidden',\n          width: '1px', height: '60ex'\n        }}),\n        this.html('mjx-right-box', {style: {\n          display: 'inline-block',\n          width: 0,\n          'float': 'right'\n        }})\n      ]);\n      this.testDisplay = adaptor.clone(this.testInline);\n      adaptor.setStyle(this.testDisplay, 'display', 'table');\n      adaptor.setStyle(this.testDisplay, 'margin-right', '');\n      adaptor.setStyle(adaptor.firstChild(this.testDisplay) as N, 'display', 'none');\n      const right = adaptor.lastChild(this.testDisplay) as N;\n      adaptor.setStyle(right, 'display', 'table-cell');\n      adaptor.setStyle(right, 'width', '10000em');\n      adaptor.setStyle(right, 'float', '');\n    }\n    return adaptor.append(node, adaptor.clone(display ? this.testDisplay : this.testInline) as N) as N;\n  }\n\n  /**\n   * @param {N} node              The test node to measure\n   * @param {boolean} getFamily   True if font family of surroundings is to be determined\n   * @return {ExtendedMetrics}    The metric data for the given node\n   */\n  protected measureMetrics(node: N, getFamily: boolean): ExtendedMetrics {\n    const adaptor = this.adaptor;\n    const family = (getFamily ? adaptor.fontFamily(node) : '');\n    const em = adaptor.fontSize(node);\n    const [w, h] = adaptor.nodeSize(adaptor.childNode(node, 1) as N);\n    const ex = (w ? h / 60 : em * this.options.exFactor);\n    const containerWidth = (!w ? 1000000 : adaptor.getStyle(node, 'display') === 'table' ?\n                            adaptor.nodeSize(adaptor.lastChild(node) as N)[0] - 1 :\n                            adaptor.nodeBBox(adaptor.lastChild(node) as N).left -\n                            adaptor.nodeBBox(adaptor.firstChild(node) as N).left - 2);\n    const scale = Math.max(this.options.minScale,\n                           this.options.matchFontHeight ? ex / this.font.params.x_height / em : 1);\n    const lineWidth = 1000000;      // no linebreaking (otherwise would be a percentage of cwidth)\n    return {em, ex, containerWidth, lineWidth, scale, family};\n  }\n\n  /*****************************************************************/\n\n  /**\n   * @override\n   */\n  public styleSheet(html: MathDocument<N, T, D>) {\n    this.setDocument(html);\n    //\n    // Start with the common styles\n    //\n    this.cssStyles.clear();\n    this.cssStyles.addStyles((this.constructor as typeof CommonOutputJax).commonStyles);\n    //\n    // Add document-specific styles\n    //\n    if ('getStyles' in html) {\n      for (const styles of ((html as any).getStyles() as CssStyleList[])) {\n        this.cssStyles.addStyles(styles);\n      }\n    }\n    //\n    // Gather the CSS from the classes and font\n    //\n    this.addWrapperStyles(this.cssStyles);\n    this.addFontStyles(this.cssStyles);\n    //\n    // Create the stylesheet for the CSS\n    //\n    const sheet = this.html('style', {id: 'MJX-styles'}, [this.text('\\n' + this.cssStyles.cssText + '\\n')]);\n    return sheet as N;\n  }\n\n  /**\n   * @param {CssStyles} styles   The style object to add to\n   */\n  protected addFontStyles(styles: CssStyles) {\n    styles.addStyles(this.font.styles);\n  }\n\n  /**\n   * @param {CssStyles} styles   The style object to add to\n   */\n  protected addWrapperStyles(styles: CssStyles) {\n    for (const kind of this.factory.getKinds()) {\n      this.addClassStyles(this.factory.getNodeClass(kind), styles);\n    }\n  }\n\n  /**\n   * @param {typeof CommonWrapper} CLASS  The Wrapper class whose styles are to be added\n   * @param {CssStyles} styles            The style object to add to.\n   */\n  protected addClassStyles(CLASS: typeof CommonWrapper, styles: CssStyles) {\n    styles.addStyles(CLASS.styles);\n  }\n\n  /*****************************************************************/\n\n  /**\n   * @param {MathDocument} html  The document to be used\n   */\n  protected setDocument(html: MathDocument<N, T, D>) {\n    if (html) {\n      this.document = html;\n      this.adaptor.document = html.document;\n    }\n  }\n\n  /**\n   * @param {string} type      The type of HTML node to create\n   * @param {OptionList} def   The properties to set on the HTML node\n   * @param {(N|T)[]} content  Array of child nodes to set for the HTML node\n   * @param {string} ns        The namespace for the element\n   * @return {N}               The newly created DOM tree\n   */\n  public html(type: string, def: OptionList = {}, content: (N | T)[] = [], ns?: string): N {\n    return this.adaptor.node(type, def, content, ns);\n  }\n\n  /**\n   * @param {string} text  The text string for which to make a text node\n   *\n   * @return {T}  A text node with the given text\n   */\n  public text(text: string): T {\n    return this.adaptor.text(text);\n  }\n\n  /**\n   * @param {number} m    A number to be shown with a fixed number of digits\n   * @param {number=} n   The number of digits to use\n   * @return {string}     The formatted number\n   */\n  public fixed(m: number, n: number = 3): string {\n    if (Math.abs(m) < .0006) {\n      return '0';\n    }\n    return m.toFixed(n).replace(/\\.?0+$/, '');\n  }\n\n  /*****************************************************************/\n  /*\n   *  Methods for handling text that is not in the current MathJax font\n   */\n\n  /**\n   * Create a DOM node for text from a specific CSS font, or that is\n   *  not in the current MathJax font\n   *\n   * @param {string} text        The text to be displayed\n   * @param {string} variant     The name of the variant for the text\n   * @return {N}                 The text element containing the text\n   */\n  public abstract unknownText(text: string, variant: string): N;\n\n  /**\n   * Measure text from a specific font, or that isn't in the MathJax font\n   *\n   * @param {string} text        The text to measure\n   * @param {string} variant     The variant for the text\n   * @param {CssFontData} font   The family, italic, and bold data for explicit fonts\n   * @return {UnknownBBox}       The width, height, and depth of the text (in ems)\n   */\n  public measureText(text: string, variant: string, font: CssFontData = ['', false, false]): UnknownBBox {\n    const node = this.unknownText(text, variant);\n    if (variant === '-explicitFont') {\n      const styles = this.cssFontStyles(font);\n      this.adaptor.setAttributes(node, {style: styles});\n    }\n    return this.measureTextNodeWithCache(node, text, variant, font);\n  }\n\n  /**\n   * Get the size of a text node, caching the result, and using\n   *   a cached result, if there is one.\n   *\n   * @param {N} text         The text element to measure\n   * @param {string} chars   The string contained in the text node\n   * @param {string} variant     The variant for the text\n   * @param {CssFontData} font   The family, italic, and bold data for explicit fonts\n   * @return {UnknownBBox}   The width, height and depth for the text\n   */\n  public measureTextNodeWithCache(\n    text: N, chars: string, variant: string,\n    font: CssFontData = ['', false, false]\n  ): UnknownBBox {\n    if (variant === '-explicitFont') {\n      variant = [font[0], font[1] ? 'T' : 'F', font[2] ? 'T' : 'F', ''].join('-');\n    }\n    if (!this.unknownCache.has(variant)) {\n      this.unknownCache.set(variant, new Map());\n    }\n    const map = this.unknownCache.get(variant);\n    const cached = map.get(chars);\n    if (cached) return cached;\n    const bbox = this.measureTextNode(text);\n    map.set(chars, bbox);\n    return bbox;\n  }\n\n  /**\n   * Measure the width of a text element by placing it in the page\n   *  and looking up its size (fake the height and depth, since we can't measure that)\n   *\n   * @param {N} text            The text element to measure\n   * @return {UnknownBBox}      The width, height and depth for the text (in ems)\n   */\n  public abstract measureTextNode(text: N): UnknownBBox;\n\n  /**\n   * Measure the width, height and depth of an annotation-xml node's content\n   *\n   * @param{N} xml          The xml content node to be measured\n   * @return {UnknownBBox}  The width, height, and depth of the content\n   */\n  public measureXMLnode(xml: N): UnknownBBox {\n    const adaptor = this.adaptor;\n    const content =  this.html('mjx-xml-block', {style: {display: 'inline-block'}}, [adaptor.clone(xml)]);\n    const base = this.html('mjx-baseline', {style: {display: 'inline-block', width: 0, height: 0}});\n    const style = {\n      position: 'absolute',\n      display: 'inline-block',\n      'font-family': 'initial',\n      'line-height': 'normal'\n    };\n    const node = this.html('mjx-measure-xml', {style}, [base, content]);\n    adaptor.append(adaptor.parent(this.math.start.node), this.container);\n    adaptor.append(this.container, node);\n    const em = this.math.metrics.em * this.math.metrics.scale;\n    const {left, right, bottom, top} = adaptor.nodeBBox(content);\n    const w = (right - left) / em;\n    const h = (adaptor.nodeBBox(base).top - top) / em;\n    const d = (bottom - top) / em - h;\n    adaptor.remove(this.container);\n    adaptor.remove(node);\n    return {w, h, d};\n  }\n\n  /**\n   * @param {CssFontData} font   The family, style, and weight for the given font\n   * @param {StyleList} styles   The style object to add the font data to\n   * @return {StyleList}         The modified (or initialized) style object\n   */\n  public cssFontStyles(font: CssFontData, styles: StyleList = {}): StyleList {\n    const [family, italic, bold] = font;\n    styles['font-family'] = this.font.getFamily(family);\n    if (italic) styles['font-style'] = 'italic';\n    if (bold) styles['font-weight'] = 'bold';\n    return styles;\n  }\n\n  /**\n   * @param {Styles} styles   The style object to query\n   * @return {CssFontData}    The family, italic, and boolean values\n   */\n  public getFontData(styles: Styles): CssFontData {\n    if (!styles) {\n      styles = new Styles();\n    }\n    return [this.font.getFamily(styles.get('font-family')),\n            styles.get('font-style') === 'italic',\n            styles.get('font-weight') === 'bold'] as CssFontData;\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonWrapper class\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractWrapper, WrapperClass} from '../../core/Tree/Wrapper.js';\nimport {PropertyList} from '../../core/Tree/Node.js';\nimport {MmlNode, TextNode, AbstractMmlNode, indentAttributes} from '../../core/MmlTree/MmlNode.js';\nimport {MmlMo} from '../../core/MmlTree/MmlNodes/mo.js';\nimport {Property} from '../../core/Tree/Node.js';\nimport {unicodeChars} from '../../util/string.js';\nimport * as LENGTHS from '../../util/lengths.js';\nimport {Styles} from '../../util/Styles.js';\nimport {StyleList} from '../../util/StyleList.js';\nimport {CommonOutputJax} from './OutputJax.js';\nimport {CommonWrapperFactory} from './WrapperFactory.js';\nimport {BBox} from '../../util/BBox.js';\nimport {FontData, DelimiterData, CharData, CharOptions, DIRECTION, NOSTRETCH} from './FontData.js';\n\n/*****************************************************************/\n\n/**\n * Shorthand for a dictionary object (an object of key:value pairs)\n */\nexport type StringMap = {[key: string]: string};\n\n/**\n * MathML spacing rules\n */\n/* tslint:disable-next-line:whitespace */\nconst SMALLSIZE = 2/18;\n\n/**\n * @param {boolean} script   The scriptlevel\n * @param {number} size      The space size\n * @return {number}          The size clamped to SMALLSIZE when scriptlevel > 0\n */\nfunction MathMLSpace(script: boolean, size: number): number {\n  return (script ? size < SMALLSIZE ? 0 : SMALLSIZE : size);\n}\n\nexport type Constructor<T> = new(...args: any[]) => T;\n\n/**\n * Shorthands for wrappers and their constructors\n */\nexport type AnyWrapper = CommonWrapper<any, any, any, any, any, any>;\nexport type AnyWrapperClass = CommonWrapperClass<any, any, any, any, any, any>;\nexport type WrapperConstructor = Constructor<AnyWrapper>;\n\n/*********************************************************/\n/**\n *  The CommonWrapper class interface\n *\n * @template J  The OutputJax type\n * @template W  The Wrapper type\n * @template C  The WrapperClass type\n * @template CC The CharOptions type\n * @template FD The FontData type\n */\nexport interface CommonWrapperClass<\n  J extends CommonOutputJax<any, any, any, W, CommonWrapperFactory<J, W, C, CC, DD, FD>, FD, any>,\n  W extends CommonWrapper<J, W, C, CC, DD, FD>,\n  C extends CommonWrapperClass<J, W, C, CC, DD, FD>,\n  CC extends CharOptions,\n  DD extends DelimiterData,\n  FD extends FontData<CC, any, DD>\n> extends WrapperClass<MmlNode, CommonWrapper<J, W, C, CC, DD, FD>> {\n  /**\n   * @override\n   */\n  new(factory: CommonWrapperFactory<J, W, C, CC, DD, FD>, node: MmlNode, ...args: any[]): W;\n}\n\n/*****************************************************************/\n/**\n *  The base CommonWrapper class\n *\n * @template J  The OutputJax type\n * @template W  The Wrapper type\n * @template C  The WrapperClass type\n * @template CC The CharOptions type\n * @template FD The FontData type\n */\nexport class CommonWrapper<\n  J extends CommonOutputJax<any, any, any, W, CommonWrapperFactory<J, W, C, CC, DD, FD>, FD, any>,\n  W extends CommonWrapper<J, W, C, CC, DD, FD>,\n  C extends CommonWrapperClass<J, W, C, CC, DD, FD>,\n  CC extends CharOptions,\n  DD extends DelimiterData,\n  FD extends FontData<CC, any, DD>\n> extends AbstractWrapper<MmlNode, CommonWrapper<J, W, C, CC, DD, FD>> {\n\n  /**\n   * The wrapper kind\n   */\n  public static kind: string = 'unknown';\n\n  /**\n   * Any styles needed for the class\n   */\n  public static styles: StyleList = {};\n\n  /**\n   * Styles that should not be passed on from style attribute\n   */\n  public static removeStyles: string[] = [\n    'fontSize', 'fontFamily', 'fontWeight',\n    'fontStyle', 'fontVariant', 'font'\n  ];\n\n  /**\n   * Non-MathML attributes on MathML elements NOT to be copied to the\n   * corresponding DOM elements.  If set to false, then the attribute\n   * WILL be copied.  Most of these (like the font attributes) are handled\n   * in other ways.\n   */\n  public static skipAttributes: {[name: string]: boolean} = {\n    fontfamily: true, fontsize: true, fontweight: true, fontstyle: true,\n    color: true, background: true,\n    'class': true, href: true, style: true,\n    xmlns: true\n  };\n\n  /**\n   * The translation of mathvariant to bold styles, or to remove\n   * bold from a mathvariant.\n   */\n  public static BOLDVARIANTS: {[name: string]: StringMap} =  {\n    bold: {\n      normal: 'bold',\n      italic: 'bold-italic',\n      fraktur: 'bold-fraktur',\n      script: 'bold-script',\n      'sans-serif': 'bold-sans-serif',\n      'sans-serif-italic': 'sans-serif-bold-italic'\n    },\n    normal: {\n      bold: 'normal',\n      'bold-italic': 'italic',\n      'bold-fraktur': 'fraktur',\n      'bold-script': 'script',\n      'bold-sans-serif': 'sans-serif',\n      'sans-serif-bold-italic': 'sans-serif-italic'\n    }\n  };\n\n  /**\n   * The translation of mathvariant to italic styles, or to remove\n   * italic from a mathvariant.\n   */\n  public static ITALICVARIANTS: {[name: string]: StringMap} = {\n    italic: {\n      normal: 'italic',\n      bold: 'bold-italic',\n      'sans-serif': 'sans-serif-italic',\n      'bold-sans-serif': 'sans-serif-bold-italic'\n    },\n    normal: {\n      italic: 'normal',\n      'bold-italic': 'bold',\n      'sans-serif-italic': 'sans-serif',\n      'sans-serif-bold-italic': 'bold-sans-serif'\n    }\n  };\n\n  /**\n   * The factory used to create more wrappers\n   */\n  protected factory: CommonWrapperFactory<J, W, C, CC, DD, FD>;\n\n  /**\n   * The parent of this node\n   */\n  public parent: W = null;\n\n  /**\n   * The children of this node\n   */\n  public childNodes: W[];\n\n  /**\n   * Styles that must be handled directly by the wrappers (mostly having to do with fonts)\n   */\n  protected removedStyles: StringMap = null;\n\n  /**\n   * The explicit styles set by the node\n   */\n  protected styles: Styles = null;\n\n  /**\n   * The mathvariant for this node\n   */\n  public variant: string = '';\n\n  /**\n   * The bounding box for this node\n   */\n  public bbox: BBox;\n  /**\n   * Whether the bounding box has been computed yet\n   */\n  protected bboxComputed: boolean = false;\n\n  /**\n   * Delimiter data for stretching this node (NOSTRETCH means not yet determined)\n   */\n  public stretch: DD = NOSTRETCH as DD;\n\n  /**\n   * Easy access to the font parameters\n   */\n  public font: FD = null;\n\n  /**\n   * Easy access to the output jax for this node\n   */\n  get jax() {\n    return this.factory.jax;\n  }\n\n  /**\n   * Easy access to the DOMAdaptor object\n   */\n  get adaptor() {\n    return this.factory.jax.adaptor;\n  }\n\n  /**\n   * Easy access to the metric data for this node\n   */\n  get metrics() {\n    return this.factory.jax.math.metrics;\n  }\n\n  /**\n   * True if children with percentage widths should be resolved by this container\n   */\n  get fixesPWidth() {\n    return !this.node.notParent && !this.node.isToken;\n  }\n\n  /*******************************************************************/\n\n  /**\n   * @override\n   */\n  constructor(factory: CommonWrapperFactory<J, W, C, CC, DD, FD>, node: MmlNode, parent: W = null) {\n    super(factory, node);\n    this.parent = parent;\n    this.font = factory.jax.font;\n    this.bbox = BBox.zero();\n    this.getStyles();\n    this.getVariant();\n    this.getScale();\n    this.getSpace();\n    this.childNodes = node.childNodes.map((child: MmlNode) => {\n      const wrapped = this.wrap(child);\n      if (wrapped.bbox.pwidth && (node.notParent || node.isKind('math'))) {\n        this.bbox.pwidth = BBox.fullWidth;\n      }\n      return wrapped;\n    });\n  }\n\n  /**\n   * @param {MmlNode} node  The node to the wrapped\n   * @param {W} parent  The wrapped parent node\n   * @return {W}  The newly wrapped node\n   */\n  public wrap(node: MmlNode, parent: W = null): W {\n    const wrapped = this.factory.wrap(node, parent || this);\n    if (parent) {\n      parent.childNodes.push(wrapped);\n    }\n    this.jax.nodeMap.set(node, wrapped);\n    return wrapped;\n  }\n\n  /*******************************************************************/\n  /**\n   * Return the wrapped node's bounding box, either the cached one, if it exists,\n   *   or computed directly if not.\n   *\n   * @param {boolean} save  Whether to cache the bbox or not (used for stretchy elements)\n   * @return {BBox}  The computed bounding box\n   */\n  public getBBox(save: boolean = true): BBox {\n    if (this.bboxComputed) {\n      return this.bbox;\n    }\n    const bbox = (save ? this.bbox : BBox.zero());\n    this.computeBBox(bbox);\n    this.bboxComputed = save;\n    return bbox;\n  }\n\n  /**\n   * Return the wrapped node's bounding box that includes borders and padding\n   *\n   * @param {boolean} save  Whether to cache the bbox or not (used for stretchy elements)\n   * @return {BBox}  The computed bounding box\n   */\n  public getOuterBBox(save: boolean = true): BBox {\n    const bbox = this.getBBox(save);\n    if (!this.styles) return bbox;\n    const obox = new BBox();\n    Object.assign(obox, bbox);\n    for (const [name, side] of BBox.StyleAdjust) {\n      const x = this.styles.get(name);\n      if (x) {\n        (obox as any)[side] += this.length2em(x, 1, obox.rscale);\n      }\n    }\n    return obox;\n  }\n\n  /**\n   * @param {BBox} bbox           The bounding box to modify (either this.bbox, or an empty one)\n   * @param {boolean} recompute   True if we are recomputing due to changes in children that have percentage widths\n   */\n  protected computeBBox(bbox: BBox, recompute: boolean = false) {\n    bbox.empty();\n    for (const child of this.childNodes) {\n      bbox.append(child.getOuterBBox());\n    }\n    bbox.clean();\n    if (this.fixesPWidth && this.setChildPWidths(recompute)) {\n      this.computeBBox(bbox, true);\n    }\n  }\n\n  /**\n   * Recursively resolve any percentage widths in the child nodes using the given\n   *   container width (or the child width, if none was passed).\n   *   Overriden for mtables in order to compute the width.\n   *\n   * @param {boolean} recompute  True if we are recomputing due to changes in children\n   * @param {(number|null)=} w   The width of the container (from which percentages are computed)\n   * @param {boolean=} clear     True if pwidth marker is to be cleared\n   * @return {boolean}           True if a percentage width was found\n   */\n  public setChildPWidths(recompute: boolean, w: (number | null) = null, clear: boolean = true): boolean {\n    if (recompute) {\n      return false;\n    }\n    if (clear) {\n      this.bbox.pwidth = '';\n    }\n    let changed = false;\n    for (const child of this.childNodes) {\n      const cbox = child.getOuterBBox();\n      if (cbox.pwidth && child.setChildPWidths(recompute, w === null ? cbox.w : w, clear)) {\n        changed = true;\n      }\n    }\n    return changed;\n  }\n\n  /**\n   * Mark BBox to be computed again (e.g., when an mo has stretched)\n   */\n  public invalidateBBox() {\n    if (this.bboxComputed) {\n      this.bboxComputed = false;\n      if (this.parent) {\n        this.parent.invalidateBBox();\n      }\n    }\n  }\n\n  /**\n   * Copy child skew and italic correction\n   *\n   * @param {BBox} bbox  The bounding box to modify\n   */\n  protected copySkewIC(bbox: BBox) {\n    const first = this.childNodes[0];\n    if (first?.bbox.sk) {\n      bbox.sk = first.bbox.sk;\n    }\n    if (first?.bbox.dx) {\n      bbox.dx = first.bbox.dx;\n    }\n    const last = this.childNodes[this.childNodes.length - 1];\n    if (last?.bbox.ic) {\n      bbox.ic = last.bbox.ic;\n      bbox.w += bbox.ic;\n    }\n  }\n\n  /*******************************************************************/\n\n  /**\n   * Add the style attribute, but remove any font-related styles\n   *   (since these are handled separately by the variant)\n   */\n  protected getStyles() {\n    const styleString = this.node.attributes.getExplicit('style') as string;\n    if (!styleString) return;\n    const style = this.styles = new Styles(styleString);\n    for (let i = 0, m = CommonWrapper.removeStyles.length; i < m; i++) {\n      const id = CommonWrapper.removeStyles[i];\n      if (style.get(id)) {\n        if (!this.removedStyles) this.removedStyles = {};\n        this.removedStyles[id] = style.get(id);\n        style.set(id, '');\n      }\n    }\n  }\n\n  /**\n   * Get the mathvariant (or construct one, if needed).\n   */\n  protected getVariant() {\n    if (!this.node.isToken) return;\n    const attributes = this.node.attributes;\n    let variant = attributes.get('mathvariant') as string;\n    if (!attributes.getExplicit('mathvariant')) {\n      const values = attributes.getList('fontfamily', 'fontweight', 'fontstyle') as StringMap;\n      if (this.removedStyles) {\n        const style = this.removedStyles;\n        if (style.fontFamily) values.family = style.fontFamily;\n        if (style.fontWeight) values.weight = style.fontWeight;\n        if (style.fontStyle)  values.style  = style.fontStyle;\n      }\n      if (values.fontfamily) values.family = values.fontfamily;\n      if (values.fontweight) values.weight = values.fontweight;\n      if (values.fontstyle)  values.style  = values.fontstyle;\n      if (values.weight && values.weight.match(/^\\d+$/)) {\n        values.weight = (parseInt(values.weight) > 600 ? 'bold' : 'normal');\n      }\n      if (values.family) {\n        variant = this.explicitVariant(values.family, values.weight, values.style);\n      } else {\n        if (this.node.getProperty('variantForm')) variant = '-tex-variant';\n        variant = (CommonWrapper.BOLDVARIANTS[values.weight] || {})[variant] || variant;\n        variant = (CommonWrapper.ITALICVARIANTS[values.style] || {})[variant] || variant;\n      }\n    }\n    this.variant = variant;\n  }\n\n  /**\n   * Set the CSS for a token element having an explicit font (rather than regular mathvariant).\n   *\n   * @param {string} fontFamily  The font family to use\n   * @param {string} fontWeight  The font weight to use\n   * @param {string} fontStyle   The font style to use\n   */\n  protected explicitVariant(fontFamily: string, fontWeight: string, fontStyle: string) {\n    let style = this.styles;\n    if (!style) style = this.styles = new Styles();\n    style.set('fontFamily', fontFamily);\n    if (fontWeight) style.set('fontWeight', fontWeight);\n    if (fontStyle)  style.set('fontStyle', fontStyle);\n    return '-explicitFont';\n  }\n\n  /**\n   * Determine the scaling factor to use for this wrapped node, and set the styles for it.\n   */\n  protected getScale() {\n    let scale = 1, parent = this.parent;\n    let pscale = (parent ? parent.bbox.scale : 1);\n    let attributes = this.node.attributes;\n    let scriptlevel = Math.min(attributes.get('scriptlevel') as number, 2);\n    let fontsize = attributes.get('fontsize');\n    let mathsize = (this.node.isToken || this.node.isKind('mstyle') ?\n                    attributes.get('mathsize') : attributes.getInherited('mathsize'));\n    //\n    // If scriptsize is non-zero, set scale based on scriptsizemultiplier\n    //\n    if (scriptlevel !== 0) {\n      scale = Math.pow(attributes.get('scriptsizemultiplier') as number, scriptlevel);\n      let scriptminsize = this.length2em(attributes.get('scriptminsize'), .8, 1);\n      if (scale < scriptminsize) scale = scriptminsize;\n    }\n    //\n    // If there is style=\"font-size:...\", and not fontsize attribute, use that as fontsize\n    //\n    if (this.removedStyles && this.removedStyles.fontSize && !fontsize) {\n      fontsize = this.removedStyles.fontSize;\n    }\n    //\n    // If there is a fontsize and no mathsize attribute, is that\n    //\n    if (fontsize && !attributes.getExplicit('mathsize')) {\n      mathsize = fontsize;\n    }\n    //\n    //  Incorporate the mathsize, if any\n    //\n    if (mathsize !== '1') {\n      scale *= this.length2em(mathsize, 1, 1);\n    }\n    //\n    // Record the scaling factors and set the element's CSS\n    //\n    this.bbox.scale = scale;\n    this.bbox.rscale = scale / pscale;\n  }\n\n  /**\n   * Sets the spacing based on TeX or MathML algorithm\n   */\n  protected getSpace() {\n    const isTop = this.isTopEmbellished();\n    const hasSpacing = this.node.hasSpacingAttributes();\n    if (this.jax.options.mathmlSpacing || hasSpacing) {\n      isTop && this.getMathMLSpacing();\n    } else {\n      this.getTeXSpacing(isTop, hasSpacing);\n    }\n  }\n\n  /**\n   * Get the spacing using MathML rules based on the core MO\n   */\n  protected getMathMLSpacing() {\n    const node = this.node.coreMO() as MmlMo;\n    //\n    // If the mo is not within a multi-node mrow, don't add space\n    //\n    const child = node.coreParent();\n    const parent = child.parent;\n    if (!parent || !parent.isKind('mrow') || parent.childNodes.length === 1) return;\n    //\n    // Get the lspace and rspace\n    //\n    const attributes = node.attributes;\n    const isScript = (attributes.get('scriptlevel') > 0);\n    this.bbox.L = (attributes.isSet('lspace') ?\n                   Math.max(0, this.length2em(attributes.get('lspace'))) :\n                   MathMLSpace(isScript, node.lspace));\n    this.bbox.R = (attributes.isSet('rspace') ?\n                   Math.max(0, this.length2em(attributes.get('rspace'))) :\n                   MathMLSpace(isScript, node.rspace));\n    //\n    // If there are two adjacent <mo>, use enough left space to make it\n    //   the maximum of the rspace of the first and lspace of the second\n    //\n    const n = parent.childIndex(child);\n    if (n === 0) return;\n    const prev = parent.childNodes[n - 1] as AbstractMmlNode;\n    if (!prev.isEmbellished) return;\n    const bbox = this.jax.nodeMap.get(prev).getBBox();\n    if (bbox.R) {\n      this.bbox.L = Math.max(0, this.bbox.L - bbox.R);\n    }\n  }\n\n  /**\n   * Get the spacing using the TeX rules\n   *\n   * @parm {boolean} isTop       True when this is a top-level embellished operator\n   * @parm {boolean} hasSpacing  True when there is an explicit or inherited 'form' attribute\n   */\n  protected getTeXSpacing(isTop: boolean, hasSpacing: boolean) {\n    if (!hasSpacing) {\n      const space = this.node.texSpacing();\n      if (space) {\n        this.bbox.L = this.length2em(space);\n      }\n    }\n    if (isTop || hasSpacing) {\n      const attributes = this.node.coreMO().attributes;\n      if (attributes.isSet('lspace')) {\n        this.bbox.L = Math.max(0, this.length2em(attributes.get('lspace')));\n      }\n      if (attributes.isSet('rspace')) {\n        this.bbox.R = Math.max(0, this.length2em(attributes.get('rspace')));\n      }\n    }\n  }\n\n  /**\n   * @return {boolean}   True if this is the top-most container of an embellished operator that is\n   *                       itself an embellished operator (the maximal embellished operator for its core)\n   */\n  protected isTopEmbellished(): boolean {\n    return (this.node.isEmbellished &&\n            !(this.node.parent && this.node.parent.isEmbellished));\n  }\n\n  /*******************************************************************/\n\n  /**\n   * @return {CommonWrapper}  The wrapper for this node's core node\n   */\n  public core(): CommonWrapper<J, W, C, CC, DD, FD> {\n    return this.jax.nodeMap.get(this.node.core());\n  }\n\n  /**\n   * @return {CommonWrapper}  The wrapper for this node's core <mo> node\n   */\n  public coreMO(): CommonWrapper<J, W, C, CC, DD, FD> {\n    return this.jax.nodeMap.get(this.node.coreMO());\n  }\n\n  /**\n   * @return {string}  For a token node, the combined text content of the node's children\n   */\n  public getText(): string {\n    let text = '';\n    if (this.node.isToken) {\n      for (const child of this.node.childNodes) {\n        if (child instanceof TextNode) {\n          text += child.getText();\n        }\n      }\n    }\n    return text;\n  }\n\n  /**\n   * @param {DIRECTION} direction  The direction to stretch this node\n   * @return {boolean}             Whether the node can stretch in that direction\n   */\n  public canStretch(direction: DIRECTION): boolean {\n    this.stretch = NOSTRETCH as DD;\n    if (this.node.isEmbellished) {\n      let core = this.core();\n      if (core && core.node !== this.node) {\n        if (core.canStretch(direction)) {\n          this.stretch = core.stretch;\n        }\n      }\n    }\n    return this.stretch.dir !== DIRECTION.None;\n  }\n\n  /**\n   * @return {[string, number]}  The alignment and indentation shift for the expression\n   */\n  protected getAlignShift(): [string, number] {\n    let {indentalign, indentshift, indentalignfirst, indentshiftfirst} =\n      this.node.attributes.getList(...indentAttributes) as StringMap;\n    if (indentalignfirst !== 'indentalign') {\n      indentalign = indentalignfirst;\n    }\n    if (indentalign === 'auto') {\n      indentalign = this.jax.options.displayAlign;\n    }\n    if (indentshiftfirst !== 'indentshift') {\n      indentshift = indentshiftfirst;\n    }\n    if (indentshift === 'auto') {\n      indentshift = this.jax.options.displayIndent;\n      if (indentalign === 'right' && !indentshift.match(/^\\s*0[a-z]*\\s*$/)) {\n        indentshift = ('-' + indentshift.trim()).replace(/^--/, '');\n      }\n    }\n    const shift = this.length2em(indentshift, this.metrics.containerWidth);\n    return [indentalign, shift] as [string, number];\n  }\n\n  /**\n   * @param {number} W       The total width\n   * @param {BBox} bbox      The bbox to be aligned\n   * @param {string} align   How to align (left, center, right)\n   * @return {number}        The x position of the aligned width\n   */\n  protected getAlignX(W: number, bbox: BBox, align: string): number {\n    return (align === 'right' ? W - (bbox.w + bbox.R) * bbox.rscale :\n            align === 'left' ? bbox.L * bbox.rscale :\n            (W - bbox.w * bbox.rscale) / 2);\n  }\n\n  /**\n   * @param {number} H        The total height\n   * @param {number} D        The total depth\n   * @param {number} h        The height to be aligned\n   * @param {number} d        The depth to be aligned\n   * @param {string} align    How to align (top, bottom, center, axis, baseline)\n   * @return {number}         The y position of the aligned baseline\n   */\n  protected getAlignY(H: number, D: number, h: number, d: number, align: string): number {\n    return (align === 'top' ? H - h :\n            align === 'bottom' ? d - D :\n            align === 'center' ? ((H - h) - (D - d)) / 2 :\n            0); // baseline and axis\n  }\n\n  /**\n   * @param {number} i   The index of the child element whose container is needed\n   * @return {number}    The inner width as a container (for percentage widths)\n   */\n  public getWrapWidth(i: number): number {\n    return this.childNodes[i].getBBox().w;\n  }\n\n  /**\n   * @param {number} i   The index of the child element whose container is needed\n   * @return {string}    The alignment child element\n   */\n  public getChildAlign(_i: number): string {\n    return 'left';\n  }\n\n  /*******************************************************************/\n  /*\n   * Easy access to some utility routines\n   */\n\n  /**\n   * @param {number} m  A number to be shown as a percent\n   * @return {string}  The number m as a percent\n   */\n  protected percent(m: number): string {\n    return LENGTHS.percent(m);\n  }\n\n  /**\n   * @param {number} m  A number to be shown in ems\n   * @return {string}  The number with units of ems\n   */\n  protected em(m: number): string {\n    return LENGTHS.em(m);\n  }\n\n  /**\n   * @param {number} m   A number of em's to be shown as pixels\n   * @param {number} M   The minimum number of pixels to allow\n   * @return {string}  The number with units of px\n   */\n  protected px(m: number, M: number = -LENGTHS.BIGDIMEN): string {\n    return LENGTHS.px(m, M, this.metrics.em);\n  }\n\n  /**\n   * @param {Property} length  A dimension (giving number and units) or number to be converted to ems\n   * @param {number} size  The default size of the dimension (for percentage values)\n   * @param {number} scale  The current scaling factor (to handle absolute units)\n   * @return {number}  The dimension converted to ems\n   */\n  protected length2em(length: Property, size: number = 1, scale: number = null): number {\n    if (scale === null) {\n      scale = this.bbox.scale;\n    }\n    return LENGTHS.length2em(length as string, size, scale, this.jax.pxPerEm);\n  }\n\n  /**\n   * @param {string} text   The text to turn into unicode locations\n   * @param {string} name   The name of the variant for the characters\n   * @return {number[]}     Array of numbers represeting the string's unicode character positions\n   */\n  protected unicodeChars(text: string, name: string = this.variant): number[] {\n    let chars = unicodeChars(text);\n    //\n    //  Remap to Math Alphanumerics block\n    //\n    const variant = this.font.getVariant(name);\n    if (variant && variant.chars) {\n      const map = variant.chars;\n      //\n      //  Is map[n] doesn't exist, (map[n] || []) still gives an CharData array.\n      //  If the array doesn't have a CharOptions element use {} instead.\n      //  Then check if the options has an smp property, which gives\n      //    the Math Alphabet mapping for this character.\n      //  Otherwise use the original code point, n.\n      //\n      chars = chars.map((n) => ((map[n] || [])[3] || {}).smp || n);\n    }\n    return chars;\n  }\n\n  /**\n   * @param {number[]} chars    The array of unicode character numbers to remap\n   * @return {number[]}         The converted array\n   */\n  public remapChars(chars: number[]): number[] {\n    return chars;\n  }\n\n  /**\n   * @param {string} text   The text from which to create a TextNode object\n   * @return {TextNode}     The TextNode with the given text\n   */\n  public mmlText(text: string): TextNode {\n    return ((this.node as AbstractMmlNode).factory.create('text') as TextNode).setText(text);\n  }\n\n  /**\n   * @param {string} kind             The kind of MmlNode to create\n   * @param {ProperyList} properties  The properties to set initially\n   * @param {MmlNode[]} children      The child nodes to add to the created node\n   * @return {MmlNode}                The newly created MmlNode\n   */\n  public mmlNode(kind: string, properties: PropertyList = {}, children: MmlNode[] = []): MmlNode {\n    return (this.node as AbstractMmlNode).factory.create(kind, properties, children);\n  }\n\n  /**\n   * Create an mo wrapper with the given text,\n   *   link it in, and give it the right defaults.\n   *\n   * @param {string} text     The text for the wrapped element\n   * @return {CommonWrapper}  The wrapped MmlMo node\n   */\n  protected createMo(text: string): CommonWrapper<J, W, C, CC, DD, FD> {\n    const mmlFactory = (this.node as AbstractMmlNode).factory;\n    const textNode = (mmlFactory.create('text') as TextNode).setText(text);\n    const mml = mmlFactory.create('mo', {stretchy: true}, [textNode]);\n    mml.inheritAttributesFrom(this.node);\n    const node = this.wrap(mml);\n    node.parent = this as any as W;\n    return node;\n  }\n\n  /**\n   * @param {string} variant   The variant in which to look for the character\n   * @param {number} n         The number of the character to look up\n   * @return {CharData}        The full CharData object, with CharOptions guaranteed to be defined\n   */\n  protected getVariantChar(variant: string, n: number): CharData<CC> {\n    const char = this.font.getChar(variant, n) || [0, 0, 0, {unknown: true} as CC];\n    if (char.length === 3) {\n      (char as any)[3] = {};\n    }\n    return char as [number, number, number, CC];\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the OutputWrapperFactory class\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CommonOutputJax} from './OutputJax.js';\nimport {AbstractWrapperFactory} from '../../core/Tree/WrapperFactory.js';\nimport {CommonWrapper, CommonWrapperClass} from './Wrapper.js';\nimport {CharOptions, DelimiterData, FontData} from './FontData.js';\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\n\n/*****************************************************************/\n/**\n *  The OutputWrapperFactory class for creating OutputWrapper nodes\n *\n * @template J  The OutputJax type\n * @template W  The Wrapper type\n * @template C  The WrapperClass type\n * @template CC The CharOptions type\n * @template FD The FontData type\n */\nexport class CommonWrapperFactory<\n  J extends CommonOutputJax<any, any, any, W, CommonWrapperFactory<J, W, C, CC, DD, FD>, FD, any>,\n  W extends CommonWrapper<J, W, C, CC, DD, FD>,\n  C extends CommonWrapperClass<J, W, C, CC, DD, FD>,\n  CC extends CharOptions,\n  DD extends DelimiterData,\n  FD extends FontData<CC, any, DD>\n> extends AbstractWrapperFactory<MmlNode, W, C> {\n\n  /**\n   * The default list of wrapper nodes this factory can create\n   *   (filled in by subclasses)\n   */\n  public static defaultNodes: {[kind: string]: CommonWrapperClass<any, any, any, any, any, any>} = {};\n\n  /**\n   * The output jax associated with this factory\n   */\n  public jax: J = null;\n\n  /**\n   * @return {Object}  The list of node-creation functions\n   */\n  get Wrappers(): Object {\n    return this.node;\n  }\n\n}\n\nexport type AnyWrapperFactory = CommonWrapperFactory<any, any, any, any, any, any>;\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonTeXAtom wrapper mixin for the MmlTeXAtom object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\n\n/*****************************************************************/\n/**\n * The CommonTeXAtom interface\n */\nexport interface CommonTeXAtom extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonTeXAtom constructor\n */\nexport type TeXAtomConstructor = Constructor<CommonTeXAtom>;\n\n/*****************************************************************/\n/**\n * The CommonTeXAtom wrapper mixin for the TeXAtom object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonTeXAtomMixin<T extends WrapperConstructor>(Base: T): TeXAtomConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      super.computeBBox(bbox, recompute);\n      if (this.childNodes[0] && this.childNodes[0].bbox.ic) {\n        bbox.ic = this.childNodes[0].bbox.ic;\n      }\n      //\n      // Center VCENTER atoms vertically\n      //\n      if (this.node.texClass === TEXCLASS.VCENTER) {\n        const {h, d} = bbox;\n        const a = this.font.params.axis_height;\n        const dh = ((h + d) / 2 + a) - h;  // new height minus old height\n        bbox.h += dh;\n        bbox.d -= dh;\n      }\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonTextNode wrapper mixin for the TextNode object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {TextNode} from '../../../core/MmlTree/MmlNode.js';\n\n/*****************************************************************/\n/**\n * The CommonTextNode interface\n */\nexport interface CommonTextNode extends AnyWrapper {\n  /**\n   * @param {string} text     The text to remap\n   * @param {string} variant  The variant for the character\n   * @return {number[]}       The unicode points for the (remapped) text\n   */\n  remappedText(text: string, variant: string): number[];\n}\n\n/**\n * Shorthand for the CommonTextNode constructor\n */\nexport type TextNodeConstructor = Constructor<CommonTextNode>;\n\n/*****************************************************************/\n/**\n *  The CommonTextNode wrapper mixin for the TextNode object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonTextNodeMixin<T extends WrapperConstructor>(Base: T): TextNodeConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, _recompute: boolean = false) {\n      const variant = this.parent.variant;\n      const text = (this.node as TextNode).getText();\n      if (variant === '-explicitFont') {\n        //\n        // Measure the size of the text (using the DOM if possible)\n        //\n        const font = this.jax.getFontData(this.parent.styles);\n        const {w, h, d} = this.jax.measureText(text, variant, font);\n        bbox.h = h;\n        bbox.d = d;\n        bbox.w = w;\n      } else {\n        const chars = this.remappedText(text, variant);\n        bbox.empty();\n        //\n        // Loop through the characters and add them in one by one\n        //\n        for (const char of chars) {\n          let [h, d, w, data] = this.getVariantChar(variant, char);\n          if (data.unknown) {\n            //\n            // Measure unknown characters using the DOM (if possible)\n            //\n            const cbox = this.jax.measureText(String.fromCodePoint(char), variant);\n            w = cbox.w;\n            h = cbox.h;\n            d = cbox.d;\n          }\n          //\n          // Update the bounding box\n          //\n          bbox.w += w;\n          if (h > bbox.h) bbox.h = h;\n          if (d > bbox.d) bbox.d = d;\n          bbox.ic = data.ic || 0;\n          bbox.sk = data.sk || 0;\n          bbox.dx = data.dx || 0;\n        }\n        if (chars.length > 1) {\n          bbox.sk = 0;\n        }\n        bbox.clean();\n      }\n    }\n\n    /**\n     * @param {string} text     The text to remap\n     * @param {string} variant  The variant for the character\n     * @return {number[]}       The unicode points for the (remapped) text\n     */\n    public remappedText(text: string, variant: string): number[] {\n      const c = this.parent.stretch.c;\n      return (c ? [c] : this.parent.remapChars(this.unicodeChars(text, variant)));\n    }\n\n    /******************************************************/\n    /*\n     * TextNodes don't need these, since these properties\n     *   are inherited from the parent nodes\n     */\n\n    /**\n     * @override\n     */\n    public getStyles() {}\n\n    /**\n     * @override\n     */\n    public getVariant() {}\n\n    /**\n     * @override\n     */\n    public getScale() {}\n\n    /**\n     * @override\n     */\n    public getSpace() {}\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMaction wrapper mixin for the MmlMaction object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor, AnyWrapperClass} from '../Wrapper.js';\nimport {MmlMaction} from '../../../core/MmlTree/MmlNodes/maction.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {split} from '../../../util/string.js';\n\n/*****************************************************************/\n/**\n * The types needed to define the actiontypes\n *\n * @template W  The maction wrapper type\n */\nexport type ActionData = {[name: string]: any};\nexport type ActionHandler<W extends AnyWrapper> = (node: W, data?: ActionData) => void;\nexport type ActionPair<W extends AnyWrapper> = [ActionHandler<W>, ActionData];\nexport type ActionMap<W extends AnyWrapper> = Map<string, ActionPair<W>>;\nexport type ActionDef<W extends AnyWrapper> = [string, [ActionHandler<W>, ActionData]];\n\nexport type EventHandler = (event: Event) => void;\n\n/**\n * Data used for tooltip actions\n */\nexport const TooltipData = {\n  dx: '.2em',          // x-offset of tooltip from right side of maction bbox\n  dy: '.1em',          // y-offset of tooltip from bottom of maction bbox\n\n  postDelay: 600,      // milliseconds before tooltip posts\n  clearDelay: 100,     // milliseconds before tooltip is removed\n\n  hoverTimer: new Map<any, number>(),    // timers for posting tooltips\n  clearTimer: new Map<any, number>(),    // timers for removing tooltips\n\n  /*\n   * clear the timers if any are active\n   */\n  stopTimers: (node: any, data: ActionData) => {\n    if (data.clearTimer.has(node)) {\n      clearTimeout(data.clearTimer.get(node));\n      data.clearTimer.delete(node);\n    }\n    if (data.hoverTimer.has(node)) {\n      clearTimeout(data.hoverTimer.get(node));\n      data.hoverTimer.delete(node);\n    }\n  }\n\n};\n\n/*****************************************************************/\n/**\n * The CommonMaction interface\n *\n * @template W  The maction wrapper type\n */\nexport interface CommonMaction<W extends AnyWrapper> extends AnyWrapper {\n  /**\n   * The handler for the specified actiontype\n   */\n  action: ActionHandler<W>;\n  data: ActionData;\n\n  /**\n   * Tooltip offsets\n   */\n  dx: number;\n  dy: number;\n\n  /**\n   * The selected child wrapper\n   */\n  readonly selected: W;\n\n}\n\n/**\n * The CommonMaction class interface\n *\n * @template W  The maction wrapper type\n */\nexport interface CommonMactionClass<W extends AnyWrapper> extends AnyWrapperClass {\n  /**\n   * The valid action types and their handlers\n   */\n  actions: ActionMap<W>;\n}\n\n/**\n * Shorthand for the CommonMaction constructor\n *\n * @template W  The maction wrapper type\n */\nexport type MactionConstructor<W extends AnyWrapper> = Constructor<CommonMaction<W>>;\n\n/*****************************************************************/\n/**\n * The CommonMaction wrapper mixin for the MmlMaction object\n *\n * @template W  The maction wrapper type\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMactionMixin<\n  W extends AnyWrapper,\n  T extends WrapperConstructor\n>(Base: T): MactionConstructor<W> & T {\n\n  return class extends Base {\n\n    /**\n     * The handler for the specified actiontype\n     */\n    public action: ActionHandler<W>;\n    /**\n     * The data for the specified actiontype\n     */\n    public data: ActionData;\n\n    /**\n     * The x-offset for tooltips\n     */\n    public dx: number;\n    /**\n     * The y-offset for tooltips\n     */\n    public dy: number;\n\n    /**\n     * @return {W}  The selected child wrapper\n     */\n    public get selected(): W {\n      const selection = this.node.attributes.get('selection') as number;\n      const i = Math.max(1, Math.min(this.childNodes.length, selection)) - 1;\n      return this.childNodes[i] || this.wrap((this.node as MmlMaction).selected);\n    }\n\n    /*************************************************************/\n\n    /**\n     * @override\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      const actions = (this.constructor as CommonMactionClass<W>).actions;\n      const action = this.node.attributes.get('actiontype') as string;\n      const [handler, data] = actions.get(action) || [((_node, _data) => {}) as ActionHandler<W>, {}];\n      this.action = handler;\n      this.data = data;\n      this.getParameters();\n    }\n\n    /**\n     * Look up attribute parameters\n     */\n    public getParameters() {\n      const offsets = this.node.attributes.get('data-offsets') as string;\n      let [dx, dy] = split(offsets || '');\n      this.dx = this.length2em(dx || TooltipData.dx);\n      this.dy = this.length2em(dy || TooltipData.dy);\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      bbox.updateFrom(this.selected.getOuterBBox());\n      this.selected.setChildPWidths(recompute);\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMath wrapper mixin for the MmlMath object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\n\n/*****************************************************************/\n/**\n * The CommonMath interface\n */\nexport interface CommonMath extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonMath constructor\n */\nexport type MathConstructor = Constructor<CommonMath>;\n\n/*****************************************************************/\n/**\n *  The CommonMath wrapper mixin for the MmlMath object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMathMixin<T extends WrapperConstructor>(Base: T): MathConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public getWrapWidth(_i: number) {\n      return (this.parent ? this.getBBox().w : this.metrics.containerWidth / this.jax.pxPerEm);\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMenclose wrapper mixin for the MmlMenclose object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor, AnyWrapperClass} from '../Wrapper.js';\nimport * as Notation from '../Notation.js';\nimport {CommonMsqrt} from './msqrt.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {AbstractMmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport {split} from '../../../util/string.js';\n\n/*****************************************************************/\n/**\n * The CommonMenclose interface\n *\n * @template W  The menclose wrapper type\n */\nexport interface CommonMenclose<W extends AnyWrapper, S extends CommonMsqrt, N> extends AnyWrapper {\n  /**\n   *  The notations active on this menclose, and the one to use for the child, if any\n   */\n  notations: Notation.List<W, N>;\n  renderChild: Notation.Renderer<W, N>;\n\n  /**\n   * fake msqrt for radial notation (if used)\n   */\n  msqrt: S;\n\n  /**\n   * The padding, thickness, and shape of the arrow head\n   *   (may be overridden using data-padding, data-thickness, and data-arrowhead attibutes)\n   */\n  padding: number;\n  thickness: number;\n  arrowhead: {x: number, y: number, dx: number};\n\n  /**\n   * The top, right, bottom, and left padding, added by notations\n   */\n  TRBL: Notation.PaddingData;\n\n  /**\n   * Look up the data-* attributes and override the default values\n   */\n  getParameters(): void;\n\n  /**\n   *  Get the notations given in the notation attribute\n   *    and check if any are used to render the child nodes\n   */\n  getNotations(): void;\n\n  /**\n   *  Remove any redundant notations\n   */\n  removeRedundantNotations(): void;\n\n  /**\n   *  Run any initialization needed by notations in use\n   */\n  initializeNotations(): void;\n\n  /**\n   * @return {Notation.PaddingData}  Array of the maximum extra space from the notations along each side\n   */\n  getBBoxExtenders(): Notation.PaddingData;\n\n  /**\n   * @return {Notation.PaddingData}  Array of padding (i.e., BBox minus border) along each side\n   */\n  getPadding(): Notation.PaddingData;\n\n  /**\n   * Each entry in X gets replaced by the corresponding one in Y if it is larger\n   *\n   * @param {Notation.PaddingData} X   An array of numbers\n   * @param {Notation.PaddingData} Y   An array of numbers that replace smaller ones in X\n   */\n  maximizeEntries(X: Notation.PaddingData, Y: Notation.PaddingData): void;\n\n  /**\n   * Get the offset amount for the given direction for vertical and horizontal centering\n   *\n   * @param {string} direction    The direction 'X' or 'Y' for the offset\n   * @return {number}             The amount of offset in that direction\n   */\n  getOffset(direction: string): number;\n\n  /**\n   * @param {number} w    The width of the box whose diagonal is needed\n   * @param {number} h    The height of the box whose diagonal is needed\n   * @return {number[]}   The angle and width of the diagonal of the box\n   */\n  getArgMod(w: number, h: number): [number, number];\n\n  /**\n   * Create an arrow for output\n   *\n   * @param {number} w         The length of the arrow\n   * @param {number} a         The angle for the arrow\n   * @param {boolean} double   True if this is a double-headed arrow\n   * @param {string} offset    'X' for vertical arrow, 'Y' for horizontal\n   * @param {number} trans     Distance to translate in the offset direction\n   * @return {N}               The newly created arrow\n   */\n  arrow(w: number, a: number, double: boolean, offset?: string, trans?: number): N;\n\n  /**\n   * Get the angle and width of a diagonal arrow, plus the x and y extension\n   *   past the content bounding box\n   */\n  arrowData(): {a: number, W: number, x: number, y: number};\n\n  /**\n   * Get the angle and width for a diagonal arrow\n   *\n   * @return {[number, number]}   The angle and width\n   */\n  arrowAW(): [number, number];\n\n  /**\n   * Create an unattached msqrt wrapper to render the 'radical' notation.\n   *   We replace the inferred mrow of the msqrt with the one from the menclose\n   *   but without changing the parent pointer, so as not to detach it from\n   *   the menclose (which would desrtoy the original MathML tree).\n   *\n   * @param {W} child   The inferred mrow that is the child of this menclose\n   * @return {S}        The newly created (but detached) msqrt wrapper\n   */\n  createMsqrt(child: W): S;\n\n  /**\n   * @return {number[]}  The differences between the msqrt bounding box\n   *                     and its child bounding box (i.e., the extra space\n   *                     created by the radical symbol).\n   */\n  sqrtTRBL(): number[];\n}\n\n/**\n * The CommonMenclose class interface\n *\n * @template W  The menclose wrapper type\n * @templare N  The DOM node class\n */\nexport interface CommonMencloseClass<W extends AnyWrapper, N> extends AnyWrapperClass {\n  /**\n   *  The definitions of the various notations\n   */\n  notations: Notation.DefList<W, N>;\n}\n\n/**\n * Shorthand for the CommonMenclose constructor\n *\n * @template W  The menclose wrapper type\n */\nexport type MencloseConstructor<W extends AnyWrapper, S extends CommonMsqrt, N> = Constructor<CommonMenclose<W, S, N>>;\n\n/*****************************************************************/\n/**\n * The CommonMenclose wrapper mixin for the MmlMenclose object\n *\n * @template W  The menclose wrapper type\n * @templare N  The DOM node class\n * @templare S  The msqrt wrapper class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMencloseMixin<\n  W extends AnyWrapper,\n  S extends CommonMsqrt,\n  N,\n  T extends WrapperConstructor\n>(Base: T): MencloseConstructor<W, S, N> & T {\n\n  return class extends Base {\n\n    /**\n     *  The notations active on this menclose, if any\n     */\n    public notations: Notation.List<W, N> = {};\n\n    /**\n     *  The notation to use for the child, if any\n     */\n    public renderChild: Notation.Renderer<W, N> = null;\n\n    /**\n     * fake msqrt for radial notation (if used)\n     */\n    public msqrt: S = null;\n\n    /**\n     * The padding of the arrow head (may be overridden using data-padding attibute)\n     */\n    public padding: number = Notation.PADDING;\n    /**\n     * The thickness of the arrow head (may be overridden using data-thickness attibute)\n     */\n    public thickness: number = Notation.THICKNESS;\n    /**\n     * The shape of the arrow head (may be overridden using data-arrowhead attibutes)\n     */\n    public arrowhead = {x: Notation.ARROWX, y: Notation.ARROWY, dx: Notation.ARROWDX};\n\n    /**\n     * The top, right, bottom, and left padding (added by notations)\n     */\n    public TRBL: Notation.PaddingData = [0, 0, 0, 0];\n\n    /**\n     * @override\n     * @constructor\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.getParameters();\n      this.getNotations();\n      this.removeRedundantNotations();\n      this.initializeNotations();\n      this.TRBL = this.getBBoxExtenders();\n    }\n\n    /**\n     * Look up the data-* attributes and override the default values\n     */\n    public getParameters() {\n      const attributes = this.node.attributes;\n      const padding = attributes.get('data-padding');\n      if (padding !== undefined) {\n        this.padding = this.length2em(padding, Notation.PADDING);\n      }\n      const thickness = attributes.get('data-thickness');\n      if (thickness !== undefined) {\n        this.thickness = this.length2em(thickness, Notation.THICKNESS);\n      }\n      const arrowhead = attributes.get('data-arrowhead') as string;\n      if (arrowhead !== undefined) {\n        let [x, y, dx] = split(arrowhead);\n        this.arrowhead = {\n          x: (x ? parseFloat(x) : Notation.ARROWX),\n          y: (y ? parseFloat(y) : Notation.ARROWY),\n          dx: (dx ? parseFloat(dx) : Notation.ARROWDX)\n        };\n      }\n    }\n\n    /**\n     *  Get the notations given in the notation attribute\n     *    and check if any are used to render the child nodes\n     */\n    public getNotations() {\n      const Notations = (this.constructor as CommonMencloseClass<W, N>).notations;\n      for (const name of split(this.node.attributes.get('notation') as string)) {\n        const notation = Notations.get(name);\n        if (notation) {\n          this.notations[name] = notation;\n          if (notation.renderChild) {\n            this.renderChild = notation.renderer;\n          }\n        }\n      }\n    }\n\n    /**\n     *  Remove any redundant notations\n     */\n    public removeRedundantNotations() {\n      for (const name of Object.keys(this.notations)) {\n        if (this.notations[name]) {\n          const remove = this.notations[name].remove || '';\n          for (const notation of remove.split(/ /)) {\n            delete this.notations[notation];\n          }\n        }\n      }\n    }\n\n    /**\n     *  Run any initialization needed by notations in use\n     */\n    public initializeNotations() {\n      for (const name of Object.keys(this.notations)) {\n        const init = this.notations[name].init;\n        init && init(this as any);\n      }\n    }\n\n    /********************************************************/\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      //\n      //  Combine the BBox from the child and add the extenders\n      //\n      let [T, R, B, L] = this.TRBL;\n      const child = this.childNodes[0].getBBox();\n      bbox.combine(child, L, 0);\n      bbox.h += T;\n      bbox.d += B;\n      bbox.w += R;\n      this.setChildPWidths(recompute);\n    }\n\n    /**\n     * @return {Notation.PaddingData}  Array of the maximum extra space from the notations along each side\n     */\n    public getBBoxExtenders(): Notation.PaddingData {\n      let TRBL = [0, 0, 0, 0] as Notation.PaddingData;\n      for (const name of Object.keys(this.notations)) {\n        this.maximizeEntries(TRBL, this.notations[name].bbox(this as any));\n      }\n      return TRBL;\n    }\n\n    /**\n     * @return {Notation.PaddingData}  Array of padding (i.e., BBox minus border) along each side\n     */\n    public getPadding(): Notation.PaddingData {\n      let BTRBL = [0, 0, 0, 0] as Notation.PaddingData;\n      for (const name of Object.keys(this.notations)) {\n        const border = this.notations[name].border;\n        if (border) {\n          this.maximizeEntries(BTRBL, border(this as any));\n        }\n      }\n      return [0, 1, 2, 3].map(i => this.TRBL[i] - BTRBL[i]) as Notation.PaddingData;\n    }\n\n    /**\n     * Each entry in X gets replaced by the corresponding one in Y if it is larger\n     *\n     * @param {Notation.PaddingData} X   An array of numbers\n     * @param {Notation.PaddingData} Y   An array of numbers that replace smaller ones in X\n     */\n    public maximizeEntries(X: Notation.PaddingData, Y: Notation.PaddingData) {\n      for (let i = 0; i < X.length; i++) {\n        if (X[i] < Y[i]) {\n          X[i] = Y[i];\n        }\n      }\n    }\n\n    /********************************************************/\n\n    /**\n     * Get the offset amount for the given direction for vertical and horizontal centering\n     *\n     * @param {string} direction    The direction 'X' or 'Y' for the offset\n     * @return {number}             The amount of offset in that direction\n     */\n    public getOffset(direction: string): number {\n      let [T, R, B, L] = this.TRBL;\n      const d = (direction === 'X' ? R - L : B - T) / 2;\n      return (Math.abs(d) > .001 ? d : 0);\n    }\n\n    /**\n     * @param {number} w    The width of the box whose diagonal is needed\n     * @param {number} h    The height of the box whose diagonal is needed\n     * @return {number[]}   The angle and width of the diagonal of the box\n     */\n    public getArgMod(w: number, h: number): [number, number] {\n      return [Math.atan2(h, w), Math.sqrt(w * w + h * h)];\n    }\n\n    /**\n     * Create an arrow using an svg element\n     *\n     * @param {number} w        The length of the arrow\n     * @param {number} a        The angle for the arrow\n     * @param {boolean} double  True if this is a double-headed arrow\n     * @param {string} offset   'X' for vertical arrow, 'Y' for horizontal\n     * @param {number} dist     Distance to translate in the offset direction\n     * @return {N}              The newly created arrow\n     */\n    public arrow(_w: number, _a: number, _double: boolean, _offset: string = '', _dist: number = 0): N {\n      return null as N;\n    }\n\n    /**\n     * Get the angle and width of a diagonal arrow, plus the x and y extension\n     *   past the content bounding box\n     *\n     * @return {Object}  The angle, width, and x and y extentions\n     */\n    public arrowData(): {a: number, W: number, x: number, y: number} {\n      const [p, t] = [this.padding, this.thickness];\n      const r = t * (this.arrowhead.x + Math.max(1, this.arrowhead.dx));\n      const {h, d, w} = this.childNodes[0].getBBox();\n      const H = h + d;\n      const R = Math.sqrt(H * H + w * w);\n      const x = Math.max(p, r * w / R);\n      const y = Math.max(p, r * H / R);\n      const [a, W] = this.getArgMod(w + 2 * x, H + 2 * y);\n      return {a, W, x, y};\n    }\n\n    /**\n     * Get the angle and width for a diagonal arrow\n     *\n     * @return {[number, number]}   The angle and width\n     */\n    public arrowAW(): [number, number] {\n      const {h, d, w} = this.childNodes[0].getBBox();\n      const [T, R, B, L] = this.TRBL;\n      return this.getArgMod(L + w + R, T + h + d + B);\n    }\n\n    /********************************************************/\n\n    /**\n     * Create an unattached msqrt wrapper to render the 'radical' notation.\n     *   We replace the inferred mrow of the msqrt with the one from the menclose\n     *   but without changing the parent pointer, so as not to detach it from\n     *   the menclose (which would desrtoy the original MathML tree).\n     *\n     * @param {W} child   The inferred mrow that is the child of this menclose\n     * @return {S}        The newly created (but detached) msqrt wrapper\n     */\n    public createMsqrt(child: W): S {\n      const mmlFactory = (this.node as AbstractMmlNode).factory;\n      const mml = mmlFactory.create('msqrt');\n      mml.inheritAttributesFrom(this.node);\n      mml.childNodes[0] = child.node;\n      const node = this.wrap(mml) as S;\n      node.parent = this;\n      return node;\n    }\n\n    /**\n     * @return {number[]}  The differences between the msqrt bounding box\n     *                     and its child bounding box (i.e., the extra space\n     *                     created by the radical symbol).\n     */\n    public sqrtTRBL(): [number, number, number, number] {\n      const bbox = this.msqrt.getBBox();\n      const cbox = this.msqrt.childNodes[0].getBBox();\n      return [bbox.h - cbox.h, 0, bbox.d - cbox.d, bbox.w - cbox.w];\n    }\n\n  };\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMfenced wrapper mixin for the MmlMfenced object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {CommonInferredMrow} from './mrow.js';\nimport {MmlNode, AbstractMmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport {MmlMfenced} from '../../../core/MmlTree/MmlNodes/mfenced.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n/**\n * The CommonMfenced interface\n */\nexport interface CommonMfenced extends AnyWrapper {\n  /**\n   * An mrow to use for the layout of the mfenced\n   */\n  mrow: CommonInferredMrow;\n\n  /**\n   * Creates the mrow wrapper to use for the layout\n   */\n  createMrow(): void;\n\n  /**\n   * Populate the mrow with wrapped mo elements interleaved\n   *   with the mfenced children (the mo's are already created\n   *   in the mfenced object)\n   */\n  addMrowChildren(): void;\n\n  /**\n   * Wrap an mo element and push it onto the mrow\n   *\n   * @param {MmlNode} node  The mo element to push on the mrow\n   */\n  addMo(node: MmlNode): void;\n}\n\n/**\n * Shorthand for the CommonMfenced constructor\n */\nexport type MfencedConstructor = Constructor<CommonMfenced>;\n\n/*****************************************************************/\n/**\n * The CommonMfenced wrapper mixin for the MmlMfenced object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMfencedMixin<T extends WrapperConstructor>(Base: T): MfencedConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * An mrow to use for the layout of the mfenced\n     */\n    public mrow: CommonInferredMrow = null;\n\n    /**\n     * @override\n     * @constructor\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.createMrow();\n      this.addMrowChildren();\n    }\n\n    /**\n     * Creates the mrow wrapper to use for the layout\n     */\n    public createMrow() {\n      const mmlFactory = (this.node as AbstractMmlNode).factory;\n      const mrow = mmlFactory.create('inferredMrow');\n      mrow.inheritAttributesFrom(this.node);\n      this.mrow = this.wrap(mrow) as CommonInferredMrow;\n      this.mrow.parent = this;\n    }\n\n    /**\n     * Populate the mrow with wrapped mo elements interleaved\n     *   with the mfenced children (the mo's are already created\n     *   in the mfenced object)\n     */\n    public addMrowChildren() {\n      const mfenced = this.node as MmlMfenced;\n      const mrow = this.mrow;\n      this.addMo(mfenced.open);\n      if (this.childNodes.length) {\n        mrow.childNodes.push(this.childNodes[0]);\n      }\n      let i = 0;\n      for (const child of this.childNodes.slice(1)) {\n        this.addMo(mfenced.separators[i++]);\n        mrow.childNodes.push(child);\n      }\n      this.addMo(mfenced.close);\n      mrow.stretchChildren();\n    }\n\n    /**\n     * Wrap an mo element and push it onto the mrow\n     *\n     * @param {MmlNode} node  The mo element to push on the mrow\n     */\n    public addMo(node: MmlNode) {\n      if (!node) return;\n      const mo = this.wrap(node);\n      this.mrow.childNodes.push(mo);\n      mo.parent = this.mrow;\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      bbox.updateFrom(this.mrow.getOuterBBox());\n      this.setChildPWidths(recompute);\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMfrac wrapper mixin for the MmlMfrac object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMo} from './mo.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {DIRECTION} from '../FontData.js';\n\n/*****************************************************************/\n/**\n * The CommonMfrac interface\n */\nexport interface CommonMfrac extends AnyWrapper {\n  /**\n   * @param {BBox} bbox        The buonding box to modify\n   * @param {boolean} display  True for display-mode fractions\n   * @param {number} t         The thickness of the line\n   */\n  getFractionBBox(bbox: BBox, display: boolean, t: number): void;\n\n  /**\n   * @param {boolean} display  True for display-mode fractions\n   * @param {number} t         The thickness of the line\n   * @return {Object}          The expanded rule thickness (T), and baseline offsets\n   *                             for numerator and denomunator (u and v)\n   */\n  getTUV(display: boolean, t: number): {T: number, u: number, v: number};\n\n  /**\n   * @param {BBox} bbox        The bounding box to modify\n   * @param {boolean} display  True for display-mode fractions\n   */\n  getAtopBBox(bbox: BBox, display: boolean): void;\n\n  /**\n   * @param {boolean} display  True for diplay-mode fractions\n   * @return {Object}\n   *    The vertical offsets of the numerator (u), the denominator (v),\n   *    the separation between the two, and the bboxes themselves.\n   */\n  getUVQ(display: boolean): {u: number, v: number, q: number, nbox: BBox, dbox: BBox};\n\n  /**\n   * @param {BBox} bbox        The boundng box to modify\n   * @param {boolean} display  True for display-mode fractions\n   */\n  getBevelledBBox(bbox: BBox, display: boolean): void;\n\n  /**\n   * @param {boolean} display  True for display-style fractions\n   * @return {Object}          The height (H) of the bevel, horizontal offest (delta)\n   *                             vertical offsets (u and v) of the parts, and\n   *                             bounding boxes of the parts.\n   */\n  getBevelData(display: boolean): {H: number, delta: number, u: number, v: number, nbox: BBox, dbox: BBox};\n\n  /**\n   * @return {boolean}   True if in display mode, false otherwise\n   */\n  isDisplay(): boolean;\n}\n\n/**\n * Shorthand for the CommonMfrac constructor\n */\nexport type MfracConstructor = Constructor<CommonMfrac>;\n\n/*****************************************************************/\n/**\n * The CommonMfrac wrapper mixin for the MmlMfrac object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMfracMixin<T extends WrapperConstructor>(Base: T): MfracConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * Wrapper for <mo> to use for bevelled fraction\n     */\n    public bevel: CommonMo = null;\n\n    /**\n     * Padding around fractions\n     */\n    public pad: number;\n\n    /************************************************/\n\n    /**\n     * @override\n     * @constructor\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.pad = (this.node.getProperty('withDelims') as boolean ? 0 : this.font.params.nulldelimiterspace);\n      //\n      //  create internal bevel mo element\n      //\n      if (this.node.attributes.get('bevelled')) {\n        const {H} = this.getBevelData(this.isDisplay());\n        const bevel = this.bevel = this.createMo('/') as CommonMo;\n        bevel.node.attributes.set('symmetric', true);\n        bevel.canStretch(DIRECTION.Vertical);\n        bevel.getStretchedVariant([H], true);\n      }\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      bbox.empty();\n      const {linethickness, bevelled} = this.node.attributes.getList('linethickness', 'bevelled');\n      const display = this.isDisplay();\n      let w = null as (number | null);\n      if (bevelled) {\n        this.getBevelledBBox(bbox, display);\n      } else {\n        const thickness = this.length2em(String(linethickness), .06);\n        w = -2 * this.pad;\n        if (thickness === 0) {\n          this.getAtopBBox(bbox, display);\n        } else {\n          this.getFractionBBox(bbox, display, thickness);\n          w -= .2;\n        }\n        w += bbox.w;\n      }\n      bbox.clean();\n      this.setChildPWidths(recompute, w);\n    }\n\n    /************************************************/\n\n    /**\n     * @param {BBox} bbox        The buonding box to modify\n     * @param {boolean} display  True for display-mode fractions\n     * @param {number} t         The thickness of the line\n     */\n    public getFractionBBox(bbox: BBox, display: boolean, t: number) {\n      const nbox = this.childNodes[0].getOuterBBox();\n      const dbox = this.childNodes[1].getOuterBBox();\n      const tex = this.font.params;\n      const a = tex.axis_height;\n      const {T, u, v} = this.getTUV(display, t);\n      bbox.combine(nbox, 0, a + T + Math.max(nbox.d * nbox.rscale, u));\n      bbox.combine(dbox, 0, a - T - Math.max(dbox.h * dbox.rscale, v));\n      bbox.w += 2 * this.pad + .2;\n    }\n\n    /**\n     * @param {boolean} display  True for display-mode fractions\n     * @param {number} t         The thickness of the line\n     * @return {Object}          The expanded rule thickness (T), and baseline offsets\n     *                             for numerator and denomunator (u and v)\n     */\n    public getTUV(display: boolean, t: number): {T: number, u: number, v: number} {\n      const tex = this.font.params;\n      const a = tex.axis_height;\n      const T = (display ? 3.5 : 1.5) * t;\n      return {T: (display ? 3.5 : 1.5) * t,\n              u: (display ? tex.num1 : tex.num2) - a - T,\n              v: (display ? tex.denom1 : tex.denom2) + a - T};\n    }\n\n    /************************************************/\n\n    /**\n     * @param {BBox} bbox        The bounding box to modify\n     * @param {boolean} display  True for display-mode fractions\n     */\n    public getAtopBBox(bbox: BBox, display: boolean) {\n      const {u, v, nbox, dbox} = this.getUVQ(display);\n      bbox.combine(nbox, 0, u);\n      bbox.combine(dbox, 0, -v);\n      bbox.w += 2 * this.pad;\n    }\n\n    /**\n     * @param {boolean} display  True for diplay-mode fractions\n     * @return {Object}\n     *    The vertical offsets of the numerator (u), the denominator (v),\n     *    the separation between the two, and the bboxes themselves.\n     */\n    public getUVQ(display: boolean): {u: number, v: number, q: number, nbox: BBox, dbox: BBox} {\n      const nbox = this.childNodes[0].getOuterBBox();\n      const dbox = this.childNodes[1].getOuterBBox();\n      const tex = this.font.params;\n      //\n      //  Initial offsets (u, v)\n      //  Minimum separation (p)\n      //  Actual separation with initial positions (q)\n      //\n      let [u, v] = (display ? [tex.num1, tex.denom1] : [tex.num3, tex.denom2]);\n      let p = (display ? 7 : 3) * tex.rule_thickness;\n      let q = (u - nbox.d * nbox.scale) - (dbox.h * dbox.scale - v);\n      //\n      //  If actual separation is less than minimum, move them farther apart\n      //\n      if (q < p) {\n        u += (p - q) / 2;\n        v += (p - q) / 2;\n        q = p;\n      }\n      return {u, v, q, nbox, dbox};\n    }\n\n    /************************************************/\n\n    /**\n     * @param {BBox} bbox        The boundng box to modify\n     * @param {boolean} display  True for display-mode fractions\n     */\n    public getBevelledBBox(bbox: BBox, display: boolean) {\n      const {u, v, delta, nbox, dbox} = this.getBevelData(display);\n      const lbox = this.bevel.getOuterBBox();\n      bbox.combine(nbox, 0, u);\n      bbox.combine(lbox, bbox.w - delta / 2, 0);\n      bbox.combine(dbox, bbox.w - delta / 2, v);\n    }\n\n    /**\n     * @param {boolean} display  True for display-style fractions\n     * @return {Object}          The height (H) of the bevel, horizontal offest (delta)\n     *                             vertical offsets (u and v) of the parts, and\n     *                             bounding boxes of the parts.\n     */\n    public getBevelData(display: boolean): {\n      H: number, delta: number, u: number, v: number, nbox: BBox, dbox: BBox\n    } {\n      const nbox = this.childNodes[0].getOuterBBox();\n      const dbox = this.childNodes[1].getOuterBBox();\n      const delta = (display ? .4 : .15);\n      const H = Math.max(nbox.scale * (nbox.h + nbox.d), dbox.scale * (dbox.h + dbox.d)) + 2 * delta;\n      const a = this.font.params.axis_height;\n      const u = nbox.scale * (nbox.d - nbox.h) / 2 + a + delta;\n      const v = dbox.scale * (dbox.d - dbox.h) / 2 + a - delta;\n      return {H, delta, u, v, nbox, dbox};\n    }\n\n    /************************************************/\n\n    /**\n     * @override\n     */\n    public canStretch(_direction: DIRECTION) {\n      return false;\n    }\n\n    /**\n     * @return {boolean}   True if in display mode, false otherwise\n     */\n    public isDisplay(): boolean {\n      const {displaystyle, scriptlevel} = this.node.attributes.getList('displaystyle', 'scriptlevel');\n      return displaystyle && scriptlevel === 0;\n    }\n\n    /**\n     * @override\n     */\n    public getWrapWidth(i: number) {\n      const attributes = this.node.attributes;\n      if (attributes.get('bevelled')) {\n        return this.childNodes[i].getOuterBBox().w;\n      }\n      const w = this.getBBox().w;\n      const thickness = this.length2em(attributes.get('linethickness'));\n      return w - (thickness ? .2 : 0) -  2 * this.pad;\n    }\n\n    /**\n     * @override\n     */\n    public getChildAlign(i: number) {\n      const attributes = this.node.attributes;\n      return (attributes.get('bevelled') ? 'left' : attributes.get(['numalign', 'denomalign'][i]) as string);\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMglyph wrapper mixin for the MmlMglyph object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {CommonTextNode} from './TextNode.js';\nimport {TextNode} from '../../../core/MmlTree/MmlNode.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n/**\n * The CommonMglyph interface\n */\nexport interface CommonMglyph extends AnyWrapper {\n  /**\n   * The image's width converted to em's\n   */\n  width: number;\n  /**\n   * The image's height converted to em's\n   */\n  height: number;\n  /*\n   * The image's valign values converted to em's\n   */\n  valign: number;\n\n  /**\n   * TextNode used for deprecated fontfamily/index use case\n   */\n  charWrapper: CommonTextNode;\n\n  /**\n   * Obtain the width, height, and valign.\n   * Note:  Currently, the width and height must be specified explicitly, or they default to 1em\n   *   Since loading the image may be asynchronous, it would require a restart.\n   *   A future extension could implement this either by subclassing this object, or\n   *   perhaps as a post-filter on the MathML input jax that adds the needed dimensions\n   */\n  getParameters(): void;\n}\n\n/**\n * Shorthand for the CommonMglyph constructor\n */\nexport type MglyphConstructor = Constructor<CommonMglyph>;\n\n/*****************************************************************/\n/**\n * The CommonMglyph wrapper mixin for the MmlMglyph object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMglyphMixin<T extends WrapperConstructor>(Base: T): MglyphConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public width: number;\n    /**\n     * @override\n     */\n    public height: number;\n    /**\n     * @override\n     */\n    public valign: number;\n\n    /**\n     * @override\n     */\n    public charWrapper: CommonTextNode;\n\n    /**\n     * @override\n     * @constructor\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.getParameters();\n    }\n\n    /**\n     * @override\n     */\n    public getParameters() {\n      const {width, height, valign, src, index} =\n        this.node.attributes.getList('width', 'height', 'valign', 'src', 'index');\n      if (src) {\n        this.width = (width === 'auto' ? 1 : this.length2em(width));\n        this.height = (height === 'auto' ? 1 : this.length2em(height));\n        this.valign = this.length2em(valign || '0');\n      } else {\n        const text = String.fromCodePoint(parseInt(index as string));\n        const mmlFactory = this.node.factory;\n        this.charWrapper = this.wrap((mmlFactory.create('text') as TextNode).setText(text));\n        this.charWrapper.parent = this as any as AnyWrapper;\n      }\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, _recompute: boolean = false) {\n      if (this.charWrapper) {\n        bbox.updateFrom(this.charWrapper.getBBox());\n      } else {\n        bbox.w = this.width;\n        bbox.h = this.height + this.valign;\n        bbox.d = -this.valign;\n      }\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMi wrapper mixin for the MmlMi object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n/**\n * The CommonMi interface\n */\nexport interface CommonMi extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonMi constructor\n */\nexport type MiConstructor = Constructor<CommonMi>;\n\n/*****************************************************************/\n/**\n *  The CommonMi wrapper mixin for the MmlMi object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMiMixin<T extends WrapperConstructor>(Base: T): MiConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, _recompute: boolean = false) {\n      super.computeBBox(bbox);\n      this.copySkewIC(bbox);\n    }\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMmultiscripts wrapper mixin for the MmlMmultiscripts object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, Constructor} from '../Wrapper.js';\nimport {CommonMsubsup, MsubsupConstructor} from './msubsup.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n\n/**\n * The data about the scripts and base\n */\nexport type ScriptData = {\n  base: BBox;\n  sub: BBox;   // combined bbox for all subscripts\n  sup: BBox;   // combined bbox for all superscripts\n  psub: BBox;  // combined bbox for all presubscripts\n  psup: BBox;  // combined bbox for all presuperscripts\n  numPrescripts: number;\n  numScripts: number;\n};\nexport type ScriptDataName = keyof ScriptData;\n\n/**\n * The lists of all the individual script bboxes\n */\nexport type ScriptLists = {\n  base: BBox[];\n  subList: BBox[];\n  supList: BBox[];\n  psubList: BBox[];\n  psupList: BBox[];\n};\nexport type ScriptListName = keyof ScriptLists;\n\n/**\n * The type of script that follows the given type\n */\nexport const NextScript: {[key: string]: ScriptListName} = {\n  base: 'subList',\n  subList: 'supList',\n  supList: 'subList',\n  psubList: 'psupList',\n  psupList: 'psubList',\n};\n\n/**\n * The names of the scripts (for looping)\n */\nexport const ScriptNames = ['sup', 'sup', 'psup', 'psub'] as ScriptDataName[];\n\n/*****************************************************************/\n/**\n * The CommonMmultiscripts interface\n *\n * @template W  The child-node Wrapper class\n */\nexport interface CommonMmultiscripts<W extends AnyWrapper> extends CommonMsubsup<W> {\n\n  /**\n   *  The cached data for the various bounding boxes\n   */\n  scriptData: ScriptData;\n\n  /**\n   *  The index of the child following the <mprescripts/> tag\n   */\n  firstPrescript: number;\n\n  /**\n   * @param {BBox} pre   The prescript bounding box\n   * @param {BBox} post  The postcript bounding box\n   * @return {BBox}      The combined bounding box\n   */\n  combinePrePost(pre: BBox, post: BBox): BBox;\n\n  /**\n   * Compute the bounding box information about all the scripts\n   */\n  getScriptData(): void;\n\n  /**\n   * @return {ScriptLists}  The bounding boxes for all the scripts divided into lists by position\n   */\n  getScriptBBoxLists(): ScriptLists;\n\n  /**\n   * Pad the second list, if it is one short\n   *\n   * @param {BBox[]} list1   The first list\n   * @param {BBox[]} list2   The second list\n   */\n  padLists(list1: BBox[], list2: BBox[]): void;\n\n  /**\n   * @param {BBox} bbox1    The bbox for the combined subscripts\n   * @param {BBox} bbox2    The bbox for the combined superscripts\n   * @param {BBox[]} list1  The list of subscripts to combine\n   * @param {BBox[]} list2  The list of superscripts to combine\n   */\n  combineBBoxLists(bbox1: BBox, bbox2: BBox, list1: BBox[], list2: BBox[]): void;\n\n  /**\n   * @param {BBox} bbox  The bounding box from which to get the (scaled) width, height, and depth\n   */\n  getScaledWHD(bbox: BBox): void;\n\n}\n\n/**\n * Shorthand for the CommonMmultiscripts constructor\n *\n * @template W  The child-node Wrapper class\n */\nexport type MmultiscriptsConstructor<W extends AnyWrapper> = Constructor<CommonMmultiscripts<W>>;\n\n/*****************************************************************/\n/**\n * The CommonMmultiscripts wrapper mixin for the MmlMmultiscripts object\n *\n * @template W  The child-node Wrapper class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMmultiscriptsMixin<\n  W extends AnyWrapper,\n  T extends MsubsupConstructor<W>\n>(Base: T): MmultiscriptsConstructor<W> & T {\n\n  return class extends Base {\n\n    /**\n     *  The cached data for the various bounding boxes\n     */\n    public scriptData: ScriptData = null;\n\n    /**\n     *  The index of the child following the <mprescripts/> tag\n     */\n    public firstPrescript = 0;\n\n    /**\n     * @override\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.getScriptData();\n    }\n\n    /*************************************************************/\n\n    /**\n     * @param {BBox} pre   The prescript bounding box\n     * @param {BBox} post  The postcript bounding box\n     * @return {BBox}      The combined bounding box\n     */\n    public combinePrePost(pre: BBox, post: BBox): BBox {\n      const bbox = new BBox(pre);\n      bbox.combine(post, 0, 0);\n      return bbox;\n    }\n\n    /*************************************************************/\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      //\n      // Get the bounding boxes, and combine the pre- and post-scripts\n      //  to get a common offset for both\n      //\n      const scriptspace = this.font.params.scriptspace;\n      const data = this.scriptData;\n      const sub = this.combinePrePost(data.sub, data.psub);\n      const sup = this.combinePrePost(data.sup, data.psup);\n      const [u, v] = this.getUVQ(sub, sup);\n      //\n      //  Lay out the pre-scripts, then the base, then the post-scripts\n      //\n      bbox.empty();\n      if (data.numPrescripts) {\n        bbox.combine(data.psup, scriptspace, u);\n        bbox.combine(data.psub, scriptspace, v);\n      }\n      bbox.append(data.base);\n      if (data.numScripts) {\n        const w = bbox.w;\n        bbox.combine(data.sup, w, u);\n        bbox.combine(data.sub, w, v);\n        bbox.w += scriptspace;\n      }\n      bbox.clean();\n      this.setChildPWidths(recompute);\n    }\n\n    /**\n     * Compute the bounding box information about all the scripts\n     */\n    public getScriptData() {\n      //\n      //  Initialize the bounding box data\n      //\n      const data: ScriptData = this.scriptData = {\n        base: null, sub: BBox.empty(), sup: BBox.empty(), psub: BBox.empty(), psup: BBox.empty(),\n        numPrescripts: 0, numScripts: 0\n      };\n      //\n      //  Get the bboxes for all the scripts and combine them into the scriptData\n      //\n      const lists = this.getScriptBBoxLists();\n      this.combineBBoxLists(data.sub, data.sup, lists.subList, lists.supList);\n      this.combineBBoxLists(data.psub, data.psup, lists.psubList, lists.psupList);\n      data.base = lists.base[0];\n      //\n      //  Save the lengths and return the data\n      //\n      data.numPrescripts = lists.psubList.length;\n      data.numScripts = lists.subList.length;\n    }\n\n    /**\n     * @return {ScriptLists}  The bounding boxes for all the scripts divided into lists by position\n     */\n    public getScriptBBoxLists(): ScriptLists {\n      const lists: ScriptLists = {\n        base: [], subList: [], supList: [], psubList: [], psupList: []\n      };\n      //\n      // The first entry is the base, and then they altername sub- and superscripts.\n      // Once we find the <mprescripts/> element, switch to presub- and presuperscript lists.\n      //\n      let script: ScriptListName = 'base';\n      for (const child of this.childNodes) {\n        if (child.node.isKind('mprescripts')) {\n          script = 'psubList';\n        } else {\n          lists[script].push(child.getOuterBBox());\n          script = NextScript[script];\n        }\n      }\n      //\n      //  The index of the first prescript (skip over base, sub- and superscripts, and mprescripts)\n      //\n      this.firstPrescript = lists.subList.length + lists.supList.length + 2;\n      //\n      //  Make sure the lists are the same length\n      //\n      this.padLists(lists.subList, lists.supList);\n      this.padLists(lists.psubList, lists.psupList);\n      return lists;\n    }\n\n    /**\n     * Pad the second list, if it is one short\n     *\n     * @param {BBox[]} list1   The first list\n     * @param {BBox[]} list2   The second list\n     */\n    public padLists(list1: BBox[], list2: BBox[]) {\n      if (list1.length > list2.length) {\n        list2.push(BBox.empty());\n      }\n    }\n\n    /**\n     * @param {BBox} bbox1    The bbox for the combined subscripts\n     * @param {BBox} bbox2    The bbox for the combined superscripts\n     * @param {BBox[]} list1  The list of subscripts to combine\n     * @param {BBox[]} list2  The list of superscripts to combine\n     */\n    public combineBBoxLists(bbox1: BBox, bbox2: BBox, list1: BBox[], list2: BBox[]) {\n      for (let i = 0; i < list1.length; i++) {\n        const [w1, h1, d1] = this.getScaledWHD(list1[i]);\n        const [w2, h2, d2] = this.getScaledWHD(list2[i]);\n        const w = Math.max(w1, w2);\n        bbox1.w += w;\n        bbox2.w += w;\n        if (h1 > bbox1.h) bbox1.h = h1;\n        if (d1 > bbox1.d) bbox1.d = d1;\n        if (h2 > bbox2.h) bbox2.h = h2;\n        if (d2 > bbox2.d) bbox2.d = d2;\n      }\n    }\n\n    /**\n     * @param {BBox} bbox  The bounding box from which to get the (scaled) width, height, and depth\n     */\n    public getScaledWHD(bbox: BBox) {\n      const {w, h, d, rscale} = bbox;\n      return [w * rscale, h * rscale, d * rscale];\n    }\n\n    /*************************************************************/\n\n    /**\n     * @override\n     */\n    public getUVQ(subbox: BBox, supbox: BBox) {\n      if (!this.UVQ) {\n        let [u, v, q] = [0, 0, 0];\n        if (subbox.h === 0 && subbox.d === 0) {\n          //\n          //  Use placement for superscript only\n          //\n          u = this.getU();\n        } else if (supbox.h === 0 && supbox.d === 0) {\n          //\n          //  Use placement for subsccript only\n          //\n          u = -this.getV();\n        } else {\n          //\n          //  Use placement for both\n          //\n          [u, v, q] = super.getUVQ(subbox, supbox);\n        }\n        this.UVQ = [u, v, q];\n      }\n      return this.UVQ;\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMn wrapper mixin for the MmlMn object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\n\n/*****************************************************************/\n/**\n * The CommonMn interface\n */\nexport interface CommonMn extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonMn constructor\n */\nexport type MnConstructor = Constructor<CommonMn>;\n\n/*****************************************************************/\n/**\n * The CommonMn wrapper mixin for the MmlMn object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMnMixin<T extends WrapperConstructor>(Base: T): MnConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public remapChars(chars: number[]) {\n      //\n      //  Convert a leading hyphen to a minus\n      //\n      if (chars.length) {\n        const text = this.font.getRemappedChar('mn', chars[0]);\n        if (text) {\n          const c = this.unicodeChars(text, this.variant);\n          if (c.length === 1) {\n            chars[0] = c[0];\n          } else {\n            chars = c.concat(chars.slice(1));\n          }\n        }\n      }\n      return chars;\n    }\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMo wrapper mixin for the MmlMo object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {MmlMo} from '../../../core/MmlTree/MmlNodes/mo.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {unicodeChars} from '../../../util/string.js';\nimport {DelimiterData} from '../FontData.js';\nimport {DIRECTION, NOSTRETCH} from '../FontData.js';\n\n/*****************************************************************/\n/**\n * Convert direction to letter\n */\nexport const DirectionVH: {[n: number]: string} = {\n  [DIRECTION.Vertical]: 'v',\n  [DIRECTION.Horizontal]: 'h'\n};\n\n/*****************************************************************/\n/**\n * The CommonMo interface\n */\nexport interface CommonMo extends AnyWrapper {\n\n  /**\n   * The font size that a stretched operator uses.\n   * If -1, then stretch arbitrarily, and bbox gives the actual height, depth, width\n   */\n  size: number;\n\n  /**\n   * True if used as an accent in an munderover construct\n   */\n  isAccent: boolean;\n\n  /**\n   * Get the (unmodified) bbox of the contents (before centering or setting accents to width 0)\n   *\n   * @param {BBox} bbox   The bbox to fill\n   */\n  protoBBox(bbox: BBox): void;\n\n  /**\n   * @return {number}    Offset to the left by half the actual width of the accent\n   */\n  getAccentOffset(): number;\n\n  /**\n   * @param {BBox} bbox   The bbox to center, or null to compute the bbox\n   * @return {number}     The offset to move the glyph to center it\n   */\n  getCenterOffset(bbox?: BBox): number;\n\n  /**\n   * Determint variant for vertically/horizontally stretched character\n   *\n   * @param {number[]} WH  size to stretch to, either [W] or [H, D]\n   * @param {boolean} exact  True if not allowed to use delimiter factor and shortfall\n   */\n  getStretchedVariant(WH: number[], exact?: boolean): void;\n\n  /**\n   * @param {string} name   The name of the attribute to get\n   * @param {number} value  The default value to use\n   * @return {number}       The size in em's of the attribute (or the default value)\n   */\n  getSize(name: string, value: number): number;\n\n  /**\n   * @param {number[]} WH  Either [W] for width, [H, D] for height and depth, or [] for min/max size\n   * @return {number}      Either the width or the total height of the character\n   */\n  getWH(WH: number[]): number;\n\n  /**\n   * @param {number[]} WHD     The [W] or [H, D] being requested from the parent mrow\n   * @param {number} D         The full dimension (including symmetry, etc)\n   * @param {DelimiterData} C  The delimiter data for the stretchy character\n   */\n  getStretchBBox(WHD: number[], D: number, C: DelimiterData): void;\n\n  /**\n   * @param {number[]} WHD     The [H, D] being requested from the parent mrow\n   * @param {number} HD        The full height (including symmetry, etc)\n   * @param {DelimiterData} C  The delimiter data for the stretchy character\n   * @return {number[]}        The height and depth for the vertically stretched delimiter\n   */\n  getBaseline(WHD: number[], HD: number, C: DelimiterData): number[];\n\n  /**\n   * Determine the size of the delimiter based on whether full extenders should be used or not.\n   *\n   * @param {number} D          The requested size of the delimiter\n   * @param {DelimiterData} C   The data for the delimiter\n   * @return {number}           The final size of the assembly\n   */\n  checkExtendedHeight(D: number, C: DelimiterData): number;\n\n}\n\n/**\n * Shorthand for the CommonMo constructor\n */\nexport type MoConstructor = Constructor<CommonMo>;\n\n/*****************************************************************/\n/**\n * The CommomMo wrapper mixin for the MmlMo object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMoMixin<T extends WrapperConstructor>(Base: T): MoConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * The font size that a stretched operator uses.\n     * If -1, then stretch arbitrarily, and bbox gives the actual height, depth, width\n     */\n    public size: number = null;\n\n    /**\n     * True if used as an accent in an munderover construct\n     */\n    public isAccent: boolean;\n\n    /**\n     * @override\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.isAccent = (this.node as MmlMo).isAccent;\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, _recompute: boolean = false) {\n      this.protoBBox(bbox);\n      if (this.node.attributes.get('symmetric') &&\n          this.stretch.dir !== DIRECTION.Horizontal) {\n        const d = this.getCenterOffset(bbox);\n        bbox.h += d;\n        bbox.d -= d;\n      }\n      if (this.node.getProperty('mathaccent') &&\n          (this.stretch.dir === DIRECTION.None || this.size >= 0)) {\n        bbox.w = 0;\n      }\n    }\n\n    /**\n     * Get the (unmodified) bbox of the contents (before centering or setting accents to width 0)\n     *\n     * @param {BBox} bbox   The bbox to fill\n     */\n    public protoBBox(bbox: BBox) {\n      const stretchy = (this.stretch.dir !== DIRECTION.None);\n      if (stretchy && this.size === null) {\n        this.getStretchedVariant([0]);\n      }\n      if (stretchy && this.size < 0) return;\n      super.computeBBox(bbox);\n      this.copySkewIC(bbox);\n    }\n\n    /**\n     * @return {number}    Offset to the left by half the actual width of the accent\n     */\n    public getAccentOffset(): number {\n      const bbox = BBox.empty();\n      this.protoBBox(bbox);\n      return -bbox.w / 2;\n    }\n\n    /**\n     * @param {BBox} bbox   The bbox to center, or null to compute the bbox\n     * @return {number}     The offset to move the glyph to center it\n     */\n    public getCenterOffset(bbox: BBox = null): number {\n      if (!bbox) {\n        bbox = BBox.empty();\n        super.computeBBox(bbox);\n      }\n      return ((bbox.h + bbox.d) / 2 + this.font.params.axis_height) - bbox.h;\n    }\n\n    /**\n     * @override\n     */\n    public getVariant() {\n      if (this.node.attributes.get('largeop')) {\n        this.variant = (this.node.attributes.get('displaystyle') ? '-largeop' : '-smallop');\n        return;\n      }\n      if (!this.node.attributes.getExplicit('mathvariant') &&\n          this.node.getProperty('pseudoscript') === false) {\n        this.variant = '-tex-variant';\n        return;\n      }\n      super.getVariant();\n    }\n\n    /**\n     * @override\n     */\n    public canStretch(direction: DIRECTION) {\n      if (this.stretch.dir !== DIRECTION.None) {\n        return this.stretch.dir === direction;\n      }\n      const attributes = this.node.attributes;\n      if (!attributes.get('stretchy')) return false;\n      const c = this.getText();\n      if (Array.from(c).length !== 1) return false;\n      const delim = this.font.getDelimiter(c.codePointAt(0));\n      this.stretch = (delim && delim.dir === direction ? delim : NOSTRETCH);\n      return this.stretch.dir !== DIRECTION.None;\n    }\n\n    /**\n     * Determint variant for vertically/horizontally stretched character\n     *\n     * @param {number[]} WH  size to stretch to, either [W] or [H, D]\n     * @param {boolean} exact  True if not allowed to use delimiter factor and shortfall\n     */\n    public getStretchedVariant(WH: number[], exact: boolean = false) {\n      if (this.stretch.dir !== DIRECTION.None) {\n        let D = this.getWH(WH);\n        const min = this.getSize('minsize', 0);\n        const max = this.getSize('maxsize', Infinity);\n        const mathaccent = this.node.getProperty('mathaccent');\n        //\n        //  Clamp the dimension to the max and min\n        //  then get the target size via TeX rules\n        //\n        D = Math.max(min, Math.min(max, D));\n        const df = this.font.params.delimiterfactor / 1000;\n        const ds = this.font.params.delimitershortfall;\n        const m = (min || exact ? D : mathaccent ? Math.min(D / df, D + ds) :  Math.max(D * df, D - ds));\n        //\n        //  Look through the delimiter sizes for one that matches\n        //\n        const delim = this.stretch;\n        const c = delim.c || this.getText().codePointAt(0);\n        let i = 0;\n        if (delim.sizes) {\n          for (const d of delim.sizes) {\n            if (d >= m) {\n              if (mathaccent && i) {\n                i--;\n              }\n              this.variant = this.font.getSizeVariant(c, i);\n              this.size = i;\n              if (delim.schar && delim.schar[i]) {\n                this.stretch = {...this.stretch, c: delim.schar[i]};\n              }\n              return;\n            }\n            i++;\n          }\n        }\n        //\n        //  No size matches, so if we can make multi-character delimiters,\n        //  record the data for that, otherwise, use the largest fixed size.\n        //\n        if (delim.stretch) {\n          this.size = -1;\n          this.invalidateBBox();\n          this.getStretchBBox(WH, this.checkExtendedHeight(D, delim), delim);\n        } else {\n          this.variant = this.font.getSizeVariant(c, i - 1);\n          this.size = i - 1;\n        }\n      }\n    }\n\n    /**\n     * @param {string} name   The name of the attribute to get\n     * @param {number} value  The default value to use\n     * @return {number}       The size in em's of the attribute (or the default value)\n     */\n    public getSize(name: string, value: number): number {\n      let attributes = this.node.attributes;\n      if (attributes.isSet(name)) {\n        value = this.length2em(attributes.get(name), 1, 1); // FIXME: should use height of actual character\n      }\n      return value;\n    }\n\n    /**\n     * @param {number[]} WH  Either [W] for width, [H, D] for height and depth, or [] for min/max size\n     * @return {number}      Either the width or the total height of the character\n     */\n    public getWH(WH: number[]): number {\n      if (WH.length === 0) return 0;\n      if (WH.length === 1) return WH[0];\n      let [H, D] = WH;\n      const a = this.font.params.axis_height;\n      return (this.node.attributes.get('symmetric') ? 2 * Math.max(H - a, D + a) : H + D);\n    }\n\n    /**\n     * @param {number[]} WHD     The [W] or [H, D] being requested from the parent mrow\n     * @param {number} D         The full dimension (including symmetry, etc)\n     * @param {DelimiterData} C  The delimiter data for the stretchy character\n     */\n    public getStretchBBox(WHD: number[], D: number, C: DelimiterData) {\n      if (C.hasOwnProperty('min') && C.min > D) {\n        D = C.min;\n      }\n      let [h, d, w] = C.HDW;\n      if (this.stretch.dir === DIRECTION.Vertical) {\n        [h, d] = this.getBaseline(WHD, D, C);\n      } else {\n        w = D;\n      }\n      this.bbox.h = h;\n      this.bbox.d = d;\n      this.bbox.w = w;\n    }\n\n    /**\n     * @param {number[]} WHD     The [H, D] being requested from the parent mrow\n     * @param {number} HD        The full height (including symmetry, etc)\n     * @param {DelimiterData} C  The delimiter data for the stretchy character\n     * @return {[number, number]}        The height and depth for the vertically stretched delimiter\n     */\n    public getBaseline(WHD: number[], HD: number, C: DelimiterData): [number, number] {\n      const hasWHD = (WHD.length === 2 && WHD[0] + WHD[1] === HD);\n      const symmetric = this.node.attributes.get('symmetric');\n      const [H, D] = (hasWHD ? WHD : [HD, 0]);\n      let [h, d] = [H + D, 0];\n      if (symmetric) {\n        //\n        //  Center on the math axis\n        //\n        const a = this.font.params.axis_height;\n        if (hasWHD) {\n          h = 2 * Math.max(H - a, D + a);\n        }\n        d = h / 2 - a;\n      } else if (hasWHD) {\n        //\n        //  Use the given depth (from mrow)\n        //\n        d = D;\n      } else {\n        //\n        //  Use depth proportional to the normal-size character\n        //  (when stretching for minsize or maxsize by itself)\n        //\n        let [ch, cd] = (C.HDW || [.75, .25]);\n        d = cd * (h / (ch + cd));\n      }\n      return [h - d, d];\n    }\n\n    /**\n     * @override\n     */\n    public checkExtendedHeight(D: number, C: DelimiterData): number {\n      if (C.fullExt) {\n        const [extSize, endSize] = C.fullExt;\n        const n = Math.ceil(Math.max(0, D - endSize) / extSize);\n        D = endSize + n * extSize;\n      }\n      return D;\n    }\n\n    /**\n     * @override\n     */\n    public remapChars(chars: number[]) {\n      const primes = this.node.getProperty('primes') as string;\n      if (primes) {\n        return unicodeChars(primes);\n      }\n      if (chars.length === 1) {\n        const parent = (this.node as MmlMo).coreParent().parent;\n        const isAccent = this.isAccent && !parent.isKind('mrow');\n        const map = (isAccent ? 'accent' : 'mo');\n        const text = this.font.getRemappedChar(map, chars[0]);\n        if (text) {\n          chars = this.unicodeChars(text, this.variant);\n        }\n      }\n      return chars;\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMpadded wrapper mixin for the MmlMpadded object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {Property} from '../../../core/Tree/Node.js';\n\n/*****************************************************************/\n/**\n * The CommonMpadded interface\n */\nexport interface CommonMpadded extends AnyWrapper {\n  /**\n   * Get the content bounding box, and the change in size and offsets\n   *   as specified by the parameters\n   *\n   * @return {number[]}  The original height, depth, width, the changes in height, depth,\n   *                    and width, and the horizontal and vertical offsets of the content\n   */\n  getDimens(): number[];\n\n  /**\n   * Get a particular dimension, which can be relative to any of the BBox dimensions,\n   *   and can be an offset from the default size of the given dimension.\n   *\n   * @param {Property} length   The value to be converted to a length in ems\n   * @param {BBox} bbox         The bbox of the mpadded content\n   * @param {string=} d         The default dimension to use for relative sizes ('w', 'h', or 'd')\n   * @param {number=} m         The minimum value allowed for the dimension\n   * @return {number}           The final dimension in ems\n   */\n  dimen(length: Property, bbox: BBox, d?: string, m?: number): number;\n}\n\n/**\n * Shorthand for the CommonMpadded constructor\n */\nexport type MpaddedConstructor = Constructor<CommonMpadded>;\n\n/*****************************************************************/\n/**\n * The CommomMpadded wrapper for the MmlMpadded object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMpaddedMixin<T extends WrapperConstructor>(Base: T): MpaddedConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * Get the content bounding box, and the change in size and offsets\n     *   as specified by the parameters\n     *\n     * @return {number[]}  The original height, depth, width, the changes in height, depth,\n     *                    and width, and the horizontal and vertical offsets of the content\n     */\n    public getDimens(): number[] {\n      const values = this.node.attributes.getList('width', 'height', 'depth', 'lspace', 'voffset');\n      const bbox = this.childNodes[0].getBBox();  // get unmodified bbox of children\n      let {w, h, d} = bbox;\n      let W = w, H = h, D = d, x = 0, y = 0, dx = 0;\n      if (values.width !== '')   w = this.dimen(values.width, bbox, 'w', 0);\n      if (values.height !== '')  h = this.dimen(values.height, bbox, 'h', 0);\n      if (values.depth !== '')   d = this.dimen(values.depth, bbox, 'd', 0);\n      if (values.voffset !== '') y = this.dimen(values.voffset, bbox);\n      if (values.lspace !== '')  x = this.dimen(values.lspace, bbox);\n      const align = this.node.attributes.get('data-align') as string;\n      if (align) {\n        dx = this.getAlignX(w, bbox, align);\n      }\n      return [H, D, W, h - H, d - D, w - W, x, y, dx];\n    }\n\n    /**\n     * Get a particular dimension, which can be relative to any of the BBox dimensions,\n     *   and can be an offset from the default size of the given dimension.\n     *\n     * @param {Property} length   The value to be converted to a length in ems\n     * @param {BBox} bbox         The bbox of the mpadded content\n     * @param {string} d          The default dimension to use for relative sizes ('w', 'h', or 'd')\n     * @param {number} m          The minimum value allowed for the dimension\n     * @return {number}           The final dimension in ems\n     */\n    public dimen(length: Property, bbox: BBox, d: string = '', m: number = null): number {\n      length = String(length);\n      const match = length.match(/width|height|depth/);\n      const size = (match ? bbox[match[0].charAt(0) as (keyof BBox)] :\n                    (d ? bbox[d as (keyof BBox)] : 0)) as number;\n      let dimen = (this.length2em(length, size) || 0);\n      if (length.match(/^[-+]/) && d) {\n        dimen += size;\n      }\n      if (m != null) {\n        dimen = Math.max(m, dimen);\n      }\n      return dimen;\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      const [H, D, W, dh, dd, dw] = this.getDimens();\n      bbox.w = W + dw;\n      bbox.h = H + dh;\n      bbox.d = D + dd;\n      this.setChildPWidths(recompute, bbox.w);\n    }\n\n    /**\n     * @override\n     */\n    public getWrapWidth(_i: number) {\n      return this.getBBox().w;\n    }\n\n    /**\n     * @override\n     */\n    public getChildAlign(_i: number) {\n      return this.node.attributes.get('data-align') as string || 'left';\n    }\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMroot wrapper mixin for the MmlMroot object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {Constructor} from '../../common/Wrapper.js';\nimport {CommonMsqrt, MsqrtConstructor} from './msqrt.js';\nimport {CommonMo} from './mo.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n/**\n * The CommonMroot interface\n */\nexport interface CommonMroot extends CommonMsqrt {\n}\n\n/**\n * Shorthand for the CommonMroot constructor\n */\nexport type MrootConstructor = Constructor<CommonMroot>;\n\n/*****************************************************************/\n/**\n * The CommonMroot wrapper mixin for the MmlMroot object (extends CommonMsqrt)\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMrootMixin<T extends MsqrtConstructor>(Base: T): MrootConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    get surd() {\n      return 2;\n    }\n\n    /**\n     * @override\n     */\n    get root(): number {\n      return 1;\n    }\n\n    /**\n     * @override\n     */\n    public combineRootBBox(BBOX: BBox, sbox: BBox, H: number) {\n      const bbox = this.childNodes[this.root].getOuterBBox();\n      const h = this.getRootDimens(sbox, H)[1];\n      BBOX.combine(bbox, 0, h);\n    }\n\n    /**\n     * @override\n     */\n    public getRootDimens(sbox: BBox, H: number) {\n      const surd = this.childNodes[this.surd] as CommonMo;\n      const bbox = this.childNodes[this.root].getOuterBBox();\n      const offset = (surd.size < 0 ? .5 : .6) * sbox.w;\n      const {w, rscale} = bbox;\n      const W = Math.max(w, offset / rscale);\n      const dx = Math.max(0, W - w);\n      const h = this.rootHeight(bbox, sbox, surd.size, H);\n      const x = W * rscale - offset;\n      return [x, h, dx];\n    }\n\n    /**\n     * @param {BBox} rbox      The bbox of the root\n     * @param {BBox} sbox      The bbox of the surd\n     * @param {number} size    The size of the surd\n     * @param {number} H       The height of the root as a whole\n     * @return {number}        The height of the root within the surd\n     */\n    public rootHeight(rbox: BBox, sbox: BBox, size: number, H: number): number {\n      const h = sbox.h + sbox.d;\n      const b = (size < 0 ? 1.9 : .55 * h) - (h - H);\n      return b + Math.max(0, rbox.d * rbox.rscale);\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMrow wrapper minin for the MmlMrow object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMo} from './mo.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {DIRECTION} from '../FontData.js';\n\n/*****************************************************************/\n/**\n * The CommonMrow interface\n */\nexport interface CommonMrow extends AnyWrapper {\n  /**\n   * Handle vertical stretching of children to match height of\n   *  other nodes in the row.\n   */\n  stretchChildren(): void;\n}\n\n/**\n * Shorthand for the CommonMrow constructor\n */\nexport type MrowConstructor = Constructor<CommonMrow>;\n\n/*****************************************************************/\n/**\n * The CommonMrow wrapper mixin for the MmlMrow object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMrowMixin<T extends WrapperConstructor>(Base: T): MrowConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    get fixesPWidth() {\n      return false;\n    }\n\n    /**\n     * @override\n     * @constructor\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.stretchChildren();\n      for (const child of this.childNodes) {\n        if (child.bbox.pwidth) {\n          this.bbox.pwidth = BBox.fullWidth;\n          break;\n        }\n      }\n    }\n\n    /**\n     * Handle vertical stretching of children to match height of\n     *  other nodes in the row.\n     */\n    public stretchChildren() {\n      let stretchy: AnyWrapper[] = [];\n      //\n      //  Locate and count the stretchy children\n      //\n      for (const child of this.childNodes) {\n        if (child.canStretch(DIRECTION.Vertical)) {\n          stretchy.push(child);\n        }\n      }\n      let count = stretchy.length;\n      let nodeCount = this.childNodes.length;\n      if (count && nodeCount > 1) {\n        let H = 0, D = 0;\n        //\n        //  If all the children are stretchy, find the largest one,\n        //  otherwise, find the height and depth of the non-stretchy\n        //  children.\n        //\n        let all = (count > 1 && count === nodeCount);\n        for (const child of this.childNodes) {\n          const noStretch = (child.stretch.dir === DIRECTION.None);\n          if (all || noStretch) {\n            let {h, d, rscale} = child.getOuterBBox(noStretch);\n            h *= rscale;\n            d *= rscale;\n            if (h > H) H = h;\n            if (d > D) D = d;\n          }\n        }\n        //\n        //  Stretch the stretchable children\n        //\n        for (const child of stretchy) {\n          (child.coreMO() as CommonMo).getStretchedVariant([H, D]);\n        }\n      }\n    }\n\n  };\n}\n\n/*****************************************************************/\n/*****************************************************************/\n/**\n * The CommonInferredMrow interface\n */\nexport interface CommonInferredMrow extends CommonMrow {\n}\n\n/**\n * Shorthand for the CommonInferredMrow constructor\n */\nexport type InferredMrowConstructor = Constructor<CommonInferredMrow>;\n\n/*****************************************************************/\n/**\n * The CommonInferredMrow wrapper mixin for the MmlInferredMrow object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonInferredMrowMixin<T extends MrowConstructor>(Base: T): InferredMrowConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * Since inferred rows don't produce a container span, we can't\n     * set a font-size for it, so we inherit the parent scale\n     *\n     * @override\n     */\n    public getScale() {\n      this.bbox.scale = this.parent.bbox.scale;\n      this.bbox.rscale = 1;\n    }\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMs wrapper mixin for the MmlMs object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\n\n/*****************************************************************/\n/**\n * The CommonMs interface\n */\nexport interface CommonMs extends AnyWrapper {\n  /**\n   * Create a text wrapper with the given text;\n   *\n   * @param {string} text  The text for the wrapped element\n   * @return {CommonWrapper}   The wrapped text node\n   */\n  createText(text: string): AnyWrapper;\n}\n\n/**\n * Shorthand for the CommonMs constructor\n */\nexport type MsConstructor = Constructor<CommonMs>;\n\n/*****************************************************************/\n/**\n * The CommonMs wrapper mixin for the MmlMs object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMsMixin<T extends WrapperConstructor>(Base: T): MsConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * Add the quote characters to the wrapper children so they will be output\n     *\n     * @override\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      const attributes = this.node.attributes;\n      let quotes = attributes.getList('lquote', 'rquote');\n      if (this.variant !== 'monospace') {\n        if (!attributes.isSet('lquote') && quotes.lquote === '\"') quotes.lquote = '\\u201C';\n        if (!attributes.isSet('rquote') && quotes.rquote === '\"') quotes.rquote = '\\u201D';\n      }\n      this.childNodes.unshift(this.createText(quotes.lquote as string));\n      this.childNodes.push(this.createText(quotes.rquote as string));\n    }\n\n    /**\n     * Create a text wrapper with the given text;\n     *\n     * @param {string} text   The text for the wrapped element\n     * @return {AnyWrapper}   The wrapped text node\n     */\n    public createText(text: string): AnyWrapper {\n      const node = this.wrap(this.mmlText(text));\n      node.parent = this;\n      return node;\n    }\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMspace wrapper mixin for the MmlMspace object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n/**\n * The CommonMspance interface\n */\nexport interface CommonMspace extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonMspace constructor\n */\nexport type MspaceConstructor = Constructor<CommonMspace>;\n\n/*****************************************************************/\n/**\n * The CommonMspace wrapper mixin for the MmlMspace object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMspaceMixin<T extends WrapperConstructor>(Base: T): MspaceConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, _recompute: boolean = false) {\n      const attributes = this.node.attributes;\n      bbox.w = this.length2em(attributes.get('width'), 0);\n      bbox.h = this.length2em(attributes.get('height'), 0);\n      bbox.d = this.length2em(attributes.get('depth'), 0);\n    }\n\n    /**\n     * No contents, so no need for variant class\n     *\n     * @override\n     */\n    public handleVariant() {\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMsqrt wrapper for the MmlMsqrt object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMo} from './mo.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {DIRECTION} from '../FontData.js';\n\n/*****************************************************************/\n/**\n * The CommonMsqrt interface\n */\nexport interface CommonMsqrt extends AnyWrapper {\n  /**\n   * The index of the base of the root in childNodes\n   */\n  readonly base: number;\n\n  /**\n   * The index of the surd in childNodes\n   */\n  readonly surd: number;\n\n  /**\n   * The index of the root in childNodes (or null if none)\n   */\n  readonly root: number;\n\n  /**\n   * The requested height of the stretched surd character\n   */\n  surdH: number;\n\n  /**\n   * Combine the bounding box of the root (overridden in mroot)\n   *\n   * @param {BBox} bbox  The bounding box so far\n   * @param {BBox} sbox  The bounding box of the surd\n   * @param {number} H   The height of the root as a whole\n   */\n  combineRootBBox(bbox: BBox, sbox: BBox, H: number): void;\n\n  /**\n   * @param {BBox} sbox  The bounding box for the surd character\n   * @return {number[]}  The p, q, and x values for the TeX layout computations\n   */\n  getPQ(sbox: BBox): number[];\n\n  /**\n   * @param {BBox} sbox  The bounding box of the surd\n   * @param {number} H   The height of the root as a whole\n   * @return {number[]}  The x offset of the surd, and the height, x offset, and scale of the root\n   */\n  getRootDimens(sbox: BBox, H: Number): number[];\n\n}\n\n/**\n * Shorthand for the CommonMsqrt constructor\n */\nexport type MsqrtConstructor = Constructor<CommonMsqrt>;\n\n/*****************************************************************/\n/**\n * The CommonMsqrt wrapper mixin for the MmlMsqrt object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMsqrtMixin<T extends WrapperConstructor>(Base: T): MsqrtConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @return {number}  The index of the base of the root in childNodes\n     */\n    get base(): number {\n      return 0;\n    }\n\n    /**\n     * @return {number}  The index of the surd in childNodes\n     */\n    get surd(): number {\n      return 1;\n    }\n\n    /**\n     * @return {number}  The index of the root in childNodes (or null if none)\n     */\n    get root(): number {\n      return null;\n    }\n\n    /**\n     * The requested height of the stretched surd character\n     */\n    public surdH: number;\n\n    /**\n     * Add the surd character so we can display it later\n     *\n     * @override\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      const surd = this.createMo('\\u221A');\n      surd.canStretch(DIRECTION.Vertical);\n      const {h, d} = this.childNodes[this.base].getOuterBBox();\n      const t = this.font.params.rule_thickness;\n      const p = (this.node.attributes.get('displaystyle') ? this.font.params.x_height : t);\n      this.surdH = h + d + 2 * t + p / 4;\n      (surd as CommonMo).getStretchedVariant([this.surdH - d, d], true);\n    }\n\n    /**\n     * @override\n     */\n    public createMo(text: string) {\n      const node = super.createMo(text);\n      this.childNodes.push(node);\n      return node;\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      const surdbox = this.childNodes[this.surd].getBBox();\n      const basebox = new BBox(this.childNodes[this.base].getOuterBBox());\n      const q = this.getPQ(surdbox)[1];\n      const t = this.font.params.rule_thickness;\n      const H = basebox.h + q + t;\n      const [x] = this.getRootDimens(surdbox, H);\n      bbox.h = H + t;\n      this.combineRootBBox(bbox, surdbox, H);\n      bbox.combine(surdbox, x, H - surdbox.h);\n      bbox.combine(basebox, x + surdbox.w, 0);\n      bbox.clean();\n      this.setChildPWidths(recompute);\n    }\n\n    /**\n     * Combine the bounding box of the root (overridden in mroot)\n     *\n     * @param {BBox} bbox  The bounding box so far\n     * @param {BBox} sbox  The bounding box of the surd\n     * @param {number} H   The height of the root as a whole\n     */\n    public combineRootBBox(_bbox: BBox, _sbox: BBox, _H: number) {\n    }\n\n    /**\n     * @param {BBox} sbox  The bounding box for the surd character\n     * @return {[number, number]}  The p, q, and x values for the TeX layout computations\n     */\n    public getPQ(sbox: BBox): [number, number] {\n      const t = this.font.params.rule_thickness;\n      const p = (this.node.attributes.get('displaystyle') ? this.font.params.x_height : t);\n      const q = (sbox.h + sbox.d > this.surdH ?\n                 ((sbox.h + sbox.d) - (this.surdH - 2 * t - p / 2)) / 2 :\n                 t + p / 4);\n      return [p, q];\n    }\n\n    /**\n     * @param {BBox} sbox  The bounding box of the surd\n     * @param {number} H   The height of the root as a whole\n     * @return {[number, number, number, number]} The x offset of the surd, and\n     *     the height, x offset, and scale of the root\n     */\n    public getRootDimens(_sbox: BBox, _H: number): [number, number, number, number] {\n      return [0, 0, 0, 0];\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMsubsup wrapper mixin for the MmlMsubsup object\n *                and the special cases CommonMsub and CommonMsup\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, Constructor} from '../Wrapper.js';\nimport {CommonScriptbase, ScriptbaseConstructor} from './scriptbase.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {MmlMsubsup, MmlMsub, MmlMsup} from '../../../core/MmlTree/MmlNodes/msubsup.js';\n\n/*****************************************************************/\n/**\n * The CommonMsub interface\n *\n * @template W  The child-node Wrapper class\n */\nexport interface CommonMsub<W extends AnyWrapper> extends CommonScriptbase<W> {\n}\n\n/**\n * Shorthand for the CommonMsub constructor\n *\n * @template W  The child-node Wrapper class\n */\nexport type MsubConstructor<W extends AnyWrapper> = Constructor<CommonMsub<W>>;\n\n/*****************************************************************/\n/**\n * The CommonMsub wrapper mixin for the MmlMsub object\n *\n * @template W  The child-node Wrapper class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMsubMixin<\n  W extends AnyWrapper,\n  T extends ScriptbaseConstructor<W>\n>(Base: T): MsubConstructor<W> & T {\n\n  return class extends Base {\n\n    /**\n     * Do not include italic correction\n     */\n    public static useIC: boolean = false;\n\n    /**\n     * @override\n     */\n    public get scriptChild() {\n      return this.childNodes[(this.node as MmlMsub).sub];\n    }\n\n    /**\n     * Get the shift for the subscript\n     *\n     * @override\n     */\n    public getOffset() {\n      return [0, -this.getV()];\n    }\n\n  };\n\n}\n\n/*****************************************************************/\n/**\n * The CommonMsup interface\n *\n * @template W  The child-node Wrapper class\n */\nexport interface CommonMsup<W extends AnyWrapper> extends CommonScriptbase<W> {\n}\n\n/**\n * Shorthand for the CommonMsup constructor\n *\n * @template W  The child-node Wrapper class\n */\nexport type MsupConstructor<W extends AnyWrapper> = Constructor<CommonMsup<W>>;\n\n/*****************************************************************/\n/**\n * The CommonMsup wrapper mixin for the MmlMsup object\n *\n * @template W  The child-node Wrapper class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMsupMixin<\n  W extends AnyWrapper,\n  T extends ScriptbaseConstructor<W>\n>(Base: T): MsupConstructor<W> & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public get scriptChild() {\n      return this.childNodes[(this.node as MmlMsup).sup];\n    }\n\n    /**\n     * Get the shift for the superscript\n     *\n     * @override\n     */\n    public getOffset() {\n      const x = this.getAdjustedIc() - (this.baseRemoveIc ? 0 : this.baseIc);\n      return [x, this.getU()];\n    }\n\n  };\n\n}\n\n/*****************************************************************/\n/**\n * The CommonMsubsup interface\n *\n * @template W  The child-node Wrapper class\n */\nexport interface CommonMsubsup<W extends AnyWrapper> extends CommonScriptbase<W> {\n\n  /**\n   *  Cached values for the script offsets and separation (so if they are\n   *  computed in computeBBox(), they don't have to be recomputed during output)\n   */\n  UVQ: number[];\n\n  /**\n   * The wrapper for the subscript\n   */\n  readonly subChild: W;\n\n  /**\n   * The wrapper for the superscript\n   */\n  readonly supChild: W;\n\n  /**\n   * Get the shift for the scripts and their separation (TeXBook Appendix G 18adef)\n   *\n   * @param {BBox} subbox     The bounding box of the superscript\n   * @param {BBox} supbox     The bounding box of the subscript\n   * @return {number[]}       The vertical offsets for super and subscripts, and the space between them\n   */\n  getUVQ(subbox?: BBox, supbox?: BBox): number[];\n}\n\n/**\n * Shorthand for the CommonMsubsup constructor\n *\n * @template W  The child-node Wrapper class\n */\nexport type MsubsupConstructor<W extends AnyWrapper> = Constructor<CommonMsubsup<W>>;\n\n/*****************************************************************/\n/**\n * The CommomMsubsup wrapper for the MmlMsubsup object\n *\n * @template W  The child-node Wrapper class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMsubsupMixin<\n  W extends AnyWrapper,\n  T extends ScriptbaseConstructor<W>\n>(Base: T): MsubsupConstructor<W> & T {\n\n  return class extends Base {\n\n    /**\n     * Do not include italic correction\n     */\n    public static useIC: boolean = false;\n\n    /**\n     *  Cached values for the script offsets and separation (so if they are\n     *  computed in computeBBox(), they don't have to be recomputed during output)\n     */\n    public UVQ: number[] = null;\n\n    /**\n     * @return {W}  The wrapper for the subscript\n     */\n    public get subChild(): W {\n      return this.childNodes[(this.node as MmlMsubsup).sub];\n    }\n\n    /**\n     * @return {W}  The wrapper for the superscript\n     */\n    public get supChild(): W {\n      return this.childNodes[(this.node as MmlMsubsup).sup];\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      const basebox = this.baseChild.getOuterBBox();\n      const [subbox, supbox] = [this.subChild.getOuterBBox(), this.supChild.getOuterBBox()];\n      bbox.empty();\n      bbox.append(basebox);\n      const w = this.getBaseWidth();\n      const x = this.getAdjustedIc();\n      const [u, v] = this.getUVQ();\n      bbox.combine(subbox, w, v);\n      bbox.combine(supbox, w + x, u);\n      bbox.w += this.font.params.scriptspace;\n      bbox.clean();\n      this.setChildPWidths(recompute);\n    }\n\n    /**\n     * Get the shift for the scripts and their separation (TeXBook Appendix G 18adef)\n     *\n     * @param {BBox} subbox     The bounding box of the superscript\n     * @param {BBox} supbox     The bounding box of the subscript\n     * @return {number[]}       The vertical offsets for super and subscripts, and the space between them\n     */\n    public getUVQ(\n      subbox: BBox = this.subChild.getOuterBBox(),\n      supbox: BBox = this.supChild.getOuterBBox()\n    ): number[] {\n      const basebox = this.baseCore.getOuterBBox();\n      if (this.UVQ) return this.UVQ;\n      const tex = this.font.params;\n      const t = 3 * tex.rule_thickness;\n      const subscriptshift = this.length2em(this.node.attributes.get('subscriptshift'), tex.sub2);\n      const drop = this.baseCharZero(basebox.d * this.baseScale + tex.sub_drop * subbox.rscale);\n      //\n      // u and v are the veritcal shifts of the scripts, initially set to minimum values and then adjusted\n      //\n      let [u, v] = [this.getU(), Math.max(drop, subscriptshift)];\n      //\n      // q is the space currently between the super- and subscripts.\n      // If it is less than 3 rule thicknesses,\n      //   increase the subscript offset to make the space 3 rule thicknesses\n      //   If the bottom of the superscript is below 4/5 of the x-height\n      //     raise both the super- and subscripts by the difference\n      //     (make the bottom of the superscript be at 4/5 the x-height, and the\n      //      subscript 3 rule thickness below that).\n      //\n      let q = (u - supbox.d * supbox.rscale) - (subbox.h * subbox.rscale - v);\n      if (q < t) {\n        v += t - q;\n        const p = (4 / 5) * tex.x_height - (u - supbox.d * supbox.rscale);\n        if (p > 0) {\n          u += p;\n          v -= p;\n        }\n      }\n      //\n      // Make sure the shifts are at least the minimum amounts and\n      // return the shifts and the space between the scripts\n      //\n      u = Math.max(this.length2em(this.node.attributes.get('superscriptshift'), u), u);\n      v = Math.max(this.length2em(this.node.attributes.get('subscriptshift'), v), v);\n      q = (u - supbox.d * supbox.rscale) - (subbox.h * subbox.rscale - v);\n      this.UVQ = [u, -v, q];\n      return this.UVQ;\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMtable wrapper mixin for the MmlMtable object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMtr} from './mtr.js';\nimport {CommonMo} from './mo.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {DIRECTION} from '../FontData.js';\nimport {split, isPercent} from '../../../util/string.js';\nimport {sum, max} from '../../../util/numeric.js';\n\n/*****************************************************************/\n/**\n * The heights, depths, and widths of the rows and columns\n * Plus the natural height and depth (i.e., without the labels)\n * Plus the label column width\n */\nexport type TableData = {\n  H: number[];\n  D: number[];\n  W: number[];\n  NH: number[];\n  ND: number[];\n  L: number;\n};\n\n/**\n * An array of table dimensions\n */\nexport type ColumnWidths = (string | number | null)[];\n\n/*****************************************************************/\n/**\n * The CommonMtable interface\n *\n * @template C   The class for table cells\n * @template R   The class for table rows\n */\nexport interface CommonMtable<C extends AnyWrapper, R extends CommonMtr<C>> extends AnyWrapper {\n\n  /**\n   * The number of columns and rows in the table\n   */\n  numCols: number;\n  numRows: number;\n\n  /**\n   * True if there are labeled rows\n   */\n  hasLabels: boolean;\n\n  /**\n   * True if this mtable is the top element, or in a top-most mrow\n   */\n  isTop: boolean;\n\n  /**\n   * The parent node of this table (skipping non-parents and mrows)\n   *   and the position of the table as a child node\n   */\n  container: AnyWrapper;\n  containerI: number;\n\n  /**\n   * The spacing and line data\n   */\n  frame: boolean;\n  fLine: number;\n  fSpace: number[];\n  cSpace: number[];\n  rSpace: number[];\n  cLines: number[];\n  rLines: number[];\n  cWidths: (number | string)[];\n\n  /**\n   * The bounding box information for the table rows and columns\n   */\n  data: TableData;\n\n  /**\n   * The table cells that have percentage-width content\n   */\n  pwidthCells: [C, number][];\n\n  /**\n   * The full width of a percentage-width table\n   */\n  pWidth: number;\n\n  /**\n   * The rows of the table\n   */\n  readonly tableRows: R[];\n\n  /**\n   * @override\n   */\n  childNodes: R[];\n\n  /**\n   * Find the container and the child position of the table\n   */\n  findContainer(): void;\n\n  /**\n   * If the table has a precentage width or has labels, set the pwidth of the bounding box\n   */\n  getPercentageWidth(): void;\n\n  /**\n   * Stretch the rows to the equal height or natural height\n   */\n  stretchRows(): void;\n\n  /**\n   * Stretch the columns to their proper widths\n   */\n  stretchColumns(): void;\n\n  /**\n   * Handle horizontal stretching within the ith column\n   *\n   * @param {number} i   The column number\n   * @param {number} W   The computed width of the column (or null of not computed)\n   */\n  stretchColumn(i: number, W: number): void;\n\n  /**\n   * Determine the row heights and depths, the column widths,\n   * and the natural width and height of the table.\n   *\n   * @return {TableData}  The dimensions of the rows and columns\n   */\n  getTableData(): TableData;\n\n  /**\n   * @param {C} cell         The cell whose height, depth, and width are to be added into the H, D, W arrays\n   * @param {number} i       The column number for the cell\n   * @param {number} j       The row number for the cell\n   * @param {string} align   The row alignment\n   * @param {number[]} H     The maximum height for each of the rows\n   * @param {number[]} D     The maximum depth for each of the rows\n   * @param {number[]} W     The maximum width for each column\n   * @param {number} M       The current height for items aligned top and bottom\n   * @return {number}        The updated value for M\n   */\n  updateHDW(cell: C, i: number, j: number, align: string, H: number[], D: number[], W: number[], M: number): number;\n\n  /**\n   * Extend the H and D of a row to cover the maximum height needed by top/bottom aligned items\n   *\n   * @param {number} i     The row whose hight and depth should be adjusted\n   * @param {number[]} H   The row heights\n   * @param {number[]} D   The row depths\n   * @param {number} M     The maximum height of top/bottom aligned items\n   */\n  extendHD(i: number, H: number[], D: number[], M: number): void;\n\n  /**\n   * Set cell widths for columns with percentage width children\n   */\n  setColumnPWidths(): void;\n\n  /**\n   * @param {number} height   The total height of the table\n   * @return {number[]}       The [height, depth] for the aligned table\n   */\n  getBBoxHD(height: number): number[];\n\n  /**\n   * Get bbox left and right amounts to cover labels\n   */\n  getBBoxLR(): number[];\n\n  /**\n   * @param {string} side                 The side for the labels\n   * @return {[number, string, number]}   The padding, alignment, and shift amounts\n   */\n  getPadAlignShift(side: string): [number, string, number];\n\n  /**\n   * @return {number}    The true width of the table (without labels)\n   */\n  getWidth(): number;\n\n  /**\n   * @return {number}   The maximum height of a row\n   */\n  getEqualRowHeight(): number;\n\n  /**\n   * @return {number[]}   The array of computed widths\n   */\n  getComputedWidths(): number[];\n\n  /**\n   * Determine the column widths that can be computed (and need to be set).\n   * The resulting arrays will have numbers for fixed-size arrays,\n   *   strings for percentage sizes that can't be determined now,\n   *   and null for stretchy columns tht will expand to fill the extra space.\n   * Depending on the width specified for the table, different column\n   *  values can be determined.\n   *\n   * @return {ColumnWidths}  The array of widths\n   */\n  getColumnWidths(): ColumnWidths;\n\n  /**\n   * For tables with equal columns, get the proper amount per row.\n   *\n   * @return {ColumnWidths}  The array of widths\n   */\n  getEqualColumns(width: string): ColumnWidths;\n\n  /**\n   * For tables with width=\"auto\", auto and fit columns\n   * will end up being natural width, so don't need to\n   * set those explicitly.\n   *\n   * @return {ColumnWidths}  The array of widths\n   */\n  getColumnWidthsAuto(swidths: string[]): ColumnWidths;\n\n  /**\n   * For tables with percentage widths, let 'fit' columns (or 'auto'\n   * columns if there are not 'fit' ones) will stretch automatically,\n   * but for 'auto' columns (when there are 'fit' ones), set the size\n   * to the natural size of the column.\n   *\n   * @param {string[]} widths  Strings giving the widths\n   * @return {ColumnWidths}    The array of widths\n   */\n  getColumnWidthsPercent(widths: string[]): ColumnWidths;\n\n  /**\n   * For fixed-width tables, compute the column widths of all columns.\n   *\n   * @return {ColumnWidths}  The array of widths\n   */\n  getColumnWidthsFixed(swidths: string[], width: number): ColumnWidths;\n\n  /**\n   * @param {number} i      The row number (starting at 0)\n   * @param {string} align  The alignment on that row\n   * @return {number}       The offest of the alignment position from the top of the table\n   */\n  getVerticalPosition(i: number, align: string): number;\n\n  /**\n   * @param {number} fspace   The frame spacing to use\n   * @param {number[]} space  The array of spacing values to convert to strings\n   * @param {number} scale    A scaling factor to use for the sizes\n   * @return {string[]}       The half-spacing as stings with units of \"em\"\n   *                           with frame spacing at the beginning and end\n   */\n  getEmHalfSpacing(fspace: number, space: number[], scale?: number): string[];\n\n  /**\n   * @return {number[]}   The half-spacing for rows with frame spacing at the ends\n   */\n  getRowHalfSpacing(): number[];\n\n  /**\n   * @return {number[]}   The half-spacing for columns with frame spacing at the ends\n   */\n  getColumnHalfSpacing(): number[];\n\n  /**\n   * @return {[string,number|null]}  The alignment and row number (based at 0) or null\n   */\n  getAlignmentRow(): [string, number | null];\n\n  /**\n   * @param {string} name           The name of the attribute to get as an array\n   * @param {number=} i             Return this many fewer than numCols entries\n   * @return {string[]}             The array of values in the given attribute, split at spaces,\n   *                                 padded to the number of table columns (minus 1) by repeating the last entry\n   */\n  getColumnAttributes(name: string, i?: number): string[];\n\n  /**\n   * @param {string} name           The name of the attribute to get as an array\n   * @param {number=} i             Return this many fewer than numRows entries\n   * @return {string[]}             The array of values in the given attribute, split at spaces,\n   *                                 padded to the number of table rows (minus 1) by repeating the last entry\n   */\n  getRowAttributes(name: string, i?: number): string[];\n\n  /**\n   * @param {string} name           The name of the attribute to get as an array\n   * @return {string[]}             The array of values in the given attribute, split at spaces\n   *                                 (after leading and trailing spaces are removed, and multiple\n   *                                  spaces have been collapsed to one).\n   */\n  getAttributeArray(name: string): string[];\n\n  /**\n   * Adds \"em\" to a list of dimensions, after dividing by n (defaults to 1).\n   *\n   * @param {string[]} list   The array of dimensions (in em's)\n   * @param {nunber=} n       The number to divide each dimension by after converted\n   * @return {string[]}       The array of values with \"em\" added\n   */\n  addEm(list: number[], n?: number): string[];\n\n  /**\n   * Converts an array of dimensions (with arbitrary units) to an array of numbers\n   *   representing the dimensions in units of em's.\n   *\n   * @param {string[]} list   The array of dimensions to be turned into em's\n   * @return {number[]}       The array of values converted to em's\n   */\n  convertLengths(list: string[]): number[];\n\n}\n\n/**\n * Shorthand for the CommonMtable constructor\n */\nexport type MtableConstructor<C extends AnyWrapper, R extends CommonMtr<C>> = Constructor<CommonMtable<C, R>>;\n\n/*****************************************************************/\n/**\n * The CommonMtable wrapper mixin for the MmlMtable object\n *\n * @template C  The table cell class\n * @temlpate R  the table row class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMtableMixin<\n  C extends AnyWrapper,\n  R extends CommonMtr<C>,\n  T extends WrapperConstructor\n>(Base: T): MtableConstructor<C, R> & T {\n\n  return class extends Base {\n\n    /**\n     * The number of columns in the table\n     */\n    public numCols: number = 0;\n    /**\n     * The number of rows in the table\n     */\n    public numRows: number = 0;\n\n    /**\n     * True if there are labeled rows\n     */\n    public hasLabels: boolean;\n\n    /**\n     * True if this mtable is the top element, or in a top-most mrow\n     */\n    public isTop: boolean;\n\n    /**\n     * The parent node of this table (skipping non-parents and mrows)\n     */\n    public container: AnyWrapper;\n    /**\n     * The position of the table as a child node of its container\n     */\n    public containerI: number;\n\n    /**\n     * True if there is a frame\n     */\n    public frame: boolean;\n    /**\n     * The size of the frame line (or 0 if none)\n     */\n    public fLine: number;\n    /**\n     * frame spacing on the left and right\n     */\n    public fSpace: number[];\n    /**\n     * The spacing between columns\n     */\n    public cSpace: number[];\n    /**\n     * The spacing between rows\n     */\n    public rSpace: number[];\n    /**\n     * The width of columns lines (or 0 if no line for the column)\n     */\n    public cLines: number[];\n    /**\n     * The width of row lines (or 0 if no lone for that row)\n     */\n    public rLines: number[];\n    /**\n     * The column widths (or percentages, etc.)\n     */\n    public cWidths: (number | string)[];\n\n    /**\n     * The bounding box information for the table rows and columns\n     */\n    public data: TableData = null;\n\n    /**\n     * The table cells that have percentage-width content\n     */\n    public pwidthCells: [C, number][] = [];\n\n    /**\n     * The full width of a percentage-width table\n     */\n    public pWidth: number = 0;\n\n    /**\n     * @return {R[]}  The rows of the table\n     */\n    get tableRows(): R[] {\n      return this.childNodes;\n    }\n\n    /******************************************************************/\n\n    /**\n     * @override\n     * @constructor\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      //\n      // Determine the number of columns and rows, and whether the table is stretchy\n      //\n      this.numCols = max(this.tableRows.map(row => row.numCells));\n      this.numRows = this.childNodes.length;\n      this.hasLabels = this.childNodes.reduce((value, row) => value || row.node.isKind('mlabeledtr'), false);\n      this.findContainer();\n      this.isTop = !this.container || (this.container.node.isKind('math') && !this.container.parent);\n      if (this.isTop) {\n        this.jax.table = this;\n      }\n      this.getPercentageWidth();\n      //\n      // Get the frame, row, and column parameters\n      //\n      const attributes = this.node.attributes;\n      this.frame = attributes.get('frame') !== 'none';\n      this.fLine = (this.frame && attributes.get('frame') ? .07 : 0);\n      this.fSpace = (this.frame ? this.convertLengths(this.getAttributeArray('framespacing')) : [0, 0]);\n      this.cSpace = this.convertLengths(this.getColumnAttributes('columnspacing'));\n      this.rSpace = this.convertLengths(this.getRowAttributes('rowspacing'));\n      this.cLines = this.getColumnAttributes('columnlines').map(x => (x === 'none' ? 0 : .07));\n      this.rLines = this.getRowAttributes('rowlines').map(x => (x === 'none' ? 0 : .07));\n      this.cWidths = this.getColumnWidths();\n      //\n      // Stretch the rows and columns\n      //\n      this.stretchRows();\n      this.stretchColumns();\n    }\n\n    /**\n     * Find the container and the child position of the table\n     */\n    public findContainer() {\n      let node = this as AnyWrapper;\n      let parent = node.parent as AnyWrapper;\n      while (parent && (parent.node.notParent || parent.node.isKind('mrow'))) {\n        node = parent;\n        parent = parent.parent;\n      }\n      this.container = parent;\n      this.containerI = node.node.childPosition();\n    }\n\n    /**\n     * If the table has a precentage width or has labels, set the pwidth of the bounding box\n     */\n    public getPercentageWidth() {\n      if (this.hasLabels) {\n        this.bbox.pwidth = BBox.fullWidth;\n      } else {\n        const width = this.node.attributes.get('width') as string;\n        if (isPercent(width)) {\n          this.bbox.pwidth = width;\n        }\n      }\n    }\n\n    /**\n     * Stretch the rows to the equal height or natural height\n     */\n    public stretchRows() {\n      const equal = this.node.attributes.get('equalrows') as boolean;\n      const HD = (equal ? this.getEqualRowHeight() : 0);\n      const {H, D} = (equal ? this.getTableData() : {H: [0], D: [0]});\n      const rows = this.tableRows;\n      for (let i = 0; i < this.numRows; i++) {\n        const hd = (equal ? [(HD + H[i] - D[i]) / 2, (HD - H[i] + D[i]) / 2] : null);\n        rows[i].stretchChildren(hd);\n      }\n    }\n\n    /**\n     * Stretch the columns to their proper widths\n     */\n    public stretchColumns() {\n      for (let i = 0; i < this.numCols; i++) {\n        const width = (typeof this.cWidths[i] === 'number' ? this.cWidths[i] as number : null);\n        this.stretchColumn(i, width);\n      }\n    }\n\n    /**\n     * Handle horizontal stretching within the ith column\n     *\n     * @param {number} i   The column number\n     * @param {number} W   The computed width of the column (or null of not computed)\n     */\n    public stretchColumn(i: number, W: number) {\n      let stretchy: AnyWrapper[] = [];\n      //\n      //  Locate and count the stretchy children\n      //\n      for (const row of this.tableRows) {\n        const cell = row.getChild(i);\n        if (cell) {\n          const child = cell.childNodes[0];\n          if (child.stretch.dir === DIRECTION.None &&\n              child.canStretch(DIRECTION.Horizontal)) {\n            stretchy.push(child);\n          }\n        }\n      }\n      let count = stretchy.length;\n      let nodeCount = this.childNodes.length;\n      if (count && nodeCount > 1) {\n        if (W === null) {\n          W = 0;\n          //\n          //  If all the children are stretchy, find the largest one,\n          //  otherwise, find the width of the non-stretchy children.\n          //\n          let all = (count > 1 && count === nodeCount);\n          for (const row of this.tableRows) {\n            const cell = row.getChild(i);\n            if (cell) {\n              const child = cell.childNodes[0];\n              const noStretch = (child.stretch.dir === DIRECTION.None);\n              if (all || noStretch) {\n                const {w} = child.getBBox(noStretch);\n                if (w > W) {\n                  W = w;\n                }\n              }\n            }\n          }\n        }\n        //\n        //  Stretch the stretchable children\n        //\n        for (const child of stretchy) {\n          (child.coreMO() as CommonMo).getStretchedVariant([W]);\n        }\n      }\n    }\n\n    /******************************************************************/\n\n    /**\n     * Determine the row heights and depths, the column widths,\n     * and the natural width and height of the table.\n     *\n     * @return {TableData}  The dimensions of the rows and columns\n     */\n    public getTableData(): TableData {\n      if (this.data) {\n        return this.data;\n      }\n      const H = new Array(this.numRows).fill(0);\n      const D = new Array(this.numRows).fill(0);\n      const W = new Array(this.numCols).fill(0);\n      const NH = new Array(this.numRows);\n      const ND = new Array(this.numRows);\n      const LW = [0];\n      const rows = this.tableRows;\n      for (let j = 0; j < rows.length; j++) {\n        let M = 0;\n        const row = rows[j];\n        const align = row.node.attributes.get('rowalign') as string;\n        for (let i = 0; i < row.numCells; i++) {\n          const cell = row.getChild(i);\n          M = this.updateHDW(cell, i, j, align, H, D, W, M);\n          this.recordPWidthCell(cell, i);\n        }\n        NH[j] = H[j];\n        ND[j] = D[j];\n        if (row.labeled) {\n          M = this.updateHDW(row.childNodes[0], 0, j, align, H, D, LW, M);\n        }\n        this.extendHD(j, H, D, M);\n        this.extendHD(j, NH, ND, M);\n      }\n      const L = LW[0];\n      this.data = {H, D, W, NH, ND, L};\n      return this.data;\n    }\n\n    /**\n     * @override\n     */\n    public updateHDW(\n      cell: C, i: number, j: number, align: string, H: number[], D: number[], W: number[], M: number\n    ): number {\n      let {h, d, w} = cell.getBBox();\n      const scale = cell.parent.bbox.rscale;\n      if (cell.parent.bbox.rscale !== 1) {\n        h *= scale;\n        d *= scale;\n        w *= scale;\n      }\n      if (this.node.getProperty('useHeight')) {\n        if (h < .75) h = .75;\n        if (d < .25) d = .25;\n      }\n      let m = 0;\n      align = cell.node.attributes.get('rowalign') as string || align;\n      if (align !== 'baseline' && align !== 'axis') {\n        m = h + d;\n        h = d = 0;\n      }\n      if (h > H[j]) H[j] = h;\n      if (d > D[j]) D[j] = d;\n      if (m > M) M = m;\n      if (W && w > W[i]) W[i] = w;\n      return M;\n    }\n\n    /**\n     * @override\n     */\n    public extendHD(i: number, H: number[], D: number[], M: number) {\n      const d = (M - (H[i] + D[i])) / 2;\n      if (d < .00001) return;\n      H[i] += d;\n      D[i] += d;\n    }\n\n    /**\n     * @param {C} cell     The cell to check for percentage widths\n     * @param {number} i   The column index of the cell\n     */\n    public recordPWidthCell(cell: C, i: number) {\n      if (cell.childNodes[0] && cell.childNodes[0].getBBox().pwidth) {\n        this.pwidthCells.push([cell, i]);\n      }\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, _recompute: boolean = false) {\n      const {H, D} = this.getTableData();\n      let height, width;\n      //\n      // For equal rows, use the common height and depth for all rows\n      // Otherwise, use the height and depths for each row separately.\n      // Add in the spacing, line widths, and frame size.\n      //\n      if (this.node.attributes.get('equalrows') as boolean) {\n        const HD = this.getEqualRowHeight();\n        height = sum([].concat(this.rLines, this.rSpace)) + HD * this.numRows;\n      } else {\n        height = sum(H.concat(D, this.rLines, this.rSpace));\n      }\n      height += 2 * (this.fLine + this.fSpace[1]);\n      //\n      //  Get the widths of all columns\n      //\n      const CW = this.getComputedWidths();\n      //\n      //  Get the expected width of the table\n      //\n      width = sum(CW.concat(this.cLines, this.cSpace)) + 2 * (this.fLine + this.fSpace[0]);\n      //\n      //  If the table width is not 'auto', determine the specified width\n      //    and pick the larger of the specified and computed widths.\n      //\n      const w = this.node.attributes.get('width') as string;\n      if (w !== 'auto') {\n        width = Math.max(this.length2em(w, 0) + 2 * this.fLine, width);\n      }\n      //\n      //  Return the bounding box information\n      //\n      let [h, d] = this.getBBoxHD(height);\n      bbox.h = h;\n      bbox.d = d;\n      bbox.w = width;\n      let [L, R] = this.getBBoxLR();\n      bbox.L = L;\n      bbox.R = R;\n      //\n      //  Handle cell widths if width is not a percentage\n      //\n      if (!isPercent(w)) {\n        this.setColumnPWidths();\n      }\n    }\n\n    /**\n     * @override\n     */\n    public setChildPWidths(_recompute: boolean, cwidth: number, _clear: boolean) {\n      const width = this.node.attributes.get('width') as string;\n      if (!isPercent(width)) return false;\n      if (!this.hasLabels) {\n        this.bbox.pwidth = '';\n        this.container.bbox.pwidth = '';\n      }\n      const {w, L, R} = this.bbox;\n      const labelInWidth = this.node.attributes.get('data-width-includes-label') as boolean;\n      const W = Math.max(w, this.length2em(width, Math.max(cwidth, L + w + R))) - (labelInWidth ? L + R : 0);\n      const cols = (this.node.attributes.get('equalcolumns') as boolean ?\n                    Array(this.numCols).fill(this.percent(1 / Math.max(1, this.numCols))) :\n                    this.getColumnAttributes('columnwidth', 0));\n      this.cWidths = this.getColumnWidthsFixed(cols, W);\n      const CW = this.getComputedWidths();\n      this.pWidth = sum(CW.concat(this.cLines, this.cSpace)) + 2 * (this.fLine + this.fSpace[0]);\n      if (this.isTop) {\n        this.bbox.w = this.pWidth;\n      }\n      this.setColumnPWidths();\n      if (this.pWidth !== w) {\n        this.parent.invalidateBBox();\n      }\n      return this.pWidth !== w;\n    }\n\n    /**\n     * Finalize any cells that have percentage-width content\n     */\n    public setColumnPWidths() {\n      const W = this.cWidths as number[];\n      for (const [cell, i] of this.pwidthCells) {\n        if (cell.setChildPWidths(false, W[i])) {\n          cell.invalidateBBox();\n          cell.getBBox();\n        }\n      }\n    }\n\n    /**\n     * @param {number} height   The total height of the table\n     * @return {[number, number]}  The [height, depth] for the aligned table\n     */\n    public getBBoxHD(height: number): [number, number] {\n      const [align, row] = this.getAlignmentRow();\n      if (row === null) {\n        const a = this.font.params.axis_height;\n        const h2 = height / 2;\n        const HD: {[key: string]: [number, number]} = {\n          top: [0, height],\n          center: [h2, h2],\n          bottom: [height, 0],\n          baseline: [h2, h2],\n          axis: [h2 + a, h2 - a]\n        };\n        return HD[align] || [h2, h2];\n      } else {\n        const y = this.getVerticalPosition(row, align);\n        return [y, height - y];\n      }\n    }\n\n    /**\n     * Get bbox left and right amounts to cover labels\n     */\n    public getBBoxLR() {\n      if (this.hasLabels) {\n        const attributes = this.node.attributes;\n        const side = attributes.get('side') as string;\n        let [pad, align] = this.getPadAlignShift(side);\n        //\n        // If labels are included in the width,\n        //   remove the frame spacing if there is no frame line (added by multline)\n        //   and use left or right justification rather than centering so that\n        //   there is no extra space reserved for the label on the opposite side,\n        //   (as there usually is to center the equation).\n        //\n        const labels = this.hasLabels && !!attributes.get('data-width-includes-label');\n        if (labels && this.frame && this.fSpace[0]) {\n          pad -= this.fSpace[0];\n        }\n        return (align === 'center' && !labels ? [pad, pad] :\n                side === 'left' ? [pad, 0] : [0, pad]);\n      }\n      return [0, 0];\n    }\n\n    /**\n     * @param {string} side                 The side for the labels\n     * @return {[number, string, number]}   The padding, alignment, and shift amounts\n     */\n    public getPadAlignShift(side: string): [number, string, number] {\n      //\n      //  Make sure labels don't overlap table\n      //\n      const {L} = this.getTableData();\n      const sep = this.length2em(this.node.attributes.get('minlabelspacing'));\n      let pad = L + sep;\n      const [lpad, rpad] = (this.styles == null ? ['', ''] :\n                            [this.styles.get('padding-left'), this.styles.get('padding-right')]);\n      if (lpad || rpad) {\n        pad = Math.max(pad, this.length2em(lpad || '0'), this.length2em(rpad || '0'));\n      }\n      //\n      //  Handle indentation\n      //\n      let [align, shift] = this.getAlignShift();\n      if (align === side) {\n        shift = (side === 'left' ? Math.max(pad, shift) - pad : Math.min(-pad, shift) + pad);\n      }\n      return [pad, align, shift] as [number, string, number];\n    }\n\n    /**\n     * @override\n     */\n    public getAlignShift() {\n      return (this.isTop ? super.getAlignShift() :\n              [this.container.getChildAlign(this.containerI), 0] as [string, number]);\n    }\n\n    /**\n     * @return {number}    The true width of the table (without labels)\n     */\n    public getWidth(): number {\n      return this.pWidth || this.getBBox().w;\n    }\n\n    /******************************************************************/\n\n    /**\n     * @return {number}   The maximum height of a row\n     */\n    public getEqualRowHeight(): number {\n      const {H, D} = this.getTableData();\n      const HD = Array.from(H.keys()).map(i => H[i] + D[i]);\n      return Math.max.apply(Math, HD);\n    }\n\n    /**\n     * @return {number[]}   The array of computed widths\n     */\n    public getComputedWidths(): number[] {\n      const W = this.getTableData().W;\n      let CW = Array.from(W.keys()).map(i => {\n        return (typeof this.cWidths[i] === 'number' ? this.cWidths[i] as number : W[i]);\n      });\n      if (this.node.attributes.get('equalcolumns') as boolean) {\n        CW = Array(CW.length).fill(max(CW));\n      }\n      return CW;\n    }\n\n    /**\n     * Determine the column widths that can be computed (and need to be set).\n     * The resulting arrays will have numbers for fixed-size arrays,\n     *   strings for percentage sizes that can't be determined now,\n     *   and null for stretchy columns that will expand to fill the extra space.\n     * Depending on the width specified for the table, different column\n     *  values can be determined.\n     *\n     * @return {(string|number|null)[]}  The array of widths\n     */\n    public getColumnWidths(): (string | number | null)[] {\n      const width = this.node.attributes.get('width') as string;\n      if (this.node.attributes.get('equalcolumns') as boolean) {\n        return this.getEqualColumns(width);\n      }\n      const swidths = this.getColumnAttributes('columnwidth', 0);\n      if (width === 'auto') {\n        return this.getColumnWidthsAuto(swidths);\n      }\n      if (isPercent(width)) {\n        return this.getColumnWidthsPercent(swidths);\n      }\n      return this.getColumnWidthsFixed(swidths, this.length2em(width));\n    }\n\n    /**\n     * For tables with equal columns, get the proper amount per column.\n     *\n     * @param {string} width   The width attribute of the table\n     * @return {(string|number|null)[]}  The array of widths\n     */\n    public getEqualColumns(width: string): (string | number | null)[] {\n      const n = Math.max(1, this.numCols);\n      let cwidth;\n      if (width === 'auto') {\n        const {W} = this.getTableData();\n        cwidth = max(W);\n      } else if (isPercent(width)) {\n        cwidth = this.percent(1 / n);\n      } else {\n        const w = sum([].concat(this.cLines, this.cSpace)) + 2 * this.fSpace[0];\n        cwidth = Math.max(0, this.length2em(width) - w) / n;\n      }\n      return Array(this.numCols).fill(cwidth);\n    }\n\n    /**\n     * For tables with width=\"auto\", auto and fit columns\n     * will end up being natural width, so don't need to\n     * set those explicitly.\n     *\n     * @param {string[]} swidths   The split and padded columnwidths attribute\n     * @return {ColumnWidths}  The array of widths\n     */\n    public getColumnWidthsAuto(swidths: string[]): ColumnWidths {\n      return swidths.map(x => {\n        if (x === 'auto' || x === 'fit') return null;\n        if (isPercent(x)) return x;\n        return this.length2em(x);\n      });\n    }\n\n    /**\n     * For tables with percentage widths, the 'fit' columns (or 'auto'\n     * columns if there are not 'fit' ones) will stretch automatically,\n     * but for 'auto' columns (when there are 'fit' ones), set the size\n     * to the natural size of the column.\n     *\n     * @param {string[]} swidths   The split and padded columnwidths attribute\n     * @return {ColumnWidths}      The array of widths\n     */\n    public getColumnWidthsPercent(swidths: string[]): ColumnWidths {\n      const hasFit = swidths.indexOf('fit') >= 0;\n      const {W} = (hasFit ? this.getTableData() : {W: null});\n      return Array.from(swidths.keys()).map(i => {\n        const x = swidths[i];\n        if (x === 'fit') return null;\n        if (x === 'auto') return (hasFit ? W[i] : null);\n        if (isPercent(x)) return x;\n        return this.length2em(x);\n      });\n    }\n\n    /**\n     * For fixed-width tables, compute the column widths of all columns.\n     *\n     * @param {string[]} swidths   The split and padded columnwidths attribute\n     * @param {number} width       The width of the table\n     * @return {ColumnWidths}      The array of widths\n     */\n    public getColumnWidthsFixed(swidths: string[], width: number): ColumnWidths {\n      //\n      // Get the indices of the fit and auto columns, and the number of fit or auto entries.\n      // If there are fit or auto columns, get the column widths.\n      //\n      const indices = Array.from(swidths.keys());\n      const fit = indices.filter(i => swidths[i] === 'fit');\n      const auto = indices.filter(i => swidths[i] === 'auto');\n      const n = fit.length || auto.length;\n      const {W} = (n ? this.getTableData() : {W: null});\n      //\n      // Determine the space remaining from the fixed width after the\n      //   separation and lines have been removed (cwidth), and\n      //   after the width of the columns have been removed (dw).\n      //\n      const cwidth = width - sum([].concat(this.cLines, this.cSpace)) - 2 * this.fSpace[0];\n      let dw = cwidth;\n      indices.forEach(i => {\n        const x = swidths[i];\n        dw -= (x === 'fit' || x === 'auto' ? W[i] : this.length2em(x, cwidth));\n      });\n      //\n      // Get the amount of extra space per column, or 0 (fw)\n      //\n      const fw = (n && dw > 0 ? dw / n : 0);\n      //\n      // Return the column widths (plus extra space for those that are stretching\n      //\n      return indices.map(i => {\n        const x = swidths[i];\n        if (x === 'fit') return W[i] + fw;\n        if (x === 'auto') return W[i] + (fit.length === 0 ? fw : 0);\n        return this.length2em(x, cwidth);\n      });\n    }\n\n    /**\n     * @param {number} i      The row number (starting at 0)\n     * @param {string} align  The alignment on that row\n     * @return {number}       The offest of the alignment position from the top of the table\n     */\n    public getVerticalPosition(i: number, align: string): number {\n      const equal = this.node.attributes.get('equalrows') as boolean;\n      const {H, D} = this.getTableData();\n      const HD = (equal ? this.getEqualRowHeight() : 0);\n      const space = this.getRowHalfSpacing();\n      //\n      //  Start with frame size and add in spacing, height and depth,\n      //    and line thickness for each row.\n      //\n      let y = this.fLine;\n      for (let j = 0; j < i; j++) {\n        y += space[j] + (equal ? HD : H[j] + D[j]) + space[j + 1] + this.rLines[j];\n      }\n      //\n      //  For equal rows, get updated height and depth\n      //\n      const [h, d] = (equal ? [(HD + H[i] - D[i]) / 2, (HD - H[i] + D[i]) / 2] : [H[i], D[i]]);\n      //\n      //  Add the offset into the specified row\n      //\n      const offset: {[name: string]: number} = {\n        top: 0,\n        center: space[i] + (h + d) / 2,\n        bottom: space[i] + h + d + space[i + 1],\n        baseline: space[i] + h,\n        axis: space[i] + h - .25\n      };\n      y += offset[align] || 0;\n      //\n      //  Return the final result\n      //\n      return y;\n    }\n\n    /******************************************************************/\n\n    /**\n     * @param {number} fspace   The frame spacing to use\n     * @param {number[]} space  The array of spacing values to convert to strings\n     * @param {number} scale    A scaling factor to use for the sizes\n     * @return {string[]}       The half-spacing as stings with units of \"em\"\n     *                           with frame spacing at the beginning and end\n     */\n    public getEmHalfSpacing(fspace: number, space: number[], scale: number = 1): string[] {\n      //\n      //  Get the column spacing values, and add the frame spacing values at the left and right\n      //\n      const fspaceEm = this.em(fspace * scale);\n      const spaceEm = this.addEm(space, 2 / scale);\n      spaceEm.unshift(fspaceEm);\n      spaceEm.push(fspaceEm);\n      return spaceEm;\n    }\n\n    /**\n     * @return {number[]}   The half-spacing for rows with frame spacing at the ends\n     */\n    public getRowHalfSpacing(): number[] {\n      const space = this.rSpace.map(x => x / 2);\n      space.unshift(this.fSpace[1]);\n      space.push(this.fSpace[1]);\n      return space;\n    }\n\n    /**\n     * @return {number[]}   The half-spacing for columns with frame spacing at the ends\n     */\n    public getColumnHalfSpacing(): number[] {\n      const space = this.cSpace.map(x => x / 2);\n      space.unshift(this.fSpace[0]);\n      space.push(this.fSpace[0]);\n      return space;\n    }\n\n    /**\n     * @return {[string,number|null]}  The alignment and row number (based at 0) or null\n     */\n    public getAlignmentRow(): [string, number] {\n      const [align, row] = split(this.node.attributes.get('align') as string);\n      if (row == null) return [align, null];\n      let i = parseInt(row);\n      if (i < 0) i += this.numRows + 1;\n      return [align, i < 1 || i > this.numRows ? null : i - 1];\n    }\n\n    /**\n     * @param {string} name           The name of the attribute to get as an array\n     * @param {number=} i             Return this many fewer than numCols entries\n     * @return {string[]}             The array of values in the given attribute, split at spaces,\n     *                                 padded to the number of table columns (minus 1) by repeating the last entry\n     */\n    public getColumnAttributes(name: string, i: number = 1): string[] | null {\n      const n = this.numCols - i;\n      const columns = this.getAttributeArray(name);\n      if (columns.length === 0) return null;\n      while (columns.length < n) {\n        columns.push(columns[columns.length - 1]);\n      }\n      if (columns.length > n) {\n        columns.splice(n);\n      }\n      return columns;\n    }\n\n    /**\n     * @param {string} name           The name of the attribute to get as an array\n     * @param {number=} i             Return this many fewer than numRows entries\n     * @return {string[]}             The array of values in the given attribute, split at spaces,\n     *                                 padded to the number of table rows (minus 1) by repeating the last entry\n     */\n    public getRowAttributes(name: string, i: number = 1): string[] | null {\n      const n = this.numRows - i;\n      const rows = this.getAttributeArray(name);\n      if (rows.length === 0) return null;\n      while (rows.length < n) {\n        rows.push(rows[rows.length - 1]);\n      }\n      if (rows.length > n) {\n        rows.splice(n);\n      }\n      return rows;\n    }\n\n    /**\n     * @param {string} name           The name of the attribute to get as an array\n     * @return {string[]}             The array of values in the given attribute, split at spaces\n     *                                 (after leading and trailing spaces are removed, and multiple\n     *                                  spaces have been collapsed to one).\n     */\n    public getAttributeArray(name: string): string[] {\n      const value = this.node.attributes.get(name) as string;\n      if (!value) return [this.node.attributes.getDefault(name) as string];\n      return split(value);\n    }\n\n    /**\n     * Adds \"em\" to a list of dimensions, after dividing by n (defaults to 1).\n     *\n     * @param {string[]} list   The array of dimensions (in em's)\n     * @param {nunber=} n       The number to divide each dimension by after converted\n     * @return {string[]}       The array of values with \"em\" added\n     */\n    public addEm(list: number[], n: number = 1): string[] | null {\n      if (!list) return null;\n      return list.map(x => this.em(x / n));\n    }\n\n    /**\n     * Converts an array of dimensions (with arbitrary units) to an array of numbers\n     *   representing the dimensions in units of em's.\n     *\n     * @param {string[]} list   The array of dimensions to be turned into em's\n     * @return {number[]}       The array of values converted to em's\n     */\n    public convertLengths(list: string[]): number[] | null {\n      if (!list) return null;\n      return list.map(x => this.length2em(x));\n    }\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMtd wrapper mixin for the MmlMtd object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMtable} from '../../common/Wrappers/mtable.js';\nimport {CommonMtr} from '../../common/Wrappers/mtr.js';\n\n/*****************************************************************/\n/**\n * The CommonMtd interface\n */\nexport interface CommonMtd extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonMtd constructor\n */\nexport type MtdConstructor = Constructor<CommonMtd>;\n\n/*****************************************************************/\n/**\n *  The CommonMtd wrapper mixin for the MmlMtd object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMtdMixin<T extends WrapperConstructor>(Base: T): MtdConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    get fixesPWidth() {\n      return false;\n    }\n\n    /**\n     * @override\n     */\n    public invalidateBBox() {\n      this.bboxComputed = false;\n    }\n\n    /**\n     * @override\n     */\n    public getWrapWidth(_j: number) {\n      const table = this.parent.parent as any as CommonMtable<AnyWrapper, CommonMtr<AnyWrapper>>;\n      const row = this.parent as CommonMtr<AnyWrapper>;\n      const i = this.node.childPosition() - (row.labeled ? 1 : 0);\n      return (typeof(table.cWidths[i]) === 'number' ? table.cWidths[i] : table.getTableData().W[i]) as number;\n    }\n\n    /**\n     * @override\n     */\n    public getChildAlign(_i: number) {\n      return this.node.attributes.get('columnalign') as string;\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMtext wrapper mixin for the MmlMtext object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\n\n/*****************************************************************/\n/**\n * The CommonMtext interface\n */\nexport interface CommonMtext extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonMtext constructor\n */\nexport type MtextConstructor = Constructor<CommonMtext>;\n\n/*****************************************************************/\n/**\n *  The CommonMtext wrapper mixin for the MmlMtext object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMtextMixin<T extends WrapperConstructor>(Base: T): MtextConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * The font-family, weight, and style to use for the variants when mtextInheritFont\n     * is true or mtextFont is specified.  If not in this list, then the font's\n     * getCssFont() is called.  When the font family is not specified (as in these four),\n     * the inherited or specified font is used.\n     */\n    public static INHERITFONTS = {\n      normal: ['', false, false],\n      bold: ['', false, true],\n      italic: ['', true, false],\n      'bold-italic': ['', true, true]\n    };\n\n    /**\n     * @override\n     */\n    protected getVariant() {\n      const options = this.jax.options;\n      const data = this.jax.math.outputData;\n      //\n      //  If the font is to be inherited from the surrounding text, check the mathvariant\n      //  and see if it allows for inheritance. If so, set the variant appropriately,\n      //  otherwise get the usual variant.\n      //\n      const merror = ((!!data.merrorFamily || !!options.merrorFont) && this.node.Parent.isKind('merror'));\n      if (!!data.mtextFamily || !!options.mtextFont || merror) {\n        const variant = this.node.attributes.get('mathvariant') as string;\n        const font = (this.constructor as any).INHERITFONTS[variant] || this.jax.font.getCssFont(variant);\n        const family = font[0] || (merror ? data.merrorFamily || options.merrorFont :\n                                            data.mtextFamily || options.mtextFont);\n        this.variant = this.explicitVariant(family, font[2] ? 'bold' : '', font[1] ? 'italic' : '');\n        return;\n      }\n      super.getVariant();\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CcommonMtr wrapper mixin for the MmlMtr object\n *                and CommonMlabeledtr wrapper mixin for MmlMlabeledtr\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMo} from './mo.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {DIRECTION} from '../FontData.js';\n\n/*****************************************************************/\n/**\n * The CommonMtr interface\n *\n * @template C  The class for table cells\n */\nexport interface CommonMtr<C extends AnyWrapper> extends AnyWrapper {\n\n  /**\n   * The number of mtd's in the mtr\n   */\n  readonly numCells: number;\n\n  /**\n   * True if this is a labeled row\n   */\n  readonly labeled: boolean;\n\n  /**\n   * The child nodes that are part of the table (no label node)\n   */\n  readonly tableCells: C[];\n\n  /**\n   * @override;\n   */\n  childNodes: C[];\n\n  /**\n   * @param {number} i   The index of the child to get (skipping labels)\n   * @return {C}         The ith child node wrapper\n   */\n  getChild(i: number): C;\n\n  /**\n   * @return {BBox[]}  An array of the bounding boxes for the mtd's in the row\n   */\n  getChildBBoxes(): BBox[];\n\n  /**\n   * Handle vertical stretching of cells to match height of\n   *  other cells in the row.\n   *\n   * @param {number[]=} HD   The total height and depth for the row [H, D]\n   *\n   * If this isn't specified, the maximum height and depth is computed.\n   */\n  stretchChildren(HD?: number[]): void;\n\n}\n\n/**\n * Shorthand for the CommonMtr constructor\n *\n * @template C  The class for table cells\n */\nexport type MtrConstructor<C extends AnyWrapper> = Constructor<CommonMtr<C>>;\n\n/*****************************************************************/\n/**\n * The CommonMtr wrapper for the MmlMtr object\n *\n * @template C  The class for table cells\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMtrMixin<\n  C extends AnyWrapper,\n  T extends WrapperConstructor\n>(Base: T): MtrConstructor<C> & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    get fixesPWidth() {\n      return false;\n    }\n\n    /**\n     * @return {number}   The number of mtd's in the mtr\n     */\n    get numCells(): number {\n      return this.childNodes.length;\n    }\n\n    /**\n     * @return {boolean}   True if this is a labeled row\n     */\n    get labeled(): boolean {\n      return false;\n    }\n\n    /**\n     * @return {C[]}  The child nodes that are part of the table (no label node)\n     */\n    get tableCells(): C[] {\n      return this.childNodes;\n    }\n\n    /**\n     * @param {number} i   The index of the child to get (skipping labels)\n     * @return {C}         The ith child node wrapper\n     */\n    public getChild(i: number): C {\n      return this.childNodes[i];\n    }\n\n    /**\n     * @return {BBox[]}  An array of the bounding boxes for the mtd's in the row\n     */\n    public getChildBBoxes(): BBox[] {\n      return this.childNodes.map(cell => cell.getBBox());\n    }\n\n    /**\n     * Handle vertical stretching of cells to match height of\n     *  other cells in the row.\n     *\n     * @param {number[]} HD   The total height and depth for the row [H, D]\n     *\n     * If this isn't specified, the maximum height and depth is computed.\n     */\n    public stretchChildren(HD: number[] = null) {\n      let stretchy: AnyWrapper[] = [];\n      let children = (this.labeled ? this.childNodes.slice(1) : this.childNodes);\n      //\n      //  Locate and count the stretchy children\n      //\n      for (const mtd of children) {\n        const child = mtd.childNodes[0];\n        if (child.canStretch(DIRECTION.Vertical)) {\n          stretchy.push(child);\n        }\n      }\n      let count = stretchy.length;\n      let nodeCount = this.childNodes.length;\n      if (count && nodeCount > 1) {\n        if (HD === null) {\n          let H = 0, D = 0;\n          //\n          //  If all the children are stretchy, find the largest one,\n          //  otherwise, find the height and depth of the non-stretchy\n          //  children.\n          //\n          let all = (count > 1 && count === nodeCount);\n          for (const mtd of children) {\n            const child = mtd.childNodes[0];\n            const noStretch = (child.stretch.dir === DIRECTION.None);\n            if (all || noStretch) {\n              const {h, d} = child.getBBox(noStretch);\n              if (h > H) {\n                H = h;\n              }\n              if (d > D) {\n                D = d;\n              }\n            }\n          }\n          HD = [H, D];\n        }\n        //\n        //  Stretch the stretchable children\n        //\n        for (const child of stretchy) {\n          (child.coreMO() as CommonMo).getStretchedVariant(HD);\n        }\n      }\n    }\n\n  };\n\n}\n\n/*****************************************************************/\n/**\n * The CommonMlabeledtr interface\n *\n * @template C  The class for table cells\n */\nexport interface CommonMlabeledtr<C extends AnyWrapper> extends CommonMtr<C> {\n}\n\n/**\n * Shorthand for the CommonMlabeledtr constructor\n *\n * @template C  The class for table cells\n */\nexport type MlabeledtrConstructor<C extends AnyWrapper> = Constructor<CommonMlabeledtr<C>>;\n\n/*****************************************************************/\n/**\n * The CommonMlabeledtr wrapper mixin for the MmlMlabeledtr object\n *\n * @template C  The class for table cells\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMlabeledtrMixin<\n  C extends AnyWrapper,\n  T extends MtrConstructor<C>\n>(Base: T): MlabeledtrConstructor<C> & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    get numCells() {\n      //\n      //  Don't include the label mtd\n      //\n      return Math.max(0, this.childNodes.length - 1);\n    }\n\n    /**\n     * @override\n     */\n    get labeled() {\n      return true;\n    }\n\n    /**\n     * @override\n     */\n    get tableCells() {\n      return this.childNodes.slice(1) as C[];\n    }\n\n    /**\n     * @override\n     */\n    public getChild(i: number) {\n      return this.childNodes[i + 1] as C;\n    }\n\n    /**\n     * @override\n     */\n    public getChildBBoxes() {\n      //\n      //  Don't include the label mtd\n      //\n      return this.childNodes.slice(1).map(cell => cell.getBBox());\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMunderover wrapper mixin for the MmlMunderover object\n *                and the special cases CommonMunder and CommonMsup\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, Constructor} from '../Wrapper.js';\nimport {CommonScriptbase, ScriptbaseConstructor} from './scriptbase.js';\nimport {MmlMunderover, MmlMunder, MmlMover} from '../../../core/MmlTree/MmlNodes/munderover.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n/**\n * The CommonMunder interface\n *\n * @template W  The child-node Wrapper class\n */\nexport interface CommonMunder<W extends AnyWrapper> extends CommonScriptbase<W> {\n}\n\n/**\n * Shorthand for the CommonMunder constructor\n *\n * @template W  The child-node Wrapper class\n */\nexport type MunderConstructor<W extends AnyWrapper> = Constructor<CommonMunder<W>>;\n\n/*****************************************************************/\n/**\n * The CommonMunder wrapper mixin for the MmlMunder object\n *\n * @template W  The child-node Wrapper class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMunderMixin<\n  W extends AnyWrapper,\n  T extends ScriptbaseConstructor<W>\n>(Base: T): MunderConstructor<W> & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public get scriptChild() {\n      return this.childNodes[(this.node as MmlMunder).under];\n    }\n\n    /**\n     * @override\n     * @constructor\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.stretchChildren();\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      if (this.hasMovableLimits()) {\n        super.computeBBox(bbox, recompute);\n        return;\n      }\n      bbox.empty();\n      const basebox = this.baseChild.getOuterBBox();\n      const underbox = this.scriptChild.getOuterBBox();\n      const v = this.getUnderKV(basebox, underbox)[1];\n      const delta = (this.isLineBelow ? 0 : this.getDelta(true));\n      const [bw, uw] = this.getDeltaW([basebox, underbox], [0, -delta]);\n      bbox.combine(basebox, bw, 0);\n      bbox.combine(underbox, uw, v);\n      bbox.d += this.font.params.big_op_spacing5;\n      bbox.clean();\n      this.setChildPWidths(recompute);\n    }\n\n  };\n\n}\n\n/*****************************************************************/\n/**\n * The CommonMover interface\n *\n * @template W  The child-node Wrapper class\n */\nexport interface CommonMover<W extends AnyWrapper> extends CommonScriptbase<W> {\n}\n\n/**\n * Shorthand for the CommonMover constructor\n *\n * @template W  The child-node Wrapper class\n */\nexport type MoverConstructor<W extends AnyWrapper> = Constructor<CommonMover<W>>;\n\n/*****************************************************************/\n/**\n * The CommonMover wrapper mixin for the MmlMover object\n *\n * @template W  The child-node Wrapper class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMoverMixin<\n  W extends AnyWrapper,\n  T extends ScriptbaseConstructor<W>\n>(Base: T): MoverConstructor<W> & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public get scriptChild() {\n      return this.childNodes[(this.node as MmlMover).over];\n    }\n\n    /**\n     * @override\n     * @constructor\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.stretchChildren();\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox) {\n      if (this.hasMovableLimits()) {\n        super.computeBBox(bbox);\n        return;\n      }\n      bbox.empty();\n      const basebox = this.baseChild.getOuterBBox();\n      const overbox = this.scriptChild.getOuterBBox();\n      if (this.node.attributes.get('accent')) {\n        basebox.h = Math.max(basebox.h, this.font.params.x_height * basebox.scale);\n      }\n      const u = this.getOverKU(basebox, overbox)[1];\n      const delta = (this.isLineAbove ? 0 : this.getDelta());\n      const [bw, ow] = this.getDeltaW([basebox, overbox], [0, delta]);\n      bbox.combine(basebox, bw, 0);\n      bbox.combine(overbox, ow, u);\n      bbox.h += this.font.params.big_op_spacing5;\n      bbox.clean();\n    }\n\n  };\n\n}\n\n/*****************************************************************/\n/**\n * The CommonMunderover interface\n *\n * @template W  The child-node Wrapper class\n */\nexport interface CommonMunderover<W extends AnyWrapper> extends CommonScriptbase<W> {\n\n  /*\n   * The wrapped under node\n   */\n  readonly underChild: W;\n\n  /*\n   * The wrapped overder node\n   */\n  readonly overChild: W;\n\n}\n\n/**\n * Shorthand for the CommonMunderover constructor\n *\n * @template W  The child-node Wrapper class\n */\nexport type MunderoverConstructor<W extends AnyWrapper> = Constructor<CommonMunderover<W>>;\n\n/*****************************************************************/\n/*\n * The CommonMunderover wrapper for the MmlMunderover object\n *\n * @template W  The child-node Wrapper class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMunderoverMixin<\n  W extends AnyWrapper,\n  T extends ScriptbaseConstructor<W>\n>(Base: T): MunderoverConstructor<W> & T {\n\n  return class extends Base {\n\n    /*\n     * @return {W}   The wrapped under node\n     */\n    public get underChild() {\n      return this.childNodes[(this.node as MmlMunderover).under];\n    }\n\n    /*\n     * @return {W}   The wrapped overder node\n     */\n    public get overChild() {\n      return this.childNodes[(this.node as MmlMunderover).over];\n    }\n\n    /*\n     * Needed for movablelimits\n     *\n     * @override\n     */\n    public get subChild() {\n      return this.underChild;\n    }\n\n    /*\n     * Needed for movablelimits\n     *\n     * @override\n     */\n    public get supChild() {\n      return this.overChild;\n    }\n\n    /**\n     * @override\n     * @constructor\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.stretchChildren();\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox) {\n      if (this.hasMovableLimits()) {\n        super.computeBBox(bbox);\n        return;\n      }\n      bbox.empty();\n      const overbox = this.overChild.getOuterBBox();\n      const basebox = this.baseChild.getOuterBBox();\n      const underbox = this.underChild.getOuterBBox();\n      if (this.node.attributes.get('accent')) {\n        basebox.h = Math.max(basebox.h, this.font.params.x_height * basebox.scale);\n      }\n      const u = this.getOverKU(basebox, overbox)[1];\n      const v = this.getUnderKV(basebox, underbox)[1];\n      const delta = this.getDelta();\n      const [bw, uw, ow] = this.getDeltaW([basebox, underbox, overbox],\n                                          [0, this.isLineBelow ? 0 : -delta, this.isLineAbove ? 0 : delta]);\n      bbox.combine(basebox, bw, 0);\n      bbox.combine(overbox, ow, u);\n      bbox.combine(underbox, uw, v);\n      const z = this.font.params.big_op_spacing5;\n      bbox.h += z;\n      bbox.d += z;\n      bbox.clean();\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the a base mixin for CommonMsubsup, CommonMunderover\n *                and their relatives.  (Since munderover can become msubsup\n *                when movablelimits is set, munderover needs to be able to\n *                do the same thing as msubsup in some cases.)\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor, AnyWrapperClass} from '../Wrapper.js';\nimport {CommonMo} from './mo.js';\nimport {CommonMunderover} from './munderover.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {MmlMsubsup} from '../../../core/MmlTree/MmlNodes/msubsup.js';\nimport {MmlMo} from '../../../core/MmlTree/MmlNodes/mo.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {DIRECTION} from '../FontData.js';\n\n/*****************************************************************/\n/**\n * The CommonScriptbase interface\n *\n * @template W  The child-node Wrapper class\n */\nexport interface CommonScriptbase<W extends AnyWrapper> extends AnyWrapper {\n\n  /**\n   * The core mi or mo of the base (or the base itself if there isn't one)\n   */\n  readonly baseCore: W;\n\n  /**\n   * The base element's wrapper\n   */\n  readonly baseChild: W;\n\n  /**\n   * The relative scaling of the base compared to the munderover/msubsup\n   */\n  readonly baseScale: number;\n\n  /**\n   * The italic correction of the base (if any)\n   */\n  readonly baseIc: number;\n\n  /**\n   * True if base italic correction should be removed (msub and msubsup or mathaccents)\n   */\n  readonly baseRemoveIc: boolean;\n\n  /**\n   * True if the base is a single character\n   */\n  readonly baseIsChar: boolean;\n\n  /**\n   * True if the base has an accent under or over\n   */\n  readonly baseHasAccentOver: boolean;\n  readonly baseHasAccentUnder: boolean;\n\n  /**\n   * True if this is an overline or underline\n   */\n  readonly isLineAbove: boolean;\n  readonly isLineBelow: boolean;\n\n  /**\n   * True if this is an msup with script that is a math accent\n   */\n  readonly isMathAccent: boolean;\n\n  /**\n   * The script element's wrapper (overridden in subclasses)\n   */\n  readonly scriptChild: W;\n\n  /***************************************************************************/\n  /*\n   *  Methods for information about the core element for the base\n   */\n\n  /**\n   * @return {W}    The wrapper for the base core mi or mo (or whatever)\n   */\n  getBaseCore(): W;\n\n  /**\n   * @return {W}    The base fence item or null\n   */\n  getSemanticBase(): W;\n\n  /**\n   * Recursively retrieves an element for a given fencepointer.\n   *\n   * @param {W} fence The potential fence.\n   * @param {string} id The fencepointer id.\n   * @return {W} The original fence the scripts belong to.\n   */\n  getBaseFence(fence: W, id: string): W;\n\n  /**\n   * @return {number}   The scaling factor for the base core relative to the munderover/msubsup\n   */\n  getBaseScale(): number;\n\n  /**\n   * The base's italic correction (properly scaled)\n   */\n  getBaseIc(): number;\n\n  /**\n   * An adjusted italic correction (for slightly better results)\n   */\n  getAdjustedIc(): number;\n\n  /**\n   * @return {boolean}  True if the base is an mi, mn, or mo (not a largeop) consisting of\n   *                    a single unstretched character\n   */\n  isCharBase(): boolean;\n\n  /**\n   * Determine if the under- and overscripts are under- or overlines.\n   */\n  checkLineAccents(): void;\n\n  /**\n   * @param {W} script   The script node to check for being a line\n   */\n  isLineAccent(script: W): boolean;\n\n  /***************************************************************************/\n  /*\n   *  Methods for sub-sup nodes\n   */\n\n  /**\n   * @return {number}    The base child's width without the base italic correction (if not needed)\n   */\n  getBaseWidth(): number;\n\n  /**\n   * Get the shift for the script (implemented in subclasses)\n   *\n   * @return {number[]}   The horizontal and vertical offsets for the script\n   */\n  getOffset(): number[];\n\n  /**\n   * @param {number} n    The value to use if the base isn't a (non-large-op, unstretched) char\n   * @return {number}     Either n or 0\n   */\n  baseCharZero(n: number): number;\n\n  /**\n   * Get the shift for a subscript (TeXBook Appendix G 18ab)\n   *\n   * @return {number}     The vertical offset for the script\n   */\n  getV(): number;\n\n  /**\n   * Get the shift for a superscript (TeXBook Appendix G 18acd)\n   *\n   * @return {number}     The vertical offset for the script\n   */\n  getU(): number;\n\n  /***************************************************************************/\n  /*\n   *  Methods for under-over nodes\n   */\n\n  /**\n   * @return {boolean}  True if the base has movablelimits (needed by munderover)\n   */\n  hasMovableLimits(): boolean;\n\n  /**\n   * Get the separation and offset for overscripts (TeXBoox Appendix G 13, 13a)\n   *\n   * @param {BBox} basebox  The bounding box of the base\n   * @param {BBox} overbox  The bounding box of the overscript\n   * @return {number[]}     The separation between their boxes, and the offset of the overscript\n   */\n  getOverKU(basebox: BBox, overbox: BBox): number[];\n\n  /**\n   * Get the separation and offset for underscripts (TeXBoox Appendix G 13, 13a)\n   *\n   * @param {BBox} basebox   The bounding box of the base\n   * @param {BBox} underbox  The bounding box of the underscript\n   * @return {number[]}      The separation between their boxes, and the offset of the underscript\n   */\n  getUnderKV(basebox: BBox, underbox: BBox): number[];\n\n  /**\n   * @param {BBox[]} boxes     The bounding boxes whose offsets are to be computed\n   * @param {number[]=} delta  The initial x offsets of the boxes\n   * @return {number[]}        The actual offsets needed to center the boxes in the stack\n   */\n  getDeltaW(boxes: BBox[], delta?: number[]): number[];\n\n  /**\n   * @param {boolean=} noskew   Whether to ignore the skew amount\n   * @return {number}           The offset for under and over\n   */\n  getDelta(noskew?: boolean): number;\n\n  /**\n   * Handle horizontal stretching of children to match greatest width\n   *  of all children\n   */\n  stretchChildren(): void;\n\n}\n\nexport interface CommonScriptbaseClass extends AnyWrapperClass {\n  /**\n   * Set to true for munderover/munder/mover/msup (Appendix G 13)\n   */\n  useIC: boolean;\n}\n\n/**\n * Shorthand for the CommonScriptbase constructor\n *\n * @template W  The child-node Wrapper class\n */\nexport type ScriptbaseConstructor<W extends AnyWrapper> = Constructor<CommonScriptbase<W>>;\n\n/*****************************************************************/\n/**\n * A base class for msup/msub/msubsup and munder/mover/munderover\n * wrapper mixin implementations\n *\n * @template W  The child-node Wrapper class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonScriptbaseMixin<\n  W extends AnyWrapper,\n  T extends WrapperConstructor\n>(Base: T): ScriptbaseConstructor<W> & T {\n\n  return class extends Base {\n\n    /**\n     * Set to false for msubsup/msub (Appendix G 13)\n     */\n    public static useIC: boolean = true;\n\n    /**\n     * The core mi or mo of the base (or the base itself if there isn't one)\n     */\n    public baseCore: W;\n\n    /**\n     * The base element's wrapper\n     */\n    public baseScale: number = 1;\n\n    /**\n     * The relative scaling of the base compared to the munderover/msubsup\n     */\n    public baseIc: number = 0;\n\n    /**\n     * True if base italic correction should be removed (msub and msubsup or mathaccents)\n     */\n    public baseRemoveIc: boolean = false;\n\n    /**\n     * True if the base is a single character\n     */\n    public baseIsChar: boolean = false;\n\n    /**\n     * True if the base has an accent under or over\n     */\n    public baseHasAccentOver: boolean = null;\n    public baseHasAccentUnder: boolean = null;\n\n    /**\n     * True if this is an overline or underline\n     */\n    public isLineAbove: boolean = false;\n    public isLineBelow: boolean = false;\n\n    /**\n     * True if this is an msup with script that is a math accent\n     */\n    public isMathAccent: boolean = false;\n\n    /**\n     * @return {W}  The base element's wrapper\n     */\n    public get baseChild(): W {\n      return this.childNodes[(this.node as MmlMsubsup).base];\n    }\n\n    /**\n     * @return {W}  The script element's wrapper (overridden in subclasses)\n     */\n    public get scriptChild(): W {\n      return this.childNodes[1];\n    }\n\n    /**\n     * @override\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      //\n      //  Find the base core\n      //\n      const core = this.baseCore = this.getBaseCore();\n      if (!core) return;\n      //\n      // Get information about the base element\n      //\n      this.setBaseAccentsFor(core);\n      this.baseScale = this.getBaseScale();\n      this.baseIc = this.getBaseIc();\n      this.baseIsChar = this.isCharBase();\n      //\n      //  Determine if we are setting a mathaccent\n      //\n      this.isMathAccent = this.baseIsChar &&\n        (this.scriptChild && !!this.scriptChild.coreMO().node.getProperty('mathaccent')) as boolean;\n      //\n      // Check for overline/underline accents\n      //\n      this.checkLineAccents();\n      //\n      //  Check if the base is a mi or mo that needs italic correction removed\n      //\n      this.baseRemoveIc = !this.isLineAbove && !this.isLineBelow &&\n        (!(this.constructor as CommonScriptbaseClass).useIC || this.isMathAccent);\n    }\n\n    /***************************************************************************/\n    /*\n     *  Methods for information about the core element for the base\n     */\n\n    /**\n     * @return {W}    The wrapper for the base core mi or mo (or whatever)\n     */\n    public getBaseCore(): W {\n      let core = this.getSemanticBase() || this.childNodes[0];\n      while (core &&\n             ((core.childNodes.length === 1 &&\n               (core.node.isKind('mrow') ||\n                (core.node.isKind('TeXAtom') && core.node.texClass !== TEXCLASS.VCENTER) ||\n                core.node.isKind('mstyle') || core.node.isKind('mpadded') ||\n                core.node.isKind('mphantom') || core.node.isKind('semantics'))) ||\n              (core.node.isKind('munderover') && core.isMathAccent)))  {\n        this.setBaseAccentsFor(core);\n        core = core.childNodes[0];\n      }\n      if (!core) {\n        this.baseHasAccentOver = this.baseHasAccentUnder = false;\n      }\n      return core || this.childNodes[0];\n    }\n\n    /**\n     * @param {W} core   The element to check for accents\n     */\n    public setBaseAccentsFor(core: W) {\n      if (core.node.isKind('munderover')) {\n        if (this.baseHasAccentOver === null) {\n          this.baseHasAccentOver = !!core.node.attributes.get('accent');\n        }\n        if (this.baseHasAccentUnder === null) {\n          this.baseHasAccentUnder = !!core.node.attributes.get('accentunder');\n        }\n      }\n    }\n\n    /**\n     * @return {W}    The base fence item or null\n     */\n    public getSemanticBase(): W {\n      let fence = this.node.attributes.getExplicit('data-semantic-fencepointer') as string;\n      return this.getBaseFence(this.baseChild, fence);\n    }\n\n    /**\n     * Recursively retrieves an element for a given fencepointer.\n     *\n     * @param {W} fence The potential fence.\n     * @param {string} id The fencepointer id.\n     * @return {W} The original fence the scripts belong to.\n     */\n    public getBaseFence(fence: W, id: string): W {\n      if (!fence || !fence.node.attributes || !id) {\n        return null;\n      }\n      if (fence.node.attributes.getExplicit('data-semantic-id') === id) {\n        return fence;\n      }\n      for (const child of fence.childNodes) {\n        const result = this.getBaseFence(child, id);\n        if (result) {\n          return result;\n        }\n      }\n      return null;\n    }\n\n    /**\n     * @return {number}   The scaling factor for the base core relative to the munderover/msubsup\n     */\n    public getBaseScale(): number {\n      let child = this.baseCore as any;\n      let scale = 1;\n      while (child && child !== this) {\n        const bbox = child.getOuterBBox();\n        scale *= bbox.rscale;\n        child = child.parent;\n      }\n      return scale;\n    }\n\n    /**\n     * The base's italic correction (properly scaled)\n     */\n    public getBaseIc(): number {\n      return this.baseCore.getOuterBBox().ic * this.baseScale;\n    }\n\n    /**\n     * An adjusted italic correction (for slightly better results)\n     */\n    public getAdjustedIc(): number {\n      const bbox = this.baseCore.getOuterBBox();\n      return (bbox.ic ? 1.05 * bbox.ic + .05 : 0) * this.baseScale;\n    }\n\n    /**\n     * @return {boolean}  True if the base is an mi, mn, or mo consisting of a single character\n     */\n    public isCharBase(): boolean {\n      let base = this.baseCore;\n      return (((base.node.isKind('mo') && (base as any).size === null) ||\n               base.node.isKind('mi') || base.node.isKind('mn')) &&\n              base.bbox.rscale === 1 && Array.from(base.getText()).length === 1);\n    }\n\n    /**\n     * Determine if the under- and overscripts are under- or overlines.\n     */\n    public checkLineAccents() {\n      if (!this.node.isKind('munderover')) return;\n      if (this.node.isKind('mover')) {\n        this.isLineAbove = this.isLineAccent(this.scriptChild);\n      } else if (this.node.isKind('munder')) {\n        this.isLineBelow = this.isLineAccent(this.scriptChild);\n      } else {\n        const mml = this as unknown as CommonMunderover<W>;\n        this.isLineAbove = this.isLineAccent(mml.overChild);\n        this.isLineBelow = this.isLineAccent(mml.underChild);\n      }\n    }\n\n    /**\n     * @param {W} script   The script node to check for being a line\n     * @return {boolean}   True if the script is U+2015\n     */\n    public isLineAccent(script: W): boolean {\n      const node = script.coreMO().node;\n      return (node.isToken && (node as MmlMo).getText() === '\\u2015');\n    }\n\n    /***************************************************************************/\n    /*\n     *  Methods for sub-sup nodes\n     */\n\n    /**\n     * @return {number}    The base child's width without the base italic correction (if not needed)\n     */\n    public getBaseWidth(): number {\n      const bbox = this.baseChild.getOuterBBox();\n      return bbox.w * bbox.rscale - (this.baseRemoveIc ? this.baseIc : 0) + this.font.params.extra_ic;\n    }\n\n    /**\n     * This gives the common bbox for msub and msup.  It is overridden\n     * for all the others (msubsup, munder, mover, munderover).\n     *\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      const w = this.getBaseWidth();\n      const [x, y] = this.getOffset();\n      bbox.append(this.baseChild.getOuterBBox());\n      bbox.combine(this.scriptChild.getOuterBBox(), w + x, y);\n      bbox.w += this.font.params.scriptspace;\n      bbox.clean();\n      this.setChildPWidths(recompute);\n    }\n\n    /**\n     * Get the shift for the script (implemented in subclasses)\n     *\n     * @return {[number, number]}   The horizontal and vertical offsets for the script\n     */\n    public getOffset(): [number, number] {\n      return [0, 0];\n    }\n\n    /**\n     * @param {number} n    The value to use if the base isn't a (non-large-op, unstretched) char\n     * @return {number}     Either n or 0\n     */\n    public baseCharZero(n: number): number {\n      const largeop = !!this.baseCore.node.attributes.get('largeop');\n      const scale = this.baseScale;\n      return (this.baseIsChar && !largeop && scale === 1 ? 0 : n);\n    }\n\n    /**\n     * Get the shift for a subscript (TeXBook Appendix G 18ab)\n     *\n     * @return {number}     The vertical offset for the script\n     */\n    public getV(): number {\n      const bbox = this.baseCore.getOuterBBox();\n      const sbox = this.scriptChild.getOuterBBox();\n      const tex = this.font.params;\n      const subscriptshift = this.length2em(this.node.attributes.get('subscriptshift'), tex.sub1);\n      return Math.max(\n        this.baseCharZero(bbox.d * this.baseScale + tex.sub_drop * sbox.rscale),\n        subscriptshift,\n        sbox.h * sbox.rscale - (4 / 5) * tex.x_height\n      );\n    }\n\n    /**\n     * Get the shift for a superscript (TeXBook Appendix G 18acd)\n     *\n     * @return {number}     The vertical offset for the script\n     */\n    public getU(): number {\n      const bbox = this.baseCore.getOuterBBox();\n      const sbox = this.scriptChild.getOuterBBox();\n      const tex = this.font.params;\n      const attr = this.node.attributes.getList('displaystyle', 'superscriptshift');\n      const prime = this.node.getProperty('texprimestyle');\n      const p = prime ? tex.sup3 : (attr.displaystyle ? tex.sup1 : tex.sup2);\n      const superscriptshift = this.length2em(attr.superscriptshift, p);\n      return Math.max(\n        this.baseCharZero(bbox.h * this.baseScale - tex.sup_drop * sbox.rscale),\n        superscriptshift,\n        sbox.d * sbox.rscale + (1 / 4) * tex.x_height\n      );\n    }\n\n    /***************************************************************************/\n    /*\n     *  Methods for under-over nodes\n     */\n\n    /**\n     * @return {boolean}  True if the base has movablelimits (needed by munderover)\n     */\n    public hasMovableLimits(): boolean {\n      const display = this.node.attributes.get('displaystyle');\n      const mo = this.baseChild.coreMO().node;\n      return (!display && !!mo.attributes.get('movablelimits'));\n    }\n\n    /**\n     * Get the separation and offset for overscripts (TeXBoox Appendix G 13, 13a)\n     *\n     * @param {BBox} basebox  The bounding box of the base\n     * @param {BBox} overbox  The bounding box of the overscript\n     * @return {[number, number]}     The separation between their boxes, and the offset of the overscript\n     */\n    public getOverKU(basebox: BBox, overbox: BBox): [number, number] {\n      const accent = this.node.attributes.get('accent') as boolean;\n      const tex = this.font.params;\n      const d = overbox.d * overbox.rscale;\n      const t = tex.rule_thickness * tex.separation_factor;\n      const delta = (this.baseHasAccentOver ? t : 0);\n      const T = (this.isLineAbove ? 3 * tex.rule_thickness : t);\n      const k = (accent ? T : Math.max(tex.big_op_spacing1, tex.big_op_spacing3 - Math.max(0, d))) - delta;\n      return [k, basebox.h * basebox.rscale + k + d];\n    }\n\n    /**\n     * Get the separation and offset for underscripts (TeXBoox Appendix G 13, 13a)\n     *\n     * @param {BBox} basebox   The bounding box of the base\n     * @param {BBox} underbox  The bounding box of the underscript\n     * @return {[number, number]}      The separation between their boxes, and the offset of the underscript\n     */\n    public getUnderKV(basebox: BBox, underbox: BBox): [number, number] {\n      const accent = this.node.attributes.get('accentunder') as boolean;\n      const tex = this.font.params;\n      const h = underbox.h * underbox.rscale;\n      const t = tex.rule_thickness * tex.separation_factor;\n      const delta = (this.baseHasAccentUnder ? t : 0);\n      const T = (this.isLineBelow ? 3 * tex.rule_thickness : t);\n      const k = (accent ? T : Math.max(tex.big_op_spacing2, tex.big_op_spacing4 - h)) - delta;\n      return [k, -(basebox.d * basebox.rscale + k + h)];\n    }\n\n    /**\n     * @param {BBox[]} boxes     The bounding boxes whose offsets are to be computed\n     * @param {number[]=} delta  The initial x offsets of the boxes\n     * @return {number[]}        The actual offsets needed to center the boxes in the stack\n     */\n    public getDeltaW(boxes: BBox[], delta: number[] = [0, 0, 0]): number[] {\n      const align = this.node.attributes.get('align');\n      const widths = boxes.map(box => box.w * box.rscale);\n      widths[0] -= (this.baseRemoveIc && !this.baseCore.node.attributes.get('largeop') ? this.baseIc : 0);\n      const w = Math.max(...widths);\n      const dw = [] as number[];\n      let m = 0;\n      for (const i of widths.keys()) {\n        dw[i] = (align === 'center' ? (w - widths[i]) / 2 :\n                 align === 'right' ? w - widths[i] : 0) + delta[i];\n        if (dw[i] < m) {\n          m = -dw[i];\n        }\n      }\n      if (m) {\n        for (const i of dw.keys()) {\n          dw[i] += m;\n        }\n      }\n      [1, 2].map(i => dw[i] += (boxes[i] ? boxes[i].dx * boxes[0].scale : 0));\n      return dw;\n    }\n\n    /**\n     * @param {boolean=} noskew   Whether to ignore the skew amount\n     * @return {number}           The offset for under and over\n     */\n    public getDelta(noskew: boolean = false): number {\n      const accent = this.node.attributes.get('accent');\n      const {sk, ic} = this.baseCore.getOuterBBox();\n      return ((accent && !noskew ? sk : 0) + this.font.skewIcFactor * ic) * this.baseScale;\n    }\n\n    /**\n     * Handle horizontal stretching of children to match greatest width\n     *  of all children\n     */\n    public stretchChildren() {\n      let stretchy: AnyWrapper[] = [];\n      //\n      //  Locate and count the stretchy children\n      //\n      for (const child of this.childNodes) {\n        if (child.canStretch(DIRECTION.Horizontal)) {\n          stretchy.push(child);\n        }\n      }\n      let count = stretchy.length;\n      let nodeCount = this.childNodes.length;\n      if (count && nodeCount > 1) {\n        let W = 0;\n        //\n        //  If all the children are stretchy, find the largest one,\n        //  otherwise, find the width of the non-stretchy children.\n        //\n        let all = (count > 1 && count === nodeCount);\n        for (const child of this.childNodes) {\n          const noStretch = (child.stretch.dir === DIRECTION.None);\n          if (all || noStretch) {\n            const {w, rscale} = child.getOuterBBox(noStretch);\n            if (w * rscale > W) W = w * rscale;\n          }\n        }\n        //\n        //  Stretch the stretchable children\n        //\n        for (const child of stretchy) {\n          (child.coreMO() as CommonMo).getStretchedVariant([W / child.bbox.rscale]);\n        }\n      }\n    }\n\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonSemantics wrapper mixin for the MmlSemantics object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n/**\n * The CommonSemantics interface\n */\nexport interface CommonSemantics extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonSemantics constructor\n */\nexport type SemanticsConstructor = Constructor<CommonSemantics>;\n\n/*****************************************************************/\n/**\n * The CommonSemantics wrapper mixin for the MmlSemantics object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonSemanticsMixin<T extends WrapperConstructor>(Base: T): SemanticsConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, _recompute: boolean = false) {\n      if (this.childNodes.length) {\n        const {w, h, d} = this.childNodes[0].getBBox();\n        bbox.w = w;\n        bbox.h = h;\n        bbox.d = d;\n      }\n    }\n  };\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements a bounding-box object and operations on it\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {BIGDIMEN} from './lengths.js';\n\n/**\n *  The data used to initialize a BBox\n */\nexport type BBoxData = {\n  w?: number,\n  h?: number,\n  d?: number\n};\n\n/*****************************************************************/\n/**\n *  The BBox class\n */\n\nexport class BBox {\n  /**\n   * Constant for pwidth of full width box\n   */\n  public static fullWidth = '100%';\n\n  /**\n   *  CSS styles that affect BBoxes\n   */\n  public static StyleAdjust: [string, string, number?][] = [\n    ['borderTopWidth', 'h'],\n    ['borderRightWidth', 'w'],\n    ['borderBottomWidth', 'd'],\n    ['borderLeftWidth', 'w', 0],\n    ['paddingTop', 'h'],\n    ['paddingRight', 'w'],\n    ['paddingBottom', 'd'],\n    ['paddingLeft', 'w', 0]\n  ];\n\n  /**\n   *  These are the data stored for a bounding box\n   */\n  /* tslint:disable:jsdoc-require */\n  public w: number;\n  public h: number;\n  public d: number;\n  public scale: number;\n  public rscale: number; // scale relative to the parent's scale\n  public L: number;      // extra space on the left\n  public R: number;      // extra space on the right\n  public pwidth: string; // percentage width (for tables)\n  public ic: number;     // italic correction\n  public sk: number;     // skew\n  public dx: number;     // offset for combining characters as accents\n  /* tslint:enable */\n\n  /**\n   * @return {BBox}  A BBox initialized to zeros\n   */\n  public static zero(): BBox {\n    return new BBox({h: 0, d: 0, w: 0});\n  }\n\n  /**\n   * @return {BBox}  A BBox with height and depth not set\n   */\n  public static empty(): BBox {\n    return new BBox();\n  }\n\n  /**\n   * @param {BBoxData} def  The data with which to initialize the BBox\n   *\n   * @constructor\n   */\n  constructor(def: BBoxData = {w: 0, h: -BIGDIMEN, d: -BIGDIMEN}) {\n    this.w = def.w || 0;\n    this.h = ('h' in def ? def.h : -BIGDIMEN);\n    this.d = ('d' in def ? def.d : -BIGDIMEN);\n    this.L = this.R = this.ic = this.sk = this.dx = 0;\n    this.scale = this.rscale = 1;\n    this.pwidth = '';\n  }\n\n  /**\n   * Set up a bbox for append() and combine() operations\n   * @return {BBox}  the boox itself (for chaining calls)\n   */\n  public empty(): BBox {\n    this.w = 0;\n    this.h = this.d = -BIGDIMEN;\n    return this;\n  }\n\n  /**\n   * Convert any unspecified values into zeros\n   */\n  public clean () {\n    if (this.w === -BIGDIMEN) this.w = 0;\n    if (this.h === -BIGDIMEN) this.h = 0;\n    if (this.d === -BIGDIMEN) this.d = 0;\n  }\n\n  /**\n   * @param {number} scale  The scale to use to modify the bounding box size\n   */\n  public rescale(scale: number) {\n    this.w *= scale;\n    this.h *= scale;\n    this.d *= scale;\n  }\n\n  /**\n   * @param {BBox} cbox  A bounding to combine with this one\n   * @param {number} x   An x-offest for the child bounding box\n   * @param {number} y   A y-offset for the child bounding box\n   */\n  public combine(cbox: BBox, x: number = 0, y: number = 0) {\n    let rscale = cbox.rscale;\n    let w = x + rscale * (cbox.w + cbox.L + cbox.R);\n    let h = y + rscale * cbox.h;\n    let d = rscale * cbox.d - y;\n    if (w > this.w) this.w = w;\n    if (h > this.h) this.h = h;\n    if (d > this.d) this.d = d;\n  }\n\n  /**\n   * @param {BBox} cbox  A bounding box to be added to the right of this one\n   */\n  public append(cbox: BBox) {\n    let scale = cbox.rscale;\n    this.w += scale * (cbox.w + cbox.L + cbox.R);\n    if (scale * cbox.h > this.h) {\n      this.h = scale * cbox.h;\n    }\n    if (scale * cbox.d > this.d) {\n      this.d = scale * cbox.d;\n    }\n  }\n\n  /**\n   * @param {BBox} cbox  The bounding box to use to overwrite this one\n   */\n  public updateFrom(cbox: BBox) {\n    this.h = cbox.h;\n    this.d = cbox.d;\n    this.w = cbox.w;\n    if (cbox.pwidth) {\n      this.pwidth = cbox.pwidth;\n    }\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implement FunctionList object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PrioritizedList, PrioritizedListItem} from './PrioritizedList.js';\n\n/*****************************************************************/\n/**\n *  The FunctionListItem interface (extends PrioritizedListItem<Function>)\n */\n\nexport interface FunctionListItem extends PrioritizedListItem<Function> {}\n\n/*****************************************************************/\n/**\n *  Implements the FunctionList class (extends PrioritizedList<Function>)\n */\n\nexport class FunctionList extends PrioritizedList<Function> {\n\n  /**\n   * Executes the functions in the list (in prioritized order),\n   *   passing the given data to the functions.  If any return\n   *   false, the list is terminated.\n   *\n   * @param {any[]} data  The array of arguments to pass to the functions\n   * @return {boolean}    False if any function stopped the list by\n   *                       returning false, true otherwise\n   */\n  public execute(...data: any[]): boolean {\n    for (const item of this) {\n      let result = item.item(...data);\n      if (result === false) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Executes the functions in the list (in prioritized order) asynchronously,\n   *   passing the given data to the functions, and doing the next function\n   *   only when the previous one completes.  If the function returns a\n   *   Promise, then use that to control the flow.  Otherwise, if the\n   *   function returns false, the list is terminated.\n   * This function returns a Promise.  If any function in the list fails,\n   *   the promise fails.  If any function returns false, the promise\n   *   succeeds, but passes false as its argument.  Otherwise it succeeds\n   *   and passes true.\n   *\n   * @param {any[]} data  The array of arguments to pass to the functions\n   * @return {Promise}    The promise that is satisfied when the function\n   *                       list completes (with argument true or false\n   *                       depending on whether some function returned\n   *                       false or not).\n   */\n  public asyncExecute(...data: any[]): Promise<void> {\n    let i = -1;\n    let items = this.items;\n    return new Promise((ok: Function, fail: Function) => {\n      (function execute() {\n        while (++i < items.length) {\n          let result = items[i].item(...data);\n          if (result instanceof Promise) {\n            result.then(execute).catch(err => fail(err));\n            return;\n          }\n          if (result === false) {\n            ok(false);\n            return;\n          }\n        }\n        ok(true);\n      })();\n    });\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements a list sorted by a numeric priority\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\n/*****************************************************************/\n/**\n *  The PrioritizedListItem<DataClass> interface\n *\n * @template DataClass   The class of data stored in the item\n */\n\nexport interface PrioritizedListItem<DataClass> {\n\n  /**\n   * The priority of this item\n   */\n  priority: number;\n\n  /**\n   * The data for the list item\n   */\n  item: DataClass;\n}\n\n/*****************************************************************/\n/**\n *  Implements the PrioritizedList<DataClass> class\n *\n * @template DataClass   The class of data stored in the list\n */\n\nexport class PrioritizedList<DataClass> {\n\n  /**\n   * The default priority for items added to the list\n   */\n  public static DEFAULTPRIORITY: number = 5;\n\n  /**\n   * The list of items, sorted by priority (smallest number first)\n   */\n  protected items: PrioritizedListItem<DataClass>[] = [];\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.items = [];\n  }\n\n  /**\n   * Make the list iterable, and return the data for the items in the list\n   *\n   * @return {{next: Function}}  The object containing the iterator's next() function\n   */\n  public [Symbol.iterator](): Iterator<PrioritizedListItem<DataClass>> {\n    let i = 0;\n    let items = this.items;\n    return {\n      /* tslint:disable-next-line:jsdoc-require */\n      next(): IteratorResult<PrioritizedListItem<DataClass>> {\n        return {value: items[i++], done: (i > items.length)};\n      }\n    };\n  }\n\n  /**\n   * Add an item to the list\n   *\n   * @param {DataClass} item   The data for the item to be added\n   * @param {number} priority  The priority for the item\n   * @return {DataClass}       The data itself\n   */\n  public add(item: DataClass, priority: number = PrioritizedList.DEFAULTPRIORITY): DataClass {\n    let i = this.items.length;\n    do {\n      i--;\n    } while (i >= 0 && priority < this.items[i].priority);\n    this.items.splice(i + 1, 0, {item: item, priority: priority});\n    return item;\n  }\n\n  /**\n   * Remove an item from the list\n   *\n   * @param {DataClass} item   The data for the item to be removed\n   */\n  public remove(item: DataClass) {\n    let i = this.items.length;\n    do {\n      i--;\n    } while (i >= 0 && this.items[i].item !== item);\n    if (i >= 0) {\n      this.items.splice(i, 1);\n    }\n  }\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CssStyles class for handling stylesheets\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\n/**\n * The data for a selector\n */\nexport type StyleData = {\n  [property: string]: string | number;\n};\n\n/**\n * A list of selectors and their data (basically a stylesheet)\n */\nexport type StyleList = {\n  [selector: string]: StyleData;\n};\n\n/******************************************************************************/\n/**\n * The CssStyles class (for managing a collection of CSS style definitions)\n */\n\nexport class CssStyles {\n  /**\n   * The styles as they currently stand\n   */\n  protected styles: StyleList = {};\n\n  /**\n   * @return {string}  The styles as a CSS string\n   */\n  get cssText(): string {\n    return this.getStyleString();\n  }\n\n  /**\n   * @param {StyleList} styles  The initial styles to use, if any\n   * @constructor\n   */\n  constructor(styles: StyleList = null) {\n    this.addStyles(styles);\n  }\n\n  /**\n   * @param {StyleList} styles  The styles to combine with the existing ones\n   */\n  public addStyles(styles: StyleList) {\n    if (!styles) return;\n    for (const style of Object.keys(styles)) {\n      if (!this.styles[style]) {\n        this.styles[style] = {};\n      }\n      Object.assign(this.styles[style], styles[style]);\n    }\n  }\n\n  /**\n   * @param {string[]} selectors  The selectors for the styles to remove\n   */\n  public removeStyles(...selectors: string[]) {\n    for (const selector of selectors) {\n      delete this.styles[selector];\n    }\n  }\n\n  /**\n   * Clear all the styles\n   */\n  public clear() {\n    this.styles = {};\n  }\n\n  /**\n   * @return {string} The CSS string for the style list\n   */\n  public getStyleString(): string {\n    return this.getStyleRules().join('\\n\\n');\n  }\n\n  /**\n   * @return {string[]}  An array of rule strings for the style list\n   */\n  public getStyleRules(): string[] {\n    const selectors = Object.keys(this.styles);\n    const defs: string[] = new Array(selectors.length);\n    let i = 0;\n    for (const selector of selectors) {\n      defs[i++] = selector + ' {\\n' + this.getStyleDefString(this.styles[selector]) + '\\n}';\n    }\n    return defs;\n  }\n\n  /**\n   * @param {StyleData} styles  The style data to be stringified\n   * @return {string}           The CSS string for the given data\n   */\n  public getStyleDefString(styles: StyleData): string {\n    const properties = Object.keys(styles);\n    const values: string[] = new Array(properties.length);\n    let i = 0;\n    for (const property of properties) {\n      values[i++] = '  ' + property + ': ' + styles[property] + ';';\n    }\n    return values.join('\\n');\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements a lite CssStyleDeclaration replacement\n *                (very limited in scope)\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\n/**\n * An object contining name: value pairs\n */\nexport type StyleList = {[name: string]: string};\n\n/**\n * Data for how to map a combined style (like border) to its children\n */\nexport type connection = {\n  children: string[],               // suffix names to add to the base name\n  split: (name: string) => void,    // function to split the value for the children\n  combine: (name: string) => void   // function to combine the child values when one changes\n};\n\n/**\n * A collection of connections\n */\nexport type connections = {[name: string]: connection};\n\n/*********************************************************/\n/**\n * Some common children arrays\n */\nconst TRBL = ['top', 'right', 'bottom', 'left'];\nconst WSC = ['width', 'style', 'color'];\n\n/**\n * Split a style at spaces (taking quotation marks and commas into account)\n *\n * @param {string} text  The combined styles to be split at spaces\n * @return {string[]}    Array of parts of the style (separated by spaces)\n */\nfunction splitSpaces(text: string): string[] {\n  const parts = text.split(/((?:'[^']*'|\"[^\"]*\"|,[\\s\\n]|[^\\s\\n])*)/g);\n  const split = [] as string[];\n  while (parts.length > 1) {\n    parts.shift();\n    split.push(parts.shift());\n  }\n  return split;\n}\n\n/*********************************************************/\n/**\n * Split a top-right-bottom-left group into its parts\n * Format:\n *    x           all are the same value\n *    x y         same as x y x y\n *    x y z       same as x y z y\n *    x y z w     each specified\n *\n * @param {string} name   The style to be processed\n */\n\nfunction splitTRBL(name: string) {\n  const parts = splitSpaces(this.styles[name]);\n  if (parts.length === 0) {\n    parts.push('');\n  }\n  if (parts.length === 1) {\n    parts.push(parts[0]);\n  }\n  if (parts.length === 2) {\n    parts.push(parts[0]);\n  }\n  if (parts.length === 3) {\n    parts.push(parts[1]);\n  }\n  for (const child of Styles.connect[name].children) {\n    this.setStyle(this.childName(name, child), parts.shift());\n  }\n}\n\n/**\n * Combine top-right-bottom-left into one entry\n * (removing unneeded values)\n *\n * @param {string} name   The style to be processed\n */\nfunction combineTRBL(name: string) {\n  const children = Styles.connect[name].children;\n  const parts = [] as string[];\n  for (const child of children) {\n    const part = this.styles[name + '-' + child];\n    if (!part) {\n      delete this.styles[name];\n      return;\n    }\n    parts.push(part);\n  }\n  if (parts[3] === parts[1]) {\n    parts.pop();\n    if (parts[2] === parts[0]) {\n      parts.pop();\n      if (parts[1] === parts[0]) {\n        parts.pop();\n      }\n    }\n  }\n  this.styles[name] = parts.join(' ');\n}\n\n/*********************************************************/\n/**\n * Use the same value for all children\n *\n * @param {string} name   The style to be processed\n */\nfunction splitSame(name: string) {\n  for (const child of Styles.connect[name].children) {\n    this.setStyle(this.childName(name, child), this.styles[name]);\n  }\n}\n\n/**\n * Check that all children have the same values and\n * if so, set the parent to that value\n *\n * @param {string} name   The style to be processed\n */\nfunction combineSame(name: string) {\n  const children = [...Styles.connect[name].children];\n  const value = this.styles[this.childName(name, children.shift())];\n  for (const child of children) {\n    if (this.styles[this.childName(name, child)] !== value) {\n      delete this.styles[name];\n      return;\n    }\n  }\n  this.styles[name] = value;\n}\n\n/*********************************************************/\n/**\n * Patterns for the parts of a boarder\n */\nconst BORDER: {[name: string]: RegExp} = {\n  width: /^(?:[\\d.]+(?:[a-z]+)|thin|medium|thick|inherit|initial|unset)$/,\n  style: /^(?:none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|inherit|initial|unset)$/\n};\n\n/**\n * Split a width-style-color border definition\n *\n * @param {string} name   The style to be processed\n */\nfunction splitWSC(name: string) {\n  let parts = {width: '', style: '', color: ''} as StyleList;\n  for (const part of splitSpaces(this.styles[name])) {\n    if (part.match(BORDER.width) && parts.width === '') {\n      parts.width = part;\n    } else if (part.match(BORDER.style) && parts.style === '') {\n      parts.style = part;\n    } else {\n      parts.color = part;\n    }\n  }\n  for (const child of Styles.connect[name].children) {\n    this.setStyle(this.childName(name, child), parts[child]);\n  }\n}\n\n/**\n * Combine with-style-color border definition from children\n *\n * @param {string} name   The style to be processed\n */\nfunction combineWSC(name: string) {\n  const parts = [] as string[];\n  for (const child of Styles.connect[name].children) {\n    const value = this.styles[this.childName(name, child)];\n    if (value) {\n      parts.push(value);\n    }\n  }\n  if (parts.length) {\n    this.styles[name] = parts.join(' ');\n  } else {\n    delete this.styles[name];\n  }\n}\n\n/*********************************************************/\n/**\n * Patterns for the parts of a font declaration\n */\nconst FONT: {[name: string]: RegExp} = {\n  style: /^(?:normal|italic|oblique|inherit|initial|unset)$/,\n  variant: new RegExp('^(?:' +\n                      ['normal|none',\n                       'inherit|initial|unset',\n                       'common-ligatures|no-common-ligatures',\n                       'discretionary-ligatures|no-discretionary-ligatures',\n                       'historical-ligatures|no-historical-ligatures',\n                       'contextual|no-contextual',\n                       '(?:stylistic|character-variant|swash|ornaments|annotation)\\\\([^)]*\\\\)',\n                       'small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps',\n                       'lining-nums|oldstyle-nums|proportional-nums|tabular-nums',\n                       'diagonal-fractions|stacked-fractions',\n                       'ordinal|slashed-zero',\n                       'jis78|jis83|jis90|jis04|simplified|traditional',\n                       'full-width|proportional-width',\n                       'ruby'].join('|') + ')$'),\n  weight: /^(?:normal|bold|bolder|lighter|[1-9]00|inherit|initial|unset)$/,\n  stretch: new RegExp('^(?:' +\n                      ['normal',\n                       '(?:(?:ultra|extra|semi)-)?condensed',\n                       '(?:(?:semi|extra|ulta)-)?expanded',\n                       'inherit|initial|unset']. join('|') + ')$'),\n  size: new RegExp('^(?:' +\n                   ['xx-small|x-small|small|medium|large|x-large|xx-large|larger|smaller',\n                    '[\\d.]+%|[\\d.]+[a-z]+',\n                    'inherit|initial|unset'].join('|') + ')' +\n                   '(?:\\/(?:normal|[\\d.\\+](?:%|[a-z]+)?))?$')\n};\n\n/**\n * Split a font declaration into is parts (not perfect but good enough for now)\n *\n * @param {string} name   The style to be processed\n */\nfunction splitFont(name: string) {\n  const parts = splitSpaces(this.styles[name]);\n  //\n  //  The parts found (array means can be more than one word)\n  //\n  const value = {\n    style: '', variant: [], weight: '', stretch: '',\n    size: '', family: '', 'line-height': ''\n  } as {[name: string]: string | string[]};\n  for (const part of parts) {\n    value.family = part; // assume it is family unless otherwise (family must be present)\n    for (const name of Object.keys(FONT)) {\n      if ((Array.isArray(value[name]) || value[name] === '') && part.match(FONT[name])) {\n        if (name === 'size') {\n          //\n          // Handle size/line-height\n          //\n          const [size, height] = part.split(/\\//);\n          value[name] = size;\n          if (height) {\n            value['line-height'] = height;\n          }\n        } else if (value.size === '') {\n          //\n          // style, weight, variant, stretch must appear before size\n          //\n          if (Array.isArray(value[name])) {\n            (value[name] as string[]).push(part);\n          } else {\n            value[name] = part;\n          }\n        }\n      }\n    }\n  }\n  saveFontParts(name, value);\n  delete this.styles[name]; // only use the parts, not the font declaration itself\n}\n\n/**\n * @param {string} name   The style to be processed\n * @param {{[name: string]: string | string[]}} value  The list of parts detected above\n */\nfunction saveFontParts(name: string, value: {[name: string]: string | string[]}) {\n  for (const child of Styles.connect[name].children) {\n    const cname = this.childName(name, child);\n    if (Array.isArray(value[child])) {\n      const values = value[child] as string[];\n      if (values.length) {\n        this.styles[cname] = values.join(' ');\n      }\n    } else  if (value[child] !== '') {\n      this.styles[cname] = value[child];\n    }\n  }\n}\n\n/**\n * Combine font parts into one (we don't actually do that)\n */\nfunction combineFont(_name: string) {}\n\n/*********************************************************/\n/**\n * Implements the Styles object (lite version of CssStyleDeclaration)\n */\nexport class Styles {\n\n  /**\n   * Patterns for style values and comments\n   */\n  public static pattern: {[name: string]: RegExp} = {\n    style: /([-a-z]+)[\\s\\n]*:[\\s\\n]*((?:'[^']*'|\"[^\"]*\"|\\n|.)*?)[\\s\\n]*(?:;|$)/g,\n    comment: /\\/\\*[^]*?\\*\\//g\n  };\n\n  /**\n   * The mapping of parents to children, and how to split and combine them\n   */\n  public static connect: connections = {\n    padding: {\n      children: TRBL,\n      split: splitTRBL,\n      combine: combineTRBL\n    },\n\n    border: {\n      children: TRBL,\n      split: splitSame,\n      combine: combineSame\n    },\n    'border-top': {\n      children: WSC,\n      split: splitWSC,\n      combine: combineWSC\n    },\n    'border-right': {\n      children: WSC,\n      split: splitWSC,\n      combine: combineWSC\n    },\n    'border-bottom': {\n      children: WSC,\n      split: splitWSC,\n      combine: combineWSC\n    },\n    'border-left': {\n      children: WSC,\n      split: splitWSC,\n      combine: combineWSC\n    },\n    'border-width': {\n      children: TRBL,\n      split: splitTRBL,\n      combine: null      // means its children combine to a different parent\n    },\n    'border-style': {\n      children: TRBL,\n      split: splitTRBL,\n      combine: null      // means its children combine to a different parent\n    },\n    'border-color': {\n      children: TRBL,\n      split: splitTRBL,\n      combine: null      // means its children combine to a different parent\n    },\n\n    font: {\n      children: ['style', 'variant', 'weight', 'stretch', 'line-height', 'size', 'family'],\n      split: splitFont,\n      combine: combineFont\n    }\n  };\n\n  /**\n   * The list of styles defined for this declaration\n   */\n  protected styles: StyleList;\n\n  /**\n   * @param {string} cssText  The initial definition for the style\n   * @constructor\n   */\n  constructor(cssText: string = '') {\n    this.parse(cssText);\n  }\n\n  /**\n   * @return {string}  The CSS string for the styles currently defined\n   */\n  public get cssText(): string {\n    const styles = [] as string[];\n    for (const name of Object.keys(this.styles)) {\n      const parent = this.parentName(name);\n      if (!this.styles[parent]) {\n        styles.push(name + ': ' + this.styles[name] + ';');\n      }\n    }\n    return styles.join(' ');\n  }\n\n  /**\n   * @param {string} name   The name of the style to set\n   * @param {string|number|boolean} value The value to set it to\n   */\n  public set(name: string, value: string | number | boolean) {\n    name = this.normalizeName(name);\n    this.setStyle(name, value as string);\n    //\n    // If there is no combine function ,the children combine to\n    // a separate parent (e.g., border-width sets border-top-width, etc.\n    // and combines to border-top)\n    //\n    if (Styles.connect[name] && !Styles.connect[name].combine) {\n      this.combineChildren(name);\n      delete this.styles[name];\n    }\n    //\n    // If we just changed a child, we need to try to combine\n    // it with its parent's other children\n    //\n    while (name.match(/-/)) {\n      name = this.parentName(name);\n      if (!Styles.connect[name]) break;\n      Styles.connect[name].combine.call(this, name);\n    }\n  }\n\n  /**\n   * @param {string} name  The name of the style to get\n   * @return {string}      The value of the style (or empty string if not defined)\n   */\n  public get(name: string): string {\n    name = this.normalizeName(name);\n    return (this.styles.hasOwnProperty(name) ? this.styles[name] : '');\n  }\n\n  /**\n   * @param {string} name   The name of the style to set (without causing parent updates)\n   * @param {string} value  The value to set it to\n   */\n  protected setStyle(name: string, value: string) {\n    this.styles[name] = value;\n    if (Styles.connect[name] && Styles.connect[name].children) {\n      Styles.connect[name].split.call(this, name);\n    }\n    if (value === '') {\n      delete this.styles[name];\n    }\n  }\n\n  /**\n   * @param {string} name   The name of the style whose parent is to be combined\n   */\n  protected combineChildren(name: string) {\n    const parent = this.parentName(name);\n    for (const child of Styles.connect[name].children) {\n      const cname = this.childName(parent, child);\n      Styles.connect[cname].combine.call(this, cname);\n    }\n  }\n\n  /**\n   * @param {string} name   The name of the style whose parent style is to be found\n   * @return {string}       The name of the parent, or '' if none\n   */\n  protected parentName(name: string): string {\n    const parent = name.replace(/-[^-]*$/, '');\n    return (name === parent ? '' : parent);\n  }\n\n  /**\n   * @param {string} name   The name of the parent style\n   * @param {string} child  The suffix to be added to the parent\n   * @preturn {string}      The combined name\n   */\n  protected childName(name: string, child: string) {\n    //\n    // If the child contains a dash, it is already the fill name\n    //\n    if (child.match(/-/)) {\n      return child;\n    }\n    //\n    // For non-combining styles, like border-width, insert\n    //   the child name before the find word, e.g., border-top-width\n    //\n    if (Styles.connect[name] && !Styles.connect[name].combine) {\n      child += name.replace(/.*-/, '-');\n      name = this.parentName(name);\n    }\n    return name + '-' + child;\n  }\n\n  /**\n   * @param {string} name  The name of a style to normalize\n   * @return {string}      The name converted from CamelCase to lowercase with dashes\n   */\n  protected normalizeName(name: string): string {\n    return name.replace(/[A-Z]/g, c => '-' + c.toLowerCase());\n  }\n\n  /**\n   * @param {string} cssText  A style text string to be parsed into separate styles\n   *                          (by using this.set(), we get all the sub-styles created\n   *                           as well as the merged style shorthands)\n   */\n  protected parse(cssText: string = '') {\n    let PATTERN = (this.constructor as typeof Styles).pattern;\n    this.styles = {};\n    const parts = cssText.replace(PATTERN.comment, '').split(PATTERN.style);\n    while (parts.length > 1) {\n      let [space, name, value] = parts.splice(0, 3);\n      if (space.match(/[^\\s\\n]/)) return;\n      this.set(name, value);\n    }\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements some numeric utility functions\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\n/**\n * @param {number[]} A  The array to sum\n * @return {number}     The summ of the elements in A\n */\nexport function sum(A: number[]): number {\n  return A.reduce((a, b) => a + b, 0);\n}\n\n/**\n * @param {number[]} A  The array whose maximum entry is sought\n * @return {number}     The largest entry in the array\n */\nexport function max(A: number[]): number {\n  return A.reduce((a, b) => Math.max(a, b), 0);\n}\n"],"names":["options","adaptor","CLASS","this","constructor","userOptions","defaultOptions","OPTIONS","postFilters","FunctionList","NAME","setAdaptor","initialize","reset","getMetrics","_document","styleSheet","pageElements","executeFilters","filters","math","document","data","args","execute","AbstractOutputJax","factory","node","kind","wrap","AbstractWrapper","create","AbstractFactory","AbstractWrapperFactory","CHTMLWrapperFactory","TeXFont","chtmlStyles","font","adaptiveCSS","wrapperUsage","Usage","escaped","html","setDocument","text","styles","CssStyles","addWrapperStyles","updateFontStyles","insertRules","getStyleRules","sheet","setAttribute","CHTML","STYLESHEETID","update","addStyles","updateStyles","wrapper","getNodeClass","addClassStyles","autoStyle","display","add","processMath","parent","toCHTML","clearCache","cssStyles","clear","unknownText","variant","width","scale","metrics","fixed","padding","LENGTHS","em","c","unicodeChars","length","cssFontStyles","getCssFont","Math","round","style","measureTextNode","textNode","clone","setStyle","getStyle","replace","position","append","start","container","w","nodeSize","remove","h","d","CommonOutputJax","matchFontHeight","commonStyles","color","visibility","RenderElement","name","offset","_child","shape","adjustBorder","getOffset","thickness","Notation","THICKNESS","transform","chtml","Border","side","CommonBorder","child","Border2","side1","side2","CommonBorder2","border","DiagonalStrike","neg","CommonDiagonalStrike","cname","getBBox","getArgMod","a","W","t","strike","DiagonalArrow","CommonDiagonalArrow","arrow","Arrow","CommonArrow","FONTSIZE","SPACE","standardCHTMLnode","childNodes","markUsed","createCHTMLnode","handleStyles","handleVariant","handleScale","handleColor","handleSpace","handleAttributes","handlePWidth","jax","href","attributes","get","cssText","family","isToken","getVariant","classes","setScale","bbox","rscale","abs","size","percent","L","R","dimen","margin","space","mathcolor","getExplicit","mathbackground","background","defaults","getAllDefaults","skip","CHTMLWrapper","skipAttributes","getExplicitNames","hasAttribute","names","trim","split","addClass","pwidth","BBox","fullWidth","setIndent","align","shift","drawBBox","box","opacity","height","getAttribute","fontsize","type","def","content","char","n","charSelector","substr","CommonWrapper","defaultNodes","CHTMLWrappers","CommonWrapperFactory","CHTMLmath","CHTMLmrow","CHTMLinferredMrow","CHTMLmi","CHTMLmo","CHTMLmn","CHTMLms","CHTMLmtext","CHTMLmspace","CHTMLmpadded","CHTMLmenclose","CHTMLmfrac","CHTMLmsqrt","CHTMLmroot","CHTMLmsub","CHTMLmsup","CHTMLmsubsup","CHTMLmunder","CHTMLmover","CHTMLmunderover","CHTMLmmultiscripts","CHTMLmfenced","CHTMLmtable","CHTMLmtr","CHTMLmlabeledtr","CHTMLmtd","CHTMLmaction","CHTMLmglyph","CHTMLsemantics","CHTMLannotation","CHTMLannotationXML","CHTMLxml","CHTMLTeXAtom","CHTMLTextNode","TEXCLASSNAMES","texClass","TEXCLASS","VCENTER","dh","params","axis_height","TeXAtom","prototype","CommonTeXAtomMixin","getText","chars","remappedText","getVariantChar","f","unknown","String","fromCodePoint","class","charUsage","TextNode","CommonTextNodeMixin","selected","action","setEventHandler","handler","addEventListener","MmlMaction","bottom","right","cursor","left","actions","Map","_data","mml","event","end","typesetRoot","nextToggleSelection","rerender","stopPropagation","tip","isKind","dy","dx","firstChild","stopTimers","timeout","setTimeout","postDelay","hoverTimer","set","clearDelay","clearTimer","TooltipData","status","body","CommonMactionMixin","handleDisplay","handleInline","getAlignShift","table","getOuterBBox","max","setChildPWidths","recompute","MmlMath","CommonMathMixin","Angle","x","y","atan2","toFixed","ANGLE","ARROWDX","ARROWY","block","renderChild","Object","keys","notations","notation","renderer","pbox","getPadding","sideNames","i","sideIndex","double","dist","adjustArrow","moveArrow","head","arrowhead","ARROWX","map","line","rthead","rbhead","lthead","lbhead","adjustHead","adjustLine","join","adjustThickness","m","MmlMenclose","top","SOLID","PADDING","fullBBox","fullBorder","sin","p","arc","msqrt","TRBL","sqrtTRBL","init","createMsqrt","CommonMencloseMixin","mrow","MmlMfenced","CommonMfencedMixin","getList","linethickness","bevelled","isDisplay","makeBevelled","length2em","makeAtop","makeFraction","num","den","numalign","denomalign","attr","fattr","getProperty","delims","nattr","dattr","dsattr","nsattr","tex","tEm","getTUV","T","u","v","nh","atop","getUVQ","q","bevel","getBevelData","delta","nbox","dbox","MmlMfrac","overflow","CommonMfracMixin","charWrapper","src","alt","valign","verticalAlign","img","title","MmlMglyph","CommonMglyphMixin","MmlMi","CommonMiMixin","scriptData","scriptalign","preAlign","postAlign","sub","combinePrePost","psub","sup","psup","numPrescripts","scripts","addScripts","firstPrescript","numScripts","isPre","U","rowdef","tabledef","supRow","sepRow","subRow","MmlMmultiscripts","CommonMmultiscriptsMixin","MmlMn","CommonMnMixin","symmetric","stretch","dir","stretchy","getStretchedVariant","stretchHTML","getCenterOffset","getAccentOffset","codePointAt","delimUsage","delim","push","DirectionVH","properties","MmlMo","CommonMoMixin","getDimens","dd","dw","rbox","MmlMpadded","CommonMpaddedMixin","addRoot","ROOT","root","sbox","H","getRootDimens","MmlMroot","CommonMrootMixin","isInferred","hasNegative","MmlMrow","CommonMrowMixin","MmlInferredMrow","CommonInferredMrowMixin","MmlMs","CommonMsMixin","MmlMspace","CommonMspaceMixin","SURD","BASE","surd","base","getPQ","rule_thickness","SQRT","paddingTop","_ROOT","_root","_sbox","_H","MmlMsqrt","CommonMsqrtMixin","MmlMsub","CommonMsubMixin","CHTMLscriptbase","MmlMsup","CommonMsupMixin","baseChild","supChild","subChild","stack","ic","getAdjustedIc","baseRemoveIc","baseIc","MmlMsubsup","CommonMsubsupMixin","itable","labels","isTop","padRows","handleColumnSpacing","handleColumnLines","handleColumnWidths","handleRowSpacing","handleRowLines","handleRowHeights","handleFrame","handleWidth","handleLabels","handleAlign","handleJustify","shiftColor","row","numCols","spacing","getEmHalfSpacing","fSpace","cSpace","frame","tableRows","tableCells","cell","lspace","rspace","styleNode","lines","getColumnAttributes","slice","cWidths","rSpace","tspace","bspace","numRows","getRowAttributes","handleEqualRows","getRowHalfSpacing","getTableData","D","NH","ND","HD","getEqualRowHeight","setRowHeight","rLines","setRowBaseline","ralign","setCellBaseline","calign","lastChild","fLine","isPercent","hasLabels","getAlignmentRow","getVerticalPosition","addLabelPadding","updateRowHeights","addLabelSpacing","getPadAlignShift","equal","current","insert","next","MmlMtable","CommonMtableMixin","MmlMtd","CommonMtdMixin","MmlMtext","CommonMtextMixin","MmlMtr","CommonMtrMixin","rowalign","MmlMlabeledtr","CommonMlabeledtrMixin","hasMovableLimits","under","scriptChild","basebox","underbox","k","getUnderKV","isLineBelow","getDelta","setDeltaW","getDeltaW","adjustUnderDepth","MmlMunder","CommonMunderMixin","over","overbox","adjustBaseHeight","getOverKU","isLineAbove","adjustOverDepth","MmlMover","CommonMoverMixin","overChild","underChild","ok","uk","MmlMunderover","CommonMunderoverMixin","nodes","minH","x_height","CommonScriptbaseMixin","MmlSemantics","CommonSemanticsMixin","computeBBox","MmlAnnotation","MmlAnnotationXML","getXML","_recompute","measureXMLnode","getStyles","getScale","XMLNode","Array","fill","fullPadding","arrowHead","arrowBBoxHD","arrowBBoxW","arrowDef","up","PI","down","updown","leftright","diagonalArrowDef","updiagonal","northeast","southeast","northwest","southwest","northeastsouthwest","northwestsoutheast","arrowBBox","render","i1","i2","charAt","pi","arrowAW","arrowData","ax","ay","adx","b","ar","angle","isVertical","defaultFactory","defaultFont","separateOptions","jaxOptions","fontOptions","wrapperFactory","unknownCache","typeset","createNode","toDOM","pxPerEm","ex","setTeXclass","nodeMap","maps","getMetricMaps","state","STATE","METRICS","containerWidth","lineWidth","setMetrics","mtextInheritFont","outputData","mtextFamily","merrorInheritFont","merrorFamily","getMetricsFor","getFamily","test","getTestElement","measureMetrics","domMaps","has","values","testInline","testDisplay","fontFamily","fontSize","childNode","exFactor","nodeBBox","minScale","addFontStyles","id","getKinds","ns","measureText","setAttributes","measureTextNodeWithCache","cached","xml","italic","bold","getFontData","Styles","mtextFont","merrorFont","mathmlSpacing","displayAlign","displayIndent","SMALLSIZE","MathMLSpace","script","removedStyles","bboxComputed","NOSTRETCH","zero","getSpace","wrapped","notParent","save","obox","assign","StyleAdjust","empty","clean","fixesPWidth","changed","cbox","invalidateBBox","copySkewIC","first","sk","last","styleString","removeStyles","fontWeight","weight","fontStyle","fontfamily","fontweight","fontstyle","match","parseInt","explicitVariant","BOLDVARIANTS","ITALICVARIANTS","pscale","scriptlevel","min","mathsize","getInherited","pow","scriptminsize","isTopEmbellished","hasSpacing","hasSpacingAttributes","getMathMLSpacing","getTeXSpacing","coreMO","coreParent","isScript","isSet","childIndex","prev","isEmbellished","texSpacing","core","canStretch","direction","indentAttributes","indentalign","indentshift","indentalignfirst","indentshiftfirst","getAlignX","getAlignY","getWrapWidth","getChildAlign","_i","px","M","BIGDIMEN","smp","remapChars","mmlText","setText","mmlNode","children","createMo","mmlFactory","inheritAttributesFrom","getChar","xmlns","normal","fraktur","Base","clearTimeout","delete","_node","getParameters","selection","offsets","updateFrom","getNotations","removeRedundantNotations","initializeNotations","getBBoxExtenders","undefined","parseFloat","Notations","B","combine","maximizeEntries","BTRBL","X","Y","sqrt","_w","_a","_double","_offset","_dist","r","createMrow","addMrowChildren","mfenced","addMo","open","separators","close","stretchChildren","mo","pad","nulldelimiterspace","getBevelledBBox","getAtopBBox","getFractionBBox","num1","num2","denom1","denom2","num3","lbox","_direction","displaystyle","index","NextScript","subList","supList","psubList","psupList","ScriptNames","getScriptData","pre","post","scriptspace","lists","getScriptBBoxLists","combineBBoxLists","padLists","list1","list2","bbox1","bbox2","getScaledWHD","w1","h1","d1","w2","h2","d2","subbox","supbox","UVQ","getU","getV","getRemappedChar","concat","isAccent","protoBBox","from","getDelimiter","WH","exact","getWH","getSize","Infinity","mathaccent","df","delimiterfactor","ds","delimitershortfall","sizes","getSizeVariant","schar","getStretchBBox","checkExtendedHeight","value","WHD","C","hasOwnProperty","HDW","getBaseline","hasWHD","ch","cd","fullExt","extSize","endSize","ceil","primes","depth","voffset","combineRootBBox","BBOX","rootHeight","count","nodeCount","all","noStretch","quotes","lquote","rquote","unshift","createText","surdH","surdbox","_bbox","useIC","getBaseWidth","baseCore","subscriptshift","sub2","drop","baseCharZero","baseScale","sub_drop","pwidthCells","pWidth","numCells","reduce","findContainer","getPercentageWidth","convertLengths","getAttributeArray","cLines","getColumnWidths","stretchRows","stretchColumns","containerI","childPosition","rows","hd","stretchColumn","getChild","LW","j","updateHDW","recordPWidthCell","labeled","extendHD","sum","CW","getComputedWidths","getBBoxHD","getBBoxLR","setColumnPWidths","cwidth","_clear","labelInWidth","cols","getColumnWidthsFixed","center","baseline","axis","lpad","rpad","getWidth","apply","getEqualColumns","swidths","getColumnWidthsAuto","getColumnWidthsPercent","hasFit","indexOf","indices","fit","filter","auto","forEach","fw","fspace","fspaceEm","spaceEm","addEm","getColumnHalfSpacing","columns","splice","getDefault","list","_j","merror","Parent","INHERITFONTS","getChildBBoxes","bw","uw","big_op_spacing5","ow","z","baseIsChar","baseHasAccentOver","baseHasAccentUnder","isMathAccent","getBaseCore","setBaseAccentsFor","getBaseScale","getBaseIc","isCharBase","checkLineAccents","getSemanticBase","fence","getBaseFence","result","isLineAccent","extra_ic","largeop","sub1","sup3","sup1","sup2","superscriptshift","sup_drop","accent","separation_factor","big_op_spacing1","big_op_spacing3","big_op_spacing2","big_op_spacing4","boxes","widths","noskew","skewIcFactor","rescale","item","asyncExecute","items","Promise","fail","then","catch","err","PrioritizedList","Symbol","iterator","done","priority","DEFAULTPRIORITY","getStyleString","selectors","selector","defs","getStyleDefString","property","WSC","splitSpaces","parts","splitTRBL","connect","childName","combineTRBL","part","pop","splitSame","combineSame","BORDER","splitWSC","combineWSC","FONT","RegExp","splitFont","isArray","saveFontParts","combineFont","_name","parse","parentName","normalizeName","combineChildren","call","toLowerCase","PATTERN","pattern","comment","A"],"sourceRoot":""}