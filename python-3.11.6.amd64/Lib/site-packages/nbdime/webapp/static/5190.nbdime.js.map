{"version":3,"file":"5190.nbdime.js","mappings":"+KAwBa,EAAAA,QAAU,O,63BCDvB,IAiBA,2B,8CAwCA,QAxC0C,OAMjC,YAAAC,SAAP,SAAgBC,GACd,OAAOC,KAAKC,IAAIF,EAASA,EAAQG,SACnC,EAKO,YAAAC,WAAP,SAAkBJ,GAChBC,KAAKI,OAAOL,EACd,EAMO,YAAAM,gBAAP,SAAuBC,G,YACrB,IAAmB,QAAAN,MAAI,8BAAE,CAApB,IACCD,EADS,QACMQ,KACnB,GAAIR,EAAQM,gBAAgBC,GAC1B,OAAOP,C,mGAGX,MAAM,IAAIS,MAAM,kCAClB,EAOO,YAAAF,SAAP,SAAgBA,EAAeG,GAC7B,YAD6B,IAAAA,IAAAA,EAAA,MACtBT,KAAKK,gBAAgBC,GAAUI,OAAOJ,EAAUG,EACzD,EAEF,EAxCA,CAjBA,SAiB0CE,iBAA7B,EAAAC,YAAAA,C,oFCjBb,eACA,UACA,WAQa,EAAAC,QAAU,CAIrBC,QAAS,EAAAjB,QAKTkB,SAAU,IAAI,EAAAH,YASdN,SAAU,SAAUA,EAAeG,GACjC,OAAO,EAAAI,QAAQE,SAAST,SAASA,EAAUG,EAC7C,EAKAO,iBAAkB,EAAAA,iBAClBC,WAAY,EAAAA,WAKZC,UAAW,K,0FCdb,iBAeE,aALU,KAAAC,MAA0C,GAMlDnB,KAAKmB,MAAQ,EACf,CAgDF,OAzCS,YAACC,OAAOC,UAAf,WACE,IAAIC,EAAI,EACJH,EAAQnB,KAAKmB,MACjB,MAAO,CAELI,KAAA,WACE,MAAO,CAACC,MAAOL,EAAMG,KAAMG,KAAOH,EAAIH,EAAMO,OAC9C,EAEJ,EASO,YAAAzB,IAAP,SAAWM,EAAiBL,QAAA,IAAAA,IAAAA,EAAmBS,EAAgBgB,iBAC7D,IAAIL,EAAItB,KAAKmB,MAAMO,OACnB,GACEJ,UACOA,GAAK,GAAKpB,EAAWF,KAAKmB,MAAMG,GAAGpB,UAE5C,OADAF,KAAKmB,MAAMS,OAAON,EAAI,EAAG,EAAG,CAACf,KAAMA,EAAML,SAAUA,IAC5CK,CACT,EAOO,YAAAH,OAAP,SAAcG,GACZ,IAAIe,EAAItB,KAAKmB,MAAMO,OACnB,GACEJ,UACOA,GAAK,GAAKtB,KAAKmB,MAAMG,GAAGf,OAASA,GACtCe,GAAK,GACPtB,KAAKmB,MAAMS,OAAON,EAAG,EAEzB,EA3Dc,EAAAK,gBAA0B,EA4D1C,C,CAjEA,GAAa,EAAAhB,gBAAAA,C,wGCmBb,4BAAiCkB,GAC/B,OAAO,IAAIC,SAAQ,SAASC,EAAIC,EAAcC,GAC5C,IACED,EAAGH,I,CACH,MAAOK,GACHA,EAAIC,OAASD,EAAIC,iBAAiBL,QACpCI,EAAIC,MAAMC,MAAK,WAAM,OAAAL,EAAIC,EAAIC,EAAR,IACXI,OAAM,SAACC,GAAgB,OAAAL,EAAKK,EAAL,IACxBJ,EAAIK,SAAWL,EAAIK,QAAQC,WAEpCC,QAAQC,SAASC,OAAM,WAAM,OAAAZ,EAAIC,EAAIC,EAAR,GAAeC,EAAIK,SAEhDN,EAAKC,E,CAGX,GACF,EAYA,sBAA2BU,GACzB,IAAIV,EAAM,IAAI1B,MAAM,iBAEpB,MADA0B,EAAIC,MAAQS,EACNV,CACR,C","sources":["webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/components/version.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/core/HandlerList.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/mathjax.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/util/PrioritizedList.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/util/Retries.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  The version of MathJax (used to tell what version a component\n *                was compiled against).\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nexport const VERSION = '3.2.2';\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the interface and abstract class for HandlerList objects\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PrioritizedList} from '../util/PrioritizedList.js';\nimport {OptionList} from '../util/Options.js';\nimport {Handler} from './Handler.js';\nimport {MathDocument} from './MathDocument.js';\n\n/*****************************************************************/\n/**\n *  The HandlerList class (extends PrioritizedList of Handlers)\n *\n *  This list is used to find the handler for a given document\n *  by asking each handler to test if it can handle the document,\n *  and when one can, it is asked to create its associated MathDocument.\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class HandlerList<N, T, D> extends PrioritizedList<Handler<N, T, D>>  {\n\n  /**\n   * @param {Handler} handler  The handler to register\n   * @return {Handler}  The list item created for the handler\n   */\n  public register(handler: Handler<N, T, D>): Handler<N, T, D> {\n    return this.add(handler, handler.priority);\n  }\n\n  /**\n   * @param {Handler} Handler  The handler to remove from the list\n   */\n  public unregister(handler: Handler<N, T, D>) {\n    this.remove(handler);\n  }\n\n  /**\n   * @param {any} document  The document (string, window, DOM element, etc) to be handled\n   * @return {Handler}      The handler from the list that can process the given document\n   */\n  public handlesDocument(document: any): Handler<N, T, D> {\n    for (const item of this) {\n      let handler = item.item;\n      if (handler.handlesDocument(document)) {\n        return handler;\n      }\n    }\n    throw new Error(`Can't find handler for document`);\n  }\n\n  /**\n   * @param {any} document        The document to be processed\n   * @param {OptionList} options  The options for the handler\n   * @return {MathDocument}       The MathDocument created by the handler for this document\n   */\n  public document(document: any, options: OptionList = null): MathDocument<N, T, D> {\n    return this.handlesDocument(document).create(document, options);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  The main MathJax global object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {VERSION} from './components/version.js';\nimport {HandlerList} from './core/HandlerList.js';\nimport {handleRetriesFor, retryAfter} from './util/Retries.js';\nimport {OptionList} from './util/Options.js';\nimport {MathDocument} from './core/MathDocument.js';\n\n/*****************************************************************/\n/**\n * The main MathJax global object\n */\nexport const mathjax = {\n  /**\n   *  The MathJax version number\n   */\n  version: VERSION,\n\n  /**\n   *  The list of registers document handlers\n   */\n  handlers: new HandlerList<any, any, any>(),\n\n  /**\n   * Creates a MathDocument using a registered handler that knows how to handl it\n   *\n   * @param {any} document        The document to handle\n   * @param {OptionList} options   The options to use for the document (e.g., input and output jax)\n   * @return {MathDocument}       The MathDocument to handle the document\n   */\n  document: function (document: any, options: OptionList): MathDocument<any, any, any> {\n    return mathjax.handlers.document(document, options);\n  },\n\n  /**\n   * The functions for handling retries if a file must be loaded dynamically\n   */\n  handleRetriesFor: handleRetriesFor,\n  retryAfter: retryAfter,\n\n  /**\n   * A function for loading external files (can be changed for node/browser use)\n   */\n  asyncLoad: null as ((file: string) => any),\n\n};\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements a list sorted by a numeric priority\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\n/*****************************************************************/\n/**\n *  The PrioritizedListItem<DataClass> interface\n *\n * @template DataClass   The class of data stored in the item\n */\n\nexport interface PrioritizedListItem<DataClass> {\n\n  /**\n   * The priority of this item\n   */\n  priority: number;\n\n  /**\n   * The data for the list item\n   */\n  item: DataClass;\n}\n\n/*****************************************************************/\n/**\n *  Implements the PrioritizedList<DataClass> class\n *\n * @template DataClass   The class of data stored in the list\n */\n\nexport class PrioritizedList<DataClass> {\n\n  /**\n   * The default priority for items added to the list\n   */\n  public static DEFAULTPRIORITY: number = 5;\n\n  /**\n   * The list of items, sorted by priority (smallest number first)\n   */\n  protected items: PrioritizedListItem<DataClass>[] = [];\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.items = [];\n  }\n\n  /**\n   * Make the list iterable, and return the data for the items in the list\n   *\n   * @return {{next: Function}}  The object containing the iterator's next() function\n   */\n  public [Symbol.iterator](): Iterator<PrioritizedListItem<DataClass>> {\n    let i = 0;\n    let items = this.items;\n    return {\n      /* tslint:disable-next-line:jsdoc-require */\n      next(): IteratorResult<PrioritizedListItem<DataClass>> {\n        return {value: items[i++], done: (i > items.length)};\n      }\n    };\n  }\n\n  /**\n   * Add an item to the list\n   *\n   * @param {DataClass} item   The data for the item to be added\n   * @param {number} priority  The priority for the item\n   * @return {DataClass}       The data itself\n   */\n  public add(item: DataClass, priority: number = PrioritizedList.DEFAULTPRIORITY): DataClass {\n    let i = this.items.length;\n    do {\n      i--;\n    } while (i >= 0 && priority < this.items[i].priority);\n    this.items.splice(i + 1, 0, {item: item, priority: priority});\n    return item;\n  }\n\n  /**\n   * Remove an item from the list\n   *\n   * @param {DataClass} item   The data for the item to be removed\n   */\n  public remove(item: DataClass) {\n    let i = this.items.length;\n    do {\n      i--;\n    } while (i >= 0 && this.items[i].item !== item);\n    if (i >= 0) {\n      this.items.splice(i, 1);\n    }\n  }\n}\n","/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements methods for handling asynchronous actions\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\n\n/*****************************************************************/\n/*\n *  The legacy MathJax object  (FIXME: remove this after all v2 code is gone)\n */\n\ndeclare var MathJax: {Callback: {After: Function}};\n\n\n/*****************************************************************/\n/**\n *  Allow us to pass a promise as part of an Error object\n */\n\nexport interface RetryError extends Error {\n  retry: Promise<any>;\n}\n\n/*****************************************************************/\n/**\n * A wrapper for actions that may be asynchronous.  This will\n *   rerun the action after the asychronous action completes.\n *   Usually, this is for dynamic loading of files.  Legacy\n *   MathJax does that a lot, so we still need it for now, but\n *   may be able to go without it in the future.\n *\n *   Example:\n *\n *     HandleRetriesFor(() => {\n *\n *         html.findMath()\n *             .compile()\n *             .getMetrics()\n *             .typeset()\n *             .updateDocument();\n *\n *     }).catch(err => {\n *       console.log(err.message);\n *     });\n *\n * @param {Function} code  The code to run that might cause retries\n * @return {Promise}       A promise that is satisfied when the code\n *                         runs completely, and fails if the code\n *                         generates an error (that is not a retry).\n */\n\nexport function handleRetriesFor(code: Function): Promise<any> {\n  return new Promise(function run(ok: Function, fail: Function) {\n    try {\n      ok(code());\n    } catch (err) {\n      if (err.retry && err.retry instanceof Promise) {\n        err.retry.then(() => run(ok, fail))\n                 .catch((perr: Error) => fail(perr));\n      } else if (err.restart && err.restart.isCallback) {\n        // FIXME: Remove this branch when all legacy code is gone\n        MathJax.Callback.After(() => run(ok, fail), err.restart);\n      } else {\n        fail(err);\n      }\n    }\n  });\n}\n\n/*****************************************************************/\n/**\n * Tells HandleRetriesFor() to wait for this promise to be fulfilled\n *   before rerunning the code.  Causes an error to be thrown, so\n *   calling this terminates the code at that point.\n *\n * @param {Promise} promise  The promise that must be satisfied before\n *                            actions will continue\n */\n\nexport function retryAfter(promise: Promise<any>) {\n  let err = new Error('MathJax retry') as RetryError;\n  err.retry = promise;\n  throw err;\n}\n"],"names":["VERSION","register","handler","this","add","priority","unregister","remove","handlesDocument","document","item","Error","options","create","PrioritizedList","HandlerList","mathjax","version","handlers","handleRetriesFor","retryAfter","asyncLoad","items","Symbol","iterator","i","next","value","done","length","DEFAULTPRIORITY","splice","code","Promise","run","ok","fail","err","retry","then","catch","perr","restart","isCallback","MathJax","Callback","After","promise"],"sourceRoot":""}