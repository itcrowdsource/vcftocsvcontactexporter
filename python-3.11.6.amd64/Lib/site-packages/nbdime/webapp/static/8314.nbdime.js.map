{"version":3,"file":"8314.nbdime.js","mappings":";oIAuBA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,QAGuB,oBAAZA,SAA2BA,QAAQC,QAC5CD,QAAQC,OAAOC,QACb,eACA,YACA,cACA,aACA,mBACA,eACA,mBACA,eACA,cACA,kBACA,cACA,gBACA,iBACA,eACA,gBACA,iBACA,gBACA,aACA,kBACA,eACA,mBACA,iBACA,oBACA,gBACA,gBACA,gBACA,aACA,qBACA,kBACA,iBACA,mBACA,oBAIS,EAAAC,YAAwB,CACnC,OACA,SACA,MACA,QACA,OACA,aACA,SACA,aACA,SACA,QACA,YACA,QACA,WACA,SACA,UACA,WACA,UACA,OACA,YACA,SACA,aACA,WACA,cACA,UACA,UACA,OACA,eACA,YACA,WACA,uNCrGF,cACA,cACA,WAEA,cAIW,EAAAC,cAA6C,CAAC,EAEzD,EAAAA,cAAA,MAAsB,UAAYC,MAQlC,EAAAD,cAAA,OAAuB,SAASE,EAAmBC,GAGjD,IAFA,IACIC,EADEC,EAAW,GAE2B,iBAApCD,EAAMF,EAAOI,YAAYH,KAC/BE,EAASE,KACP,IAAI,UAAUH,EAAKF,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,OAE/DT,EAAOU,KACLV,EAAOW,OAAO,OAAQ,UAAWR,EAAU,CAACS,WAAY,WAC5D,EASA,EAAAd,cAAA,QAAwB,SAASE,EAAmBC,GAClD,IAAMC,EAAMF,EAAOa,SAASZ,GACtBa,EAAMd,EAAOa,SAASZ,GAC5BD,EAAOU,KACLV,EAAOW,OAAO,OAAQ,UAAW,CAACT,EAAKY,GAAM,CAACF,WAAY,YAC9D,EAGA,IAAI,EAAAG,WAAW,gBAAiB,CAC9BC,OAAS,SACTC,QAAS,UACTC,QAAS,CAAC,QAAS,4BAA6B,IAC/C,EAAApB,eAGU,EAAAqB,oBAAsB,EAAAC,cAAcT,OAC/C,SAAU,CAACU,QAAS,CAACC,MAAO,CAAC,imBCpD/B,cACA,WACA,WACA,WACA,SACA,eAQA,yEAA4C,QAAf,OAAe,EAA5C,CAA6B,EAAAC,cAAhB,EAAAC,QAAAA,EAaA,EAAAC,iBAAmB,EAAAL,cAAcT,OAC5C,MAAO,CACLU,QAAS,CACPK,UAAW,CAAC,0BACZC,UAAW,CAAC,uBAAwB,qBACpCL,MAAO,CAAC,yBAA0B,yBAC1B,uBAAwB,oBACxB,sBAAuB,iBAAkB,qBACjDM,YAAa,CAAC,wBAEhBC,OAAK,KACH,EAAC,EAAAC,aAAaC,UAAUC,MAAO,EAAAF,aAC/B,EAAC,EAAAG,YAAYF,UAAUC,MAAO,EAAAC,eAEhCC,KAAM,CAAC,IAAOV,GACdW,KArBO,SAASC,GAClB,IAAI,EAAArB,WAAW,EAAAsB,QAAS,CAAC,EAAG,CAAC,GAC7BD,EAAOE,OAAO,EAAAlB,cAAcmB,MAAM,CAAClB,QAAS,CAACC,MAAO,CAAC,EAAAe,UACnBG,UAAW,IAC/C,EAkBIJ,OAAQ,SAACK,EAA8BC,GAIjCA,EAAIC,aAAaC,QAAQC,gBAC3BH,EAAIC,aAAaC,QAAQE,IAAID,cAAgBH,EAAIC,aAAaC,QAAQC,sBAEjEH,EAAIC,aAAaC,QAAQC,aAClC,EACAD,QAAS,CACPC,cAAe,GACfC,IAAK,CACHD,cAAe,OACfE,eAAgB,04BCtDxB,eACA,cACA,cACA,aACA,WAWA,cAKE,WAAYC,OAAc,wDAA1B,MACE,YAAMA,IAAQ,YACd,EAAKA,QAAQxC,cAAc0B,KAAKe,MAAM,YAAY,EAAMC,EAAK,KAC/D,CAuEF,OA/EkC,OAchC,sBAAI,mBAAI,KAAR,WACE,MAAO,UACT,kCAMO,YAAAC,SAAP,WACMC,KAAKC,MAAMC,QACb,UAAUC,aAAaH,KAAKJ,QAAQxC,cAAe4C,KAAKI,OAE1D,IAAMC,EAAQL,KAAKM,YAAY,SACzBC,EAAMP,KAAKzC,OAAO,OACA,MAAOyC,KAAKI,MAAOC,EAAQ,CAACG,YAAaH,GAAS,CAAC,GAC3EL,KAAKS,YAAY,QAAS,MAC1BT,KAAKU,IAAIzD,KAAKsD,GACdP,KAAKW,OACP,EAKO,YAAAC,OAAP,WACE,GAAwB,IAApBZ,KAAKU,IAAIR,OAEX,MAAM,IAAI,UACR,qBACA,kEACA,YAEJ,IAAIQ,EAAMV,KAAKzC,OAAO,OAAQ,MAAOyC,KAAKU,KAC1CV,KAAKC,MAAMhD,KAAKyD,GAChBV,KAAKU,IAAM,EACb,EAKO,YAAAG,SAAP,WAEE,GADA,YAAMA,SAAQ,WACVb,KAAKC,MAAMC,OAAQ,CACrB,IAAIY,EAAId,KAAKC,MAAMC,OAAS,EAAGa,GAAS,EACnC,UAASC,aACZ,UAASC,YAAYjB,KAAKC,MAAM,IAAI,GAAI,gBACxC,UAASiB,aAAa,UAASD,YAAYjB,KAAKC,MAAM,IAAI,GACpC,cAAe,EAAAkB,YAAYC,MAAMC,MAEpD,UAASL,aACZ,UAASC,YAAYjB,KAAKC,MAAMa,IAAI,GAAI,gBACxC,UAASI,aAAa,UAASD,YAAYjB,KAAKC,MAAMa,IAAI,GACpC,cAAe,EAAAK,YAAYC,MAAME,OAEzD,IAAIC,EAAMvB,KAAKJ,QAAQxC,cAAc0B,KAAK0C,SAC1C,GAAID,EAAK,CACPR,EAASf,KAAKyB,SAASC,OAAS,EAAAP,YAAYC,MAAMC,KAAO,EAAIrB,KAAKC,MAAMC,OAAS,EACjF,IAAMyB,EAAM3B,KAAKC,MAAMc,GACjBa,EAAS5B,KAAKzC,OAAO,OAAQ,aACR,CAACgE,GAAKM,OAAO,UAASZ,YAAYU,KAC7D,UAASG,eAAeH,EAAKC,GAC7B5B,KAAKC,MAAMc,GAASa,GAGxB5B,KAAKJ,QAAQxC,cAAc0B,KAAKiD,KAClC,EACF,EA/EA,CAAkC,EAAAC,WAArB,EAAAtD,aAAAA,EAoFb,kBAaE,WAAYkB,EAAqB/C,EAAqBoF,EACnCC,EAAwBC,GAD3C,MAEE,YAAMvC,IAAQ,YAFiB,EAAA/C,KAAAA,EAAqB,EAAAoF,SAAAA,EACnC,EAAAC,OAAAA,EAAwB,EAAAC,OAAAA,EAEzC,EAAKvC,QAAQxC,cAAc0B,KAAKe,MAAMhD,EAAMoF,EAAUA,IACxD,CAkFF,OAnGiC,OAK/B,sBAAI,mBAAI,KAAR,WACE,MAAO,SACT,kCAeO,YAAAlC,SAAP,WACE,YAAMA,SAAQ,WACd,IAAMqC,EAAIpC,KAAKM,YAAY,YAC3B,GAAK8B,GACDpC,KAAKU,IAAIR,OAASkC,EACpB,MAAM,IAAI,UAAS,iBAAkB,wBAAyB,IAAKpC,KAAKnD,KAE5E,EAMO,YAAA+D,OAAP,WAOE,IANA,IAAIyB,EACA3B,EAAMV,KAAKU,IAIT0B,EAAIpC,KAAKM,YAAY,YACpBI,EAAIR,OAASkC,GAClB1B,EAAIzD,KAAK+C,KAAKzC,OAAO,OAAQ,QAU/B,IAJAyC,KAAKU,IAAM,GACPV,KAAKkC,QACPlC,KAAKU,IAAIzD,KAAK+C,KAAKzC,OAAO,OAAQ,QAE5B8E,EAAO3B,EAAI4B,SACjBtC,KAAKU,IAAIzD,KAAKoF,IACdA,EAAO3B,EAAI4B,UACDtC,KAAKU,IAAIzD,KAAKoF,IACpB3B,EAAIR,QAAUF,KAAKkC,SACrBlC,KAAKU,IAAIzD,KAAK+C,KAAKzC,OAAO,OAAQ,QAIlCyC,KAAKU,IAAIR,OAASF,KAAKuC,SACzBvC,KAAKuC,OAASvC,KAAKU,IAAIR,QAEzB,YAAMU,OAAM,WAKZ,IAAMe,EAAM3B,KAAKC,MAAMD,KAAKC,MAAMC,OAAS,GAC3C,GAAIF,KAAKM,YAAY,mBAAqBqB,EAAIa,OAAO,cAAe,CAClE,IAAMjC,EAAM,UAASU,YAAYU,GAAK,GAChCD,EAAO1B,KAAKJ,QAAQxC,cAAcoC,QAAiB,QACnDiD,EAAM,EAAH,CAAIC,MAAO,GAAgB,UAAThB,EAAmB,CAACiB,OAAQ,WAAa,CAAC,GAC/DC,EAAU5C,KAAKzC,OAAO,OAAQ,UAAW,UAAS0D,YAAYV,GAAMkC,GAC1ElC,EAAIsC,YAAY,CAACD,IAErB,EAMO,YAAA/B,SAAP,WACE,YAAMA,SAAQ,WACVb,KAAKmC,QAKHnC,KAAKuC,QAAU,WACLvC,KAAKyB,SACNiB,aACJ1C,KAAK8C,OAAOC,YAGzB,EAEF,EAnGA,CAAiC,EAAAC,cAApB,EAAAnE,YAAAA,kyBCnGb,eACA,cACA,WACA,cACA,cACA,WACA,WAMA,IAAIoE,EAAGC,aAAa,sBAAuB,UAAaC,YAAa,CACnEC,OAAY,CAAC,IAAU,CAACC,SAAU,EAAAC,SAASC,OAM7C,IAAIN,EAAGO,UAAU,yBAA0B,EAAAC,WAAWC,eAAgB,SAKtE,IAAIT,EAAGtF,WAAW,iBAAkB,CAClCgG,SAAY,CAAC,SAAU,QACvBC,aAAc,QACdC,YAAgB,CAAC,SAAU,EAAAC,UAAUC,yBACrCC,cAAgB,CAAC,SAAU,EAAAF,UAAUG,wBAErCC,SAAY,CAAC,gBAAiB,qBAE9BC,MAAY,CAAC,SAAU,QACvBC,OAAY,CAAC,SAAU,QAEvBC,QAAa,UAEbC,MAAY,CAAC,QAAS,+BAAgC,GAEtD/C,IAAa,YACbgD,MAAa,cACbC,MAAa,CAAC,aAAa,GAE3BC,SAAY,CAAC,QAAS,wCAAyC,GAE/DC,OAAY,CAAC,UAAW,kBACxBC,QAAY,CAAC,UAAW,mBACxBC,UAAY,CAAC,QAAS,8CACtBC,UAAY,CAAC,QAAS,6CACtBC,UAAY,CAAC,QAAS,oDACtBC,WAAY,CAAC,QAAS,mDAEtBC,oBAAqB,kBACrBC,aAAqB,qBAErBC,QAAa,UACbC,KAAY,CAAC,UAAW,GAAI,GAAI,GAAI,IACpCC,MAAY,CAAC,UAAW,GAAI,GAAI,GAAI,KACpCC,MAAY,CAAC,UAAW,GAAI,GAAI,GAAI,KACpCC,MAAY,CAAC,UAAW,IAAK,IAAK,IAAK,IACvCC,OAAY,CAAC,UAAW,IAAK,IAAK,IAAK,KACvCC,OAAY,CAAC,UAAW,IAAK,IAAK,IAAK,KAEvCC,MAAa,QAEbC,UAAY,CAAC,cAAe,EAAAvE,YAAYC,MAAMC,MAC9CsE,WAAY,CAAC,cAAe,EAAAxE,YAAYC,MAAME,OAE9CsE,YAAa,CAAC,SAAU,KAAQ,EAAG,IACnCC,WAAa,CAAC,SAAU,KAAQ,GAAI,IACnC,EAAApC,YAMH,IAAIR,EAAG6C,eAAe,sBAAuB,UAAatH,YAAa,CACrE,YAAe,CAAC,WAAY,MAAM,GAClC,YAAe,CAAC,WAAY,MAAM,GAAO,EAAM,MAC/B,UAAUuH,KAAK,EAAG,EAAAjC,UAAUkC,gBAAiB,QAC7DC,MAAe,CAAC,WAAY,MAAM,GAAM,EAAO,KAAO,UAAUF,KAAK,EAAG,IACxE,SAAe,CAAC,WAAY,MAAM,GAAO,EAAM,KAAO,UAAUA,KAAK,EAAG,IACxEG,SAAe,CAAC,WAAY,MAAM,GAClC,YAAe,CAAC,WAAY,MAAM,GAClCC,MAAe,CAAC,WAAY,MAAM,GAAO,EAAO,KAAM,UAAUJ,KAAK,IACrEK,OAAe,CAAC,WAAY,MAAM,GAAM,EAAO,KAC/C,UAAe,CAAC,WAAY,MAAM,GAAO,EAAM,KAE/CC,QAAe,CAAC,UAAW,MAAM,GAAM,GACvC,WAAe,CAAC,UAAW,MAAM,GAAO,GACxCC,UAAe,CAAC,UAAW,MAAM,GAAO,GAExCC,QAAe,CAAC,cAAe,KAAM,KAAM,KAAM,KAAM,UAAUR,KAAK,EAAG,GAAI,OAAQ,KACrFS,SAAe,CAAC,cAAe,KAAM,KAAM,KAAM,IAAK,KAAM,OAAQ,KAEpEC,SAAe,CAAC,WAAY,MAAM,GAAM,GACxC,YAAe,CAAC,WAAY,MAAM,GAAO,GACzCC,UAAe,CAAC,WAAY,MAAM,GAAO,GACzCC,QAAe,CAAC,eAAgB,MAAM,GAAM,GAAO,EAAM,MAAO,iBAChE,WAAe,CAAC,eAAgB,MAAM,GAAO,GAAO,EAAM,MAAO,iBAEjEC,SAAe,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,UAAUb,KAAK,GAAI,QAAS,IAAK,GAClFc,YAAe,CAAC,QAAS,KAAM,KAAM,KAAM,IAAK,UAAUd,KAAK,EAAI,GACnD,OAAQ,IAAK,GAC7Be,OAAc,CAAC,QAAS,KAAM,KAAM,KAAM,KAC1CC,QAAc,CAAC,QAAS,KAAM,IAAK,IAAK,KACxCC,QAAc,CAAC,QAAS,KAAM,IAAK,IAAK,KACxCC,QAAc,CAAC,QAAS,KAAM,MAAO,MAAO,KAC5CC,QAAc,CAAC,QAAS,KAAM,SAAU,SAAU,KAClDC,QAAc,CAAC,QAAS,KAAM,SAAU,SAAU,KAClDC,MAAc,CAAC,QAAS,KAAM,MAAO,IAAK,KAAM,KAAM,OAAQ,MAC7D,EAAA3D,YAMH,IAAIR,EAAGoE,aAAa,oBAAqB,UAAa9I,UAAW,CAC/D,UAAe,CAAC,IAAU,CAAC8E,SAAU,EAAAC,SAASgE,OAC9C,UAAe,CAAC,IAAU,CAACjE,SAAU,EAAAC,SAASiE,QAC9C,UAAe,CAAC,IAAU,CAAClE,SAAU,EAAAC,SAASgE,OAC9C,UAAe,CAAC,IAAU,CAACjE,SAAU,EAAAC,SAASiE,UAOhD,IAAItE,EAAGC,aAAa,yBAA0B,UAAasE,YAAa,CAEtEC,QAAwB,IACxBC,SAAwB,IAGxBC,SAAwB,CAAC,IAAU,CAACC,YAAa,EAAAzG,YAAY0G,QAAQC,SACrEC,SAAwB,CAAC,IAAU,CAACH,YAAa,EAAAzG,YAAY0G,QAAQC,SACrEE,SAAwB,CAAC,IAAU,CAACJ,YAAa,EAAAzG,YAAY0G,QAAQC,SACrEG,UAAwB,CAAC,IAAU,CAACL,YAAa,EAAAzG,YAAY0G,QAAQC,SACrEI,MAAwB,CAAC,IAAU,CAACN,YAAa,EAAAzG,YAAY0G,QAAQC,SACrEK,MAAwB,CAAC,IAAU,CAACP,YAAa,EAAAzG,YAAY0G,QAAQC,SACrEM,SAAwB,CAAC,IAAU,CAACR,YAAa,EAAAzG,YAAY0G,QAAQC,SACrEO,WAAwB,CAAC,IAAU,CAACT,YAAa,EAAAzG,YAAY0G,QAAQC,SACrEQ,OAAwB,CAAC,IAAU,CAACV,YAAa,EAAAzG,YAAY0G,QAAQC,SACrES,OAAwB,CAAC,IAAU,CAACX,YAAa,EAAAzG,YAAY0G,QAAQC,SACrEU,SAAwB,CAAC,IAAU,CAACZ,YAAa,EAAAzG,YAAY0G,QAAQC,SAGrEW,KAAwB,IACxBC,MAAwB,IACxBC,OAAwB,IAIxBC,UAAwB,CAAC,IAAU,CAACC,aAAa,IACjDC,OAAwB,IACxBC,WAAwB,CAAC,IAAU,CAACF,aAAa,IACjDG,cAAwB,IACxBC,aAAwB,CAAC,IAAU,CAACJ,aAAa,IACjDK,kBAAwB,IACxBC,OAAwB,IACxBC,IAAwB,IACxBC,YAAwB,IACxBC,QAAwB,IACxBC,QAAwB,IACxBC,aAAwB,IACxBC,SAAwB,CAAC,IAAU,CAAC7B,YAAa,EAAAzG,YAAY0G,QAAQ6B,SACrEC,QAAwB,IAExBC,eAAwB,IACxBC,cAAwB,IACxBC,QAAwB,IACxBC,WAAwB,IACxBC,IAAwB,IACxBC,IAAwB,CAAC,IAAU,CAACrC,YAAa,EAAAzG,YAAY0G,QAAQ6B,SACrEQ,KAAwB,IACxBC,OAAwB,IACxBC,KAAwB,IACxBC,SAAwB,IACxBC,KAAwB,CAAC,IACA,CAAC1C,YAAa,EAAAzG,YAAY0G,QAAQ0C,eAE3DC,IAAwB,IACxBC,SAAwB,IACxBC,UAAwB,IACxBC,QAAwB,MAO1B,IAAI1H,EAAGC,aAAa,yBAA0B,UAAaC,YAAa,CAEtEyH,QAAwB,IACxBC,OAAwB,IACxBC,cAAwB,CAAC,IAAU,CAACjC,aAAa,IACjDkC,OAAwB,IACxBC,IAAwB,IACxBC,UAAwB,IACxBC,eAAwB,IACxBC,IAAwB,IACxBC,UAAwB,IACxBC,gBAAwB,IACxBC,SAAwB,IACxBC,WAAwB,IACxBC,OAAwB,IACxBC,SAAwB,IACxBC,eAAwB,IACxBC,SAAwB,IACxBC,YAAwB,IACxBC,SAAwB,IACxBC,WAAwB,IACxBC,OAAwB,IACxBC,YAAwB,IACxBC,QAAwB,IACxBC,UAAwB,CAAC,IAAU,CAACrD,aAAa,IACjDsD,cAAwB,IACxBC,SAAwB,IAGxBC,KAAwB,IACxBC,KAAwB,IACxBC,SAAwB,IACxBC,SAAwB,IACxBC,YAAwB,IACxBC,WAAwB,IACxBC,QAAwB,IACxBC,OAAwB,IACxBC,WAAwB,IACxBC,UAAwB,IACxBC,SAAwB,IACxBC,QAAwB,IACxBC,OAAwB,IACxBC,IAAwB,IACxBC,OAAwB,IACxBC,IAAwB,IACxBC,MAAwB,IACxBC,QAAwB,IACxBC,QAAwB,IACxBC,UAAwB,IACxBC,UAAwB,IACxBC,WAAwB,IACxBC,WAAwB,IACxBC,SAAwB,IACxBC,MAAwB,IACxBC,OAAwB,IACxBC,aAAwB,IACxBC,OAAwB,IACxBC,cAAwB,IACxBC,UAAwB,IACxBC,QAAwB,IACxBC,SAAwB,CAAC,IAAU,CAACvF,aAAa,IACjDwF,UAAwB,IACxBC,YAAwB,CAAC,IAAU,CAACzF,aAAa,IACjD0F,UAAwB,IACxBC,UAAwB,IACxBC,OAAwB,IACxBC,OAAwB,IACxBC,SAAwB,IACxBC,SAAwB,IACxBC,YAAwB,IACxBC,YAAwB,IACxBC,YAAwB,IACxBC,YAAwB,IACxBC,QAAwB,IACxBC,QAAwB,IACxBC,WAAwB,IACxBC,WAAwB,IACxBC,gBAAwB,IACxBC,IAAwB,IACxBC,iBAAwB,IACxBC,IAAwB,IACxBC,eAAwB,IACxBC,MAAwB,IACxBC,gBAAwB,IACxBC,MAAwB,IACxBC,MAAwB,CAAC,IAAU,CAAChH,aAAa,IACjDiH,MAAwB,IACxBC,OAAwB,IACxBC,WAAwB,CAAC,IAAU,CAACnH,aAAa,IACjDoH,SAAwB,CAAC,IAAU,CAACpH,aAAa,IACjDqH,WAAwB,CAAC,IAAU,CAACrH,aAAa,IACjDsH,cAAwB,CAAC,IAAU,CAACtH,aAAa,IACjDuH,OAAwB,IACxBC,QAAwB,IACxBC,OAAwB,IACxBC,UAAwB,IACxBC,UAAwB,CAAC,IAAU,CAAC3H,aAAa,IACjD4H,YAAwB,IACxBC,kBAAwB,IACxBC,mBAAwB,IACxBC,UAAwB,IACxBC,QAAwB,IACxBC,MAAwB,IACxBC,YAAwB,CAAC,IAAU,CAAClI,aAAa,IACjDmI,KAAwB,IAGxBC,MAAwB,IACxBC,KAAwB,IACxBC,KAAwB,IACxBC,KAAwB,IACxBC,UAAwB,CAAC,IAAU,CAACxI,aAAa,IACjDyI,UAAwB,CAAC,IAAU,CAACzI,aAAa,IACjD0I,MAAwB,CAAC,IAAU,CAAC1I,aAAa,IACjD2I,MAAwB,CAAC,IAAU,CAAC3I,aAAa,IACjD4I,KAAwB,IACxBC,KAAwB,IACxBC,MAAwB,IACxBC,MAAwB,IACxBC,UAAwB,CAAC,IAAU,CAAChJ,aAAa,IACjDiJ,UAAwB,CAAC,IAAU,CAACjJ,aAAa,IACjDkJ,MAAwB,IACxBC,MAAwB,IACxBC,SAAwB,IACxBC,SAAwB,IACxBC,MAAwB,IACxBC,MAAwB,IACxBC,QAAwB,CAAC,IAAU,CAACxJ,aAAa,IACjDyJ,QAAwB,CAAC,IAAU,CAACzJ,aAAa,IACjD0J,SAAwB,IACxBC,SAAwB,IACxBC,SAAwB,IACxBC,SAAwB,IACxBC,YAAwB,IACxBC,YAAwB,IACxBC,KAAwB,IACxBC,MAAwB,IACxBC,UAAwB,CAAC,IAAU,CAAClK,aAAa,IACjDmK,eAAwB,CAAC,IAAU,CAACnK,aAAa,IACjDoK,KAAwB,IACxBC,UAAwB,IACxBC,OAAwB,IACxBC,OAAwB,IACxBC,OAAwB,IACxBC,OAAwB,IACxBC,cAAwB,IACxBC,eAAwB,IACxBC,gBAAwB,IACxBC,iBAAwB,IACxBC,UAAwB,IACxBC,UAAwB,IACxBC,WAAwB,CAAC,IAAU,CAAChL,aAAa,IACjDiL,WAAwB,CAAC,IAAU,CAACjL,aAAa,IACjDkL,UAAwB,IACxBC,UAAwB,IACxBC,aAAwB,CAAC,IAAU,CAACpL,aAAa,IACjDqL,aAAwB,CAAC,IAAU,CAACrL,aAAa,IACjDsL,WAAwB,IACxBC,WAAwB,IACxBC,cAAwB,CAAC,IAAU,CAACxL,aAAa,IACjDyL,cAAwB,CAAC,IAAU,CAACzL,aAAa,IAIjD0L,eAAwB,IACxBC,iBAAwB,IACxBC,gBAAwB,IACxBC,gBAAwB,IACxBC,WAAwB,IACxBC,YAAwB,IACxBC,iBAAwB,IACxBC,kBAAwB,IACxBC,cAAwB,IACxBC,eAAwB,IACxBC,cAAwB,IACxBC,eAAwB,IACxBC,kBAAwB,IACxBC,kBAAwB,CAAC,IAAU,CAACvM,aAAa,IACjDwM,eAAwB,IACxBC,gBAAwB,IACxBC,gBAAwB,IACxBC,iBAAwB,IACxBC,IAAwB,IACxBC,IAAwB,IACxBC,WAAwB,IACxBC,eAAwB,IACxBC,cAAwB,IACxBC,eAAwB,IACxBC,gBAAwB,IACxBC,YAAwB,IACxBC,SAAwB,IACxBC,iBAAwB,IACxBC,oBAAwB,IACxBC,gBAAwB,IACxBC,QAAwB,IACxBC,eAAwB,IACxBC,cAAwB,IAGxBC,WAAwB,IACxBC,YAAwB,IACxBC,WAAwB,IACxBC,YAAwB,IACxBC,gBAAwB,IACxBC,gBAAwB,MAO1B,IAAI5T,EAAGoE,aAAa,uBAAwB,UAAa9I,UAAW,CAElE,aAAwB,IACxB,aAAwB,IACxB,aAAwB,IACxB,aAAwB,MAO1B,IAAI0E,EAAGtF,WAAW,oBAAqB,CACrCmZ,QAAY,CAAC,QAAS,0BACtBC,UAAY,CAAC,QAAS,0BACrB,EAAAtT,wtBC/ZH,kBACA,cACA,cACA,WACA,cACA,aACA,WAIA,cACA,WAoTA,SAASuT,EAAa3Z,GAClB,IAAKA,GAAQA,EAAI4Z,YAAwC,IAA1B5Z,EAAI6Z,WAAWhX,OAAe,MAAO,CAAC,KAAM,MAC3E,GAAI7C,EAAImF,OAAO,YAAc2U,EAAiB9Z,GAAM,MAAO,CAACA,EAAK,MACjE,IAAM+Z,EAAQ,UAASC,WAAWha,EAAK,GACvC,OAAMA,EAAI4Z,YAAcG,GAASD,EAAiBC,IAClD/Z,EAAI6Z,WAAWI,OAAO,EAAG,GAClB,CAACF,EAAO/Z,IAFmD,CAAC,KAAMA,EAG7E,CAOA,SAAS8Z,EAAiB9Z,GACxB,IAAMka,EAAOla,EAAI6Z,WAAW,GAC5B,OAAOK,GAAQA,EAAK/U,OAAO,OAAsD,KAA5C+U,EAA8BC,SACrE,CA/Ta,EAAA/T,WAA0C,CAAC,EAcxD,EAAAA,WAAA,YAAyB,SAAS7G,EAAmB6a,EACfxV,EAAmByV,EACnBzR,EAAe0R,EACfC,GAEpC,IAAM9X,EAAOlD,EAAOib,YAAY,WAAaJ,EAAMK,UAAY,KACzDC,EAAQ,UAAYC,SAASpb,EAAQ6a,EAAOxV,EAAUyV,EAAUzR,EAAO0R,EAASC,GACtF,OAAO,UAAUK,cAAcF,EAAoBjY,EACrD,EAWA,EAAA2D,WAAA,QAAqB,SAAS7G,EAAmB6a,EACnBxV,EAAmByV,GAC/C,IACItV,EAAG8V,EADDrb,EAAO4a,EAAMK,UACJ7R,EAAQ,GAAI0R,EAAU,GAMrC,GALKD,IAEHQ,EAAStb,EAAOib,YAAY,WAAahb,EAAO,OAElDuF,EAAIxF,EAAOI,YAAY,WAAaH,EAAO,MACrCsb,MAAM,UAEV,MAAM,IAAI,UAAS,qBACC,4CACA,WAAatb,EAAO,KAG1C,IADA,IAAIub,EAAQC,SAASjW,EAAG,IACjBgW,EAAQ,GACbnS,GAAU,KACV0R,EAAQ1a,KAAK,WACbmb,IAEF,IAAIE,EAAWX,EAAQY,KAAK,KAC5B,GAAIb,EAEF,OAAO,EAAAjU,WAAWuU,SAASpb,EAAQ6a,EAAOxV,EAAUyV,EAAUzR,EAAOqS,GAGvE,IAAIP,EAAQ,EAAAtU,WAAWuU,SAASpb,EAAQ6a,EAAOxV,EAAUyV,EAAUzR,EAAOqS,GAC1E,OAAO,UAAUL,cAAcF,EAAoBG,EACrD,EASA,EAAAzU,WAAA,SAAsB,SAAU7G,EAAmB6a,EAAkBxV,GAEnErF,EAAOU,KAAKma,GACZ,UAAUe,YAAY5b,GACtB,IAAM6b,EAAO7b,EAAO8b,YAAYnb,OAAO,WAAY0E,EAAUrF,EAAOM,OAYpE,OAXAub,EAAKhX,SAAW,CACdkX,cAAc,EACdC,WAAY,OACZC,cAAe,OACfnW,MAAO9F,EAAO4C,QAAQE,IAAmB,cACzCgC,KAAM9E,EAAO4C,QAAiB,QAC9BsZ,gBAAiBlc,EAAO4C,QAAmB,UAC3CuZ,aAAcnc,EAAO4C,QAAQE,IAAoB,eAAI,KACrDsZ,MAAO,GACP,6BAA6B,GAExBP,CACT,EAUA,EAAAhV,WAAA,SAAsB,SAAS7G,EAAmB6a,EAChBxV,EAAmBC,GACnD,IAAIE,EAAIxF,EAAOI,YAAY,WAAaya,EAAMK,UAAY,KAC1D,GAAI1V,EAAE+V,MAAM,UACV,MAAM,IAAI,UAAS,qBACA,4CACA,WAAaV,EAAMK,UAAY,KAEpD,IAAM7R,EAAS/D,EAAS,MAAQ,MAC1BQ,EAASR,EAAS,gBAAkB,gBACpCuW,EAAO,EAAAhV,WAAWwV,aAAarc,EAAQ6a,EAAOxV,EAAUC,GAAQ,EAAO+D,EAAOvD,GAAO,GAE3F,OADA+V,EAAKhY,YAAY,WAAY,EAAI4X,SAASjW,IACnCqW,CACT,EAcA,EAAAhV,WAAA,aAA0B,SAAS7G,EAAmB6a,EAAkBxV,EACtCC,EAAiBC,EAAiB8D,EAClCvD,EAAewW,QAAA,IAAAA,IAAAA,GAAA,GAC/Ctc,EAAOU,KAAKma,GACZ,UAAUe,YAAY5b,GACtBqJ,EAAQA,EACLE,MAAM,IACNoS,KAAK,KACLY,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACjB,IAAMV,EAAO7b,EAAO8b,YAAYnb,OAC9B,UAAWka,EAAMK,UAAW7V,EAAUC,EAAQC,EAAQvF,EAAOM,OAa/D,OAZAub,EAAKhX,SAAW,CACdiB,MAAO,OACPiW,cAAc,EACdnY,YAAayF,EACb4S,cAAe,MACfO,YAAa1W,EACbkW,WAAY,MACZlX,KAAM9E,EAAO4C,QAAiB,QAC9BsZ,gBAAkBI,EAAiB,IAAMtc,EAAO4C,QAAmB,UACnE,6BAA6B,GAE/BiZ,EAAKhY,YAAY,iBAAkByY,GAC5BT,CACT,EAGa,EAAAxZ,QAAU,kBAOvB,EAAAwE,WAAA,gBAA8B,SAAU7G,EAAmBC,GACzD,IAAIwc,EAAQzc,EAAO0c,UAAY,IAAM,GACjCC,EAAK,UAAUC,WAAW5c,EAAOI,YAAYH,IAC5B,OAAjB0c,EAAGE,OAAO,KACZF,EAAKA,EAAGG,OAAO,IAEjB,IAAIC,EAAK/c,EAAOI,YAAYH,GAC3BD,EAAOQ,cAAcwc,SAASC,SAAS,EAAA5a,SACtC6a,IAAIP,EAAI,IAAI,EAAA5c,MAAM4c,EAAI,EAAA9V,WAAW9G,MAAO,CAAC,wBAAiB0c,EAAI,YAAIM,EAAE,OACxE,EAQA,EAAAlW,WAAA,mBAAgC,SAAS7G,EAAmBC,GAE1D,IAAMwc,EAAOzc,EAAO0c,UAIhBK,EAAK,UAAUH,WAAW5c,EAAOI,YAAYH,IAC7CQ,EAAM,IAAI,UAAUsc,EAAI,EAAF,KACrB/c,EAAOM,MAAMC,KAAG,CACnB4c,KAAM,EAAA5Y,YAAY0G,QAAQ6B,OAC1BsQ,uBAAwB,aACxBC,iBAAiB,IAChBrd,EAAOQ,eAAeC,MAczB,GAVKA,EAAImF,OAAO,QACdnF,EAAMT,EAAOW,OAAO,OAAQ,UAAW,CAACF,KAK1C,UAAS6c,cAAc7c,EAAK,CAAC8c,WAAYd,EAAMe,eAAe,EAAM/W,SAAU,EAAAC,SAASC,MAIlF8V,EAAM,CACT,IAAMgB,EAAIzd,EAAO0d,UAAWC,EAAI3d,EAAO2d,EAC7B,OAANF,KAAgBzd,EAAO2d,GAAwB,WAAnB3d,EAAO4d,UACrC5d,EAAO2d,EAAIA,GAIf3d,EAAOU,KAAKD,EACd,EAOA,EAAAoG,WAAA,QAAqB,SAAU7G,EAAmBC,GAI1C,QAAwBma,EAAapa,EAAOa,SAASZ,IAAM,GAA1D4d,EAAU,KAAEC,EAAO,KACpB,IAA0B1D,EAAapa,EAAOa,SAASZ,IAAM,GAA5D8d,EAAW,KAAEC,EAAQ,KACtBrD,EAAO3a,EAAOa,SAASZ,GACzBQ,EAAMka,EAINkD,IAIEC,EAMFD,EAAWI,aACTje,EAAOW,OAAO,OAAQ,WAAY,CAChCX,EAAOW,OAAO,OAAQ,UAAW,CAAC,UAAUud,SAASvD,EAAM3a,IAAU,CAAC8F,MAAO,MAE/E,UAAS2U,WAAWoD,EAAY,KAMlCpd,EAAMT,EAAOW,OAAO,OAAQ,gBAAiB,CAACga,IAI1CoD,GACF,UAASI,eAAe1d,EAAK,CAC3B,UAASga,WAAWsD,EAAa,IAAM/d,EAAOW,OAAO,OAAQ,QAC7D,UAAS8Z,WAAWsD,EAAa,IAAM/d,EAAOW,OAAO,OAAQ,UAMjE,UAASkD,YAAYpD,EAAK,cAAe,QACzC,UAAS0d,eAAe1d,EAAK,CAC3BT,EAAOW,OAAO,OAAQ,eACtB,UAAS8Z,WAAWoD,EAAY,IAAM7d,EAAOW,OAAO,OAAQ,QAC5D,UAAS8Z,WAAWoD,EAAY,IAAM7d,EAAOW,OAAO,OAAQ,YAO9Dod,GAAetd,IAAQka,IAIzBoD,EAAYE,aAAatD,EAAM,UAASF,WAAWsD,EAAa,IAChEtd,EAAMsd,GAQR,IAAMK,EAAOpe,EAAOW,OAAO,OAAQ,UAAW,GAAI,CAAC8F,SAAU,EAAAC,SAASC,GAAI4W,YAAY,EAAMC,eAAe,IACvGM,IACFD,GAAcO,EAAKC,YAAYR,GAC/BO,EAAKC,YAAYP,IAEnBM,EAAKC,YAAY5d,GACjBud,GAAYI,EAAKC,YAAYL,GAC7Bhe,EAAOU,KAAK0d,EACd,EAgCA,EAAAvX,WAAA,eAA4B,SAAU7G,EAAmByd,GACvD,QAAOzd,EAAOM,MAAMC,IAAI8c,iBAAkB,UAAaiB,SAASte,EAAQyd,EAC1E,EASA,EAAA5W,WAAA,cAA2B,SAAS7G,EAAmBC,EACnBse,GAClC,IAAIC,EAAOxe,EAAO0d,UAClB,GAAa,OAATc,EAAe,CAEjB,IAAIb,EAAI3d,EAAO2d,EACfa,EAAOxe,EAAOI,YAAYH,GAC1BD,EAAO2d,EAAIA,EACE,aAATa,IAGAD,EAFW,eAATte,EAES,wBAA0Bse,EAAW,IAIrC,8BAAgCA,EAAW,KAK5Dve,EAAOye,OAASF,EAAW,IAAMve,EAAOye,OAAOC,MAAM1e,EAAO2d,GAC5D3d,EAAO2d,EAAI,CACb,EAWA,EAAA9W,WAAA,OAAoB,SAAS7G,EAAmBC,EACnB0e,EAAaC,EAAWC,GACnD,IAAIhZ,EAAM,CAACC,MAAO,IAAM,UAAUgZ,IAAIF,EAAIC,GAAK,IAAK9Y,OAAQ,UAAU+Y,GAAGF,EAAI,KACzEG,EAAM/e,EAAOib,YAAYhb,GACzB+e,EAAQhf,EAAOa,SAASZ,GACxBgf,EAASjf,EAAOW,OAAO,OAAQ,SAAU,GAAI,CAACue,MAAO,UACrDC,EAAQnf,EAAOW,OAAO,QACxB,KAAM,CAACye,UAAU,EAAM3Y,SAAU,EAAAC,SAAS2Y,KAAMC,OAAOC,cAAcZ,IACvEQ,EAAQnf,EAAOW,OAAO,OAAQ,SAAU,CAACwe,GAAQ,CAACK,YAAa,IAC/D,IAAI/e,EAAMT,EAAOW,OAAO,OAAQ,aAAc,CAACwe,IAC3CnZ,EAAUhG,EAAOW,OAAO,OAAQ,UAAW,CAACqe,EAAOC,GAASpZ,GAIhE,GAHA,UAASvB,aAAa0B,EAAS,UAAW,SAC1C,UAAS1B,aAAa0B,EAAS,SAAU,SACzC,UAASyZ,SAAShf,EAAKA,EAAIif,KAAM1Z,GAC7B+Y,EAAK,CAEP,IAAIY,EAAS,IAAI,UAAUZ,EAAK/e,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,MACpEmf,EAAS5f,EAAOW,OAAO,OAAQ,SAAU,GAAI,CAACkf,OAAQ,UAC1D7Z,EAAUhG,EAAOW,OAAO,OAAQ,UAAW,CAACgf,EAAQC,GAAS/Z,GAC7D,UAASvB,aAAa0B,EAAS,UAAW,SAC1C,UAAS1B,aAAa0B,EAAS,QAAS,UACxC,UAASyZ,SAAShf,EAAKA,EAAIqf,MAAO9Z,GAIpC,UAASnC,YAAYpD,EAAK,YAAY,GACtCT,EAAOU,KAAKD,EACd,EASA,EAAAoG,WAAA,YAAyB,SAAS7G,EAAmB+f,EACnBtc,GAChC,IAAIuc,EAAMhgB,EAAOM,MAAM2f,MAEvB,GAAiB,aAAbD,EAAIhe,KAEN,MAAM,IAAI,UAAS,0BACC,oCACAhC,EAAOkgB,UAAW,YAExC,GAAIF,EAAIG,OAEN,MAAM,IAAI,UAAS,6BACC,4CAA6CngB,EAAOkgB,WAE1EF,EAAInc,YAAY,QAASJ,EAC3B,EAQA,EAAAoD,WAAA,MAAmB,SAAS7G,EAAmBC,GAC7C,IAAImgB,EAAM,UAAUxD,WAAW5c,EAAOib,YAAYhb,EAAM,KACpDogB,EAAMrgB,EAAOI,YAAYH,GACzBqgB,EAAMtgB,EAAOI,YAAYH,GACzBsgB,EAAiC,CACnC3B,EAAG,EAAAra,YAAYC,MAAMC,KAAMoa,EAAG,EAAAta,YAAYC,MAAME,MAAO,GAAI,IACzD8b,EAAU,IAAI,UAAU,sBAAwBH,EAAM,IAC9BrgB,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,MAChEggB,EAAU,IAAI,UAAU,sBAAwBH,EAAM,IAC9BtgB,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,MAChE8H,EAAOvI,EAAOW,OAAO,OAAQ,QAAS,CAAC6f,EAASC,IAEpD,GAAU,OADVL,EAAKG,EAAMH,IAGT,MAAM,IAAI,UAAS,eAAgB,oCAAqCpgB,EAAOkgB,WAE7EE,GAEF,UAAS9C,cAAc/U,EAAM,CAACmY,SAAUN,EAAIO,WAAYP,IAG1DpgB,EAAOU,KAAK6H,EACd,EAYA,EAAA1B,WAAA,QAAqB,SAAS7G,EAAmBC,EAAc2gB,EACjCC,EAAeC,EAAe9F,GAC7C,MAAT4F,IACFA,EAAO5gB,EAAO+gB,gBAAgB9gB,IAEnB,MAAT4gB,IACFA,EAAQ7gB,EAAO+gB,gBAAgB9gB,IAEpB,MAAT6gB,IACFA,EAAQ9gB,EAAOI,YAAYH,IAEhB,MAAT+a,IACFA,EAAQ,UAAU4B,WAAW5c,EAAOI,YAAYH,KAElD,IAAIogB,EAAMrgB,EAAOa,SAASZ,GACtBqgB,EAAMtgB,EAAOa,SAASZ,GACtBsI,EAAOvI,EAAOW,OAAO,OAAQ,QAAS,CAAC0f,EAAKC,IAUhD,GATc,KAAVQ,GAEF,UAASxc,aAAaiE,EAAM,gBAAiBuY,IAE3CF,GAAQC,KAEV,UAAShd,YAAY0E,EAAM,cAAc,GACzCA,EAAO,UAAUyY,WAAWhhB,EAAOQ,cAAeogB,EAAMrY,EAAMsY,IAElD,KAAV7F,EAAc,CAChB,IAAIiG,EAAaxF,SAAST,EAAO,IAC7BkG,EAAa,CAAC,IAAK,IAAK,IAAK,MAAMD,GACvC,GAAkB,MAAdC,EAEF,MAAM,IAAI,UAAS,kBAAmB,wBAAyBlhB,EAAOkgB,WAExE3X,EAAOvI,EAAOW,OAAO,OAAQ,SAAU,CAAC4H,IACrB,MAAf2Y,EAGF,UAAS5D,cAAc/U,EAAM,CAACwT,cAAc,EAAMyD,YAAa,IAK/D,UAASlC,cAAc/U,EAAM,CAACwT,cAAc,EACZyD,YAAayB,EAAa,IAI9DjhB,EAAOU,KAAK6H,EACd,EASA,EAAA1B,WAAA,UAAuB,SAAS7G,EAAmBC,GACjD,IAAKD,EAAOkC,KAAKif,WAAWrG,UAAY9a,EAAOkC,KAAK3B,IAElD,MAAM,IAAI,UAAS,yBACC,mCACAP,EAAOkgB,UAAWlgB,EAAOkC,KAAK3B,KAEpD,GAAIP,EAAOkC,KAAKif,WAAWxc,IAEzB,MAAM,IAAI,UAAS,kBAAmB,cAAe3E,EAAOkgB,WAE9D,IAAIzD,EAAOzc,EAAO0c,UACd0E,EAAQ,UAAUxE,WAAW5c,EAAOI,YAAYH,IACpDD,EAAOkC,KAAKyC,IAAIyc,EAAO3E,EACzB,EAGA,EAAA5V,WAAA,YAAyB,UAAYwa,YAErC,EAAAxa,WAAA,UAAuB,UAAYya,UAEnC,EAAAza,WAAA,MAAmB,UAAY9G,MAE/B,EAAA8G,WAAA,OAAoB,UAAY0a,OAEhC,EAAA1a,WAAA,MAAmB,UAAY2a,MAE/B,EAAA3a,WAAA,MAAmB,UAAY4a,MAE/B,EAAA5a,WAAA,OAAoB,UAAY6a,OAEhC,EAAA7a,WAAA,QAAqB,UAAY8a,QAEjC,EAAA9a,WAAA,SAAsB,UAAYuU,SAElC,EAAAvU,WAAA,SAAsB,UAAY+a,uGCjkBlC,cACA,SAGa,EAAAC,mBAAqB,EAAAzgB,cAAcT,OAC9C,QAAS,CACPU,QAAS,CACPK,UAAW,CAAC,iBACZJ,MAAO,CAAC,gBACRM,YAAa,CAAC,sBAEhBgB,QAAS,CACPkf,MAAO,CACLC,SAAU,MACVC,SAAU,MACVC,WAAY,SACZC,WAAY,SACZC,sBAAsB,syBCjB9B,kBACA,cACA,cAGA,IAAI9b,EAAG6C,eAAe,oBAAqB,UAAatH,YAClC,CAACwgB,GAAI,MAAO,WAElC,IAAI/b,EAAGtF,WAAW,eAAgB,CAChCshB,gBAAiB,kBACjBC,iBAAkB,oBACjB,WAEH,IAAIjc,EAAGkc,SAAS,gBAAiB,CAAC,IAAK,SAAU,uKCZjD,kBAIA,WAEA,WACA,cAIIC,EAA4C,CAQhDA,GAAkB,SAASxiB,EAAmB6a,GAC5C7a,EAAOU,KAAKma,GACZ,IAAIgB,EAAO7b,EAAO8b,YAAYnb,OAAO,SACjCiC,EAAU5C,EAAOQ,cAAcoC,QAAQkf,MAW3C,OAVAjG,EAAKyB,cAAc,CACjBmF,KAAMziB,EAAOM,MAAMC,IAAImiB,SAAW9f,EAAQqf,WAC1CU,KAAM3iB,EAAOM,MAAMC,IAAIqiB,SAAWhgB,EAAQsf,aAE5CrG,EAAKhX,SAAW,CACZjB,YAAa,SACbqY,cAAerZ,EAAQmf,SACvB/F,WAAYpZ,EAAQof,SACpBjG,cAAc,GAEXF,CACT,EAQA2G,MAAqB,SAASxiB,EAAmBC,GAC/C,IAAIwd,EAAIzd,EAAOye,OAAO5B,OAAO7c,EAAO2d,GACpC,IAAKF,EAAElC,MAAM,aACX,OAAO,IAAAsH,OAAM7iB,EAAQC,GAErBD,EAAO2d,IAET,IAAIqB,EAAQhf,EAAOM,MAAM2f,MACpBjB,EAAMpZ,OAAO,WAAYoZ,EAAMmB,SAClCqC,EAAa/c,KAAKzF,EAAQC,GAC1B+e,EAAQhf,EAAOM,MAAM2f,OAQvB,IANA,IAWIxf,EAXAuf,EAAMhB,EAIN8D,EAAa9C,EAAI3c,MAAMC,OAAS,GAAO,EACvCkC,GAAKwa,EAAIlc,IAAIR,QAAUwf,EAAW,EAAI,IAAM,EACzCtd,GACLgd,EAAa/c,KAAKzF,EAAQC,GAC1BuF,IAIF,IAAIud,EAAO,CAACC,QAAShD,EAAItc,YAAY,QAAS0b,UAAU,GACxD6D,EAAO,CAACD,QAAShD,EAAItc,YAAY,QACzB0b,UAAU,EAAM8D,WAAW,EAAMnd,OAAQ,EAAGod,OAAQ,GAE5D,GAAU,MAAN1F,QACG,GAAU,MAANA,EACThd,EAAMT,EAAOW,OAAO,QAAS,KAAOsiB,EAAM,UACrC,GAAU,MAANxF,EACThd,EAAMT,EAAOW,OAAO,QAAS,KAAMoiB,EAAM,SACpC,CAKL,IAAI5D,EAAiB,CACnB,IAAK,IAAU,IAAK,IAAU,EAAK,IAAU,EAAK,KAAuC1B,GACvF2F,EAAIpjB,EAAOqjB,QAAQpjB,EAAOwd,EAAGA,GAC7B6F,EAAItjB,EAAOqjB,QAAQpjB,EAAOwd,EAAGA,GACjC,GAAU,MAANA,GAAmB,MAANA,GAQf,GAJAhd,EAAMT,EAAOW,OAAO,QAAS,KAAMoiB,EAAM5D,GACpCiE,IACHA,EAAI,UAAYpD,EAAItc,YAAY,SAE9B0f,GAAKE,EAAG,CACV,IAAIC,EAAe,CAACzd,MAAO,SAAUC,OAAQ,SAE7C,GADAtF,EAAMT,EAAOW,OAAO,OAAQ,aAAc,CAACF,IACvC2iB,EAAG,CACL,IAAII,EAAQ,IAAI,UAAUJ,EAAGpjB,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,MACjEuF,EAAUhG,EAAOW,OAAO,OAAQ,UAAW,CAAC6iB,GAAQD,GACxD,UAASjf,aAAa0B,EAAS,UAAW,QAC1C,UAASyZ,SAAShf,EAAKA,EAAIif,KAAM1Z,GAEnC,GAAIsd,EAAG,CACL,IAAIG,EAAQ,IAAI,UAAUH,EAAGtjB,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,MACrE,UAASgf,SAAShf,EAAKA,EAAIqf,MAAO9f,EAAOW,OAAO,OAAQ,UAAW,CAAC8iB,GAAQF,IAE1EvjB,EAAOQ,cAAcoC,QAAQkf,MAAMK,uBACrC1hB,EAAMT,EAAOW,OAAO,OAAQ,UAAWF,EAAK,CAACye,MAAO,EAAGW,OAAQ,gBAG9D,CAIL,IAAI6D,EAAY1jB,EAAOW,OAAO,QAAS,KAAMsiB,EAAM9D,GACnD1e,EAAMijB,GACFN,GAAKE,KACP7iB,EAAMT,EAAOW,OAAO,OAAQ,QACxByiB,GACF,UAASjF,eACP1d,EAAK,CAAC,IAAI,UAAU,uBAAyB2iB,EAAI,IAAKpjB,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,QAElGijB,EAAUjd,SAAW,EAAAC,SAASid,IAC9B,UAASxF,eAAe1d,EAAK,CAACijB,IAC1BJ,GACF,UAASnF,eAAe1d,EAAK,CAAC,IAAI,UAAU,uBAAyB6iB,EAAI,IAC7BtjB,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,UAKxFA,GACFT,EAAOU,KAAKD,GAEd+hB,EAAa/c,KAAKzF,EAAQC,EAC5B,EAQAuiB,KAAoB,SAASxiB,EAAmBC,GAC9C,IAAI+f,EAAMhgB,EAAOM,MAAM2f,OAClBD,EAAI3c,OAAS,IAAIC,OAAS,GAAM,GAAgC,KAA1B0c,EAAIlc,KAAO,IAAIR,QAKxDtD,EAAOU,KAAKV,EAAOW,OAAO,OAAQ,UAAW,GAAI,CAACkf,OAAQ,QAASX,MAAO,SAE5Elf,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAO,QAAQ2c,cAAc,CAACsG,SAAS,EAAM3jB,KAAMA,IACpF,EAQAuiB,gBAA+B,SAASxiB,EAAmBC,GACzDD,EAAOM,MAAMC,IAAImiB,QAAU1iB,EAAO6jB,SAAS5jB,EAC7C,EAQAuiB,iBAAgC,SAASxiB,EAAmBC,GAC1DD,EAAOM,MAAMC,IAAIqiB,QAAU5iB,EAAO6jB,SAAS5jB,EAC7C,GAGA,UAAeuiB,uMChLf,cAEA,WAEA,aAIW,EAAAsB,YAA2C,CAAC,EAOvD,EAAAA,YAAA,KAAmB,SAAS9jB,EAAmBC,GAK7C,IAJA,IAGI4F,EAAKke,EAAY/I,EAHfgJ,EAAOhkB,EAAOib,YAAYhb,EAAM,IAClCgkB,EAAOjkB,EAAOa,SAASZ,GACrBikB,EAAQF,EAAKza,MAAM,KAEhBoU,EAAI,EAAGzZ,EAAIggB,EAAM5gB,OAAQqa,EAAIzZ,EAAGyZ,IAAK,CAC5C,IAAMwG,EAAOD,EAAMvG,GAAGyG,OAChB7I,EAAQ4I,EAAK5I,MAAM,kDACzB,GAAIA,EAAO,CAET,GAAI1V,EAEF,MAAM,IAAI,UAAS,uBAAwB,2BAA4B,UAAW5F,GAEpF,IAAMsjB,EAAMc,EAAY9I,EAAM,GAAKA,EAAM,IACrCgI,IAEF1d,EAAM,CACJga,OAAQ,IAAM0D,EACdrE,MAAO,IAAMqE,EACbxd,OAAQwd,EACRzd,MAAO,IAAO,EAAI2V,SAASF,EAAM,GAAI,IAAOA,EAAM,UAGjD,GAAI4I,EAAK5I,MAAM,8CAA+C,CAEnE,GAAIwI,EAEF,MAAM,IAAI,UAAS,uBAAwB,2BACxB,aAAc9jB,GAEnC8jB,EAAaI,OACR,GAAIA,EAAK5I,MAAM,cAAe,CAEnC,GAAIP,EAEF,MAAM,IAAI,UAAS,uBAAwB,2BACxB,QAAS/a,GAE9B+a,EAAQsJ,EAAUH,QACb,GAAa,KAATA,EAET,MAAM,IAAI,UACR,sBACA,mEACAA,GAGFte,IAEFoe,EAAOjkB,EAAOW,OAAO,OAAQ,UAAW,CAACsjB,GAAOpe,KAE9Cke,GAAc/I,KAChBnV,EAAM,CAAC,EACHke,GAEFQ,OAAOC,OAAO3e,EAAK,CAAC4e,eAAgBV,IAElC/I,GAEFuJ,OAAOC,OAAO3e,EAAK,CAACmV,MAAOA,IAE7BiJ,EAAOjkB,EAAOW,OAAO,OAAQ,SAAU,CAACsjB,GAAOpe,IAEjD7F,EAAOU,KAAKujB,EACd,EAIA,IAAIK,EAAY,SAASI,GACvB,OAAOA,CACT,EAEIL,EAAc,SAASd,GACzB,OAAOA,CACT,EAGA,IAAI,EAAAxiB,WAAW,OAAQ,CAACijB,KAAM,QAAS,EAAAF,aAG1B,EAAAa,kBAAoB,EAAAvjB,cAAcT,OAC7C,OAAQ,CAACU,QAAS,CAACC,MAAO,CAAC,mkBChG7B,cACA,cAEA,WACA,WAEA,WAGIsjB,EAAuC,CAAC,EAwC5C,SAAgBC,EAAgB7hB,EAAsBhB,EACtB6D,EAAUif,GACxC,IAAIC,EAAQ,EAAAC,YAAYC,YAAYjiB,EAAShB,EAAM6D,EAAKif,GAMxD,MALa,UAAT9iB,GACAgB,EAAQxC,cAAcR,OAAOM,MAAMC,IAAgB,aACrD,UAASsD,YAAYkhB,EAAO,WAAW,GACvC/hB,EAAQxC,cAAc0kB,QAAQ,UAAWH,IAEpCA,CACT,CAOA,SAAgBI,EAAkBjlB,eAChC,IAAiB,QAAAA,EAAIklB,KAAKC,QAAQ,YAAU,8BAAE,CAAzC,IAAIC,EAAI,QACX,GAAI,UAAS5hB,YAAY4hB,EAAM,WAAY,CACzC,IAAIC,EAAU,UAASnhB,aAAakhB,EAAM,eAC3B,MAAXC,EACF,UAASjhB,aAAaghB,EAAM,cAAe,EAAA/gB,YAAY0G,QAAQua,MAE/D,UAASlhB,aAAaghB,EACA,cAAeV,EAAYW,IAAYA,GAE/D,UAASE,iBAAiBH,EAAM,8GAGtC,CApEAV,EAAY,EAAArgB,YAAY0G,QAAQ6B,QAAU,EAAAvI,YAAY0G,QAAQua,KAC9DZ,EAAY,EAAArgB,YAAY0G,QAAQC,QAAa,EAAA3G,YAAY0G,QAAQya,WACjEd,EAAY,EAAArgB,YAAY0G,QAAQ0a,SAAa,EAAAphB,YAAY0G,QAAQ2a,YACjEhB,EAAY,EAAArgB,YAAY0G,QAAQ4a,QAAa,EAAAthB,YAAY0G,QAAQ6a,WACjElB,EAAY,EAAArgB,YAAY0G,QAAQ8a,WAAa,EAAAxhB,YAAY0G,QAAQ+a,cACjEpB,EAAY,qBAAyB,yBACrCA,EAAY,iBAAyB,qBACrCA,EAAY,eAAyB,EAAArgB,YAAY0G,QAAQya,WAI9C,EAAAO,kBAAiD,CAAC,EAQ7D,EAAAA,kBAAAC,WAA+B,SAASlmB,EAAmBC,GACzD,IAAIkmB,EAAanmB,EAAOM,MAAMC,IAAgB,WAC9CP,EAAOM,MAAMC,IAAgB,YAAI,EACjC,IAAIE,EAAMT,EAAOa,SAASZ,GAC1BD,EAAOM,MAAMC,IAAgB,WAAI4lB,EACjCnmB,EAAOU,KAAKD,EACd,EAGA,IAAI,EAAAM,WAAW,aAAc,CAAColB,WAAY,cAAe,EAAAF,mBAWzD,oBAgBA,sBAgBa,EAAAG,wBAA0B,EAAAhlB,cAAcT,OACjD,aAAc,CACVU,QAAS,CAACC,MAAO,CAAC,eAClBkC,MAAO,CAAC,MAASqhB,GACjBwB,eAAgB,CAAClB,0GCtFzB,cACA,WACA,SAGa,EAAAmB,oBAAsB,EAAAllB,cAAcT,OAC/C,SAAU,CACRU,QAAS,CACPK,UAAW,CAAC,qBACZJ,MAAO,CAAC,kBAEVO,OAAK,KACH,EAAC,EAAA0kB,WAAWxkB,UAAUC,MAAO,EAAAukB,2pBCXnC,eACA,WACA,cAQA,yEAqDA,QArDgC,OAK9B,sBAAI,mBAAI,KAAR,WACE,MAAO,QACT,kCAKA,sBAAI,qBAAM,KAAV,WACE,OAAO,CACT,kCAKO,YAAAC,UAAP,SAAiB3K,GACf,OAAIA,EAAKjW,OAAO,SACP,CAAC,CAACxC,KAAKJ,QAAQrC,OAAO,MAAOyC,KAAKqjB,WAAW,GAElD5K,EAAKjW,OAAO,QACdxC,KAAK1C,KAAKmb,EAAK4K,SACXrjB,KAAKM,YAAY,UACZ,CAAC,CAACN,KAAKqjB,UAAU,GAEnB,EAAAC,SAASC,MAEX,YAAMH,UAAS,UAAC3K,EACzB,EAMO,YAAA4K,MAAP,WACE,IAAIG,EAAQ,YAAMH,MAAK,WACnBI,EAAOzjB,KAAKM,YAAY,QACxBojB,EAAQ1jB,KAAKM,YAAY,SAC7B,GAAIN,KAAKM,YAAY,YACnB,OAAO,UAAUqjB,OAAO3jB,KAAKJ,QAAQxC,cAAeqmB,EAAMD,EAAOE,GAEnE,IAAIE,EAAQ,CAACC,OAAO,EAAM7H,UAAU,EAAO8D,WAAW,EAAMzc,SAAU,EAAAC,SAASgE,MAC3Ewc,EAAW9jB,KAAKzC,OAAO,QAAS,KAAMqmB,EAAOH,GACjDG,EAAMvgB,SAAW,EAAAC,SAASiE,MAC1B,IAAIwc,EAAY/jB,KAAKzC,OAAO,QAAS,KAAMqmB,EAAOF,GAGlD,OAFW1jB,KAAKzC,OAAO,OAAQ,OAAQ,CAACumB,EAAUN,EAAOO,GACpC,CAACN,KAAMA,EAAMC,MAAOA,EAAOrgB,SAAU,EAAAC,SAAS0gB,OAErE,EAEF,EArDA,CAAgC,EAAAV,UAAnB,EAAAH,WAAAA,8JCXb,eACA,cAMA,IAAI,EAAAxlB,WAAW,gBAAiB,CAC9BsmB,IAAK,CAAC,QAAS,yBAA0B,GACzCC,IAAK,CAAC,QAAS,yBAA0B,GACzCC,OAAQ,CAAC,SAAU,IAAU,KAAU,EAAOC,KAC9C,IAAO,CAAC,SAAU,IAAK,KAAK,EAAO,GACnCC,IAAK,CAAC,QAAS,sCAAuC,GACtDC,IAAK,CAAC,QAAS,sCAAuC,GACtDC,OAAQ,CAAC,SAAU,IAAU,KAAU,EAAMH,KAC7CI,IAAK,CAAC,SAAU,IAAK,KAAK,EAAM,GAEhCC,OAAQ,CAAC,QAAS,6CAA8C,GAChEC,OAAQ,CAAC,QAAS,uEAAwE,GAE1F,IAAK,OACJ,WAMH,IAAI,EAAAvF,SAAS,oBAAqB,CAChC,IAAK,OACJ,uKC5BH,kBAEA,WACA,aAGIwF,EAA6C,CAAC,EAElDA,EAAchoB,MAAQ,UAAYA,MAYlCgoB,EAAcJ,OAAS,SAAS3nB,EAAmB+f,EACnB8G,EAAcC,EACd1H,EAAmB4I,GACjD,IAAIxJ,EAAOxe,EAAO0d,UAClB,GAAa,KAATc,EACF,MAAM,IAAI,UAAS,gBAAiB,0BAA2Bxe,EAAOkgB,WAExE,IAAI+H,GAAS,EACA,MAATzJ,IACFxe,EAAO2d,IACPsK,GAAS,GAEXjoB,EAAOU,KACLV,EAAO8b,YAAYnb,OAAO,UACvB2c,cAAc,CAAC0K,OAAQA,EAAQE,SAAU,EAAGrB,KAAMA,EACnCC,MAAOA,EAAO1H,SAAUA,EAAU6I,OAAQA,IAChE,EAQAF,EAAcI,IAAM,SAASnoB,EAAmBC,GAC9C,IAAIwd,EAAa,MAATxd,EAAe,IAAM,IACzB+f,EAAMhgB,EAAOM,MAAM2f,MACvB,GAAiB,WAAbD,EAAIhe,MACJge,EAAItc,YAAY,aAAesc,EAAItc,YAAY,UADnD,CAEE,IAAIjD,EAAMT,EAAOW,OAAO,QAAS,KAAM,CAAC8F,SAAU,EAAAC,SAASid,IAAKvE,UAAU,GAAQ3B,GAClFzd,EAAOU,KAAKD,QAQd,GALU,MAANgd,GAAkC,MAArBzd,EAAO0d,YACtB1d,EAAO2d,IACPF,EAAI,KAESuC,EAAItc,YAAY,YAC/B,CAKA,IAAI4hB,EAAOtlB,EAAOW,OAAO,OAAQ,UAAW,GAAI,CAAC8F,SAAU,EAAAC,SAASiE,QACpE3K,EAAOU,KAAK4kB,GACZtF,EAAInc,YAAY,WAAYmc,EAAItc,YAAY,YAAwB,GACpE4hB,EAAOtlB,EAAOW,OAAO,QAAS,KAAM,CAACye,UAAU,EAAMgJ,WAAW,GAAO3K,GACvEzd,EAAOU,KAAK4kB,GACZA,EAAOtlB,EAAOW,OAAO,OAAQ,UAAW,GAAI,CAAC8F,SAAU,EAAAC,SAASgE,OAChE1K,EAAOU,KAAK4kB,OAXZ,CACE,IAAI,EAAOtlB,EAAOW,OAAO,QAAS,KAAM,CAACye,UAAU,EAAOgJ,WAAW,GAAO3K,GAC5Ezd,EAAOU,KAAK,GAUhB,EAGA,UAAeqnB,2GC1Ef,cACA,UACA,WACA,QAGa,EAAAM,wBAA0B,EAAAjnB,cAAcT,OACnD,aAAc,CACZU,QAAS,CACPC,MAAO,CAAC,qBACRM,YAAa,CAAC,4BAEhBC,OAAK,KACH,EAAC,EAAAymB,cAAcvmB,UAAUC,MAAO,EAAAsmB,iBAElCC,cAAe,CACb,CAAC,EAAAC,aAAc,IAEjBnC,eAAgB,CACd,CAAC,EAAAoC,cAAe,GAChB,CAAC,EAAAC,mBAAoB,GACrB,CAAC,EAAAC,aAAc,uxCCpBrB,iBACA,WAEA,cACA,cAGA,gFAOS,EAAAC,UAAuB,KAMvB,EAAAC,WAAwB,KAEvB,EAAAC,WAAoB,IAAI,UAAM,EAAK9lB,QAAS,CAAC,GAAG,IAwC1D,QAvDmC,OAoBjC,sBAAW,mBAAI,KAAf,WACE,MAAO,WACT,kCAMO,YAAAwjB,UAAP,SAAiB3K,GACf,GAAIA,EAAKjW,OAAO,QAA6B,cAAnBiW,EAAKX,UAA2B,CACxD,IAAIoK,EAAOliB,KAAKqjB,QAEhB,OADAsC,EAAellB,YAAYyhB,EAAM,SAAS,GACnC,CAAC,CAACliB,KAAKJ,QAAQrC,OAAO,MAAO2kB,GAAOzJ,IAAO,GAEpD,GAAIA,EAAKjW,OAAO,QACd,MAAM,IAAI,UAAS,gBAAiB,oBAAqBxC,KAAK8X,WAGhE,OADA9X,KAAK0lB,WAAWpoB,KAAKmb,GACd,EAAA6K,SAASC,IAClB,EAMO,YAAAF,MAAP,WACE,IAAMuC,EAAO,YAAMvC,MAAK,WAClBxjB,EAAQG,KAAK0lB,WAAW7I,MAC9B,GAAIhd,EAAM2C,OAAO,WAAa3C,EAAMkd,OAClC,OAAO6I,EAET5lB,KAAK0lB,WAAWpoB,KAAK0C,KAAKJ,QAAQrC,OAAO,SACzC,IAAIsoB,EAAS7lB,KAAK0lB,WAAW7I,MAAMwG,QACnC,OAAOrjB,KAAKzC,OAAO,OAAQ,OAAQ,CAACsoB,EAAQD,GAAO,CAAC,EACtD,EACF,EAvDA,CAAmC,EAAAtC,UAAtB,EAAA4B,cAAAA,6JCRb,iBACA,cACA,WAMA,IAAI,EAAAvnB,WAAW,oBAAqB,CAClCmoB,OAAkB,QAClBC,UAAkB,CAAC,YAAa,GAChCC,WAAkB,CAAC,YAAa,GAChCC,YAAkB,CAAC,YAAa,GAChCC,eAAkB,CAAC,YAAa,GAChCC,YAAkB,CAAC,YAAa,GAChCC,WAAkB,CAAC,QAAS,SAC5BC,UAAkB,CAAC,QAAS,QAE5BC,IAAkB,QAClBC,IAAkB,CAAC,YAAa,GAChCC,IAAkB,CAAC,YAAa,GAChCC,IAAkB,CAAC,YAAa,GAChCC,GAAkB,CAAC,QAAS,SAC5BC,GAAkB,CAAC,QAAS,QAE5BC,OAAkB,CAAC,UAAW,QAAQ,GACtCC,WAAkB,CAAC,UAAW,SAAS,GACvCC,UAAkB,CAAC,UAAW,SAAS,GACvCC,WAAkB,CAAC,UAAW,UAAU,GAKxCC,aAAwB,CAAC,UAAW,QAAQ,GAC5CC,iBAAwB,CAAC,UAAW,SAAS,GAC7CC,gBAAwB,CAAC,UAAW,SAAS,GAC7CC,iBAAwB,CAAC,UAAW,UAAU,GAK9CC,UAAW,CAAC,aAAa,GACzBC,gBAAiB,CAAC,aAAa,GAE/BC,aAAc,CAAC,aAAa,GAC5BC,mBAAoB,CAAC,aAAa,GAGlCC,QAAiB,UACjBC,MAAiB,SACjBC,SAAiB,CAAC,aAAc,GAChCC,UAAkB,CAAC,aAAc,GACjCC,WAAmB,CAAC,aAAc,GAClCC,cAAsB,CAAC,aAAc,GACrCC,WAAmB,CAAC,aAAc,IACjC,WAGH,IAAI,EAAAhiB,eAAe,0BAA2B,UAAatH,YAAa,CACtEupB,UAAkB,CAAC,YAAa,MAAM,IACrC,mzCC1DH,iBACA,cACA,cAGA,cAIIC,EAAiD,CAUrDA,UAA8B,SAASprB,EAAmB6a,GAOxD,OANA7a,EAAOU,KAAKma,GAEE7a,EAAO8b,YAAYnb,OAAO,aACtC2c,cAAc,CAACrd,KAAM4a,EAAMK,UACZmQ,KAAM,QAASC,YAAa,QAASd,WAAW,GAGnE,EAQAY,MAA0B,SAASprB,EAAmBC,GACpD,IAAI+f,EAAMhgB,EAAOM,MAAM2f,MAEvB,GAAiB,cAAbD,EAAIhe,KACN,MAAM,IAAI,UAAS,sBACA,yDAErB,IAAIupB,EAAUC,EAAcxrB,EAAQA,EAAOI,YAAYH,IACvD8oB,EAAellB,YAAY0nB,EAAS,SAAS,GAC7CvL,EAAItf,KAAK6qB,EACX,GASMC,EAAgB,SAASxrB,EAAmBurB,GAEhD,IAAI/nB,EAAQ,UAAUioB,aAAazrB,EAAQ,UAAU4c,WAAW2O,GAAU,GAC1E,IAAK/nB,EAAM,GAAG8W,WAAW,GAAGA,WAAWhX,OACrC,OAAOtD,EAAOW,OAAO,OAAQ,OAAQ,IAEvC,IAAI+qB,EAAO1rB,EAAOW,OAAO,OAAQ,SAAU,GAAI,CAACmF,MAAO,SACnD6lB,EAAO3rB,EAAOW,OAAO,OAAQ,SAAU,GAAI,CAACmF,MAAO,SACvD,OAAO9F,EAAOW,OAAO,OAAQ,OAAQ,EAAF,GAAG+qB,GAAI,EAAKloB,IAAK,IAAEmoB,IAAI,GAC5D,EA0DA,SAASC,EAAW5rB,EAAmB6rB,EACnBC,EAAwBlL,EACxBC,EAAuB7F,EACvBwP,GAClB,IAOI5B,EAAWmD,EAaX5rB,EAAUgE,EApBR6nB,EAAQhsB,EAAOW,OACnB,OAAQ,MAAO,CAACX,EAAOW,OAAO,OAAQ,MAAO,CAACkrB,GAAU,CAAC,IAAK,CAAC,GAC3DI,EAAQjsB,EAAOW,OACnB,OAAQ,MAAO,CAACX,EAAOW,OAAO,OAAQ,MAAOmrB,EAAa,CAAC,IAAK,CAAC,GAC/DI,EAAOlsB,EAAOW,OAAO,OAAQ,SAAU6pB,EAAY,CAACyB,EAAOD,GAAS,CAACA,EAAOC,GACvD,CAAC5iB,MAAO,QAAS8iB,SAAUnR,EAAOmB,aAAc,QAgBzE,GAfA4M,EAAellB,YAAYqoB,EAAM,gBAAiB1B,EAAY,KAAO,QAEjE5J,IACFgI,EAAY5oB,EAAOW,OACjB,OAAQ,UAAW,CAACigB,GACpB,CAACf,OAAQ,QAAS/Z,MAAO,QAASsmB,QAAS,WAC7CrD,EAAellB,YAAY+kB,EAAW,aAAc,SAElD/H,IACFkL,EAAa/rB,EAAOW,OAClB,OAAQ,UAAW,CAACkgB,GACpB,CAAChB,OAAQ,QAAS/Z,MAAO,QAASsmB,QAAS,WAC7CrD,EAAellB,YAAYkoB,EAAY,aAAc,UAGnDnL,GAAQC,EACV1gB,EAAW,CAACyoB,EAAWsD,EAAMH,GAC7B5nB,EAAQ,YACH,GAAIyc,EACTzgB,EAAW,CAACyoB,EAAWsD,GACvB/nB,EAAQ,WACH,KAAI0c,EAIT,OAAOqL,EAHP/rB,EAAW,CAAC+rB,EAAMH,GAClB5nB,EAAQ,QAMV,OAFA+nB,EAAOlsB,EAAOW,OAAO,OAAQ,OAAQR,GACrC4oB,EAAellB,YAAYqoB,EAAM,eAAgB/nB,GAC1C+nB,CACT,CAmFA,SAASG,EAAiBrsB,EAAmBC,GAE3C,GAAe,MADFD,EAAO0d,UAElB,MAAM,IAAI,UAAS,sBACA,4CAA8Czd,GAEnED,EAAO2d,IACP,IAAI2O,EAAQtsB,EAAOqjB,QAAQpjB,EAAM,KACjC,IAAoC,IAAhCqsB,EAAMC,QAAQ,aAChB,MAAM,IAAI,UAAS,sBACA,2BAA4BtsB,GAG7C,QAAeqsB,EAAM/iB,MAAM,aAAY,GAAtCijB,EAAI,KAAEC,EAAI,KACXZ,EAAU,IAAK,UAAUW,EAAMxsB,EAAOM,MAAMC,IAAKP,EAAOQ,eAAgBC,MACxEisB,EAAa,IAAK,UAAUD,EAAMzsB,EAAOM,MAAMC,IAAKP,EAAOQ,eAAgBC,MAC3EksB,EAAU,IAAK,UAAU,YAAa3sB,EAAOM,MAAMC,IAAKP,EAAOQ,eAAgBC,MAC7EmgB,EAAO5gB,EAAOW,OAAO,OAAQ,MAAO,CAACkrB,GAAU,CAAC,GAChDe,EAAS5sB,EAAOW,OAAO,OAAQ,MAAO,CAACgsB,GAAU,CAAC,GAClD9L,EAAQ7gB,EAAOW,OAAO,OAAQ,MAAO,CAAC+rB,GAAa,CAAC,GACpD5oB,EAAM9D,EAAOW,OAAO,OAAQ,MAAO,CAACigB,EAAMgM,EAAQ/L,GAAQ,CAAC,GAC3Dxd,EAAQrD,EAAOW,OAAO,OAAQ,SAAU,CAACmD,GAAM,CAACmY,cAAe,OAAQrY,YAAa,aAG1F,OAFAmlB,EAAellB,YAAYR,EAAO,WAAW,GAC7CrD,EAAOQ,cAAc0kB,QAAQ,UAAWphB,GACjCT,CACT,CArMA+nB,EAAkByB,UAAY,SAAS7sB,EAAmBC,EAAcuF,GACtE,IAAIwa,EAAMhgB,EAAOM,MAAM2f,MACvB,GAAiB,cAAbD,EAAIhe,KACN,MAAM,IAAI,UAAS,sBACA,yDAErB,GAAIge,EAAIG,OAAS3a,EACf,MAAM,IAAI,UAAS,eAAgB,+BAErC,IAAMglB,EAAYxK,EAAItc,YAAY,aAC5BopB,EAAoB,IAANtnB,GAAYwa,EAAI+M,OAAO,GAAGzS,WAAWhX,OAAckC,EAAJ,EAC/DrF,EAAsB,GAC1B,GACMA,EAASmD,QACXnD,EAAS6sB,QAAQhtB,EAAOW,OAAO,OAAQ,MAAO,GAAI,CAAC,IAErDR,EAAS6sB,QACPhtB,EAAOW,OAAO,OAAQ,MAAO,CAACqf,EAAIiN,OACpB,CAAC,SAAazC,EAAY,MAAQ,YAClDhlB,UACOA,EAAI,GACb,IAAI1B,EAAM9D,EAAOW,OAAO,OAAQ,MAAOR,EAAU,CAAC,GAC9CkD,EAAQrD,EAAOW,OAAO,OAAQ,SAAU,CAACmD,GAAM,CAACqY,aAAc,QAC9DuQ,EAAalB,EAAcxrB,EAAQA,EAAOI,YAAYH,IACtD+a,EAAQgF,EAAItc,YAAY,eACxBsX,IAAUgF,EAAItc,YAAY,SAC5Bsc,EAAInc,YAAY,cAAemc,EAAItc,YAAY,SAEjD,IAAIwoB,EAAON,EACT5rB,EAAQqD,EAAO,CAACqpB,GAAa1M,EAAItc,YAAY,QAC7Csc,EAAItc,YAAY,SAAqBsX,EAAOwP,GAC9CxK,EAAInc,YAAY,OAAQ,MACxBmc,EAAInc,YAAY,QAAS,MACzBklB,EAAellB,YAAYqoB,EAAM,YAAaY,GAC9C9sB,EAAOQ,cAAc0kB,QAAQ,YAAagH,GAC1ClM,EAAItf,KAAKwrB,EACX,EA8DAd,EAAkB8B,MAAQ,SAASltB,EAAmBC,EAAc6E,GAClE,IAAIkb,EAAMhgB,EAAOM,MAAM2f,MAEvB,GAAiB,cAAbD,EAAIhe,KACN,MAAM,IAAI,UAAS,sBACA,yDAErB,IAAIupB,EAAU,UAAUE,aAAazrB,EAAQA,EAAOI,YAAYH,GAAO,GACnEkE,EAASonB,EAAQjoB,OAAS,EAC5BtD,EAAOW,OAAO,OAAQ,OAAQ4qB,EAAS,CAAC,GAAKA,EAAQ,GACvDvL,EAAInc,YAAYiB,EAAMX,EACxB,EAUAinB,EAAkB+B,QAAU,SAASntB,EAAmB+f,EAAe/E,EAAeoS,GACpF,IAAIpN,EAAMhgB,EAAOM,MAAM2f,MAEvB,GAAiB,cAAbD,EAAIhe,KACN,MAAM,IAAI,UAAS,sBACA,yDAErBge,EAAInc,YAAY,cAAemX,GAC3BoS,GACFpN,EAAInc,YAAY,OAAQmX,EAE5B,EASAoQ,EAAkBiC,UAAY,SAASrtB,EAAmB+f,EAAeuN,GACvE,IAAItN,EAAMhgB,EAAOM,MAAM2f,MACvB,GAAiB,cAAbD,EAAIhe,KACN,MAAM,IAAI,UAAS,sBACA,yDAErBge,EAAInc,YAAY,YAAaypB,EAC/B,EAQAlC,EAAkBmC,OAAS,SAASvtB,EAAmBC,GACrD,IAAI+f,EAAMhgB,EAAOM,MAAM2f,MACvB,GAAiB,cAAbD,EAAIhe,KACN,MAAM,IAAI,UAAS,sBACA,yDAErB,IAAIqpB,EAAOgB,EAAiBrsB,EAAQC,GACpC8oB,EAAellB,YAAYwnB,EAAM,SAAS,GAC1CrL,EAAItf,KAAK2qB,EACX,EA0CAD,EAAkBoC,QAAU,SAASC,EAAoB1N,GAAiB,EAS1EqL,EAAkBsC,WAAa,SAAS1tB,EAAmBC,EAAcuF,GACvE,IAAIwa,EAAMhgB,EAAOM,MAAM2f,MACvB,GAAiB,cAAbD,EAAIhe,KACN,MAAM,IAAI,UAAS,sBACA,yDAErB,GAAIge,EAAIG,OAAS3a,EACf,MAAM,IAAI,UAAS,eAAgB,+BAErC,IAAMglB,EAAYxK,EAAItc,YAAY,aAC5BopB,EAAoB,IAANtnB,GAAYwa,EAAI+M,OAAO,GAAGzS,WAAWhX,OAAckC,EAAJ,EAC/DrF,EAAsB,GAC1B,GACMA,EAASmD,QACXnD,EAAS6sB,QAAQhtB,EAAOW,OAAO,OAAQ,MAAO,GAAI,CAAC,IAErDR,EAAS6sB,QACPhtB,EAAOW,OAAO,OAAQ,MAAO,CAACqf,EAAIiN,OACpB,CAAC,SAAazC,EAAY,MAAQ,YAClDhlB,UACOA,EAAI,GACb,IAAI1B,EAAM9D,EAAOW,OAAO,OAAQ,MAAOR,EAAU,CAAC,GAC9CkD,EAAQrD,EAAOW,OAAO,OAAQ,SAAU,CAACmD,GAAM,CAACqY,aAAc,QAE9DuQ,EAAaL,EAAiBrsB,EAAQC,GACtC+a,EAAQgF,EAAItc,YAAY,eACxBsX,IAAUgF,EAAItc,YAAY,SAC5Bsc,EAAInc,YAAY,cAAemc,EAAItc,YAAY,SAEjD,IAAIwoB,EAAON,EACT5rB,EAAQqD,EAAO,CAACqpB,GAAa1M,EAAItc,YAAY,QAC7Csc,EAAItc,YAAY,SAAqBsX,EAAOwP,GAC9CxK,EAAInc,YAAY,OAAQ,MACxBmc,EAAInc,YAAY,QAAS,MACzBklB,EAAellB,YAAYqoB,EAAM,YAAaY,GAC9C9sB,EAAOQ,cAAc0kB,QAAQ,YAAagH,GAC1ClM,EAAItf,KAAKwrB,EACX,EAEA,UAAed,q4BCrUf,kBACA,cAiBIuC,EAAoB,KACpB9R,EAAiB,KAOjB+R,EAAU,SAAStI,GAGrB,OAFAzJ,EAAKgS,KAAOvI,EACQqI,EAAIG,UAAkBF,QAAQ/R,EAAM8R,GAAI,CAE9D,EAUII,EAAU,SAASzI,GAErB,IADA,IAAI3H,EAAI,EACD2H,IAAS,UAAS0I,OAAO1I,EAAM,WAAW,CAC/C,GAAI,UAAS0I,OAAO1I,EAAM,QACxB,OAAO,KAEL,UAAS0I,OAAO1I,EAAM,SACxBA,EAAOA,EAAKhL,WAAW,GACvBqD,EAAI,IAGN2H,EAAOA,EAAK2I,OAAO3T,WAAWqD,GAC9BA,KAEF,OAAO2H,CACT,EAaI4I,EAAc,SAAShC,EAAeiC,GACxC,OAAOjC,EAAK5R,WAAyB,OAAd6T,EAAqB,EAAI,GAAG7T,WAAW,GAC5DA,WAAW,GAAGA,WAAW,GAAGA,WAAW,EAC3C,EASI8T,EAAa,SAASC,EAAmB7oB,GAC3C,OAAO6oB,EAAS/T,WAAW9U,GAAG8U,WAAW,GAAGA,WAAW,EACzD,EAQIgU,EAAe,SAASD,GAC1B,OAAOD,EAAWC,EAAU,EAC9B,EAQIE,EAAc,SAASF,GACzB,OAAOD,EAAWC,EAAUA,EAAS/T,WAAWhX,OAAS,EAC3D,EASIkrB,EAAgB,SAAStC,EAAeiC,GAC1C,OAAOjC,EAAK5R,WAAyB,OAAd6T,EAAqB,EAAI,GAAG7T,WAAW,GAAGA,WAAW,GAAGA,WAAW,EAC5F,EASImU,EAAY,SAASC,GACvB,KAAOA,IAAQ,UAASV,OAAOU,EAAK,QAClCA,EAAMA,EAAIT,OAEZ,OAAOS,CACT,EAQIC,EAAc,SAASD,GACzB,OAAOA,EAAIT,OAAO3T,WAAWoU,EAAIT,OAAO3T,WAAWiS,QAAQmC,GAAO,EACpE,EAmBIE,EAAe,SAASF,GAC1B,KAAOA,GAAwC,OAAjC,IAAAhrB,aAAYgrB,EAAK,cAC7BA,EAAMA,EAAIT,OAEZ,OAAOS,CACT,EAgBIG,EAAY,SAASH,EAAcxC,EAAerL,QAAA,IAAAA,IAAAA,GAAA,GACpD,IAAIiO,EAAS,EACb,GAAIJ,IAAQxC,EACV,OAAO4C,EAET,GAAIJ,IAAQxC,EAAK+B,OAAQ,CACvB,IAAI,EAAWS,EAAIpU,WACf,EAAQuG,EAAQ,EAASvd,OAAS,EAAI,EACtC,UAAS0qB,OAAO,EAAS,GAAQ,YACnCc,GAAUlB,EAAQ,EAAS,KAE7Bc,EAAMxC,EAAK+B,OAEb,GAAIS,IAAQxC,EACV,OAAO4C,EAET,IAAI3uB,EAAWuuB,EAAIpU,WACfyU,EAAQlO,EAAQ1gB,EAASmD,OAAS,EAAI,EAI1C,OAHInD,EAAS4uB,KAAW7C,IACtB4C,GAAUlB,EAAQztB,EAAS4uB,KAEtBD,CACT,EAaIE,EAAc,SAASN,EAAc7N,QAAA,IAAAA,IAAAA,GAAA,GACvC,IAAIqL,EAAO6B,EAAQW,GACfjC,EAAO+B,EAActC,GAAM,IAAAxoB,aAAYwoB,EAAM,kBAKjD,OAHQ2C,EAAUH,EAAKxC,EAAMrL,IACrB+M,EAAQ1B,GACR0B,EAAQnB,IACM,CACxB,EAUIwC,EAAW,SAAS7sB,EAAsBssB,EACtBQ,EAAerO,GACrC,QADqC,IAAAA,IAAAA,GAAA,IACjC,IAAAnd,aAAYgrB,EAAK,mBACjB,IAAAhrB,aAAYgrB,EAAK,gBAAiB,CACpC,IAAMtQ,EAAOhc,EAAO+sB,YAAYxuB,OAAO,OAAQ,QAC/C+tB,EAAIT,OAAOhQ,aAAaG,EAAMsQ,GAC9BtQ,EAAKnY,YAAY,CAACyoB,IAClBU,EAAeV,EAAKtQ,GACpBsQ,EAAMtQ,EAGR,IAAM2Q,EAAQlO,EAAQ6N,EAAIpU,WAAWhX,OAAS,EAAI,EAC9C+rB,EAASX,EAAIpU,WAAWyU,GACxB,UAASf,OAAOqB,EAAQ,UAC1B,UAAS/qB,aACP+qB,EAAQ,QACR,UAAUvQ,GAAG,UAAUwQ,SACrB,UAASlrB,aAAairB,EAAQ,UAAsBH,KAG1DG,EAASjtB,EAAO+sB,YAAYxuB,OAAO,OAAQ,SAAU,GAClB,CAACmF,MAAO,UAAUgZ,GAAGoQ,KACpDrO,EACF6N,EAAIrQ,YAAYgR,IAGlBA,EAAOpB,OAASS,EAChBA,EAAIpU,WAAW0S,QAAQqC,IACzB,EAQID,EAAiB,SAASG,EAAcC,GAC9B,CAAC,YAAa,QAAS,YAAa,gBAC1CC,SAAQ,SAAAC,GACZ,IAAIC,GAAQ,IAAAjsB,aAAY6rB,EAAKG,GAChB,MAATC,KACF,IAAA9rB,aAAY2rB,EAAME,EAAGC,IACrB,IAAAC,gBAAeL,EAAKG,GAExB,GACF,EA4DMG,EAAkB,SAASztB,EAAsB0tB,EACtBC,EAAkB5B,EAAmBroB,GACpE,IAAIupB,EAASjtB,EAAO+sB,YAAYxuB,OAAO,OAAQ,SAAU,GAClB,CAACmF,MAAO,UAAUgZ,GAAGhZ,KAC5D,GAAkB,SAAdqoB,EAAsB,CACxB,IAAIrqB,EAAMgsB,EAAQxV,WAAWyV,GAAUzV,WAAW,GAClD+U,EAAOpB,OAASnqB,EAChBA,EAAIwW,WAAW0S,QAAQqC,QAEvBS,EAAQxV,WAAWyV,GAAU1R,YAAYgR,IAE3C,IAAAxrB,aAAYisB,EAAQ7B,OAAQ,iBAAmBE,EAAWroB,EAC5D,EAmBMkqB,EAAwB,SAAS5tB,EAAsB6tB,GAE3D,IADA,IAAIjQ,EAAMiQ,EAASC,MACZD,EAAS3sB,QAAQ,CACtB,IAAIqc,EAASsQ,EAASC,MAClB,IAAgBC,EAAgBnQ,EAAKL,GAAO,GAA3CiB,EAAI,KAAEC,EAAK,MACZ,IAAAnd,aAAYsc,EAAIiO,OAAQ,WAC1B4B,EAAgBztB,EAAQwe,EAAO,EAAIZ,EAAML,EAAQ,EAAG,OAAQyQ,KAAKC,IAAIzP,IACrEiP,EAAgBztB,EAAQye,EAAQ,EAAIb,EAAML,EAAQ,EAAG,QAASyQ,KAAKC,IAAIxP,KAEzEb,EAAML,EAEV,EAaMwQ,EAAkB,SAASnQ,EAAcL,GAC7C,IAAM2Q,EAAK1C,EAAQ5N,EAAI1F,WAAW,IAC5BiW,EAAK3C,EAAQjO,EAAOrF,WAAW,IAMrC,MAAO,CALIsT,EAAQ5N,EAAI1F,WAAW,IACvBsT,EAAQjO,EAAOrF,WAAW,IAG1BgW,EAAKC,EAElB,EAyDW,EAAA5H,aAAe,SAASzoB,WACjC2b,EAAO,IAAI3b,EAAIswB,SAAS5tB,QAAQ6tB,SAAS,GAAI,KAAMvwB,EAAI+jB,KAAKyM,SAC5D,IAAItuB,EAASlC,EAAIklB,MAxKE,SAAShjB,GAC5B,IAAI6tB,EAAW7tB,EAAOuuB,UAAmB,QACzC,GAAKV,EAGL,IAAK,IAAItS,EAAIsS,EAAS3sB,OAAS,EAAGstB,OAAG,EAAEA,EAAMX,EAAStS,GAAIA,IACxD,IAAI,IAAAja,aAAYktB,EAAK,qBACnB,IAAAhB,gBAAegB,EAAK,wBADtB,CAIA,IAAIC,EAAU,GACVnC,EAAME,EAAagC,GACvB,GAAsC,KAAlC,IAAAltB,aAAYgrB,EAAK,aAArB,CAIA,IADAmC,EAAQxwB,KAAKuwB,GAC4B,KAAlC,IAAAltB,aAAYgrB,EAAK,cAAoB,CAE1CA,EAAMX,EAAQW,GACd,IAAI7C,EAAUyC,EAAaJ,EAAYQ,GAAK,IAAAhrB,aAAYgrB,EAAK,mBACzDoB,GAAW,IAAApsB,aAAYmoB,EAAS,iBAElC2C,EAAc3C,GAAS,IAAAnoB,aAAYmoB,EAAS,kBAE5CA,GACE,IAAAnoB,aAAYosB,EAAS,aACvBc,EAAMd,EAAQxV,WAAW,GACzBuW,EAAQxwB,KAAKuwB,IACb,IAAA/sB,aAAY+sB,EAAK,oBAAoB,IAEvClC,EAAM7C,EAERmE,EAAsB5tB,EAAQyuB,IAElC,CAuIEC,CAAe1uB,GACf,IAAI2uB,EAAa3uB,EAAOuuB,UAAqB,WAAK,OAClD,IAAgB,QAAAI,GAAU,8BAAE,CAAvB,IAAIrC,EAAG,QACNsC,GAAU,IAAAttB,aAAYgrB,EAAK,SAE3BxC,EAAO6B,EAAQW,GACfL,EAAWH,EAAYhC,GAAM,IAAAxoB,aAAYwoB,EAAM,kBAC/C+E,EAAW3C,EAAaD,GAC5B,IAAI,IAAA3qB,aAAYutB,EAAU,aAAc,CACtC,IAAI,EAASjC,EAAYiC,GACzB,GAAI,EAAQ,CACVhC,EAAS7sB,EAAQ6uB,GAAW,GAC5B,IAAI,EAAIpC,EAAUH,EAAKxC,GAAM,GAC7B+C,EAAS7sB,EAAQssB,EAAK,EAAS,IAInC,IAAIwC,EAAW3C,EAAYF,GAC3B,GAA0C,OAAtC,IAAA3qB,aAAYwtB,EAAU,aAA1B,CAGA,IAAIC,EAASnC,EAAYkC,GAAU,GACnCjC,EAAS7sB,EAAQ8uB,GAAWC,GAAQ,GACpC,IAAIC,EAAIvC,EAAUH,EAAKxC,GAAM,GACzBmF,GAAY,IAAA3tB,aAAYgrB,EAAK,aAChB,MAAb2C,IACFF,EAASf,KAAKkB,IAAIH,EAAQE,IAE5B,IAAIE,OAAM,EACV,IAAIP,IAAaO,EAAS9C,EAAUC,IAApC,CASA,IAAI8C,EAAU7C,EAAY4C,GAC1B,GAAIC,EAAJ,CAGE,IAAMC,EAAMrvB,EAAO+sB,YAAYxuB,OAAO,OAAQ,SAAU,GAClB,CAACmF,MAAOqrB,EAASC,EAAI,OAC3DI,EAAQnT,YAAYoT,GACpB/C,EAAIkB,eAAe,iBANrB,CASA,IAAI8B,EAAa9C,EAAa2C,GACzBG,IAKLP,GAAS,IAAAztB,aAAYguB,EAAY,aAC/BtB,KAAKkB,KAAI,IAAA5tB,aAAYguB,EAAY,aAAwBP,GAAUA,GACrE,IAAAttB,aAAY6tB,EAAY,YAAaP,UAvBnClC,EAAS7sB,GAEA,IAAAsB,aAAYgrB,EAAK,SAAWA,EAAMA,EAAIT,OAAQkD,EAASC,GAAG,sGAuBzE,EAOA,IAAIO,EAAkB,QAClBC,IAAqB,MACtBD,EAAkB,cAAc,KAWxB,EAAA9tB,YAAc,SAASyhB,EAAeuM,EAAkBlC,GACjE,UAAS9rB,YAAYyhB,EAAMqM,EAAkBE,EAAUlC,EACzD,EASW,EAAAjsB,YAAc,SAAS4hB,EAAeuM,GAC/C,OAAO,UAASnuB,YAAY4hB,EAAMqM,EAAkBE,EACtD,EAQW,EAAAjC,eAAiB,SAAStK,EAAeuM,GAClDvM,EAAKsK,eAAe+B,EAAkBE,EACxC,EAQW,EAAAnJ,mBAAqB,SAASxoB,GACvCA,EAAIklB,KAAKyI,KAAKiE,UAAS,SAACrxB,EAAcsxB,GACpC,IAAIC,EAAiB,GACrBvxB,EAAIwxB,mBAAmBxC,SAAQ,SAAAC,IACxBkC,EAAsBlC,IAAMA,EAAEnU,MAAM2W,OAAO,IAAMP,KACpDK,EAAK3xB,KAAKqvB,EAAI,IAAMjvB,EAAIiD,YAAYgsB,GAExC,IACIsC,EAAK1uB,QACP,UAASgB,aAAa7D,EAAK,YAAauxB,EAAKrW,KAAK,KAEtD,GACF,EAMW,EAAA6M,aAAe,SAAUtoB,GAElC,KAAM,YADNytB,EAAMztB,EAAIswB,UACa1C,WACrB,MAAMqE,MAAM,0EAEhB,EAMW,EAAA1J,cAAgB,SAAU2J,GACnCzE,EAAM,IACR,2MCzlBA,cAEA,WACA,WAEA,cACA,WAIW,EAAA0E,cAA6C,CAAC,EASzD,EAAAA,cAAAC,OAAuB,SAAStyB,EAAmBC,EAAcsyB,GAC/D,IAAMP,EAAOhyB,EAAOib,YAAYhb,EAAM,IAChCgkB,EAAOjkB,EAAOa,SAASZ,GACvB4F,EAAM,UAAU2sB,cAAcR,EAAM,EAAAS,iBAC1C5sB,EAAc,SAAI0sB,EAClBvyB,EAAOU,KAAKV,EAAOW,OAAO,OAAQ,WAAY,CAACsjB,GAAOpe,GACxD,EASA,EAAAwsB,cAAA,SAAyB,SAASryB,EAAmBC,GACnD,IAAM+xB,EAAOhyB,EAAOib,YAAYhb,EAAM,IAClC0vB,EAAQ3vB,EAAOa,SAASZ,GACtBgkB,EAAOjkB,EAAOa,SAASZ,GACvB4F,EAAM,UAAU2sB,cAAcR,EAAM,EAAAS,iBAC1C5sB,EAAe,SAAI,CAAC,EAAAtB,YAAYmuB,SAASC,iBACrB,EAAApuB,YAAYmuB,SAASE,gBACrB,EAAAruB,YAAYmuB,SAASG,gBAAgBlX,KAAK,KAC9DgU,EAAQ3vB,EAAOW,OAAO,OAAQ,UAAW,CAACgvB,GACpB,CAACzQ,MAAO,QAASW,OAAQ,QAASuM,QAAS,SACjEpsB,EAAOU,KAAKV,EAAOW,OAAO,OAAQ,OACR,CAACX,EAAOW,OAAO,OAAQ,WAAY,CAACsjB,GAAOpe,GAAM8pB,IAC7E,EAGA,IAAI,EAAA5uB,WAAW,SAAU,CACvB+xB,OAAU,CAAC,SAAU,EAAAvuB,YAAYmuB,SAASC,kBAC1CI,QAAU,CAAC,SAAU,EAAAxuB,YAAYmuB,SAASM,oBAC1CC,QAAU,CAAC,SAAU,EAAA1uB,YAAYmuB,SAASC,iBAAmB,IAClD,EAAApuB,YAAYmuB,SAASM,oBAChCE,SAAU,YACT,EAAAb,eAGU,EAAAc,oBAAsB,EAAA/xB,cAAcT,OAC/C,SAAU,CAACU,QAAS,CAACC,MAAO,CAAC,8sBCnF/B,cACA,WACA,cACA,cAEA,aACA,WACA,WAGA,WAKA,yEAsBA,QAtBoC,OAKlC,sBAAI,mBAAI,KAAR,WACE,MAAO,aACT,kCAKO,YAAAklB,UAAP,SAAiB3K,GACf,OAAIA,EAAKjW,OAAO,QAAUiW,EAAKX,YAAc9X,KAAK8X,WAC5C9X,KAAKM,YAAY,QACnBN,KAAKS,YAAY,OAAO,GACjB,CAAC,IAAI,IAGT,YAAM2iB,UAAS,UAAC3K,EACzB,EAEF,EAtBA,CAAoC,EAAAuX,WAAvB,EAAAC,eAAAA,EA2Bb,oFAKY,EAAAC,WAAa,GAgCzB,QArC+B,OAUtB,YAAArwB,MAAP,SAAa1C,EAAaua,EAAmByY,GAC3CnwB,KAAKkwB,WAAa,EAClB,YAAMrwB,MAAK,UAAC1C,EAAKua,EAAUyY,EAC7B,EAKO,YAAAC,QAAP,WAC6B,MAAvBpwB,KAAK+d,WAAWxc,MACQ,gBAAxBvB,KAAK+d,WAAW5gB,KACM,IAApB6C,KAAKkwB,YAAkBlwB,KAAKqwB,UAChCrwB,KAAKkwB,aACLlwB,KAAKuB,IAAIvB,KAAKswB,aAAatwB,KAAKqwB,QAASrwB,KAAKkwB,aAAa,KAEnC,IAApBlwB,KAAKkwB,YAA4C,kBAAxBlwB,KAAK+d,WAAW5gB,KAAyB6C,KAAKqwB,UAC3ErwB,KAAKuB,IAAIvB,KAAKswB,aAAatwB,KAAKqwB,UAAU,IAE9C,EAKO,YAAAC,aAAP,SAAoBluB,EAAWtB,GAC7B,YAD6B,IAAAA,IAAAA,EAAA,MACtBsB,EAAEmuB,YAAoB,OAANzvB,EAAa,GAAKob,OAAOsU,aAAa,GAAO1vB,GACtE,EAEF,EArCA,CAA+B,EAAA1C,SAAlB,EAAAqyB,UAAAA,EAuCA,EAAAC,aAAe,CAQ1BC,SAAA,SAAS/zB,EAAmB6a,GAC1B,GAAI7a,EAAOM,MAAMC,IAAIyzB,UAAYnZ,EAAMK,UAAW,QACzClb,EAAOM,MAAMC,IAAIyzB,QACxBh0B,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAO,OAAOkD,YAAY,OAAQgX,EAAMK,YACvE,IAAM1Q,EAAQxK,EAAOM,MAAM2f,MACrB5c,EAAQmH,EAAMypB,KACdC,EAAW,UAAUhW,SAAS7a,EAAOrD,GACrC4gB,EAAOpW,EAAM9G,YAAY,QAG/B,OAFA,EAAAywB,WAAWvT,KAAKvd,EAAO6wB,EAAUtT,EAAO,oBAAqB5gB,EAAQ,iBACrEA,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAO,OAAOkD,YAAY,OAAQgX,EAAMK,YAChE,KAED0F,EAAO5gB,EAAOI,YAAY,WAAaya,EAAMK,UAAY,KAC/DL,EAAMhX,YAAY,OAAQ+c,GAC1B,IAAMzF,EAAQ,UAAYC,SAASpb,EAAQ6a,GAAO,GAAM,EAAM,MAK9D,OAJAM,EAAMtW,SAASkX,cAAe,EAC9BZ,EAAMtW,SAASmX,WAAa,OAC5Bb,EAAMtX,YAAY,YAAY,GAC9B7D,EAAOU,KAAKma,GACLM,CAEX,EAKAiZ,MAAA,SAAMp0B,EAAmBC,GACvB,IAAKD,EAAOM,MAAM2f,MAAMvc,YAAY,YAClC,OAAO,UAAY0wB,MAAMp0B,EAAQC,GAEnCD,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAO,QAAQ2c,cAAc,CAACsG,SAAS,EAAM3jB,KAAMA,KASlF,IALA,IAAMo0B,EAAMr0B,EAAOye,OACf6V,EAAS,EAAG3W,EAAI3d,EAAO2d,EAAGzZ,EAAImwB,EAAI/wB,OAI/Bqa,EAAIzZ,GAAG,CACZ,IAAMuZ,EAAI4W,EAAIxX,OAAOc,GACrB,GAAU,MAANF,EAIF6W,IACA3W,SACK,GAAU,MAANF,EAAW,CAQpB,GAAe,IAAX6W,EACF,MAEAA,IACA3W,QAEG,IAAU,MAANF,GAAwB,IAAX6W,EAItB,MAAM,IAAI,UAAS,qBAAsB,uDACpC,GAAU,OAAN7W,GAAyB,IAAX6W,EAAc,CAMrC,IAAM3X,GAAM0X,EAAI3V,MAAMf,EAAI,GAAGpC,MAAM,eAAiB,IAAI,GACxD,GAAW,OAAPoB,GAAsB,OAAPA,GAAsB,QAAPA,GAAuB,UAAPA,EAChD,MAEAgB,GAAKhB,EAAGrZ,YAMVqa,KAMJ,IAAMmH,EAAOuP,EAAIvX,OAAO9c,EAAO2d,EAAGA,EAAI3d,EAAO2d,GAAGpB,QAAQ,OAAQ,IAChEvc,EAAOu0B,QAAQ,UAAU9I,aAAazrB,EAAQ8kB,EAAM,IACpD9kB,EAAO2d,EAAIA,CACb,GAOF,IAAI,EAAAzU,eAAe,YAAa,EAAAirB,WAAWvyB,YAAa,CACtD4yB,SAAU,CAAC,WAAY,SACvBC,YAAa,CAAC,WAAY,UACzB,EAAAX,cAKH,IAAI,EAAAvR,SAAS,eAAgB,CAC3B,IAAK,SACJ,EAAAuR,cAKU,EAAAY,mBAAqB,EAAAtzB,cAAcT,OAAO,QAAS,CAC9DU,QAAS,CACPO,YAAa,CAAC,aACdF,UAAW,CAAC,iBAEdG,OAAK,KACH,EAACwxB,EAAetxB,UAAUC,MAAOqxB,KAEnCnxB,KAAM,CAAC,MAAS2xB,qhBC1LlB,cAEA,cACA,cACA,WAEA,cAmCA,SAAgBc,EAAiB,WAACvP,EAAI,WACpC,IAAmB,QAAAA,EAAKC,QAAQ,eAAa,8BAAE,CAA1C,IAAM1K,EAAI,QACPlU,EAAW,UAASmuB,YAAYja,EAAKL,WAAW,GAAGA,WAAW,IACnD,OAAb7T,GACF,UAAS6W,cAAc3C,EAAKsT,OAAOA,OAAOA,OAAOA,OAAOA,OAAOA,OAAQ,CAACxnB,SAAQ,sGAGtF,CAxCA,IAAI,EAAA1F,WAAW,YAAa,CAC1B8zB,WAAY,aACZC,UAAW,CAAC,QAAS,wBAA8B,IAClD,CAODC,WAAA,SAAW/0B,EAAmBC,GAC5B,IAAMC,EAAM,IAAMF,EAAOI,YAAYH,GAAQ,IACvCyf,EAAO1f,EAAOa,SAASZ,GACvB0a,EAAO,IAAI,UAAUza,EAAKF,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,MACpEA,EAAMT,EAAOW,OAAO,OAAQ,UAAW,CACzC,IAAI,UAAUT,EAAKF,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,MAC3DT,EAAOW,OAAO,OAAQ,UAAW,CAC/BX,EAAOW,OAAO,OAAQ,UAAW,CAAC+e,GAAO,CAAC5Z,MAAO,EAAGC,OAAQ,aAC5D/F,EAAOW,OAAO,OAAQ,WAAY,CAACga,KAClC,CAAC7U,MAAO,EAAGC,OAAQ,eAExB/F,EAAOQ,cAAc0kB,QAAQ,aAAcvK,GAC3C3a,EAAOU,KAAKD,EACd,EACAV,MAAO,UAAYA,QASrB,qBAUa,EAAAi1B,uBAAyB,EAAA5zB,cAAcT,OAClD,YAAa,CACXU,QAAS,CAACC,MAAO,CAAC,cAClB+kB,eAAgB,CAACsO,mGCtDrB,eACA,UACA,WACA,UAMA,IAAI,EAAA5zB,WAAW,QAAS,CACtBk0B,MAAO,QACPC,UAAW,YACXC,YAAa,cACbC,SAAU,WACVC,UAAW,aACV,EAAAC,cAeU,EAAAC,mBAAqB,EAAAn0B,cAAcT,OAC9C,QAAS,CACPU,QAAS,CACPC,MAAO,CAAC,UAEVsB,QAAS,CACPqyB,MAAO,CACLO,QAAS,MACTC,YAAa,QAGjBrzB,OAlBW,SAASK,EAA8BC,GACpDA,EAAIC,aAAa+yB,YAAYC,IAAI,QAAS,CAACC,MAAO,IAAI,EAAAC,YACxD,oFC1Ba,EAAAC,OAA8B,IAAIC,IAAoB,CACjE,CAAC,UAAW,WACZ,CAAC,aAAc,WACf,CAAC,cAAe,WAChB,CAAC,QAAS,WACV,CAAC,OAAQ,WACT,CAAC,YAAa,WACd,CAAC,aAAc,WACf,CAAC,WAAY,WACb,CAAC,QAAS,WACV,CAAC,cAAe,WAChB,CAAC,YAAa,WACd,CAAC,gBAAiB,WAClB,CAAC,WAAY,WACb,CAAC,iBAAkB,WACnB,CAAC,OAAQ,WACT,CAAC,YAAa,WACd,CAAC,aAAc,WACf,CAAC,UAAW,WACZ,CAAC,cAAe,WAChB,CAAC,UAAW,WACZ,CAAC,YAAa,WACd,CAAC,OAAQ,WACT,CAAC,QAAS,WACV,CAAC,cAAe,WAChB,CAAC,cAAe,WAChB,CAAC,WAAY,WACb,CAAC,YAAa,WACd,CAAC,UAAW,WACZ,CAAC,WAAY,WACb,CAAC,SAAU,WACX,CAAC,QAAS,WACV,CAAC,eAAgB,WACjB,CAAC,WAAY,WACb,CAAC,WAAY,WACb,CAAC,aAAc,WACf,CAAC,SAAU,WACX,CAAC,YAAa,WACd,CAAC,SAAU,WACX,CAAC,QAAS,WACV,CAAC,aAAc,WACf,CAAC,YAAa,WACd,CAAC,OAAQ,WACT,CAAC,cAAe,WAChB,CAAC,SAAU,WACX,CAAC,YAAa,WACd,CAAC,MAAO,WACR,CAAC,YAAa,WACd,CAAC,YAAa,WACd,CAAC,YAAa,WACd,CAAC,YAAa,WACd,CAAC,cAAe,WAChB,CAAC,YAAa,WACd,CAAC,SAAU,WACX,CAAC,WAAY,WACb,CAAC,QAAS,WACV,CAAC,UAAW,WACZ,CAAC,cAAe,WAChB,CAAC,MAAO,WACR,CAAC,WAAY,WACb,CAAC,UAAW,WACZ,CAAC,YAAa,WACd,CAAC,SAAU,WACX,CAAC,YAAa,WACd,CAAC,QAAS,WACV,CAAC,iBAAkB,WACnB,CAAC,SAAU,WACX,CAAC,cAAe,WAChB,CAAC,eAAgB,+LCnEnB,kBAGA,cAYA,SAASP,EAAQQ,GACf,IAAMzS,EAAM,WAAIyS,GACVC,EAAOD,EAAazZ,QAAQ,gBAAiB,MAC7C2Z,EAAO,EAAIC,WAAW5S,GAC5B,MAAO,CACLzd,MAAO,WAAIowB,GAAI,OAAGD,GAClBpW,OAAQ0D,EACRrE,MAAOqE,EACPxd,OAAQiwB,EAEZ,CAGa,EAAAV,aAA4C,CAAC,EAS1D,EAAAA,aAAAc,MAAqB,SAAUp2B,EAAmBC,GAChD,IAAM21B,EAAQ51B,EAAOib,YAAYhb,EAAM,IACjCo2B,EAAWr2B,EAAOI,YAAYH,GAE9Bg1B,EADyBj1B,EAAOQ,cAAck1B,YAAYY,IAAI,SAASV,MACpDW,SAASX,EAAOS,GAEnCrb,EAAQhb,EAAO8b,YAAYnb,OAAO,SACrC2c,cAAc,CAACoH,OAAQ,CAAE8R,UAAWvB,KACvCj1B,EAAOM,MAAMC,IAAW,MAAI00B,EAE5Bj1B,EAAOU,KAAKsa,EACd,EASA,EAAAsa,aAAA,UAAyB,SAAUt1B,EAAmBC,GACpD,IAAM21B,EAAQ51B,EAAOib,YAAYhb,EAAM,IACjCo2B,EAAWr2B,EAAOI,YAAYH,GAE9Bg1B,EADyBj1B,EAAOQ,cAAck1B,YAAYY,IAAI,SAASV,MACpDW,SAASX,EAAOS,GACnCI,EAAMz2B,EAAOM,MAAMC,IAAW,MAEpCP,EAAOM,MAAMC,IAAW,MAAI00B,EAC5B,IAAMhR,EAAOjkB,EAAOa,SAASZ,GAEzBw2B,EACFz2B,EAAOM,MAAMC,IAAW,MAAIk2B,SAErBz2B,EAAOM,MAAMC,IAAW,MAGjC,IAAM+kB,EAAOtlB,EAAOW,OAAO,OAAQ,SAAU,CAACsjB,GAAO,CAACuS,UAAWvB,IACjEj1B,EAAOU,KAAK4kB,EACd,EAQA,EAAAgQ,aAAA,YAA2B,SAAUt1B,EAAmBC,GACtD,IAAMy2B,EAAQ12B,EAAOI,YAAYH,GAC3B21B,EAAQ51B,EAAOI,YAAYH,GAC3B4F,EAAM7F,EAAOI,YAAYH,GAEAD,EAAOQ,cAAck1B,YAAYY,IAAI,SAASV,MAClEe,YAAYf,EAAOc,EAAO7wB,EACvC,EAQA,EAAAyvB,aAAA,SAAwB,SAAUt1B,EAAmBC,GACnD,IAAMy2B,EAAQ12B,EAAOI,YAAYH,GAC3BgkB,EAAO,UAAUwH,aAAazrB,EAAQA,EAAOI,YAAYH,IACzD22B,EAAyB52B,EAAOQ,cAAck1B,YAAYY,IAAI,SAASV,MAEvEtQ,EAAOtlB,EAAOW,OAAO,OAAQ,UAAWsjB,EAAM,CAClDQ,eAAgBmS,EAAWL,SAAS,QAASG,KAG/C,UAASpZ,cAAcgI,EAAMkQ,EAAQx1B,EAAO4C,QAAQqyB,MAAMO,UAC1Dx1B,EAAOU,KAAK4kB,EACd,EAQA,EAAAgQ,aAAA,UAAyB,SAAUt1B,EAAmBC,GACpD,IAAM42B,EAAQ72B,EAAOI,YAAYH,GAC3By2B,EAAQ12B,EAAOI,YAAYH,GAC3BgkB,EAAO,UAAUwH,aAAazrB,EAAQA,EAAOI,YAAYH,IACzD2C,EAAU5C,EAAO4C,QAAQqyB,MACzB2B,EAAyB52B,EAAOQ,cAAck1B,YAAYY,IAAI,SAASV,MAEvEtQ,EAAOtlB,EAAOW,OAAO,OAAQ,UAAWsjB,EAAM,CAClDQ,eAAgBmS,EAAWL,SAAS,QAASG,GAC7C1b,MAAO,kBAAWpY,EAAQ6yB,YAAW,kBAAUmB,EAAWL,SAAS,QAASM,MAG9E,UAASvZ,cAAcgI,EAAMkQ,EAAQ5yB,EAAQ4yB,UAC7Cx1B,EAAOU,KAAK4kB,EACd,kfCnIA,iBACA,WAGMwR,EAAyD,IAAIf,IAGnE,0BAQU,KAAAgB,WAAkC,IAAIhB,GA6EhD,QApEU,YAAAiB,eAAR,SAAuBpB,EAAe/vB,GACpC,IAAK+vB,GAAmB,UAAVA,EAEZ,OAAO/vB,EAGT,GAAIixB,EAAqBG,IAAIrB,GAE3B,OADuBkB,EAAqBR,IAAIV,EACzCsB,CAAerxB,GAGxB,MAAM,IAAI,UAAS,sBAAuB,+BAAkC+vB,EAC9E,EASO,YAAAW,SAAP,SAAgBX,EAAe/vB,GAC7B,OAAK+vB,GAAmB,UAAVA,EAIPxyB,KAAK4zB,eAAepB,EAAO/vB,GAHzBzC,KAAK+zB,eAAetxB,EAI/B,EAeQ,YAAAsxB,eAAR,SAAuBl3B,GACrB,OAAImD,KAAK2zB,WAAWE,IAAIh3B,GACfmD,KAAK2zB,WAAWT,IAAIr2B,GAGzB,EAAA61B,OAAOmB,IAAIh3B,GACN,EAAA61B,OAAOQ,IAAIr2B,GAIbA,CACT,EAWO,YAAA02B,YAAP,SAAmBf,EAAe31B,EAAc4F,GAC9C,IAAMuxB,EAAah0B,KAAK4zB,eAAepB,EAAO/vB,GAC9CzC,KAAK2zB,WAAWpB,IAAI11B,EAAMm3B,EAC5B,EACF,EArFA,GAAa,EAAAvB,WAAAA,EA+FbiB,EAAqBnB,IAAI,OAAO,SAAU0B,WAClCC,EAAqBD,EAAIjT,OAAO7a,MAAM,WACxCguB,EAAc,IAElB,GAAwB,IAApBD,EAASh0B,OACX,MAAM,IAAI,UAAS,YAAa,kDAAmD,WAGrF,IAAsB,QAAAg0B,GAAQ,8BAAE,CAA3B,IAAME,EAAO,QAChB,IAAKA,EAAQjc,MAAM,yBACjB,MAAM,IAAI,UAAS,uBAAwB,0BAG7C,IAAM/V,EAAI2wB,WAAWqB,GACrB,GAAIhyB,EAAI,GAAKA,EAAI,EACf,MAAM,IAAI,UAAS,YACA,0DACA,MAAO,IAAK,KAGjC,IAAIiyB,EAAKrH,KAAKsH,MAAU,IAAJlyB,GAASmuB,SAAS,IAClC8D,EAAGn0B,OAAS,IACdm0B,EAAK,IAAMA,GAGbF,GAAOE,oGAGT,OAAOF,CACT,IASAT,EAAqBnB,IAAI,OAAO,SAAU0B,WAClCC,EAAqBD,EAAIjT,OAAO7a,MAAM,WACxCguB,EAAM,IAEV,GAAwB,IAApBD,EAASh0B,OACX,MAAM,IAAI,UAAS,YAAa,kDAAmD,WAGrF,IAAsB,QAAAg0B,GAAQ,8BAAE,CAA3B,IAAME,EAAO,QAChB,IAAKA,EAAQjc,MAAM,SACjB,MAAM,IAAI,UAAS,gBAAiB,kBAGtC,IAAM/V,EAAIiW,SAAS+b,GACnB,GAAIhyB,EAAI,IACN,MAAM,IAAI,UAAS,YACA,0DACA,MAAO,IAAK,OAGjC,IAAIiyB,EAAKjyB,EAAEmuB,SAAS,IAChB8D,EAAGn0B,OAAS,IACdm0B,EAAK,IAAMA,GAEbF,GAAOE,oGAET,OAAOF,CACT,IASAT,EAAqBnB,IAAI,QAAQ,SAAUgC,GACzC,IAAKA,EAAKpc,MAAM,+BACd,MAAM,IAAI,UAAS,uBAAwB,0BAG7C,IAAM/V,EAAY2wB,WAAWwB,GAC7B,GAAInyB,EAAI,GAAKA,EAAI,EACf,MAAM,IAAI,UAAS,YACA,0DACA,OAAQ,IAAK,KAElC,IAAIiyB,EAAKrH,KAAKsH,MAAU,IAAJlyB,GAASmuB,SAAS,IAKtC,OAJI8D,EAAGn0B,OAAS,IACdm0B,EAAK,IAAMA,GAGN,WAAIA,GAAE,OAAGA,GAAE,OAAGA,EACvB,2qBCjMA,eACA,UACA,WAEA,aAiBA,gFAIS,EAAAxC,MAAmB,CACxBxvB,KAAM,GACN3B,IAAK,GACL8zB,IAAK,IAMA,EAAAC,UAAoB,GA4C7B,QAzDoC,OAkB3B,YAAA10B,SAAP,WACE,YAAMA,SAAQ,WACd,IAAMsC,EAAOrC,KAAKU,IAAIV,KAAKU,IAAIR,OAAS,GAClC2xB,EAAQ7xB,KAAK6xB,MAAMxvB,MAAQrC,KAAK6xB,MAAMnxB,KAAOV,KAAK6xB,MAAM2C,IAAIx0B,KAAKU,IAAIR,OAAS,GAChF2xB,IACFxvB,EAAKqyB,WAAWnC,IAAI,iBAAkBV,GACtC7xB,KAAK6xB,MAAMxvB,KAAO,GAClBrC,KAAKy0B,UAAW,EAEpB,EAKO,YAAA7zB,OAAP,WACE,YAAMA,OAAM,WACZZ,KAAK6xB,MAAMnxB,IAAM,EACnB,EAKO,YAAAi0B,UAAP,WAME,IAAMt3B,EAAM,YAAMs3B,UAAS,WACvB10B,EAAS5C,EAAImF,OAAO,QAAUnF,EAAI6Z,WAAW,GAAK7Z,EAOtD,OANI4C,EAAMuC,OAAO,cACfvC,EAAQA,EAAMiX,WAAW,GAAGA,WAAW,IAErClX,KAAKy0B,UAA8C,SAAlCx0B,EAAMy0B,WAAWxB,IAAI,UACxCjzB,EAAMy0B,WAAWnC,IAAI,QAAS,IAEzBl1B,CACT,EAEF,EAzDA,CAAoC,EAAA2E,WAAvB,EAAA4yB,eAAAA,EA8Db,IAAI,EAAAj3B,WAAW,WAAY,CACzBk3B,UAAW,CAAC,aAAc,QAC1BC,SAAW,CAAC,aAAc,OAC1BC,YAAa,CAAC,aAAc,QAC3B,CAQDC,WAAA,SAAWp4B,EAAmBC,EAAco4B,GAC1C,IAAMC,EAASt4B,EAAOQ,cAAck1B,YAAYY,IAAI,SAASV,MACvDA,EAAQ51B,EAAOib,YAAYhb,EAAM,IACjCg1B,EAAQqD,EAAO/B,SAASX,EAAO51B,EAAOI,YAAYH,IAIlD+f,EAAMhgB,EAAOM,MAAM2f,MACzB,KAAMD,aAAegY,GACnB,MAAM,IAAI,UAAS,wBAAyB,wBAAyBh4B,EAAOkgB,WAK9E,GAAa,QAATmY,EAAgB,CAClB,GAAIrY,EAAI3c,MAAMC,OACZ,MAAM,IAAI,UAAS,oBAAqB,4BAA6BrD,GAEvE+f,EAAIiV,MAAM2C,IAAI5X,EAAIlc,IAAIR,QAAU2xB,EAI5Bj1B,EAAOib,YAAYhb,EAAM,KAC3BD,EAAOib,YAAYhb,EAAM,SAI3B,GADA+f,EAAIiV,MAAMoD,GAAQpD,EACL,QAAToD,IAAmBrY,EAAIG,QAAUH,EAAIlc,IAAIR,QAC3C,MAAM,IAAI,UAAS,mBAAoB,uCAAwCrD,EAGrF,IAqBW,EAAAs4B,sBAAwB,EAAAn3B,cAAcT,OAAO,WAAY,CACpEU,QAAS,CAACC,MAAO,CAAC,aAClBO,MAAO,CAAC,MAASm2B,GACjBx1B,SAAU,GACVJ,OAAQ,CAhBK,SAAUA,EAA6BM,GAI/CA,EAAIC,aAAa+yB,YAAYuB,IAAI,UACpC,EAAAuB,qBAAqBlC,IAAI,SAASl0B,OAAOA,EAAQM,EAErD,EASmB,qHCxJnB,eACA,UAIa,EAAA+1B,eAA8C,CAQzDrC,MAAA,SAAMp2B,EAAmBC,GAEvB,IAAMg1B,EAAQj1B,EAAOI,YAAYH,GAC3Bw2B,EAAMz2B,EAAOM,MAAMC,IAAW,MACpCP,EAAOM,MAAMC,IAAW,MAAI00B,EAC5B,IAAMhR,EAAOjkB,EAAOa,SAASZ,GACzBw2B,EACFz2B,EAAOM,MAAMC,IAAW,MAAIk2B,SAErBz2B,EAAOM,MAAMC,IAAW,MAEjC,IAAM+kB,EAAOtlB,EAAOW,OAAO,OAAQ,SAAU,CAACsjB,GAAO,CAACuS,UAAWvB,IACjEj1B,EAAOU,KAAK4kB,EACd,GAOF,IAAI,EAAAvkB,WAAW,UAAW,CAACk0B,MAAO,SAAU,EAAAwD,gBAK/B,EAAAlD,mBAAqB,EAAAn0B,cAAcT,OAC9C,UAAW,CAACU,QAAS,CAACC,MAAO,CAAC,ghBCtChC,cACA,WACA,WACA,cACA,WACA,cACA,WAQMo3B,EAAY,mBAKZC,EAAiB,uBA+DV,EAAAC,0BAA4B,EAAAx3B,cAAcT,OACrD,eAAgB,CACdwB,KA1DJ,SAA0BC,GACxB,IAAI,EAAArB,WAAW23B,EAAW,CAAC,EAAG,CAAC,GAC/B,IAAI,EAAAxvB,eAAeyvB,EAAgB,UAAa/2B,YAAa,CAAC,EAAG,CAAC,GAClEQ,EAAOE,OAAO,EAAAlB,cAAcmB,MAAM,CAChClB,QAAS,CACPC,MAAO,CAACo3B,GACR92B,YAAa,CAAC+2B,IAEhBn2B,SAAU,IAEd,EAiDIJ,OAzCJ,SAA4BK,EAA8BC,IAU1D,SAAsBA,WACdrB,EAAUqB,EAAIC,aAAaqa,SAASC,SAASyb,GAC7CG,EAASn2B,EAAIC,aAAaC,QAAQi2B,WACxC,IAAiB,QAAAtU,OAAOuU,KAAKD,IAAO,8BAAE,CAAjC,IAAMlc,EAAE,QACL9W,EAA6B,iBAAfgzB,EAAOlc,GAAmB,CAACkc,EAAOlc,IAAOkc,EAAOlc,GAC9Drb,EAAQmgB,MAAMsX,QAAQlzB,EAAI,IAC9B,IAAI,EAAA9F,MAAM4c,EAAI,UAAkBqc,kBAAmBnzB,EAAI6Y,MAAM,EAAG,GAAGzZ,OAAOY,EAAI,KAC9E,IAAI,EAAA9F,MAAM4c,EAAI,UAAkB5c,MAAO8F,GACzCxE,EAAQ6b,IAAIP,EAAIrb,qGAEpB,CAnBE23B,CAAav2B,GA0Bf,SAA4BA,WACpBrB,EAAUqB,EAAIC,aAAaqa,SAASC,SAAS0b,GAC7CO,EAAex2B,EAAIC,aAAaC,QAAQs2B,iBAC9C,IAAkB,QAAA3U,OAAOuU,KAAKI,IAAa,8BAAE,CAAxC,IAAM34B,EAAG,QACZc,EAAQ6b,IAAI3c,EAAK,IAAI,EAAAR,MAAMQ,EAAK,UAAkB44B,SAAU,EAAC,GAAMl0B,OAAOi0B,EAAa34B,wGAE3F,CA/BE64B,CAAmB12B,EACrB,EAuCIb,OAAK,KACH,EAAC,EAAAw3B,aAAat3B,UAAUC,MAAO,EAAAq3B,gBAEjCz2B,QAAS,CACPi2B,QAAQ,IAAAS,YAAW,CAAC,GACpBJ,cAAc,IAAAI,YAAW,CAAC,2+BC1FhC,cACA,WACA,cAEA,aACA,WAEA,WAKA,yEAmBA,QAnBqC,OAKnC,sBAAW,mBAAI,KAAf,WACE,MAAO,cACT,kCAKO,YAAA9S,UAAP,SAAiB3K,GAIf,OAHIA,EAAKjW,OAAO,QAAUiW,EAAKX,YAAc9X,KAAK8X,WAChD9X,KAAKS,YAAY,OAAO,GAEnB,YAAM2iB,UAAS,UAAC3K,EACzB,EAEF,EAnBA,CAAqC,EAAAuX,WAAxB,EAAAmG,gBAAAA,EAwBA,EAAAC,cAAgB,CAQ3BC,OAAA,SAAOz5B,EAAmB6a,GACxB,GAAI7a,EAAOM,MAAMC,IAAIyzB,UAAYnZ,EAAMK,UAAW,QACzClb,EAAOM,MAAMC,IAAIyzB,QACxBh0B,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAO,OAAOkD,YAAY,OAAQ7D,EAAOM,MAAM4F,OAAOwzB,SACrF15B,EAAOM,MAAM4F,OAAOwzB,OAAS,GAC7B,IAAMA,EAAS15B,EAAOM,MAAM2f,MAC5B,EAAAkU,WAAWwF,YAAYD,EAAQ15B,GAC/BA,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAO,OAAOkD,YAAY,OAAQ,eAC5D,CACL,UAAU+X,YAAY5b,UACfA,EAAOM,MAAM4F,OAAO0zB,OAC3B,IAAMC,EAAO75B,EAAOib,YAAY,WAAaJ,EAAMK,UAAY,MAAQ,GACjE,KAAYlb,EAAOI,YAAY,WAAaya,EAAMK,UAAY,MAAQ,IAAI3R,MAAM,KAAI,GAAnFhJ,EAAG,KAAEiF,EAAC,KACb,IAAK,EAAA2uB,WAAW2F,SAASv5B,GACvB,MAAM,IAAI,UAAS,aAAc,2BAA4BA,GAE3Ds5B,GACFhf,EAAMyC,cAAc,EAAA6W,WAAW4F,aAAaF,EAAM,CAACjZ,KAAM,EAAGC,MAAO,KAErE7gB,EAAOM,MAAM4F,OAAOwzB,OAASn5B,EAC7BP,EAAOye,OAAS,WAAale,EAAM,KAAOiF,EAAI,IAAMA,EAAI,IAAM,IAAMxF,EAAOye,OAAOC,MAAM1e,EAAO2d,GAC/F3d,EAAO2d,EAAI,EACX3d,EAAOU,KAAKma,GAEhB,EASAmf,SAAA,SAASh6B,EAAmB+f,EAAetC,GACzCzd,EAAOU,KAAKV,EAAOW,OAAO,QAAS,KAAM,CAAC,EAAG8c,GAC/C,EAQAwc,YAAA,SAAYj6B,EAAmBC,GAC7B,IAAMwd,EAAIzd,EAAOk6B,aAAaj6B,GAC9BD,EAAOU,KAAKV,EAAOW,OAAO,QAAS,KAAM,CAACye,UAAU,EAAM8D,WAAW,GAAOzF,GAC9E,GAOF,IAAI,EAAAvU,eAAe,aAAc,EAAAirB,WAAWvyB,YAAa,CACvD83B,OAAQ,CAAC,SAAU,WAClB,EAAAF,eAKH,IAAI,EAAAz4B,WAAW,gBAAiB,CAC9Bo5B,aAAiB,CAAC,WAAY,KAC9BC,aAAiB,CAAC,WAAY,KAC9BC,aAAiB,CAAC,WAAY,KAC9BC,aAAiB,CAAC,WAAY,KAC9BC,aAAiB,CAAC,WAAY,KAC9BC,aAAiB,CAAC,WAAY,KAC9BC,aAAiB,CAAC,WAAY,KAC9BC,aAAiB,CAAC,WAAY,KAC9BC,YAAiB,CAAC,WAAY,KAC9BC,YAAiB,CAAC,WAAY,KAC9BC,YAAiB,CAAC,WAAY,KAC9BC,YAAiB,CAAC,WAAY,KAC9BC,aAAiB,CAAC,WAAY,KAC9BC,aAAiB,CAAC,WAAY,KAC9BC,YAAiB,CAAC,WAAY,KAC9BC,YAAiB,CAAC,WAAY,KAC9BC,gBAAiB,CAAC,WAAY,KAC9BC,gBAAiB,CAAC,WAAY,KAC9BC,gBAAiB,CAAC,WAAY,KAC9BC,gBAAiB,CAAC,WAAY,KAC9BC,gBAAiB,CAAC,WAAY,KAC9BC,gBAAiB,CAAC,WAAY,KAC9BC,gBAAiB,CAAC,WAAY,KAC9BC,gBAAiB,CAAC,WAAY,KAC9BC,eAAiB,CAAC,WAAY,KAC9BC,eAAiB,CAAC,WAAY,KAC9BC,eAAiB,CAAC,WAAY,KAC9BC,eAAiB,CAAC,WAAY,KAC9BC,gBAAiB,CAAC,WAAY,KAC9BC,gBAAiB,CAAC,WAAY,KAC9BC,eAAiB,CAAC,WAAY,KAC9BC,eAAiB,CAAC,WAAY,KAC9BC,QAAkB,cAClBC,QAAkB,cAClBC,WAAkB,cAClBC,WAAkB,eACjB,EAAA9C,eAKU,EAAA+C,oBAAsB,EAAAn7B,cAAcT,OAAO,SAAU,CAChEU,QAAS,CACPC,MAAO,CAAC,iBACRM,YAAa,CAAC,eAEhBC,OAAK,KACH,EAAC03B,EAAgBx3B,UAAUC,MAAOu3B,igCCxJtC,kBACA,cAQa,EAAApF,WAAa,CAUxBvyB,YAAA,SAAY5B,EAAmBO,EAAai8B,EAAgBt5B,GAC1D,IAAMjD,EAAOiD,EAAK,GACZ2Y,EAAO7b,EAAO8b,YAAYnb,OAAOV,EAAO,UAAUqd,cAAc,CAACrd,KAAMM,EAAK4E,IAAKlF,IACvFD,EAAOU,KAAK87B,EAAI,gBAACx8B,EAAQ6b,GAAI,EAAK3Y,EAAKwb,MAAM,KAAE,IACjD,EASAqb,aAAA,SAAajV,EAAc2X,GACzB,YADyB,IAAAA,IAAAA,EAAA,MAClB,UAAUjK,cAAc1N,EAAM2X,GAAS,EAChD,EAQAC,YAAA,SAAYr5B,WACNa,EAAI,MACR,IAAkB,QAAAb,EAAMiX,YAAU,8BAAE,CAA/B,IAAMxW,EAAG,QACN0B,EAAI1B,EAAIwW,WAAWhX,QAAUQ,EAAI8B,OAAO,cAAgB,EAAI,GAC9DJ,EAAItB,IAAGA,EAAIsB,qGAEjB,OAAOtB,CACT,EAaAy4B,UAAA,SAAUtI,EAAahxB,EAAkBrD,EAAmBO,WACpDyF,EAAUhG,EAAOW,OAAO,OAAQ,UAAW,GAAI,CAACkf,OAAQ,EAAGX,MAAO,EAAGkN,QAAS,aAC9E0C,EAAS,IAAI,UAAUuF,EAAKr0B,EAAOM,MAAMC,IAAKP,EAAOQ,eACrDC,EAAMquB,EAAOruB,MACfF,GAAOuuB,EAAOtuB,cAAc0B,KAAKiC,QAClC2qB,EAAOtuB,cAAc0B,KAAKif,WAAmB5gB,IAAMA,EACnDuuB,EAAOtuB,cAAc0B,KAAsB0C,QAAO,QAErD,IAAoB,QAACnE,EAAI4Z,WAAa5Z,EAAI6Z,WAAa,CAAC7Z,IAAK,8BAAE,CAA1D,IAAM+Z,EAAK,QACdxU,EAAQqY,YAAY7D,qGAKtB,OAHAxU,EAAQqY,YAAYre,EAAOW,OAAO,OAAQ,WAAY,CACpDX,EAAOW,OAAO,OAAQ,UAAW,CAAC0C,GAAQ,CAACyC,MAAO,OAE7CE,CACT,EAUA42B,YAAA,SAAY1I,EAAqBl0B,GAC/B,IAAMqD,EAAQ,UAAU6a,SAASgW,EAAUl0B,GAG3C,OAFAqD,EAAM4C,YAAY5C,EAAMiX,WAAWoE,MAAM,EAAG,IAC5Crb,EAAMy0B,WAAWnC,IAAI,QAAS,cACvBzB,EAASlxB,QAAQrC,OAAO,WAAY,CAAC,EAAG,CAACX,EAAOW,OAAO,OAAQ,UAAW,CAAC0C,GAAS,CAACyC,MAAO,KACrG,EAYA+2B,YAAA,SAAYl5B,EAAa0wB,EAAahxB,EAAkBrD,EAAmBO,GACzEoD,EAAI0a,YACFre,EAAOW,OAAO,OAAQ,UAAW,CAC/ByC,KAAKu5B,UAAUtI,EAAK,UAAUnW,SAAS7a,EAAOrD,GAASA,EAAQO,GAC/D6C,KAAKw5B,YAAYv5B,EAAOrD,IACvB,CAAC6f,OAAQ,EAAGX,MAAO,EAAGkN,QAAS,WAEtC,EAWAxL,KAAA,SAAKvd,EAAkB6wB,EAAqBtT,EAAc5gB,EAAmBO,WAGvEoD,OAHuE,IAAApD,IAAAA,EAAA,IAC3E8C,EAAMy0B,WAAWnC,IAAI,cAAe,UAAYtyB,EAAMy0B,WAAWxB,IAAI,gBAAkB,KACvFjzB,EAAMy0B,WAAWnC,IAAI,gBAAiB,QAAUtyB,EAAMy0B,WAAWxB,IAAI,kBAAoB,SAEzF,IAAkB,QAAAjzB,EAAMiX,WAAWoE,MAAM,GAAGoe,WAAS,8BAAE,CAAlD,IAAMh5B,EAAG,QACZH,EAAM3D,EAAOW,OAAO,OAAQ,OAC5BmD,EAAIwW,WAAW0S,QAAQrpB,GACvBA,EAAIsqB,OAASnqB,EACTA,EAAI8B,OAAO,gBACb9B,EAAIwW,WAAW,GAAKxW,EAAIwW,WAAW,GACnCxW,EAAIwW,WAAW,GAAK3W,qGAGxBP,KAAKy5B,YAAYl5B,EAAKid,EAAMsT,EAAUl0B,EAAQO,EAChD,EAWAsgB,MAAA,SAAMxd,EAAkB6wB,EAAqBrT,EAAe7gB,EAAmBO,QAAA,IAAAA,IAAAA,EAAA,IAC7C,IAA5B8C,EAAMiX,WAAWhX,QACnBD,EAAMgb,YAAYre,EAAOW,OAAO,OAAQ,QAI1C,IAFA,IAAMuD,EAAI,EAAAiwB,WAAWuI,YAAYr5B,GAC3BS,EAAMT,EAAMiX,WAAW,GACtBxW,EAAIwW,WAAWhX,OAASY,GAAGJ,EAAIua,YAAYre,EAAOW,OAAO,OAAQ,QACxE,IAAMgD,EAAMG,EAAIua,YAAYre,EAAOW,OAAO,OAAQ,QAClD,EAAAwzB,WAAW0I,YAAYl5B,EAAKkd,EAAOqT,EAAUl0B,EAAQO,GACrD8C,EAAMy0B,WAAWnC,IACf,eACCtyB,EAAMy0B,WAAWxB,IAAI,gBAA4B,IAAI/sB,MAAM,KAAKmV,MAAM,EAAGxa,GAAGyX,KAAK,KAAO,SAE3FtY,EAAMy0B,WAAWnC,IACf,iBACCtyB,EAAMy0B,WAAWxB,IAAI,kBAA8B,IAAI/sB,MAAM,KAAKmV,MAAM,EAAGxa,EAAI,GAAGyX,KAAK,KAAO,OAEnG,EAKAge,YAAA,SAAYD,EAAyB15B,GACnC,IAAM4gB,EAAO8Y,EAAOh2B,YAAY,QAC1Bmd,EAAQ6Y,EAAOh2B,YAAY,SACjC,GAAIkd,GAAQC,EAAO,CACjB,IAAMxd,EAAQq2B,EAAOzF,KACfC,EAAW,UAAUhW,SAAS7a,EAAOrD,GACvC4gB,GAAMxd,KAAKwd,KAAKvd,EAAO6wB,EAAUtT,EAAM5gB,GACvC6gB,GAAOzd,KAAKyd,MAAMxd,EAAO6wB,EAAUrT,EAAO7gB,GAElD,EAKA+8B,SAAU,CACRC,UAAU,EACV3zB,OAAO,EACPG,QAAQ,EACRO,SAAS,EACTN,SAAS,EACTH,UAAU,GASZwwB,SAAA,SAASv5B,GACP,OAAO6C,KAAK25B,SAASE,eAAe18B,EAAIgc,QAAQ,MAAO,OAAQ,CACjE,gOCzMF,cAEA,WAEA,cAOa,EAAAkW,gBAA2C,CACtD,iBAAkB,EAClBwC,MAAO,EACPuB,UAAW,EACXzS,WAAY,EACZU,eAAgB,EAChB,eAAgB,EAChB,iBAAkB,GAKT,EAAAyY,eAA8C,CAAC,EAS1D,EAAAA,eAAAC,QAAyB,SAASn9B,EAAmBC,GACnD,IAAIsyB,EAAWvyB,EAAOI,YAAYH,GAAMsc,QAAQ,KAAM,KAChDyV,EAAOhyB,EAAOib,YAAYhb,EAAM,IAChCgkB,EAAOjkB,EAAOa,SAASZ,GACvB4F,EAAM,UAAU2sB,cAAcR,EAAM,EAAAS,iBAC1C5sB,EAAI0sB,SAAWA,EACfvyB,EAAOU,KAAKV,EAAOW,OAAO,OAAQ,WAAY,CAACsjB,GAAOpe,GACxD,EAGA,IAAI,EAAA9E,WAAW,UAAW,CAACq8B,QAAS,WAAY,EAAAF,gBAGnC,EAAAG,qBAAuB,EAAAj8B,cAAcT,OAChD,UAAW,CAACU,QAAS,CAACC,MAAO,CAAC,2NC7ChC,cAEA,WAEA,WACA,aACA,WACA,aAIW,EAAAg8B,gBAA+C,CAAC,EAE3D,EAAAA,gBAAA,OAAyB,EAAAz2B,WAAW02B,OAOpC,EAAAD,gBAAA,YAA8B,SAASt9B,EAAmBC,GACxD,IAAI0c,EAAK3c,EAAOI,YAAYH,GACtBivB,EAAQlvB,EAAOI,YAAYH,GAC3B0e,EAAM3e,EAAOI,YAAYH,GAC/B,IAAK0c,EAAGpB,MAAM,mBACZ,MAAM,IAAI,UAAS,kBACR,uDAAwDtb,GAErE,IAAKivB,EAAM3T,MAAM,iBACf,MAAM,IAAI,UACR,kBACA,kEACAtb,GAEJ,IAAK0e,EAAIpD,MAAM,wBACb,MAAM,IAAI,UACR,kBACA,0DACAtb,GAEJ0c,EAAKA,EAAGG,OAAO,GACf,IAAI0gB,EAAStO,EAAM3lB,MAAM,KACzB,UAAek0B,SAASz9B,EAAQ2c,EAAI,EAAA2gB,gBAAgBC,OAC5B,CAAC9hB,SAASkD,GAAMlD,SAAS+hB,EAAO,IAAK/hB,SAAS+hB,EAAO,KAC/E,EAGA,IAAI,EAAAz8B,WAAW,WAAY,CACzB28B,mBAAoB,CAAC,SAAU,KAAQ,GAAI,IAC3CC,kBAAoB,CAAC,SAAU,KAAQ,GAAI,IAC3CC,QAAoB,CAAC,SAAU,KAAQ,EAAG,GAC1CC,WAAoB,CAAC,SAAU,GAAQ,EAAG,GAC1CC,QAAoB,CAAC,SAAU,KAAQ,GAAI,IAC3CC,YAAoB,eACnB,EAAAT,iBAOU,EAAAU,sBAAwB,EAAA58B,cAAcT,OACjD,WAAY,CACVU,QAAS,CAACC,MAAO,CAAC,aAClBa,KAPO,SAASC,GAClB,EAAA67B,wBAAwB97B,KAAKC,EAC/B,mGC5DA,cAEA,WAsBA,IArBA,SAqBIkE,cAAa,mBAZjB,SAAsBtG,EAAmBk+B,GACvC,IAAMr4B,EAAMq4B,EAAMpG,YAAc,CAAC,EACjCjyB,EAAImF,YAAc,EAAAzG,YAAY0G,QAAQ6B,OACtCjH,EAAIs4B,MAAQ,cACZ,IAAM7Y,EAAOtlB,EAAOW,OAAO,QAAS,KAAMkF,EAAKq4B,EAAME,MACrDp+B,EAAOU,KAAK4kB,EACd,GAMkD,CAChD+Y,IAAgB,IAChBC,OAAgB,IAChBC,QAAgB,IAChBC,YAAgB,IAChBC,MAAgB,MAIL,EAAAC,qBAAuB,EAAAt9B,cAAcT,OAChD,UAAW,CACTU,QAAS,CAACC,MAAO,CAAC,6MCnCtB,cACA,WACA,aAGA,IAAI,EAAAP,WAAW,cAAe,CAC5B49B,KAAS,OACT,MAAS,QACT3jB,MAAS,QACT4jB,MAAS,MACR,WAEU,EAAAC,kBAAoB,EAAAz9B,cAAcT,OAC7C,OAAQ,CAACU,QAAS,CAAEC,MAAO,CAAC,6KCV9B,kBAKIw9B,EAA2C,CAQ/CA,KAAmB,SAAS9+B,EAAmBC,GAC7C,IAAM8+B,EAAM/+B,EAAOI,YAAYH,GACzBC,EAAM8+B,EAAeh/B,EAAQC,GACnC,UAASqE,aAAapE,EAAK,OAAQ6+B,GACnC/+B,EAAOU,KAAKR,EACd,EAQA4+B,MAAoB,SAAS9+B,EAAmBC,GAC9C,IAAIg/B,EAAQj/B,EAAOI,YAAYH,GACzBC,EAAM8+B,EAAeh/B,EAAQC,GAC/Bi/B,EAAW,UAAS96B,aAAalE,EAAK,SACtCg/B,IACFD,EAAQC,EAAW,IAAMD,GAE3B,UAAS36B,aAAapE,EAAK,QAAS++B,GACpCj/B,EAAOU,KAAKR,EACd,EAQA4+B,MAAoB,SAAS9+B,EAAmBC,GAC9C,IAAI+a,EAAQhb,EAAOI,YAAYH,GACzBC,EAAM8+B,EAAeh/B,EAAQC,GAE/Bk/B,EAAW,UAAS/6B,aAAalE,EAAK,SACtCi/B,IACqC,MAAnCnkB,EAAM6B,OAAO7B,EAAM1X,OAAS,KAC9B0X,GAAS,KAEXA,EAAQmkB,EAAW,IAAMnkB,GAE3B,UAAS1W,aAAapE,EAAK,QAAS8a,GACpChb,EAAOU,KAAKR,EACd,EAQA4+B,GAAiB,SAAS9+B,EAAmBC,GAC3C,IAAMm/B,EAAMp/B,EAAOI,YAAYH,GACzBC,EAAM8+B,EAAeh/B,EAAQC,GACnC,UAASqE,aAAapE,EAAK,KAAMk/B,GACjCp/B,EAAOU,KAAKR,EACd,GAWI8+B,EAAiB,SAASh/B,EAAmBC,GAC/C,IAAIC,EAAMF,EAAOa,SAASZ,GAC1B,IAAK,UAASoa,WAAWna,GACvB,OAAOA,EAET,IAAIC,EAAW,UAASkE,YAAYnE,GACpC,GAAwB,IAApBC,EAASmD,OACX,OAAOnD,EAAS,GAElB,IAAMie,EAAOpe,EAAOW,OAAO,OAAQ,QAGnC,OAFA,UAAS0+B,aAAan/B,EAAKke,GAC3B,UAASlZ,eAAehF,EAAKke,GACtBA,CACT,EAGA,UAAe0gB,giBCpGf,cACA,WACA,cACA,WAKA,SACA,eACA,WACA,WAkCA,SAAgBQ,EAAc,mBAACla,EAAI,WACjC,IAAmB,QAAAA,EAAKC,QAAQ,kBAAgB,8BAAE,CAA7C,IAAMC,EAAI,QACb,GAAKA,EAAK5hB,YAAY,gBAAtB,CACA,IAAM4W,EAAa,UAASjW,YAAYihB,GACpC9f,EAAI,MACR,IAAgB,mBAAC,EAAG,KAAE,8BACf8U,EADIqD,EAAC,WAER,UAAS8B,SAAS6F,EAAM3H,EAAGyH,EAAK+J,YAAYxuB,OAAO,OAAQ,SAC3D6E,0GAGJ,IAAgB,mBAAC,EAAG,KAAE,8BAAE,CAAnB,IAAMmY,EAAC,QACN,UAASqQ,OAAO1T,EAAWqD,GAAI,SAA0D,IAA/C,UAAStZ,YAAYiW,EAAWqD,IAAIra,QAChF,UAASmc,SAAS6F,EAAM3H,EAAGyH,EAAK+J,YAAYxuB,OAAO,OAAQ,2GAGrD,IAAN6E,GACF8U,EAAWI,OAAO,EAAG,EAfwB,oGAkBnD,CAjDa,EAAA6kB,aAAe,0BA6B5B,kBAyBa,EAAAC,uBAAyB,EAAAp+B,cAAcT,OAClD,YAAa,CACXU,QAAS,CACPC,MAAO,CAAC,mBAAoB,wBAC5BM,YAAa,CAAC,0BACdD,UAAW,CAAC,wBACZD,UAAW,CAAC,yBAEdG,OAAK,KACH,EAAC,EAAA49B,cAAc19B,UAAUC,MAAO,EAAAy9B,iBAElCt9B,KA3DJ,SAAuBC,GACrB,IAAI,EAAArB,WAAW,EAAAw+B,aAAc,CAAC,EAAG,CAAC,GAClCn9B,EAAOE,OAAO,EAAAlB,cAAcmB,MAAM,CAAClB,QAAS,CAACC,MAAO,CAAC,EAAAi+B,eAAgB/8B,UAAW,IAClF,EAyDIJ,OAlDJ,SAAyBA,EAA6BM,WAC9C1C,EAAS0C,EAAIC,aACb+8B,EAAe1/B,EAAO4C,QAAQ+8B,UAAUC,qBAC9C,IAAiB,QAAArb,OAAOuU,KAAK4G,IAAa,8BAAE,CAAvC,IAAM/iB,EAAE,QACX,EAAAkjB,cAAcC,gBAAgB9/B,EAAQ2c,EAAI+iB,EAAa/iB,uGAEzD,IAAAojB,oBAAmB39B,EAAQM,EAC7B,EA4CI2jB,eAAgB,CAAC,CAACiZ,GAAgB,IAClC18B,QAAS,CACP+8B,UAAW,CACT,YAAe,MACf,gBAAiB,IACjB,sBAAuB,GACvB,mBAAoB,GACpB,oBAAqB,IACrB,sBAAyB,OACzB,sBAAyB,OACzB,aAAe,EACf,qBAAsB,QACtB,eAAgB,SAChB,eAAgB,SAChB,eAAe,EAEf,uBAAwB,GACxB,uBAAwB,GACxB,uBAAwB,GACxB,sBAAsB,EACtBC,kBAAkB,IAAAtG,YAAW,CAAC,GAE9B0G,UAAU,IAAA1G,YAAW,CAAC,qpBCzG9B,eACA,cACA,WAMA,yEAsCA,QAtCmC,OAKjC,sBAAI,mBAAI,KAAR,WACE,MAAO,WACT,kCAMO,YAAAr1B,SAAP,WAKE,IAJIb,KAAK+c,QAAU/c,KAAKU,IAAIR,UAC1BF,KAAKD,WACLC,KAAKY,UAEHZ,KAAKC,MAAMC,OAAS,EAAG,CACzB,IAAMV,EAAUQ,KAAKJ,QAAQxC,cAAcoC,QAAQ+8B,UAC7CM,EAAMr9B,EAAQs9B,YACdC,EAAYv9B,EAAQ,wBAA0Bq9B,EAC9CG,EAAWx9B,EAAQ,qBAAuBq9B,EAC1CjhB,EAAQ,UAAS3a,YAAYjB,KAAKC,MAAM,IAAI,GAC9C,UAASe,aAAa4a,EAAO,iBAAmB,EAAAza,YAAYC,MAAME,OACpEsa,EAAMX,YAAYjb,KAAKzC,OAAO,OAAQ,SAAU,GAAI,CAACmF,MAAOq6B,KAE9D,IAAME,EAAO,UAASh8B,YAAYjB,KAAKC,MAAMD,KAAKC,MAAMC,OAAS,IAAI,GACrE,GAAI,UAASc,aAAai8B,EAAM,iBAAmB,EAAA97B,YAAYC,MAAMC,KAAM,CACzE,IAAM,EAAM,UAASJ,YAAYg8B,GAAM,GACvC,EAAI/lB,WAAW0S,QAAQ,MACvB,IAAMkC,EAAQ9rB,KAAKzC,OAAO,OAAQ,SAAU,GAAI,CAACmF,MAAOs6B,IACxD,UAAS3gB,SAAS,EAAK,EAAGyP,IAG9B,YAAMjrB,SAASq8B,KAAKl9B,KACtB,EAEF,EAtCA,CAAmC,EAAAtB,cAAtB,EAAA29B,cAAAA,8JCRb,kBACA,WACA,WAEA,WAmBA,IAAI,EAAA1+B,WAAW,mBAAoB,CAEjC+H,UAAY,CAAC,cAAe,EAAAvE,YAAYC,MAAMC,MAC9CsE,WAAY,CAAC,cAAe,EAAAxE,YAAYC,MAAME,OAE9C67B,gBAAoB,CAAC,SAAU,KAAQ,GAAI,IAC3CC,WAAoB,CAAC,SAAU,KAAQ,GAAI,GAC3CC,YAAoB,CAAC,SAAU,KAAQ,EAAG,IAC1CC,gBAAoB,CAAC,SAAU,KAAQ,GAAI,IAC3CC,eAAoB,CAAC,SAAU,KAAQ,GAAI,GAC3CC,gBAAoB,CAAC,SAAU,KAAQ,EAAG,IAC1ChD,QAAoB,CAAC,SAAU,KAAQ,GAAI,IAC3CiD,kBAAoB,CAAC,SAAU,KAAQ,EAAG,IAC1CC,iBAAoB,CAAC,SAAU,KAAQ,GAAI,GAC3CC,mBAAoB,CAAC,SAAU,KAAQ,GAAI,IAC3CC,gBAAoB,CAAC,SAAU,KAAQ,EAAG,IAC1CC,eAAoB,CAAC,SAAU,KAAQ,GAAI,GAC3CC,mBAAoB,CAAC,SAAU,KAAQ,GAAI,IAE3CC,SAAU,CAAC,UAAW,KAAK,GAC3BC,SAAU,CAAC,UAAW,KAAK,GAC3BC,SAAU,CAAC,UAAW,KAAK,GAC3BC,KAAU,CAAC,QAAS,KACpBC,SAAU,CAAC,QAAS,KACpBC,SAAU,CAAC,QAAS,KACpBC,SAAU,CAAC,QAAS,KAEpBC,QAAS,UACTC,YAAa,CAAC,UAAW,KAAK,GAC9BC,YAAa,CAAC,UAAW,KAAK,GAC9BC,YAAa,CAAC,UAAW,KAAK,GAC9BC,gBAAiB,CAAC,QAAS,sDAAuD,GAElFC,SAAa,WACbC,YAAa,cAEbC,YAAc,mBACdC,aAAc,mBAEdC,MAAO,YAEPC,WAAY,CAAC,QAAS,iCAAkC,EAAG,KAC3DC,OAAQ,SAERC,kBAAmB,oBACnBC,YAAa,cACbC,iBAAkB,mBAClBC,kBAAmB,kBACnBC,kBAAmB,kBAEnBC,uBAA4B,yBAC5BC,wBAA4B,0BAC5BC,0BAA4B,4BAK5BC,wBAA4B,yBAC5BC,yBAA4B,0BAC5BC,2BAA4B,4BAE5BC,YAAa,CAAC,eAAe,GAAM,GACnCC,cAAe,CAAC,eAAe,GAC/BC,YAAa,CAAC,eAAe,GAAM,GAAM,GAEzCC,SAAa,CAAC,WAAY,KAAM,KAChCC,SAAa,CAAC,WAAY,MAAO,KACjCC,QAAa,CAAC,WAAY,MAC1BC,QAAa,CAAC,WAAY,OAC1BC,SAAa,CAAC,WAAY,KAAM,KAChCC,SAAa,CAAC,WAAY,OAC1BC,QAAa,CAAC,WAAY,KAAM,KAChCC,QAAa,CAAC,WAAY,OAC1BC,YAAa,CAAC,WAAY,aAC1BC,YAAa,CAAC,WAAY,cAC1BC,SAAa,CAAC,WAAY,UAC1BC,SAAa,CAAC,WAAY,WAC1BC,SAAa,CAAC,WAAY,KAAM,KAEhCC,SAAY,CAAC,SAAU,IAAU,SACjCC,WAAY,CAAC,SAAU,IAAU,SACjCC,SAAY,CAAC,QAAS,gEAEtBC,UAAY,CAAC,aAAa,GAC1BC,WAAY,CAAC,aAAa,GAE1BC,WAAY,aAEZC,UAAW,YAEXC,WAAY,CAAC,cAAc,GAC3BC,aAAc,CAAC,cAAc,GAC7BC,WAAY,aAEZC,aAAc,CACZ,oBACA,6GACA,EAAG,CAAE,IAAK,CAAE,KAGdC,aAAc,cAEb,EAAAC,kBAKH,IAAI,EAAA37B,eAAe,yBAA0B,UAAatH,YAAa,CACrEkjC,OAAS,CAAC,QAAS,KAAM,MAAO,GAAI,KAAM,KAAM,OAAQ,KACxDC,OAAS,CAAC,QAAS,KAAM,GAAI,MAAO,KAAM,KAAM,QAChDC,QAAS,CAAC,QAAS,KAAM,GAAI,MAAO,KAAM,KAAM,OAAQ,KACxD,UAAY,CAAC,QAAS,KAAM,IAAK,GAAI,KACrC,UAAY,CAAC,QAAS,KAAM,GAAI,KAChC,WAAY,CAAC,QAAS,KAAM,GAAI,IAAK,KACrC,SAAY,CAAC,QAAS,KAAM,IAAK,IAEjC,UAAY,CAAC,WAAY,KAAM,KAAM,MACrC,WAAY,CAAC,WAAY,KAAM,IAAK,KACpC,WAAY,CAAC,WAAY,KAAM,IAAK,KACpC,WAAY,CAAC,WAAY,KAAM,MAAO,OACtC,WAAY,CAAC,WAAY,KAAM,SAAU,UACzC,WAAY,CAAC,WAAY,KAAM,SAAU,UAEzC,eAAiB,CAAC,gBAAiB,KAAM,KAAM,MAC/CC,aAAiB,CAAC,gBAAiB,KAAM,IAAK,IAAK,KACnD,gBAAiB,CAAC,gBAAiB,KAAM,IAAK,KAC9CC,aAAiB,CAAC,gBAAiB,KAAM,IAAK,IAAK,KACnD,gBAAiB,CAAC,gBAAiB,KAAM,IAAK,KAC9CC,aAAiB,CAAC,gBAAiB,KAAM,MAAO,MAAO,KACvD,gBAAiB,CAAC,gBAAiB,KAAM,MAAO,OAChDC,aAAiB,CAAC,gBAAiB,KAAM,SAAU,SAAU,KAC7D,gBAAiB,CAAC,gBAAiB,KAAM,SAAU,UACnDC,aAAiB,CAAC,gBAAiB,KAAM,SAAU,SAAU,KAC7D,gBAAiB,CAAC,gBAAiB,KAAM,SAAU,UAEnDC,gBAAiB,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,MAAO,QAAS,KAAO,GAE1EC,UAAW,cAEXC,YAAa,CAAC,eAAe,GAE7BC,UAAW,CAAC,cAAe,KAAM,KAAM,KAAM,IAAK,KAAM,OAAQ,KAChEC,UAAW,CAAC,cAAe,KAAM,KAAM,KAAM,IAAK,KAAM,OAAQ,MAE/D,EAAAb,kBAKH,IAAI,EAAAp6B,aAAa,uBAAwB,UAAa9I,UAAW,CAC/D,WAAY,IACZ,WAAY,MAMd,IAAI,EAAAZ,WAAW,uBAAwB,CACrC,IAAM,CAAC,eAAe,IACrB,EAAA8jC,2hCCnLH,kBAEA,WACA,cACA,cACA,aACA,cACA,WACA,WACA,WACA,aACA,cAGA,WAKa,EAAAA,iBAAgD,CAW3Dc,SAAA,SAAS3lC,EAAmB6a,EAAkBgM,EAAcC,GAC1D,IAAMzd,EAAQrJ,EAAOib,YAAY,kBAAWJ,EAAMK,UAAS,KAAK,KAChE,OAAO,EAAA2pB,iBAAiBpjB,MAAMzhB,EAAQ6a,EAAOgM,EAAMC,EAAOzd,EAC5D,EAYAu8B,cAAA,SAAc5lC,EAAmB6a,EAAkBgM,EAAcC,EAAezd,GAI9E,OAHKA,IACHA,EAAQrJ,EAAOib,YAAY,kBAAWJ,EAAMK,UAAS,KAAKlb,EAAO4C,QAAQ+8B,UAAU,uBAE9E,EAAAkF,iBAAiBpjB,MACtBzhB,EAAQ6a,EAAOgM,EAAMC,EAAOzd,EAAO,UAAUyV,GAAG,EAAI,GAAI,OAAQ,IAAK,EAEzE,EASA+mB,YAAA,SAAY7lC,EAAmB6a,SACvB5a,EAAO,kBAAW4a,EAAMK,UAAS,KACnCuW,EAAMzxB,EAAOib,YAAYhb,EAAMD,EAAO4C,QAAQ+8B,UAAU,kBAAoB,KAC5E75B,EAAQ2rB,EAAMzxB,EAAOib,YAAYhb,EAAM,IAAM,GAC7CwxB,IAAQA,EAAIlW,MAAM,aACnBzV,GAAD,IAAe,CAAC2rB,EAAK3rB,GAAM,IAArB,GAAE2rB,EAAG,MAEbzxB,EAAOU,KAAKma,GACZ,IAAMgB,EAAO7b,EAAO8b,YAAYnb,OAAO,YAAaX,EAAQ6a,GAO5D,OANAgB,EAAKhX,SAAW,CACdkX,cAAc,EACdC,WAAY,OACZlW,MAAOA,GAAS,OAChB0W,YAAa,QAER,UAAUnB,cAAcQ,EAAmB4V,GAAO,IAC3D,EASAqU,YAAA,SAAY9lC,EAAmBC,EAAcwD,GAC3C,IAAIuc,EAAMhgB,EAAOM,MAAM2f,MACvB,GAAiB,aAAbD,EAAIhe,MAAoC,cAAbge,EAAIhe,KACjC,MAAM,IAAI,UACR,qBACA,mEACA/B,GAEJ,GAAI+f,EAAIG,OACN,MAAM,IAAI,UACR,6BACA,4CACAlgB,GAEJ+f,EAAInc,YAAY,QAASJ,GACzB,IAAIiC,EAAQ1F,EAAOib,YAAYhb,GAC3BQ,EAAMT,EAAOa,SAASZ,GAC1B,GAAIyF,EAAO,CACT,IAAI0Y,EAAOpe,EAAOW,OAAO,OAAQ,OAAQ,IACrC0uB,EAASrvB,EAAOW,OAAO,OAAQ,SAAU,GAAI,CAACmF,MAAOJ,IAC3C,SAAVjC,GACF2a,EAAKC,YAAYgR,GACjBjR,EAAKC,YAAY5d,KAEjB2d,EAAKC,YAAY5d,GACjB2d,EAAKC,YAAYgR,IAEnB5uB,EAAM2d,EAERpe,EAAOU,KAAKD,EACd,EAQAslC,YAAA,SAAY/lC,EAAmB6a,WAC7B,GAAI7a,EAAOM,MAAMC,IAAIyzB,UAAYnZ,EAAMK,UAAW,QAKzClb,EAAOM,MAAMC,IAAIyzB,QACxB,IAAM,EAAMh0B,EAAOM,MAAM2sB,MACnBxsB,EAAM,EAAIgmB,QACVuf,EAAS,EAAItiC,YAAY,UAC/B,GAAIjD,EAAI4Z,eACN,IAAoB,kBAAShW,YAAY5D,IAAI,8BAAE,CAA1C,IAAM+Z,EAAK,QACd,EAAAqlB,cAAcoG,YAAYzrB,EAAOwrB,0GAGnC,EAAAnG,cAAcoG,YAAYxlC,EAAKulC,GAEjChmC,EAAOU,KAAKD,QAKNulC,EAAShmC,EAAO6jB,SAAS,kBAAWhJ,EAAMK,UAAS,MACzDL,EAAMhX,YAAY,SAAUmiC,GAC5BhmC,EAAOU,KAAKma,EAEhB,EAYAqrB,MAAA,SAAMlmC,EAAmB6a,EAAkBgM,EAAcC,EAAe9L,GACtE,IAAMG,EAAQnb,EAAO8b,YAAYnb,OAAO,SAASkD,YAAY,WAAYgX,EAAMK,WAW/E,OAVAC,EAAMtW,SAAW,CACfmX,WAAY,OACZC,cAAe,MACfrY,YAAa,QAED,MAAVoX,IACFG,EAAMtW,SAASkX,cAAe,GAEhCZ,EAAMmC,cAAc,CAACuJ,KAAI,EAAEC,MAAK,IAChC9mB,EAAOU,KAAKma,GACLM,CACT,EAUAgrB,QAAA,SAAQnmC,EAAmBC,EAAcwxB,EAAaiQ,GACpD,IAAM1mB,EAAQhb,EAAOib,YAAYhb,EAAM,IAAImkB,OACvC3jB,EAAMT,EAAOW,OAAO,OAAQ,SAAU,CACxCX,EAAOW,OAAO,OAAQ,UAAW,CAACX,EAAOa,SAASZ,IAAQ,EAAF,CACtD6F,MAAO,GAAe,MAAR2rB,EAAc,CAAC,EAAI,CAAC1rB,OAAiB,MAAR0rB,EAAc,UAAY,eAEtE,CAAC,eAAgBiQ,IACpB,EAAA7B,cAAcuG,gBAAgB3lC,EAAKua,GACnChb,EAAOU,KAAKV,EAAOW,OAAO,OAAQ,UAAW,CAACF,IAChD,EAQA4lC,QAAA,SAAQrmC,EAAmBC,GACzB,IAAM+a,EAAQhb,EAAOib,YAAYhb,EAAM,IAAImkB,OACrClkB,EAAMF,EAAOa,SAASZ,GACtBQ,EAAMT,EAAOW,OAAO,OAAQ,SAAU,CAACT,GAAM,CAAC,gBAAgB,IACpE,EAAA2/B,cAAcuG,gBAAgB3lC,EAAKua,GACnChb,EAAOU,KAAKD,EACd,EASA6lC,MAAA,SAAMtmC,EAAmBC,EAAcwxB,GACrC,IAAMlG,EAAU,UAAUE,aAAazrB,EAAQA,EAAOI,YAAYH,GAAO,GACrEQ,EAAMT,EAAOW,OAAO,OAAQ,UAAW4qB,EAAS,CAACzlB,MAAO,IAChD,MAAR2rB,GACF,UAASntB,aAAa7D,EAAK,SAAkB,MAARgxB,EAAc,UAAY,YAEjEzxB,EAAOU,KAAKD,EACd,EAQA8lC,YAAA,SAAYvmC,EAAmBC,GAC7B,IAAM6F,EAAQ9F,EAAOib,YAAYhb,GAC3BwxB,EAAMzxB,EAAOib,YAAYhb,EAAM,KAC/BQ,EAAMT,EAAOW,OAAO,OAAQ,UAAW,CAACX,EAAOa,SAASZ,KAC1D6F,GACF,UAASxB,aAAa7D,EAAK,QAASqF,GAEtC,IAAMuD,GAAQ,IAAAivB,QAAO7G,EAAK,CAAChU,EAAG,SAAUoB,EAAG,SAAU,IACjDxV,GACF,UAAS/E,aAAa7D,EAAK,aAAc4I,GAE3CrJ,EAAOU,KAAKD,EACd,EAQA+lC,SAAA,SAASxmC,EAAmBC,GAC1BD,EAAOU,KAAKV,EAAOW,OAAO,OAAQ,OAAQ,CAACX,EAAOa,SAASZ,KAC7D,EAQAwmC,iBAAA,SAAiBzmC,EAAmBC,GAClC,IAAMymC,GAAY,IAAAC,WAAU3mC,EAAOib,YAAYhb,EAAM,QAAS,IACxD4f,EAAS7f,EAAOib,YAAYhb,EAAM,QAClCC,EAAMF,EAAOI,YAAYH,GACzB,IACe,MAAnBA,EAAK4c,OAAO,GACV,CAAC,OAAQ,SAAU,UACnB,CAAC,QAAS,cAAe,OAC5B,GAJM4U,EAAG,KAAEmV,EAAM,KAAEC,EAAM,KAKpBC,GAAI,IAAAC,IAAGL,GACP/rB,EAAO,IAAI,UAAUza,EAAKF,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,MAClEumC,EAAO,IAAI,UAAU9mC,EAAKF,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,MAClEwmC,EAASjnC,EAAOW,OAAO,OAAQ,UAAW,CAC9CX,EAAOW,OAAO,OAAQ,WAAY,CAACqmC,KAClC,CACDhsB,MAAO,kBAAW8rB,EAAC,0BAAkBD,EAAM,UAC3ChnB,OAAQA,EACRX,MAAO,IAEHoG,EAAO,UAAU4hB,UAAUlnC,EAAQ2a,EAAMssB,EAAQxV,GAAK,GACtD0V,EAAa,UAAS1sB,WAAW,UAASA,WAAW6K,EAAM,GAAI,GACrE,UAAShhB,aAAa6iC,EAAYP,GAAQ,GAC1C5mC,EAAOU,KAAK4kB,EACd,EAQA+c,OAAA,SAAOriC,EAAmBC,GAKxB,IAAM+f,EAAM,EAAA6f,cAAcuH,eAAepnC,EAAQC,GAC7C+f,EAAIlc,IAAIR,OAAS,GAAM,GACzB0c,EAAIlc,IAAIzD,KAAKL,EAAOW,OAAO,OAAQ,MAAO,KAK5C,IAAMT,EAAMF,EAAOI,YAAYH,GACzBonC,EAAOrnC,EAAOye,OAAO3B,OAAO9c,EAAO2d,GAIzC3d,EAAOye,OAASve,EAAM,gBACtBF,EAAO2d,EAAI,EAIX,IAAMiD,EAAO5gB,EAAOqjB,QAAQpjB,EAAM,KAC5B4gB,EAAQ7gB,EAAOqjB,QAAQpjB,EAAM,KACnCD,EAAOqjB,QAAQpjB,EAAM,eAIrB,IAAMo0B,EAAM,UAAUiT,eACpBtnC,EAAQ,CAAC4gB,EAAMC,GAAQ,gFAEzB7gB,EAAOye,OAAS4V,EAAMgT,EACtBrnC,EAAO2d,EAAI,CACb,EAQA2kB,kBAAA,SAAkBtiC,EAAmBC,GACnC,IAAM+f,EAAM,EAAA6f,cAAcuH,eAAepnC,EAAQC,GACjD,GAAI+f,EAAIG,QAAUH,EAAIlc,IAAIR,OACxB,MAAM,IAAI,UAAS,eAAgB,gCAAiCrD,GAEtE,IAAMwc,EAAOzc,EAAO0c,UACd6qB,EAASvnC,EAAOib,YAAYhb,EAAM,iBACpCwc,IACFuD,EAAI7c,WACJ6c,EAAI7c,YAEN,IAAMkxB,EAAO5X,EAAO,SAAW8qB,EAASA,EAAS,SAC3C9mC,EAAM,IAAI,UAAU4zB,EAAKr0B,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,MACvET,EAAOU,KAAKD,GACZuf,EAAI7c,WACJ6c,EAAIhc,QACN,EAQAwjC,YAAA,SAAYxnC,EAAmBC,GAC7B,IAAM+f,EAAMhgB,EAAOM,MAAM2f,MACnBwnB,EAAWznB,EAAItc,YAAY,qBAAuBsc,EAAI3c,MAAMC,OAC5DpD,EAAM,mBAAqBF,EAAOI,YAAYH,GAAQ,mBACtD0a,EAAO,IAAI,UAAUza,EAAKF,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,MACpEA,EAAMT,EAAOW,OAAO,OAAQ,UAAW,CACzCX,EAAOW,OAAO,OAAQ,UAAW,CAC/BX,EAAOW,OAAO,OAAQ,KAAM,CAC1BX,EAAOW,OAAO,OAAQ,QAEvB,EAAF,CACCmF,MAAO,EACPC,OAAQ,YAAgB0hC,EAAU,CAAC5nB,OAAQ,QAASuM,QAAS,UAAY,CAAC,IAE5EpsB,EAAOW,OAAO,OAAQ,WAAY,CAACga,KAClC,CACD5U,OAAQ,YAEV/F,EAAOU,KAAKD,EACd,EAQAinC,iBAAA,SAAiB1nC,EAAmB+f,GAClC,IAAMC,EAAMhgB,EAAOM,MAAM2f,MACnBxD,EAAOzc,EAAO0c,UACpB,EAAAmoB,iBAAiB8C,gBAAgB3nC,EAAQ,wBACxCyc,GAAQuD,EAAI7c,WACb,EAAA0hC,iBAAiB2C,YAAYxnC,EAAQ,iBACrCyc,GAAQuD,EAAI7c,WACZ,EAAA0hC,iBAAiB+C,gBAAgB5nC,EAAQ,sBAC3C,EAQA2nC,gBAAA,SAAgB3nC,EAAmBC,GACjC,IAAM+f,EAAM,EAAA6f,cAAcuH,eAAepnC,EAAQC,GACjD+f,EAAInc,YAAY,kBAAmBmc,EAAI3c,MAAMC,QAC7C0c,EAAI6nB,cAAc,IAAM7nC,EAAO4C,QAAQ+8B,UAAiC,sBAC1E,EAQAiI,gBAAA,SAAgB5nC,EAAmBC,GACjC,IAAM+f,EAAM,EAAA6f,cAAcuH,eAAepnC,EAAQC,GACjD+f,EAAIG,QAAUH,EAAI7c,WAClB6c,EAAIhc,SACJgc,EAAI6nB,cAAc,IAAM7nC,EAAO4C,QAAQ+8B,UAAiC,sBAC1E,EAcAmI,iBAAA,SAAiB9nC,EAAmBC,EACnB4mB,EAAcC,EACdihB,EAAqBviC,EACrBwiC,EAAmBC,QADnB,IAAAF,IAAAA,EAAA,WAAqB,IAAAviC,IAAAA,EAAA,QACrB,IAAAwiC,IAAAA,EAAA,SAAmB,IAAAC,IAAAA,EAAA,IAClC,IAAMxrB,EAAOzc,EAAO0c,UACdwrB,EAAQzrB,EAAO,GAAKzc,EAAOib,YAAYhb,GACvC,IAAiBwc,EAAO,CAAC,SAAU,WAAayrB,EAAO,CAACA,EAAO,IAAMA,EAAO,KAAO,CAAC,GAAI,IAAI,GAA3FtnB,EAAI,KAAEC,EAAK,KACZsnB,EAAS1rB,EAAO,WAAayrB,GAAQ,GAC3C,GAAI1iC,EAAG,CAEL,IADA,IAAMtC,EAAiB,GACdya,EAAIza,EAAKI,OAAQqa,EAAInY,EAAGmY,IAC/Bza,EAAK7C,KAAKL,EAAOI,YAAYH,IAE/B+nC,EAAO,UAAUV,eAAetnC,EAAQkD,EAAM8kC,GAC9CD,EAAO,UAAUT,eAAetnC,EAAQkD,EAAM6kC,GAC9CE,EAAO,UAAUX,eAAetnC,EAAQkD,EAAM+kC,GAEhDF,EAAOA,EAAKxrB,QAAQ,eAAgB4rB,GACpCnoC,EAAOye,OAAS,CAACupB,EAAKpnB,EAAMiG,EAAMkhB,EAAMlnB,EAAOiG,EAAOmhB,EAAMjoC,EAAOye,OAAO3B,OAAO9c,EAAO2d,IACrFyqB,QAAO,SAACC,EAAGlkB,GAAS,iBAAUmkB,QAAQtoC,EAAQqoC,EAAGlkB,EAA7B,GAAoC,IAC3DnkB,EAAO2d,EAAI,EACX,UAAU4qB,eAAevoC,EAC3B,EAQA2iC,uBAAA,SAAuB3iC,EAAmBC,GACxC,IAAM0c,EAAK,UAAe6rB,kBAAkBxoC,EAAQC,GAC9C4mB,EAAO7mB,EAAOI,YAAYH,GAC1B6mB,EAAQ9mB,EAAOI,YAAYH,GACjC,EAAA4/B,cAAcC,gBAAgB9/B,EAAOQ,cAAemc,EAAI,CAACkK,EAAMC,GACjE,EAQA8b,wBAAA,SAAwB5iC,EAAmBC,GACzC,IAAM0c,EAAK,UAAe6rB,kBAAkBxoC,EAAQC,GAC9CuF,EAAI,UAAeijC,YAAYzoC,EAAQC,GACvC4mB,EAAO7mB,EAAOI,YAAYH,GAC1B6mB,EAAQ9mB,EAAOI,YAAYH,GAC3B8nC,EAAO/nC,EAAOI,YAAYH,GAChC,EAAA4/B,cAAcC,gBAAgB9/B,EAAOQ,cAAemc,EAAI,CAACkK,EAAMC,EAAOihB,EAAMviC,GAC9E,EAQAq9B,0BAAA,SAA0B7iC,EAAmBC,GAC3C,IAAM0c,EAAK,UAAe6rB,kBAAkBxoC,EAAQC,GAC9CuF,EAAI,UAAeijC,YAAYzoC,EAAQC,GACvC+nC,EAAMhoC,EAAOI,YAAYH,GACzB4mB,EAAO7mB,EAAOI,YAAYH,GAC1B6mB,EAAQ9mB,EAAOI,YAAYH,GAC3BgoC,EAAOjoC,EAAOI,YAAYH,GAC1B8nC,EAAO/nC,EAAOI,YAAYH,GAChC,EAAA4/B,cAAcC,gBAAgB9/B,EAAOQ,cAAemc,EAAI,CAACkK,EAAMC,EAAOihB,EAAMviC,EAAGwiC,EAAKC,GACtF,EAWAS,YAAA,SAAY1oC,EAAmB+f,EAAexa,EAAiBojC,EAAwBC,QAAxB,IAAAD,IAAAA,GAAA,QAAwB,IAAAC,IAAAA,GAAA,GACrF,IAAMhmC,EAAU5C,EAAO4C,QAAQ+8B,UAC3Bl/B,EAAMT,EAAOW,OAAO,QAAS,KAAM,CAAC,EAAG,KAC3C,GAAI4E,IAAW3C,EAAqB,aAAK+lC,GAAQ,CAC/C,IAAME,EAAKjmC,EAAQ,sBACnBnC,EAAMT,EAAOW,OAAO,OAAQ,UAAW,CAACF,GAAM,EAAF,CAC1C2rB,QAASyc,EAAIhpB,OAAQ,WAAIgpB,GAAM3pB,MAAO,WAAI2pB,IACpCD,EAAO,CAAC9iC,MAAOlD,EAAQ,gBAAiBmD,OAAQnD,EAAQ,iBAAmB,CAAC,IAGtF5C,EAAOU,KAAKD,EACd,EAUAqoC,SAAA,SAAS9oC,EAAmB+f,EAAesU,EAAa0U,GACtC/oC,EAAO4C,QAAQ+8B,UACnB,gBAAkBoJ,EAC5B/oC,EAAOU,KAAKV,EAAOW,OAAO,QAAS,KAAM,CAAC8F,SAAU,EAAAC,SAAS2Y,KAAM0pB,KAEnE1U,EAAM,aAAeA,EAAI9X,QAAQ,KAAM,iBAAiBA,QAAQ,KAAM,gBAAkB,IACxFvc,EAAOye,OAAS,UAAU6pB,QAAQtoC,EAAQq0B,EAAKr0B,EAAOye,OAAO3B,OAAO9c,EAAO2d,IAC3E3d,EAAO2d,EAAI,EAEf,EAUAqrB,OAAA,SAAOhpC,EAAmB+f,EAAetC,EAAWorB,GAClD7oC,EAAOU,KACLV,EAAOW,OAAO,OAAQ,UAAW,CAC/BX,EAAOW,OAAO,QAAS,QAAS,CAAC,EAAG8c,GACpCzd,EAAOW,OAAO,OAAQ,UAAW,CAC/BX,EAAOW,OAAO,OAAQ,UAAW,CAC/BX,EAAOW,OAAO,OAAQ,WAAY,CAChCX,EAAOW,OAAO,OAAQ,SAAU,GAAI,CAACkf,OAAQ,OAAQX,MAAO,EAAGpZ,MAAO,UACrE,CAACysB,SAAU,mBAAoB,iBAAkB,QAAS,eAAgB,KAC5E,CAACzsB,MAAO,EAAGC,OAAQ,WAAYqmB,QAASyc,IAC3C7oC,EAAOW,OAAO,OAAQ,WAAY,CAChCX,EAAOW,OAAO,QAAS,QAAS,CAAC,EAAG8c,MAErC,CAAC3X,MAAO,EAAGC,OAAQ,cACrB,CAACU,SAAU,EAAAC,SAAS2Y,MAE3B,EASA4pB,UAAA,SAAUjpC,EAAmBC,EAAcywB,GACzC,IAAMrQ,EAAMrgB,EAAOa,SAASZ,GACtBqgB,EAAMtgB,EAAOa,SAASZ,GAC5BD,EAAOU,KACLV,EAAOW,OAAO,OAAQ,SAAU,CAC9BX,EAAOW,OAAO,OAAQ,QAAS,CAC7BX,EAAOW,OAAO,OAAQ,SAAU,CAC9B0f,EACArgB,EAAOW,OAAO,QAAS,MACvBX,EAAOW,OAAO,QAAS,SAAU,CAACmF,MAAO,SACxC,CAAC0Z,YAAa,IACjBxf,EAAOW,OAAO,OAAQ,SAAU,CAC9BX,EAAOW,OAAO,QAAS,SAAU,CAACmF,MAAO,QACzC9F,EAAOW,OAAO,QAAS,MACvB2f,GACC,CAACd,YAAa,KAChB,CAAC0pB,cAAe,EAAGxoB,SAAU,OAAQC,WAAY,WACnD,CAAC5E,aAAc2U,EAASlR,YAAa,IAE5C,EAQA2pB,WAAA,SAAWnpC,EAAmBC,GAC5B,IAAImpC,EAAKppC,EAAOib,YAAYhb,GACxBopC,EAAKrpC,EAAOI,YAAYH,GAC5BopC,EAAK,EAAAxJ,cAAcyJ,YAAYrpC,EAAMopC,GACrCD,EAAK,EAAAvJ,cAAcyJ,YAAYrpC,EAAMmpC,GAAMC,GAC3CrpC,EAAOU,KACLV,EAAOW,OAAO,OAAQ,UAAW,CAC/BX,EAAOW,OAAO,OAAQ,UAAW,CAC/BX,EAAOW,OAAO,OAAQ,WAAY,CAChCX,EAAOW,OAAO,QAAS,KAAM,CAACye,UAAU,GAAQ,QAEjD,CAACtZ,MAAO,EAAG+Z,OAAQwpB,EAAK,SAAUnqB,MAAOkqB,EAAK,WAChD,CAAC3iC,SAAU,EAAAC,SAASid,MAE3B,EAQA4lB,UAAA,SAAUvpC,EAAmBC,GAC3B,IAAMupC,EAAM,EAAA3J,cAAc4J,UAAUzpC,EAAQC,EAAM,OAC5CypC,EAAM,EAAA7J,cAAc4J,UAAUzpC,EAAQC,EAAM,OAC5C0a,EAAO,EAAAklB,cAAc4J,UAAUzpC,EAAQC,EAAM,OACnD,GAAI,UAAS+tB,OAAOwb,EAAK,SAAW,UAASxb,OAAO0b,EAAK,QACvD1pC,EAAOU,KAAKia,OADd,CAIA,IAAMla,EAAMT,EAAOW,OAAO,OAAQ,gBAAiB,CAACga,IACpD,UAAStW,YAAY5D,GAAKJ,KAAK,KAAM,MACrC,UAAS8d,eAAe1d,EAAK,CAACT,EAAOW,OAAO,OAAQ,eAAgB+oC,EAAKF,IACzE/oC,EAAIoD,YAAY,gBAAgB,GAChC7D,EAAOU,KAAKD,GACd,EASAkpC,WAAA,SAAW3pC,EAAmBC,EAAc2pC,QAAA,IAAAA,IAAAA,GAAA,GAC1C,IAAM1nC,EAAOlC,EAAOkC,KACpB,KAAM,cAAeA,GACnB,MAAM,IAAI,UAAS,YAAa,iDAAkDjC,GAEpF,IAAM4pC,EAAK7pC,EAAOI,YAAYH,GAAMmkB,OACpC,IAAKylB,EACH,MAAM,IAAI,UAAS,mBAAoB,gCAEzC,IAAMC,EAAS9pC,EAAOib,YAAYhb,EAAM,IAClC2gB,EAAO5gB,EAAOI,YAAYH,GAC1B4gB,EAAQ7gB,EAAOI,YAAYH,GACjC,IAAK2pC,GAAS1nC,EAAK6nC,UAAU9S,IAAI4S,GAC/B,MAAM,IAAI,UAAS,mBAAoB,yBAA0BA,GAEnE3nC,EAAK6nC,UAAUpU,IAAIkU,EAAI,CAACjpB,EAAMC,EAAOipB,GACvC,EAQAE,WAAA,SAAWhqC,EAAmBC,GAC5B,IAAMiC,EAAOlC,EAAOkC,KACpB,KAAM,cAAeA,GACnB,MAAM,IAAI,UAAS,YAAa,iDAAkDjC,GAEpF,IAAM4pC,EAAK7pC,EAAOI,YAAYH,GAAMmkB,OACpC,GAAKylB,EAAL,CAIA,IAAK3nC,EAAK6nC,UAAU9S,IAAI4S,GACtB,MAAM,IAAI,UAAS,mBAAoB,yBAA0BA,GAEnE3nC,EAAK+nC,UAAY/nC,EAAK6nC,UAAUzT,IAAIuT,QANlC3nC,EAAK+nC,UAAY,IAOrB,EAQAC,WAAA,SAAWlqC,EAAmBC,WACtB2C,EAAU5C,EAAO4C,QAAQ+8B,UAC/B,IAAK/8B,EAAQ,sBACX,MAAM,IAAI,UAAS,wBAAyB,iBAAkB3C,GAEhE,IAAMw8B,EAAU,CAAC,EACjBlY,OAAOuU,KAAKl2B,GAAS6sB,SAAQ,SAAAoa,GAChB,qBAAPA,GAAoC,aAAPA,GAA4B,uBAAPA,IACpDpN,EAAQoN,GAAM,EAElB,IACA,IAAM3mC,EAAOlD,EAAOI,YAAYH,GAC1B64B,EAAO,UAAUtG,cAActvB,EAAMu5B,GAAS,OACpD,IAAiB,QAAAlY,OAAOuU,KAAKA,IAAK,8BAAE,CAA/B,IAAM+Q,EAAE,QACXjnC,EAAQinC,GAAM/Q,EAAK+Q,qGAEvB,EAKApoB,MAAQ,UAAYA,MACpB1hB,MAAQ,UAAYA,MACpBw9B,OAAa,EAAA12B,WAAW02B,OACxBjc,UAAa,EAAAza,WAAWya,UACxB6oB,YAAa,EAAAtjC,WAAWsjC,YACxBnR,kBAAmB,UAAkBA,oxCCltBvC,iBAGA,WAcIoR,EAAQ,EAMZ,8BAAmChoC,EAA6BM,GAK9D,IAAMR,EAAOQ,EAAIC,aAAaC,QAAQV,KACzB,SAATA,GAAmBE,EAAOF,KAAK+6B,eAAe/6B,IAChD,EAAAmoC,YAAYntB,IAAIhb,EAAME,EAAOF,KAAKA,IAMpC,IAKA,cAgBE,uBACE,cAAO,KAZF,EAAA6nC,UAAmD,IAAIhU,IAKvD,EAAAkU,UAAsC,KAQ3C,IAAMK,EAAQ5nC,EAAIC,aAAaC,QAAQ+8B,UAAUK,aACjD,IAAmB,QAAAzb,OAAOuU,KAAKwR,IAAM,8BAAE,CAAlC,IAAMC,EAAI,QACb,IAAK9oB,MAAMsX,QAAQuR,EAAMC,KAAiC,IAAvBD,EAAMC,GAAMjnC,OAC7C,MAAM,IAAI,UAAS,oBACA,uEAAwEinC,GAE7F,EAAKR,UAAUpU,IAAI4U,EAAMD,EAAMC,8GAEnC,CAYF,OAtCwB,OA+Bf,YAAAC,UAAP,SAAiB7lC,GACf,GAAIvB,KAAK6mC,UAAW,CACZ,QAAwB7mC,KAAK6mC,UAAS,GAArCrpB,EAAI,KAAEC,EAAK,KAAEipB,EAAM,KAC1B,OAAQA,EAAS,UAAGlpB,GAAI,OAAGkpB,EAAM,YAAInlC,EAAG,YAAIkc,GAAU,UAAGD,GAAI,OAAGjc,GAAG,OAAGkc,GAExE,OAAO,YAAM2pB,UAAS,UAAC7lC,EACzB,EACF,EAtCA,CALiB,EAAA0lC,YAAY1pC,OAAO+B,EAAIC,aAAaC,QAAQV,MAAMuoC,aAmD7DC,EAAU,oBADhBN,EAKA,EAAAC,YAAYntB,IAAIwtB,EAASC,GACzBjoC,EAAIC,aAAaC,QAAQV,KAAOwoC,CAClC,keC7FA,eACA,cACA,cACA,aAEA,WAEA,WAGA,WACA,WAKa,EAAA7K,cAAgB,CAQ3BuG,gBAAA,SAAgB3lC,EAAcua,GAC5B,GAAKA,EAAL,CACM,SAAoB,IAAAsd,QAAOtd,EAAO,CACtC,iBAAuB,EAAC,EAAM,GAC9B,cAAuB,EAAC,EAAO,GAC/B,gBAAuB,EAAC,EAAO,GAC/B,sBAAuB,EAAC,EAAO,IAC9B,CAAC,KAAM,OAAM,GALT0V,EAAO,KAAEuW,EAAM,KAMN,OAAZvW,IACFjwB,EAAIq3B,WAAWnC,IAAI,eAAgBjF,GACnCjwB,EAAIq3B,WAAWnC,IAAI,cAAesR,GATlB,CAWpB,EASAG,eAAA,SAAepnC,EAAmBC,GAChC,IAAM+f,EAAMhgB,EAAOM,MAAM2f,MACzB,GAAID,EAAIhe,OAAS,EAAAoE,aAAarE,UAAUC,KACtC,MAAM,IAAI,UAAS,iBAAkB,+CAAgD/B,GAEvF,OAAO+f,CACT,EAYA8f,gBAAA,SAAgB19B,EAAsBua,EAAYzZ,GACjCd,EAAO4a,SAASC,SAAS,EAAAsiB,cACjCriB,IAAIP,EAAI,IAAI,EAAA5c,MAAM4c,EAAI,EAAAkoB,iBAAiBiD,iBAAkB5kC,GAClE,EAQA+iC,YAAA,SAAY2E,EAAiB5E,GAC3B,GAAK4E,EAAOhlC,OAAO,UAAnB,CACA,IAAIoW,EAAa4uB,EAAO9S,WAAWxB,IAAI,cACvC,GAAIta,EAAY,CACd,IAAM,EAAM,UAAUsT,SAAS0W,GAC/BhqB,EAAaA,EACVzS,MAAM,KACNshC,KAAI,SAAAxC,GAAK,iBAAUvpB,GAAGsR,KAAKkB,IAAI,EAAG,UAAUhC,SAAS+Y,GAAK,GAAjD,IACT1sB,KAAK,UAERK,EAAagqB,EAEf4E,EAAO9S,WAAWnC,IAAI,aAAc3Z,EAXA,CAYtC,EASAstB,YAAA,SAAYrpC,EAAcuF,GAExB,KADAA,EAAIA,EAAE4e,QACC7I,MAAM,kCACX,MAAM,IAAI,UAAS,aAAc,iCAAkCtb,GAErE,OAAQuF,EAAE+V,MAAM,SAAW/V,EAAI,IAAMA,CACvC,EAUAikC,UAAA,SAAUzpC,EAAmBC,EAAcwxB,GACzC,IAAIvxB,EAAM,UAAU0c,WAAW5c,EAAOI,YAAYH,IAClD,GAAY,KAARC,EACF,OAAOF,EAAOW,OAAO,OAAQ,QAE/B,IAAMmpC,EAAS9pC,EAAO4C,QAAQ+8B,UAAU,oBAAalO,EAAG,YAExD,OADAqY,IAAW5pC,EAAM,UAAG4pC,EAAM,YAAI5pC,EAAG,MAC1B,IAAI,UAAUA,EAAKF,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,KACpE,4LCtHF,cACA,WAEA,aAEA,cACA,WACA,WAGIqqC,EAA6C,CAAC,EAElDA,EAAc/qC,MAAQ,UAAYA,MAClC+qC,EAAcvN,OAAS,EAAA12B,WAAW02B,OAOlCuN,EAAcC,QAAU,SAAS/qC,EAAmBC,EAAc+qC,GAChE,IACI3W,EADAn0B,EAAMF,EAAOI,YAAYH,GAE7B,IACEo0B,EAAM,EAAA4W,aAAaC,MAAMhrC,EAAK8qC,GAC9B,MAAOG,GACP,MAAM,IAAI,UAASA,EAAI,GAAIA,EAAI,IAEjCnrC,EAAOye,OAAS4V,EAAMr0B,EAAOye,OAAO3B,OAAO9c,EAAO2d,GAClD3d,EAAO2d,EAAI,CACb,EAEA,IAAI,EAAA5c,WACF,SAAU,CACRqqC,GAAI,CAAC,UAAW,MAChBC,GAAI,CAAC,UAAW,MAChBC,sBAAuB,CACrB,QACA,6FAEFC,sBAAuB,CACrB,QACA,kFAEFC,sBAAuB,CACrB,QACA,mGAEFC,oBAAqB,CACnB,QACA,iFAKFC,WAAY,CACV,QACA,kGAEFnL,gBAAoB,CAAC,SAAU,KAAQ,EAAG,GAC1CQ,mBAAoB,CAAC,SAAU,KAAQ,EAAG,GAC1C4K,mBAAoB,CAAC,SAAU,KAAQ,EAAG,GAC1CC,mBAAoB,CAAC,SAAU,KAAQ,EAAG,IAE5Cd,GAIW,EAAAe,oBAAsB,EAAAzqC,cAAcT,OAC/C,SAAU,CAACU,QAAS,CAACC,MAAO,CAAC,g1BCrE/B,cACA,WACA,aACA,SACA,kBACA,cAwBa,EAAA28B,wBAA0B,EAAA78B,cAAcT,OACnD,aAAc,CACZU,QAAS,CACPC,MAAO,CAAC,sBAEVO,OAAK,KACH,EAAC,EAAAw3B,aAAat3B,UAAUC,MAAO,EAAAq3B,gBAEjCz2B,QAAS,CAACkpC,UAAW,KACrB3pC,KA1BO,SAASC,GAClB,IAAIiE,EAAGoE,aAAa,UAAeshC,cACf,UAAapqC,UAAW,CAAC,GAC7C,IAAI0E,EAAGtF,WAAW,UAAeirC,YAAa,CAAC,EAAG,CAAC,GACnD,IAAI3lC,EAAG6C,eAAe,UAAe+iC,gBACf,UAAarqC,YAAa,CAAC,EAAG,CAAC,GACrDQ,EAAOE,OAAO,EAAAlB,cAAcmB,MAC1B,CAAClB,QAAS,CAACK,UAAW,GACXC,UAAW,CAAC,UAAeoqC,eAC3BzqC,MAAO,CAAC,UAAeyqC,cACf,UAAeC,aACvBpqC,YAAa,CAAC,UAAeqqC,kBAEvCzpC,UAAW,IAChB,ipBCzBA,iBASA,yEAuCA,QAvCkC,OAKhC,sBAAW,mBAAI,KAAf,WACE,MAAO,UACT,kCAMA,sBAAI,qBAAM,KAAV,WACE,OAAO,CACT,kCAMO,YAAAgkB,UAAP,SAAiB3K,GACf,GAAIA,EAAKjW,OAAO,OAAQ,CAEtB,GAAIiW,EAAKX,YAAc9X,KAAK8X,UAE1B,MAAM,IAAI,UAAS,YAAa,mCACZ9X,KAAK8X,UAAWW,EAAKX,WAE3C,MAAO,CAAC,CAAC9X,KAAKJ,QAAQrC,OAAO,MAAOyC,KAAKqjB,WAAW,GAEtD,GAAI5K,EAAKjW,OAAO,QAEd,MAAM,IAAI,UAAS,gBAAiB,oBAAqBxC,KAAK8X,WAGhE,OAAO,YAAMsL,UAAS,UAAC3K,EACzB,EAEF,EAvCA,CARA,SAQkC6K,UAArB,EAAA2S,aAAAA,8JCVb,kBAOA,IANA,SAMIt4B,YAAW,oBAAqB,CAClCmrC,WAAkB,aAClBC,aAAkB,aAClBC,eAAkB,iBAClBC,iBAAkB,iBAClBxmC,IAAkB,WAClB,IAAkB,OACjB,2yBCZH,iBAEA,cAEA,cACA,cAEA,aAIIymC,EAAiD,CAOrDA,WAA+B,SAAStsC,EAAmBC,GAEzD,IAAI0c,EAAK,UAAe6rB,kBAAkBxoC,EAAQC,GAC9CuF,EAAI,UAAeijC,YAAYzoC,EAAQC,GACvCssC,EAAMvsC,EAAOib,YAAYhb,GACzB4F,EAAM7F,EAAOI,YAAYH,GAC7B,UAAew9B,SAASz9B,EAAQ2c,EAAI2vB,EAAkBvsC,MAAO,CAAC8F,EAAKL,EAAG+mC,GACxE,EAQAD,eAAmC,SAAStsC,EAAmBC,GAE7D,IAAIM,EAAM,UAAUqc,WAAW5c,EAAOI,YAAYH,IAC9CuF,EAAI,UAAeijC,YAAYzoC,EAAQC,GACvCssC,EAAMvsC,EAAOib,YAAYhb,GACzBusC,EAAOxsC,EAAOI,YAAYH,GAC1BwsC,EAAOzsC,EAAOI,YAAYH,GAC9B,UAAeysC,eAAe1sC,EAAQO,EAAK+rC,EAAkBnT,SAAU,EAAC,EAAMqT,EAAMC,EAAMjnC,EAAG+mC,GAC/F,EAQAD,SAA6B,SAAStsC,EAAmBC,GAEvD,IAAI0c,EAAK,UAAegwB,UAAU3sC,EAAQC,GACtC2sC,EAAS,UAAeC,YAAY7sC,EAAQC,EAAM,KAAO0c,GACzD9W,EAAM7F,EAAOI,YAAYH,GAC3B2sC,aAAkBnrB,MAIlB,UAAegc,SAASz9B,EAAQ2c,EAAI2vB,EAAkBtT,kBAAmB,CAACnzB,GAAKZ,OAAO2nC,IAFtF,UAAenP,SAASz9B,EAAQ2c,EAAI2vB,EAAkBvsC,MAAO,CAAC8F,EAAK+mC,GAGvE,EAmBAN,IAAwB,SAAStsC,EAAmBC,GAClD,IAAM0c,EAAK,UAAegwB,UAAU3sC,EAAQC,GACxCwd,EAAIzd,EAAO0d,UAEL,MAAND,IAEFzd,EAAO2d,IACPF,EAAIzd,EAAO0d,WAEb,IAAMV,EAAWhd,EAAOQ,cAAcwc,SACtC,GAAU,OAANS,EAAJ,CA+BAzd,EAAO2d,IACP,IAAMrc,EAAQ0b,EAASsZ,IAAI,aAAagC,OAAO7a,GAC3Cnc,EAEF,UAAewrC,aAAa9sC,EAAQ,KAAO2c,EAAIrb,EAAM88B,KAAM98B,EAAMw2B,YAInE,UAAe2F,SAASz9B,EAAQ2c,EAAI2vB,EAAkBvsC,MAAO,CAAC0d,QAvC9D,CAEExd,EAAO,UAAe0sC,UAAU3sC,EAAQC,GACxC,IAAI,EAAQ+c,EAASsZ,IAAI,aAAagC,OAAO,KAAOr4B,GACpD,GAAI,EAGF,YADA,UAAe6sC,aAAa9sC,EAAQ,KAAO2c,EAAI,EAAMyhB,KAAM,EAAMtG,YAGnE,IAAM,EAAM9a,EAASsZ,IAAI,SAASyW,WAAW9sC,GAC7C,IAAK,EAEH,OAEF,GAAI,aAAeoG,EAAGkc,SAAU,CAE9B,IAAM,EAAS,EAAsB+V,OAAOr4B,GAE5C,YADA,UAAew9B,SAASz9B,EAAQ2c,EAAI,EAAM6f,KAAM,EAAMt5B,KAAM,EAAMqkC,QAGpE,EAAS,EAAwBjP,OAAOr4B,GACxC,IAAM+sC,EAAU,UAAeC,kBAAkBtwB,EAAI,GAMrD,UAAe8gB,SAASz9B,EAAQ2c,GALjB,SAACuwB,EAAcC,OAAa,wDAEzC,IAAMC,EAAO,UAAeC,eAAehG,GAC3C,OAAO,EAAIrnC,OAAOktC,EAAGE,EACvB,GAC4CJ,GAahD,EAYAV,kBAAsC,SAAUtsC,EAAmBC,EACnB6kB,EAActf,OACd,wDAC9C,IAAM8nC,EAAW7xB,SAASjW,EAAG,IAE7B,GAAI8nC,EAAU,CAEZ,IAAIpqC,EAAO,GAEX,GADAlD,EAAO0d,UACHkvB,EAAO,KAAO,UAAeW,WAAWvtC,EAAQ4sC,EAAO,IAEzD,MAAM,IAAI,UAAS,iBACC,yCAA2C3sC,GAEjE,IAAK,IAAI0d,EAAI,EAAGA,EAAI2vB,EAAU3vB,IAE5Bza,EAAK7C,KAAK,UAAemtC,aAAaxtC,EAAQC,EAAM2sC,EAAOjvB,EAAI,KAEjEmH,EAAO,UAAUwiB,eAAetnC,EAAQkD,EAAM4hB,GAEhD9kB,EAAOye,OAAS,UAAU6pB,QAAQtoC,EAAQ8kB,EACR9kB,EAAOye,OAAOC,MAAM1e,EAAO2d,IAC7D3d,EAAO2d,EAAI,EACX,UAAU4qB,eAAevoC,EAC3B,EAYAssC,SAA6B,SAAStsC,EAAmB6a,EACnB2xB,EAAcC,EAAcjnC,EAAWK,GAG3E,GAAIgV,EAAMnX,YAAY,QAAU1D,EAAOM,MAAMC,IAAa,UAAMsa,EAAMK,UAAW,QAExElb,EAAOM,MAAMC,IAAa,QAEjC,IAAI8mC,EAAOrnC,EAAOye,OAAOC,MAAM1e,EAAO2d,GAQtC,OAPA3d,EAAOye,OAASguB,EAChBzsC,EAAO2d,EAAI,EACX3d,EAAOytC,QAEPztC,EAAOye,OAAS4oB,EAChBrnC,EAAO2d,EAAI,EAEJ3d,EAAO8b,YAAYnb,OAAO,OAAOkD,YAAY,OAAQgX,EAAMK,WAEpE,GAAI1V,EAAG,CAEL,IAAItC,EAAiB,GACrB,GAAW,MAAP2C,EAAa,CAEf,IAAI6nC,EAAW1tC,EAAOib,YAAY,WAAaJ,EAAMK,UAAY,KACjEhY,EAAK7C,KAAiB,MAAZqtC,EAAmB7nC,EAAM6nC,GAErC,IAAK,IAAI/vB,EAAIza,EAAKI,OAAQqa,EAAInY,EAAGmY,IAE/Bza,EAAK7C,KAAKL,EAAOI,YAAY,WAAaya,EAAMK,UAAY,MAE9DsxB,EAAO,UAAUlF,eAAetnC,EAAQkD,EAAMspC,GAC9CC,EAAO,UAAUnF,eAAetnC,EAAQ,GAAIysC,GAK9C,OAHAzsC,EAAOye,OAAS,UAAU6pB,QAAQtoC,EAAQwsC,EACRxsC,EAAOye,OAAOC,MAAM1e,EAAO2d,IAC7D3d,EAAO2d,EAAI,EACJ3d,EAAO8b,YAAYnb,OAAO,YAAYkD,YAAY,OAAQgX,EAAMK,UACzE,GAEAoxB,EAAkBvsC,MAAQ,UAAYA,MAEtC,UAAeusC,6JC1Nf,IAQUqB,EARV,cACA,aAEA,YAKA,SAAUA,GA+NR,SAAgBJ,EAAWvtC,EAAmB4tC,GAE5C,OAAI5tC,EAAOye,OAAO3B,OAAO9c,EAAO2d,EAAGiwB,EAAMtqC,UAAYsqC,GAIjDA,EAAMryB,MAAM,eACZvb,EAAOye,OAAO5B,OAAO7c,EAAO2d,EAAIiwB,EAAMtqC,QAAQiY,MAAM,UAH/C,GAQTvb,EAAO2d,GAAKiwB,EAAMtqC,OACX,EACT,CAlOgB,EAAA2pC,kBAAhB,SAAkChtC,EAAcsnC,GAC9C,IAAIyF,EAAU,CAAC/sC,EAAMsnC,EAAOnJ,MAE5B,GAAImJ,EAAOzP,WAET,IAAK,IAAI+V,KAAOtG,EAAOzP,WACrBkV,EAAQ3sC,KAAKwtC,GACbb,EAAQ3sC,KAAKknC,EAAOzP,WAAW+V,IAGnC,OAAOb,CACT,EAUgB,EAAAK,eAAhB,SAA+BnqC,GAK7B,IAHA,IAAIjD,EAAOiD,EAAK,GACZk7B,EAAOl7B,EAAK,GACZ8jB,EAAoB,CAAC,EAChBrJ,EAAI,EAAGA,EAAIza,EAAKI,OAAQqa,GAAQ,EAEvCqJ,EAAM9jB,EAAKya,IAAgBza,EAAKya,EAAI,GAEtC,OAAO,IAAI,EAAAmwB,OAAO7tC,EAAMm+B,EAAMpX,EAChC,EAQgB,EAAA2lB,UAAhB,SAA0B3sC,EAAmB+tC,GAG3C,GAAU,OADF/tC,EAAO0d,UAGb,MAAM,IAAI,UAAS,YACC,4CAA6CqwB,GAGnE,OADS,UAAUnxB,WAAW5c,EAAOI,YAAY2tC,IACvCjxB,OAAO,EACnB,EAQgB,EAAA0rB,kBAAhB,SAAkCxoC,EAAmBC,GACnD,IAAI0c,EAAK,UAAUC,WAAW5c,EAAOI,YAAYH,IAKjD,GAJqB,OAAjB0c,EAAGE,OAAO,KAEZF,EAAKA,EAAGG,OAAO,KAEZH,EAAGpB,MAAM,iBAEZ,MAAM,IAAI,UAAS,6BACA,uCAAwCtb,GAE7D,OAAO0c,CACT,EAQgB,EAAA8rB,YAAhB,SAA4BzoC,EAAmBC,GAC7C,IAAIuF,EAAIxF,EAAOib,YAAYhb,GAC3B,GAAIuF,KAGFA,EAAI,UAAUoX,WAAWpX,IAClB+V,MAAM,YAEX,MAAM,IAAI,UAAS,qBACA,+CAAgDtb,GAGvE,OAAOuF,CACT,EAUgB,EAAAqnC,YAAhB,SAA4B7sC,EAAmB+tC,EAAapxB,GAM1D,IAJA,IAAIc,EAAIzd,EAAO0d,UACXkvB,EAAmB,GACnBpnC,EAAI,EACJmY,EAAI3d,EAAO2d,EACR3d,EAAO2d,EAAI3d,EAAOye,OAAOnb,QAAQ,CAEtC,GAAU,OADVma,EAAIzd,EAAO0d,WACI,CAOb,GALIC,IAAM3d,EAAO2d,IAEfivB,EAAOpnC,GAAKxF,EAAOye,OAAO3B,OAAOa,EAAG3d,EAAO2d,EAAIA,MAEjDF,EAAIzd,EAAOye,OAAO5B,SAAS7c,EAAO2d,IAC3BpC,MAAM,WAEX,MAAM,IAAI,UAAS,eACC,sCAAuCoB,GAE7D,GAAIlB,SAASgC,OAASjY,EAEpB,MAAM,IAAI,UAAS,kBACC,kDAAmDmX,GAEzEgB,EAAI3d,EAAO2d,EAAI,OACV,GAAU,MAANF,EAMT,OAJIE,IAAM3d,EAAO2d,IAEfivB,EAAOpnC,GAAKxF,EAAOye,OAAO3B,OAAOa,EAAG3d,EAAO2d,EAAIA,IAE7CivB,EAAOtpC,OAAS,EAEX,CAACkC,EAAEmuB,YAAY1uB,OAAO2nC,GAGtBpnC,EAGXxF,EAAO2d,IAGT,MAAM,IAAI,UAAS,2BACC,kDAAmDowB,EACzE,EASgB,EAAAP,aAAhB,SAA6BxtC,EAAmBC,EAAc2tC,GAC5D,GAAa,MAATA,EAEF,OAAO5tC,EAAOI,YAAYH,GAK5B,IAHA,IAAI0d,EAAI3d,EAAO2d,EACXqwB,EAAI,EACJC,EAAY,EACTjuC,EAAO2d,EAAI3d,EAAOye,OAAOnb,QAAQ,CACtC,IAAIma,EAAIzd,EAAOye,OAAO5B,OAAO7c,EAAO2d,GAEpC,GAAU,MAANF,EAEEzd,EAAO2d,IAAMA,IAEfswB,EAAY,GAEdjuC,EAAOI,YAAYH,GACnB+tC,EAAIhuC,EAAO2d,EAAIA,MACV,IAAI4vB,EAAWvtC,EAAQ4tC,GAO5B,OALIK,IAEFtwB,IACAqwB,GAAK,GAEAhuC,EAAOye,OAAO3B,OAAOa,EAAGqwB,GAC1B,GAAU,OAANvwB,EAAY,CAErBzd,EAAO2d,IACPqwB,IACAC,EAAY,EACZ,IAAI1yB,EAAQvb,EAAOye,OAAO3B,OAAO9c,EAAO2d,GAAGpC,MAAM,aAC7CA,IAEFvb,EAAO2d,GAAKpC,EAAM,GAAGjY,OACrB0qC,EAAIhuC,EAAO2d,EAAIA,QAIjB3d,EAAO2d,IACPqwB,IACAC,EAAY,GAIhB,MAAM,IAAI,UAAS,kBAAmB,2BAA4BhuC,EACpE,EAWgB,EAAAstC,WAAU,EAwBV,EAAAT,aAAhB,SAA6B9sC,EAAmB2c,EAAYyhB,EAAcpM,GACvDhyB,EAAOQ,cAAcwc,SACbC,SAAS,EAAA8uB,eAC1B7uB,IAAIP,EAAI,IAAI,EAAAmxB,OAAOnxB,EAAIyhB,EAAMpM,GACvC,EAWgB,EAAAyL,SAAhB,SAAyBz9B,EAAmB2c,EAAY6f,EAAmBxK,EAClDuV,QAAA,IAAAA,IAAAA,EAAA,IACNvnC,EAAOQ,cAAcwc,SACbC,SAAS,EAAA+uB,aAC1B9uB,IAAIP,EAAI,IAAI,EAAA5c,MAAMwnC,GAAkB5qB,EAAI6f,EAAMxK,GACxD,EAUgB,EAAA0a,eAAhB,SAA+B1sC,EAAmBO,EAAai8B,EAAmBxK,GAC/DhyB,EAAOQ,cAAcwc,SACbC,SAAS,EAAAgvB,iBAC1B/uB,IAAI3c,EAAK,IAAI,EAAAR,MAAMQ,EAAKi8B,EAAMxK,GACxC,EAKa,EAAA+Z,cAAgB,gBAChB,EAAAC,YAAc,cACd,EAAAC,gBAAkB,iBAEhC,CAlSD,CAAU0B,IAAAA,EAAc,KAoSxB,UAAeA,mGC7Sf,cAiBa,EAAAO,sBAAwB,EAAA9sC,cAAcT,OACjD,WAAY,CAAC6C,MAAO,CAAC,MARvB,SAAkBR,EACAmrC,EAAiBC,EAAaC,GAC9C,IAAIC,EAAQtrC,EAAQrC,OAAO,QAAS,QAAS,CAAC,EAAG0tC,EAAK9xB,QAAQ,MAAO,MAErE,OADYvZ,EAAQrC,OAAO,OAAQ,SAAU,CAAC2tC,GAAQ,CAAC,iBAAkBH,EAASI,MAAOJ,GAE3F,mbCfA,cAqBa,EAAAK,yBAA2B,EAAAptC,cAAcT,OACpD,cAAe,CACb8tC,SAAU,CAACntC,MAdf,SAAqBtB,EAAmBC,WAChCyuC,EAAW1uC,EAAOW,OAAO,OAAQ,KAAOV,GACxC2C,EAAU5C,EAAO4C,QAAQ+rC,aAAe,CAAC,EACzC9oC,EAAM,CAAC,MACb,IAAiB,SAAC,QAAS,aAAc,SAAO,8BAAE,CAA7C,IAAMgkC,EAAE,QACPjnC,EAAQinC,KACVhkC,EAAI,OAASgkC,GAAMjnC,EAAQinC,sGAG/B7pC,EAAOU,KAAKV,EAAOW,OAAO,OAAQ,QAAS,GAAIkF,EAAK6oC,GACtD,GAKI9rC,QAAS,CACP+rC,YAAa,CACX1Z,MAAO,MACPlR,WAAY,GACZmkB,KAAM,KAGV1lC,SAAU,yGC/Bd,cACA,WACA,SAGa,EAAAosC,qBAAuB,EAAAxtC,cAAcT,OAChD,UAAW,CACTU,QAAS,CACPC,MAAO,CACL,mCACA,wBACA,oBACA,oBACA,4BACA,6BACA,4BACA,yBACA,yBAEFI,UAAW,CAAC,sBACZE,YAAa,CAAC,qBAEhBC,OAAK,KACH,EAAC,EAAAgtC,SAAS9sC,UAAUC,MAAO,EAAA6sC,YAE7BjsC,QAAS,CACPksC,QAAS,CACPC,YAAY,EACZC,UAAU,+oBC3BlB,eACA,cACA,cACA,cAGA,gFAaY,EAAAC,UAAoB,GA2EhC,QAxF8B,OAkB5B,sBAAW,mBAAI,KAAf,WACE,MAAO,WACT,kCAMA,sBAAI,qBAAM,KAAV,WACE,OAAO,CACT,kCAMO,YAAAxoB,MAAP,WAEE,IAAIzmB,EAASoD,KAAKJ,QAAQxC,cAAcR,OACpC6gB,EAAQzd,KAAKM,YAAY,SAC7B,GAAIN,KAAKM,YAAY,SAAU,CAC7B,IAAI,EAAM,YAAM+iB,MAAK,WACfyoB,EAAQlvC,EAAOW,OAAO,OAAQ,UAAW,CAAC,GACpB,CAACkf,OAAQ,EAAGX,MAAO,IAC/C9b,KAAKW,QACLX,KAAK1C,KAAKV,EAAOW,OAAO,OAAQ,UAAW,CAACuuC,KAE1CruB,GACFzd,KAAK1C,KAAK,IAAI,UAAUmgB,EAAO7gB,EAAOM,MAAMC,IACpBP,EAAOQ,eAAeC,OAEhD,IAAIA,EAAM,UAAUsmB,OAClB3jB,KAAKJ,QAAQxC,cACb4C,KAAKM,YAAY,QACjB,YAAM+iB,MAAK,WACXrjB,KAAKM,YAAY,SACjBN,KAAKM,YAAY,QAOnB,OADA,UAAS+hB,iBAAiBhlB,EAAK,OAAQ,QAAS,YACzCA,CACT,EAKO,YAAA+lB,UAAP,SAAiB3K,GAIf,GAAIA,EAAKjW,OAAO,QAA0B,IAAhBiW,EAAKsE,OAAc,CAC3C,IAAM1f,EAAMob,EAAK4K,QACbhmB,EAAImF,OAAO,OAAUnF,EAA6Bma,YAAcxX,KAAKM,YAAY,SACnFN,KAAK6rC,YAGT,IAAInoB,EAAQjL,EAAKnY,YAAY,aAC7B,OAAIojB,GAASA,IAAU1jB,KAAKM,YAAY,WAAaN,KAAK6rC,YACpD7rC,KAAKM,YAAY,WACnBN,KAAKW,QACE,CAAC,IAAI,IAEP,CAAC,CAACX,KAAKqjB,UAAU,GAEnB,YAAMD,UAAS,UAAC3K,EACzB,EAjFiB,EAAAszB,OAAS5qB,OAAOC,OAAOD,OAAO5jB,OAAO,EAAA+lB,SAASyoB,QAAS,CACtE,KAAQ,CAAC,uBAAwB,2CAkFrC,EAxFA,CAA8B,EAAAzoB,UAAjB,EAAAmoB,SAAAA,8JCPb,eACA,cACA,WACA,cACA,WAMA,IAAI,EAAA9tC,WAAW,mCAAoC,CACjD,SAAkB,WAClB,IAAkB,WAClB,KAAkB,CAAC,WAAY,IAAK,KAAK,GACzC,KAAkB,CAAC,WAAY,IAAK,KAAK,GACzC,KAAkB,CAAC,WAAY,IAAK,KAAK,GACzC,KAAkB,CAAC,WAAY,MAAO,OAAO,GAC7C,cAAkB,CAAC,WAAY,IAAK,KAAK,GACzC,IAAkB,CAAC,WAAY,IAAK,KAAK,GACzC,KAAkB,CAAC,WAAY,MAAO,OAAO,GAC7C,UAAkB,OAClB,KAAkB,OAClB,MAAkB,CAAC,WAAY,IAAK,KAAK,EAAM,IAC5B,EAAAwD,YAAY0G,QAAQmkC,cACvC,WAAkB,aAClB,KAAkB,aAClB,eAAkB,CAAC,aAAc,MAAO,OACxC,MAAkB,CAAC,aAAc,MAAO,OACxC,eAAkB,CAAC,aAAc,MAAO,OACxC,GAAkB,CAAC,aAAc,MAAO,QACvC,WAMH,IAAI,EAAA9oC,aAAa,oBAAqB,UAAaC,YAAa,CAC9D8oC,WAAe,CAAC,IAAU,CAACrkC,YAAa,EAAAzG,YAAY0G,QAAQua,OAC5D8pB,KAAe,CAAC,IAAU,CAACtkC,YAAa,EAAAzG,YAAY0G,QAAQua,OAC5D+pB,aAAe,IACfC,MAAe,IACfC,GAAe,IAEfC,cAAe,CAAC,IAAU,CAAC1kC,YAAa,EAAAzG,YAAY0G,QAAQua,SAG9D,IAAI,EAAAlf,aAAa,oBAAqB,UAAasE,YAAa,CAC9D+kC,KAAe,CAAC,IAAU,CAAC3kC,YAAa,EAAAzG,YAAY0G,QAAQ6B,SAC5D8iC,UAAe,CAAC,IAAU,CAAC5kC,YAAa,EAAAzG,YAAY0G,QAAQ6B,WAG9D,IAAI,EAAA/L,WAAW,wBAAyB,CACtC,OAAe,SACf,WAAe,aACf,GAAe,aACf,YAAe,CAAC,YAAa,EAAG,aAAc,SAC9C,GAAe,CAAC,YAAa,EAAG,aAAc,SAC9C,WAAe,CAAC,YAAa,EAAG,aAAc,SAC9C,GAAe,CAAC,YAAa,EAAG,aAAc,SAC9C,SAAe,CAAC,sBAAuB,WAAY,IAAK,KACxD,KAAe,CAAC,sBAAuB,WAAY,IAAK,KACxD,WAAe,CAAC,iBAAkB,iBAAkB,IAAK,KACzD,IAAe,CAAC,iBAAkB,iBAAkB,IAAK,KACzD,KAAe,CAAC,iBAAkB,yBAA0B,IAAK,KACjE,UAAe,CAAC,sBAAuB,YAAa,IAAK,MACxD,WAMH,IAAI,EAAAA,WAAW,6BAA8B,CAC3C,IAAoB,aACpB,KAAoB,aACpB,OAAoB,aACpB,KAAoB,aACpB,IAAoB,aACpB,KAAoB,aACpB,OAAoB,aACpB,KAAoB,aACpB,IAAoB,aACpB,KAAoB,aACpB,OAAoB,aACpB,KAAoB,aACpB,IAAoB,aACpB,KAAoB,aACpB,OAAoB,aACpB,KAAoB,aACpB,IAAoB,aACpB,KAAoB,aACpB,OAAoB,aACpB,KAAoB,aACpB,IAAoB,aACpB,KAAoB,aACpB,OAAoB,aACpB,KAAoB,aACpB,IAAoB,CAAC,cAAc,GACnC,IAAoB,aACpB,GAAoB,aACpB,IAAoB,CAAC,cAAc,GACnC,GAAoB,CAAC,cAAc,GAEnC,GAAoB,CAAC,cAAc,GACnC,MAAoB,CAAC,cAAc,EAAO,MAC1C,GAAoB,CAAC,cAAc,GACnC,MAAoB,CAAC,cAAc,EAAO,MAC1C,KAAoB,UACpB,IAAoB,CAAC,cAAc,GACnC,QAAoB,CAAC,QAAS,iBAC9B,IAAoB,CAAC,sBAAuB,YAAa,IAAK,IAAK,KACnE,eAAoB,CAAC,sBAAuB,aAC5C,GAAoB,CAAC,sBAAuB,aAC5C,GAAoB,CAAC,sBAAuB,eAC5C,GAAoB,CAAC,sBAAuB,eAAgB,KAC5D,GAAoB,CAAC,sBAAuB,eAAgB,KAE5D,KAAoB,CAAC,UAAW,OAChC,QAAoB,CAAC,UAAW,QAChC,QAAoB,CAAC,UAAW,UAChC,MAAoB,CAAC,UAAW,QAChC,OAAoB,CAAC,UAAW,OAChC,UAAoB,CAAC,UAAW,QAChC,UAAoB,CAAC,UAAW,UAChC,QAAoB,CAAC,UAAW,QAChC,QAAoB,CAAC,UAAW,OAChC,WAAoB,CAAC,UAAW,QAChC,WAAoB,CAAC,UAAW,UAChC,SAAoB,CAAC,UAAW,QAChC,SAAoB,CAAC,UAAW,OAChC,YAAoB,CAAC,UAAW,QAChC,YAAoB,CAAC,UAAW,UAChC,UAAoB,CAAC,UAAW,QAChC,OAAoB,CAAC,UAAW,OAChC,UAAoB,CAAC,UAAW,QAChC,UAAoB,CAAC,UAAW,UAChC,QAAoB,CAAC,UAAW,QAChC,UAAoB,CAAC,UAAW,OAChC,aAAoB,CAAC,UAAW,QAChC,aAAoB,CAAC,UAAW,UAChC,WAAoB,CAAC,UAAW,QAChC,YAAoB,CAAC,UAAW,OAChC,UAAoB,CAAC,UAAW,OAChC,iBAAoB,CAAC,UAAW,MAChC,YAAoB,CAAC,UAAW,OAChC,YAAoB,CAAC,UAAW,OAC/B,WAMH,IAAI,EAAAA,WAAW,4BAA6B,CAC1C,OAAc,SACd,GAAc,SACd,OAAc,CAAC,QAAS,gBACxB,GAAc,CAAC,QAAS,gBACxB,IAAc,CAAC,SAAU,QACzB,IAAc,CAAC,SAAU,MACzB,MAAc,CAAC,SAAU,QACzB,MAAc,CAAC,SAAU,QACzB,WAAc,CAAC,SAAU,aACzB,QAAc,CAAC,SAAU,UACzB,OAAc,CAAC,SAAU,SACzB,OAAc,CAAC,SAAU,SACzB,QAAc,CAAC,SAAU,UACzB,OAAc,CAAC,SAAU,SACzB,KAAc,CAAC,SAAU,OACzB,KAAc,CAAC,SAAU,OACzB,KAAc,CAAC,SAAU,OACzB,MAAc,CAAC,SAAU,QACzB,KAAc,CAAC,SAAU,OACzB,SAAc,CAAC,SAAU,WACzB,KAAc,CAAC,SAAU,OACzB,IAAc,CAAC,SAAU,MACzB,IAAc,CAAC,SAAU,MACzB,IAAc,CAAC,SAAU,OACxB,WAMH,IAAI,EAAAA,WAAW,4BAA6B,CAC1C,MAAwB,QACxB,SAAwB,CAAC,QAAS,+BAAgC,GAClE,aAAwB,CAAC,eAAgB,WACzC,GAAwB,CAAC,eAAgB,WACzC,UAAwB,CAAC,eAAgB,WACzC,IAAwB,CAAC,eAAgB,WACzC,WAAwB,CAAC,aAAc,EAAG,WAC1C,GAAwB,CAAC,aAAc,EAAG,WAC1C,kBAAwB,CAAC,aAAc,EAAG,aAC1C,YAAwB,CAAC,aAAc,EAAG,aAC1C,IAAwB,CAAC,aAAc,EAAG,aAC1C,qBAAwB,CAAC,aAAc,EAAG,WAC1C,YAAwB,CAAC,aAAc,EAAG,WAC1C,IAAwB,CAAC,aAAc,EAAG,YACzC,WAMH,IAAI,EAAAA,WAAW,yBAA0B,CACvC,IAAoB,MACpB,IAAoB,MACpB,aAAoB,SACpB,GAAoB,SACpB,OAAoB,SACpB,aAAoB,SACpB,KAAoB,SACpB,OAAoB,SACpB,GAAoB,SACpB,iBAAoB,cACpB,OAAoB,cACpB,GAAoB,cACpB,cAAoB,gBACpB,SAAoB,gBACpB,IAAoB,iBACnB,WAMH,IAAI,EAAAA,WAAW,wBAAyB,CACtC,eAAuB,iBACvB,KAAuB,iBACvB,MAAuB,CAAC,QAAS,aAAc,GAC/C,MAAuB,CAAC,QAAS,cAAe,GAChD,MAAuB,CAAC,QAAS,aAAc,GAC/C,MAAuB,CAAC,QAAS,aAAc,GAE/C,oBAAuB,CAAC,kBAAkB,GAC1C,MAAuB,CAAC,kBAAkB,GAC1C,OAAuB,CAAC,QAAS,cAAe,GAChD,OAAuB,CAAC,QAAS,eAAgB,GACjD,OAAuB,CAAC,QAAS,cAAe,GAChD,OAAuB,CAAC,QAAS,cAAe,GAChD,kBAAuB,CAAC,QAAS,cAAe,GAChD,KAAuB,CAAC,QAAS,cAAe,GAChD,MAAuB,CAAC,QAAS,eAAgB,GACjD,eAAuB,iBACvB,KAAuB,iBACvB,QAAuB,UACvB,KAAuB,UACvB,WAAuB,CAAC,QAAS,oBAAqB,GACtD,KAAuB,CAAC,QAAS,oBAAqB,GACtD,YAAuB,cACvB,KAAuB,cACvB,eAAkB,iBAClB,KAAQ,iBACR,mBAAsB,CAAC,kBAAkB,GACzC,MAAS,CAAC,kBAAkB,IAC3B,WAQH,IAAI,EAAAmI,eAAe,mBAAoB,UAAatH,YAAa,CAC/DqI,YAAe,CAAC,QAAS,KAAM,KAAM,KAAM,IAAK,UAAW,OAAQ,IAAK,IACvE,WAMH,IAAI,EAAAsY,SAAS,qBAAsB,CACjC,IAAK,CAAC,YAAa,EAAA7b,SAASid,KAC5B,IAAK,YACL,IAAK,aACJ,odCjRH,kBACA,cACA,aACA,WACA,cACA,cACA,WAIIksB,EAA8C,CAAC,EAY7CC,EAAmC,CACvC,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQDC,EAAgB,mBAatBF,EAAeG,SAAW,SAAShwC,EAAmBC,EACnB4mB,EAAoBC,EACpB5mB,EAAsB+vC,EACtB1qB,QAFA,IAAAsB,IAAAA,EAAA,UAAoB,IAAAC,IAAAA,EAAA,UACpB,IAAA5mB,IAAAA,GAAA,QAAsB,IAAA+vC,IAAAA,EAAA,SACtB,IAAA1qB,IAAAA,EAAA,IACjC,IAAI9I,IAAOvc,GAAMF,EAAO0c,UACpB8B,EAAOxe,EAAO0d,UACdqS,EAAW/vB,EAAO2d,EAClBuyB,EAAM,KACV,GAAa,OAAT1xB,EAAe,CAGjB,GAFAxe,EAAO2d,MACPuyB,EAAMlwC,EAAO4d,SACJrC,MAAMw0B,GAAQ,CAErB,IAAII,EAAQnwC,EAAOW,OAAO,OAAQ,QAGlC,OAFAX,EAAOU,KAAK,UAAUqmB,OAAO/mB,EAAOQ,cAAeqmB,EAAMspB,EAAOrpB,SAChE9mB,EAAO2d,EAAIoS,GAGbvR,EAAOxe,EAAO0d,UAEhB,IAAImD,EAAQivB,EAAMtxB,GAClB,GAAIte,GAAgB,MAATse,EACT,MAAM,IAAI,UAAS,gBAAiB,0BAA2Bxe,EAAOkgB,WAExE,IAAKW,EAIH,OAHIsvB,EAAQnwC,EAAOW,OAAO,OAAQ,QAClCX,EAAOU,KAAK,UAAUqmB,OAAO/mB,EAAOQ,cAAeqmB,EAAMspB,EAAOrpB,SAChE9mB,EAAO2d,EAAIoS,GAIb,GAAIkgB,EAAO,CACT,IAAMxvC,EAAMT,EAAOW,OAAO,QAAS,KAAM,CAAC8F,SAAU,EAAAC,SAASC,IAAKspC,GAC9D1qB,GACF,UAASjhB,aAAa7D,EAAK,cAAe8kB,GAE5CvlB,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAO,KAAMF,IAE9C,GAAa,MAAT+d,EAAc,CAChB,IAAI4xB,EAAWpwC,EAAOI,YAAYH,GAUlC,OATAue,EAAOte,EAAM2mB,EAAO,MACpBhG,EAAQ3gB,EAAM4mB,EAAQ,MAEtBspB,EAAW3zB,EAAO+B,EAAO,IAAM4xB,EAAW,IAAMvvB,EAC7CqvB,EACA,KAAOA,EAAM,IAAM1xB,EAAO,IAAM4xB,EAAhC,MAAwDF,EAAM,IAAMrvB,EACpE,SAAWrC,EAAO,IAAM4xB,EAAxB,WAAqDvvB,OACxD7gB,EAAOU,KAAK,IAAI,UAAU0vC,EAAUpwC,EAAOM,MAAMC,IACvBP,EAAOQ,eAAeC,OAG9CP,IACFse,EAAOqI,EACPhG,EAAQiG,GAEV9mB,EAAO2d,IACP3d,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAO,aACzB2c,cAAc,CAACuJ,KAAMrI,EAAMsI,MAAOjG,EAAOqvB,IAAKA,IAC7D,EAQAL,EAAeQ,KAAO,SAASrwC,EAAmBC,GAChD,IAAIwc,EAAOzc,EAAO0c,UACd8B,EAAOxe,EAAO0d,UAClB,GAAa,MAATc,EAAJ,CASA,GAAa,MAATA,GAAyB,MAATA,EAMlB,OALAxe,EAAO2d,SACP3d,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAO,aACzB2c,cACC,CAACuJ,KAAMrI,EAAMsI,MAAO,IACnBooB,MAAOzyB,EAAMoE,MAAO,uBAGrC,MAAM,IAAI,UAAS,gBAAiB,0BAA2B7gB,EAAOkgB,WAhBpE,IAAIhgB,EAAMF,EAAOI,YAAYH,GACzBsc,EAAU,YACXE,EAAO,WAAavc,EAAM,IAAMA,GADrB,6BAGdF,EAAOye,OAASze,EAAOye,OAAOC,MAAM,EAAG1e,EAAO2d,GAAKpB,EACjDvc,EAAOye,OAAOC,MAAM1e,EAAO2d,EAYjC,EAUAkyB,EAAeS,WAAa,SAAStwC,EAAmBC,EACnB4mB,EAAoBC,QAApB,IAAAD,IAAAA,EAAA,UAAoB,IAAAC,IAAAA,EAAA,KACvD,IAAIrK,EAAOzc,EAAO0c,UACd8B,EAAOxe,EAAO0d,UACdwyB,EAAM,KACV,GAAa,OAAT1xB,EAAe,CAGjB,GAFAxe,EAAO2d,MACPuyB,EAAMlwC,EAAO4d,SACJrC,MAAMw0B,GAEb,MAAM,IAAI,UAAS,gBAAiB,0BAA2B/vC,EAAOkgB,WAExE1B,EAAOxe,EAAO0d,UAEhB,GAAa,MAATc,EACF,MAAM,IAAI,UAAS,gBAAiB,0BAA2Bxe,EAAOkgB,WAExE,IAEIkwB,EAFOpwC,EAAOI,YAAYH,GAER,IADXD,EAAOI,YAAYH,GAE9BmwC,EAAW3zB,EAAOoK,EAAO,IAAMupB,EAAW,IAAMtpB,EAC7CopB,EACA,KAAOA,EAAM,IAAMrpB,EAAO,IAAMupB,EAAhC,MAAwDF,EAAM,IAAMppB,EACpE,SAAWD,EAAO,IAAMupB,EAAxB,WAAqDtpB,EACxD9mB,EAAOU,KAAK,IAAI,UAAU0vC,EAAUpwC,EAAOM,MAAMC,IACvBP,EAAOQ,eAAeC,MAClD,EAQA,IAAI8vC,EAA6B,CAAC,GAAM,IACpCC,EAA+B,CAAC,GAAM,KACtCC,EAA6B,CAAC,IAAO,KACrCC,EAA+B,CAAC,IAAO,KACvCC,EAA2B,CAAC,GAAM,IAOtC,SAASC,EAAQjhB,EAAekhB,GAC9B,OAAQlhB,GAASkhB,EAAM,IAAMlhB,GAASkhB,EAAM,EAC9C,CAcA,SAASC,EAAkB9tC,EAAsBhB,EACtB6D,EAAUif,GACnC,IAAI9kB,EAASgD,EAAQxC,cAAcR,OAC/B+kB,EAAQ,EAAAC,YAAYC,YAAYjiB,EAAShB,EAAM6D,EAAKif,GACpDisB,EAAejsB,EAAKksB,YAAY,GASpC,OARoB,IAAhBlsB,EAAKxhB,SAAiBtD,EAAOM,MAAMC,IAAI4c,MACvCnd,EAAOM,MAAMC,IAAI0wC,aAChBL,EAAQG,EAAMR,IAAaK,EAAQG,EAAMP,IACzCI,EAAQG,EAAMN,IAAaG,EAAQG,EAAMJ,IACxCC,EAAQG,EAAML,IAAe1wC,EAAOM,MAAMC,IAAI2wC,YAC/C,UAAS9sC,aAAa2gB,EAAO,YAChC,UAASzgB,aAAaygB,EAAO,cAAe/kB,EAAOM,MAAMC,IAAI0wC,YAExDlsB,CACT,CAQA8qB,EAAesB,WAAa,SAASnxC,EAAmBC,GACtD,IAAIwc,EAAOzc,EAAO0c,UACdxc,EAAMF,EAAOI,YAAYH,GACzBmxC,EAAWpxC,EAAOQ,cAAc2uB,YAAYmH,IAAI,SAChD+a,EAAUrxC,EAAOM,MAAMC,IAAI4c,YACxBnd,EAAOM,MAAMC,IAAI4c,KACxBnd,EAAOQ,cAAc2uB,YAAYwG,IAAI,QAASmb,GAC9C9wC,EAAOM,MAAMC,IAAI0wC,WAAax0B,EAAO,cAAgB,OACrDzc,EAAOM,MAAMC,IAAI2wC,WAAaz0B,EAC9B,IAAI6I,EAAO,IAAI,UAAUplB,EAAKF,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,MAClE4wC,IACFrxC,EAAOM,MAAMC,IAAI4c,KAAOk0B,UAEnBrxC,EAAOM,MAAMC,IAAI0wC,kBACjBjxC,EAAOM,MAAMC,IAAI2wC,WACxBlxC,EAAOQ,cAAc2uB,YAAYwG,IAAI,QAASyb,GAC9CpxC,EAAOU,KAAK4kB,EACd,EAWAuqB,EAAeyB,UAAY,SAAStxC,EAAmBC,EACvBsxC,OAAkB,wDAChD,IAAI90B,EAAOzc,EAAO0c,UACZxZ,EAAiB,GACvB,GAAIquC,EACF,IAAK,IAAI5zB,EAAIza,EAAKI,OAAQqa,EAAI4zB,EAAU5zB,IACtCza,EAAK7C,KAAKL,EAAOI,YAAYH,IAGjC,IAAIqB,EAAQ4iB,EAAMvI,KAAKc,EAAO,IAAM,IACpCnb,EAAQ,UAAUgmC,eAAetnC,EAAQkD,EAAM5B,GAC/CtB,EAAOye,OAAS,UAAU6pB,QAAQtoC,EAAQsB,EAAOtB,EAAOye,OAAOC,MAAM1e,EAAO2d,IAC5E3d,EAAO2d,EAAI,EACX,UAAU4qB,eAAevoC,EAC3B,EAYA,IAAIwxC,EAAoB,SACtBxxC,EAAmBgC,EAAc/B,EAAcwxC,EAC/CC,GACA,IAAI30B,EAAK,IAAI,UAAU00B,EAAUzxC,EAAOM,MAAMC,IACvBP,EAAOQ,eAAeC,MAC7CT,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAOqB,EAAM+a,IAC5C,IAAI6D,EAAO5gB,EAAO0d,UACdmD,EAAQivB,EAAMlvB,GAClB,GAAKC,EAAL,CAGA,IACI8wB,GAAoC,IAA1BD,EAAOnlB,QAAQ3L,GAC7B,GAAa,MAATA,EAAc,CAIhB,IAAItf,GAFKqwC,EAAU,YAAc,IAEZ,IAHf3xC,EAAOI,YAAYH,GAGQ,KADxB0xC,EAAU,aAAe,IAIlC,OAFA3xC,EAAOye,OAASnd,EAAQtB,EAAOye,OAAOC,MAAM1e,EAAO2d,QACnD3d,EAAO2d,EAAI,GAGRg0B,IAGL3xC,EAAO2d,IACP3d,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAO,aACzB2c,cAAc,CAACuJ,KAAMjG,EAAMkG,MAAOjG,MACjD,EAuTA,SAAS+wB,EAAa,EACAC,EAAgBC,OADhB,SAACC,EAAI,KAAEC,EAAI,KAAEC,EAAI,KAErC,OAAQJ,GAASC,EACf,yBAAkBC,EAAI,2BAAmBC,EAAI,2BAAmBC,EAAI,oBACnEJ,EAAQ,mBAAYE,EAAI,mBAAWC,EAAI,mBAAWC,EAAI,aACtD,yBAAkBF,EAAI,0BAAkBC,EAAI,yBAAiBC,EAAI,mBACtE,CAhTApC,EAAeqC,oBAAsB,SACnClyC,EAAmBC,EAAcwxC,OACjC,wDACAD,EAAkBxxC,EAAQ,KAAMC,EAAMwxC,EAAUC,EAClD,EAYA7B,EAAesC,eAAiB,SAC9BnyC,EAAmBC,EAAcwxC,OACjC,wDACAD,EAAkBxxC,EAAQ,MAAOC,EAAMwxC,EAAUC,EACnD,EAeA7B,EAAeuC,WAAa,SAASpyC,EAAmBC,EACnBssC,EAAqB1C,QAArB,IAAA0C,IAAAA,GAAA,QAAqB,IAAA1C,IAAAA,EAAA,IACxDA,EAAKA,GAAM5pC,EAAKye,MAAM,GACtB,IAAM2zB,EAAM9F,EAAMvsC,EAAOib,YAAYhb,GAAQ,KACzCQ,EAAMT,EAAOW,OAAO,QAAS,KAAM,CAAC8F,SAAU,EAAAC,SAASC,IAAKkjC,GAChE,GAAIwI,EAAK,CACP,IAAM7I,EAAM,IAAI,UAAU6I,EACAryC,EAAOM,MAAMC,IAAKP,EAAOQ,eAAeC,MAClEA,EAAMT,EAAOW,OAAO,OAAQ,OAAQ,CAACF,EAAK+oC,IAE5CxpC,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAO,KAAMF,IACnB,MAArBT,EAAO0d,YAGX1d,EAAO2d,IACP3d,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAO,aACzB2c,cAAc,CAACuJ,KAAM,IAAKC,MAAO,OAChD,EAcA+oB,EAAeyC,OAAS,SAAStyC,EAAmBC,EACnB6kB,GAC/B,IAEIvI,GAFOvc,EAAO0c,UAEI,GAAK,UAAY,WAD7BoI,GAAc9kB,EAAOI,YAAYH,IACc,WACzDD,EAAOye,OAASze,EAAOye,OAAOC,MAAM,EAAG1e,EAAO2d,GAAKpB,EACjDvc,EAAOye,OAAOC,MAAM1e,EAAO2d,EAC/B,EAcAkyB,EAAe0C,aAAe,SAASvyC,EAAmBC,EACnB8c,GACrC,IAAMy1B,EAASxyC,EAAOib,YAAYhb,GAC5BwyC,EAAkB,MAAVD,EAAiB,KAAOA,EAAS,IAAM,IAC/CE,EAA8B,MAArB1yC,EAAO0d,UAChB4W,EAA8B,MAArBt0B,EAAO0d,UAClBpc,EAAQyb,EAAK01B,EACjB,GAAMC,GAAUpe,EAOZA,GACFhzB,GAAStB,EAAOI,YAAYH,GACtBQ,EAAM,IAAI,UAAUa,EAAOtB,EAAOM,MAAMC,IACpBP,EAAOQ,eAAeC,MAChDT,EAAOU,KAAKV,EAAOW,OAAO,OAAQ,UAAW,CAACF,GAAM,CAACgG,SAAU,EAAAC,SAASC,QAG1E3G,EAAOU,KAAK,IAAI,UAAUY,EAAOtB,EAAOM,MAAMC,IACpBP,EAAOQ,eAAeC,OAChDT,EAAO2d,IACP3d,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAO,aACzB2c,cAAc,CAACuJ,KAAM,IAAKC,MAAO,YAlB9C,CACExlB,GAAStB,EAAOI,YAAYH,GAAM,IAAS,GAC3C,IAAIQ,EAAM,IAAI,UAAUa,EAAOtB,EAAOM,MAAMC,IACpBP,EAAOQ,eAAeC,MAC9CT,EAAOU,KAAKD,GAehB,EAgBAovC,EAAe8C,WAAa,SAAS3yC,EAAmBC,EACnB2yC,EAAgB71B,GACnD,IAAMN,EAAOzc,EAAO0c,UACd81B,EAASxyC,EAAOib,YAAYhb,GAC9B4yC,EAAa,EACX3vC,EAAO,GAEb,IADAA,EAAK7C,KAAKL,EAAOI,YAAYH,IACD,MAArBD,EAAO0d,WAAqBm1B,EAAaD,GAC9C1vC,EAAK7C,KAAKL,EAAOI,YAAYH,IAC7B4yC,IAEF,IAAIC,GAAS,EACTC,EAAS,IACTC,EAAS,IACTJ,EAAS,GAAK1vC,EAAKI,OAAS,GAC9ByvC,EAAS,MAAQ7vC,EAAKI,OAAS,GAAK,IACpCwvC,GAAS,GACU,MAAVN,IACLI,EAAS,GAAK1vC,EAAKI,OAAS,IAC9BwvC,GAAS,GAGXE,EADAD,EAAS,KAAOP,EAAS,KAO3B,IAJA,IAAMjqC,EAAOkU,EAAO,aAAe,SAC7BuC,EAAQ9b,EAAKI,OAAS,EAAIJ,EAAK,GAAK,GACpC+vC,EAAS/vC,EAAKI,OAAS,EAAIJ,EAAK,GAAKA,EAAK,GAC5CmkC,EAAO,GACF1pB,EAAI,EAAGzd,OAAG,EAAEA,EAAMgD,EAAKya,GAAIA,IAClC0pB,GAAQtqB,EAAK,IAAM7c,EAErB,IAAMoB,EAAQiH,EAAO,IAAMwU,EAAKg2B,EAAS/zB,EAA3BzW,KACNwU,EAAK,IAAMk2B,EAASD,EAAS,IAAM3L,EAAO,IAClDrnC,EAAOU,KAAK,IAAI,UAAUY,EAAOtB,EAAOM,MAAMC,IACpBP,EAAOQ,eAAeC,OACvB,MAArBT,EAAO0d,YACT1d,EAAO2d,IACP3d,EAAOU,KAAKV,EAAO8b,YAAYnb,OAAO,aACzB2c,cAAc,CAACuJ,KAAM,IAAKC,MAAO,IAAKgsB,OAAQA,KAE/D,EAaAjD,EAAepoB,IAAM,SAASznB,EAAmBC,GAC/C,IAAIizC,EAAUlzC,EAAO0c,UACjB2K,EAAMrnB,EAAOI,YAAYH,GACzBqnB,EAAM,GACN6rB,GAAS,EACTC,GAAU,EACd,GAAyB,OAArBpzC,EAAO0d,UAAoB,CAC7B,IAAI21B,EAAQrzC,EAAO2d,EACnB3d,EAAO2d,IAEP,IAAIhB,EAAK3c,EAAO4d,QACZ2pB,EAASvnC,EAAOs4B,OAAO,QAAS3b,GAChC4qB,GAA4B,QAAlBA,EAAOA,QACnB4L,GAAS,EACTE,EAAQrzC,EAAO2d,EACfy1B,EAAUpzC,EAAO0c,UACQ,MAArB1c,EAAO0d,UACT4J,EAAMtnB,EAAOI,YAAYuc,GAAI,IAE7B3c,EAAO2d,EAAI01B,EACXD,GAAU,IAGZpzC,EAAO2d,EAAI01B,EAGf,IAAI/xC,EAEFA,EADE6xC,EACOD,GAAWE,EACpB,mBAAY/rB,EAAG,mBAAWC,EAAG,aAC3B,yBAAkBD,EAAG,2BAAmBC,EAAG,oBAEpC4rB,GAAWE,EACpB,mBAAY/rB,EAAG,WAAY,yBAAkBA,EAAG,0BAAkBC,EAAG,KAEvEtnB,EAAOU,KAAK,IAAI,UAAUY,EAAOtB,EAAOM,MAAMC,IACpBP,EAAOQ,eAAeC,MAClD,EAQAovC,EAAenoB,IAAM,SAAS1nB,EAAmBC,GAC/C,IAAIwc,EAAOzc,EAAO0c,UACd4K,EAAMtnB,EAAOI,YAAYH,GACzBqB,EAAQmb,EAAO,iBAAU6K,EAAG,aAC9B,uBAAgBA,EAAG,oBACrBtnB,EAAOU,KAAK,IAAI,UAAUY,EAAOtB,EAAOM,MAAMC,IACpBP,EAAOQ,eAAeC,MAClD,EAQAovC,EAAeyD,OAAS,SAAStzC,EAAmBC,GAClD,IAAIwc,EAAOzc,EAAO0c,UACd2K,EAAMrnB,EAAOI,YAAYH,GACzBqnB,EAAM,KACe,MAArBtnB,EAAO0d,YACT4J,EAAMtnB,EAAOI,YAAYH,GAAM,IAEjC,IAAIqB,EAEFA,EADS,MAAPgmB,EACM7K,EACN,mBAAY4K,EAAG,mBAAWA,EAAG,aAC7B,yBAAkBA,EAAG,2BAAmBA,EAAG,oBAErC5K,EACN,mBAAY4K,EAAG,mBAAWC,EAAG,aAC7B,yBAAkBD,EAAG,2BAAmBC,EAAG,oBAE/CtnB,EAAOU,KAAK,IAAI,UAAUY,EAAOtB,EAAOM,MAAMC,IACpBP,EAAOQ,eAAeC,MAClD,EAQAovC,EAAe0D,OAAS,SAASvzC,EAAmBC,GAClD,IAAIwc,EAAOzc,EAAO0c,UACd4K,EAAMtnB,EAAOI,YAAYH,GACzBonB,EAAM,KACe,MAArBrnB,EAAO0d,YACT2J,EAAMrnB,EAAOI,YAAYH,GAAM,IAEjC,IAAIqB,EAEFA,EADS,MAAP+lB,EACM5K,EACN,iBAAU6K,EAAG,gCAAwBA,EAAG,WACxC,uBAAgBA,EAAG,gDAAwCA,EAAG,kBAExD7K,EACN,iBAAU6K,EAAG,gCAAwBD,EAAG,WACxC,uBAAgBC,EAAG,gDAAwCD,EAAG,kBAElErnB,EAAOU,KAAK,IAAI,UAAUY,EAAOtB,EAAOM,MAAMC,IACpBP,EAAOQ,eAAeC,MAClD,EAwBAovC,EAAe2D,YAAc,SAASxzC,EAAmBC,GACvD,IAAI4xC,EAAQ7xC,EAAO0c,UACfo1B,EAAQD,GAAS7xC,EAAO0c,UACxBq1B,EAAO/xC,EAAOI,YAAYH,GAC1B+xC,EAAO,KACc,MAArBhyC,EAAO0d,YACTs0B,EAAOhyC,EAAOI,YAAYH,GAAM,IAElC,IAAIqB,EAASywC,GAAQC,EACnBJ,EAAa,CAACI,EAAMD,EAAMC,GAAOH,EAAOC,GAEvCD,EAAQ,oBAAaE,EAAI,cACzB,0BAAmBA,EAAI,qBAC1B/xC,EAAOU,KAAK,IAAI,UAAUY,EAAOtB,EAAOM,MAAMC,IACpBP,EAAOQ,eAAeC,MAClD,EAQAovC,EAAe4D,cAAgB,SAASzzC,EAAmBC,GACzD,IAAM4xC,EAAQ7xC,EAAO0c,UACfo1B,EAAQD,GAAS7xC,EAAO0c,UAIxBpb,EAAQswC,EAAa,CAHd5xC,EAAOI,YAAYH,GACnBD,EAAOI,YAAYH,GACnBD,EAAOI,YAAYH,IACe4xC,EAAOC,GACtD9xC,EAAOU,KAAK,IAAI,UAAUY,EAAOtB,EAAOM,MAAMC,IACpBP,EAAOQ,eAAeC,MAClD,EAcAovC,EAAe6D,eAAiB,SAAS1zC,EAAmBC,EAAc0zC,GACxE,IAAMl3B,EAAOzc,EAAO0c,UAEdvB,EAAQw4B,EAAQ,cAAgB,QAClCzzC,EAAM,GACN2mB,EAAO,GACPC,EAAQ,GACZ,OALa9mB,EAAO0d,WAMpB,IAAK,IACHxd,EAAMF,EAAOI,YAAYH,GACzB,MACF,IAAK,IACHD,EAAO2d,IACPkJ,EAAOpK,EAAO,WAAa,IAC3BqK,EAAQrK,EAAO,WAAa,IAC5Bvc,EAAMF,EAAOqjB,QAAQpjB,EAAM,KAC3B,MACF,IAAK,IACHD,EAAO2d,IACPkJ,EAAO,IACPC,EAAQ,IACR5mB,EAAMF,EAAOqjB,QAAQpjB,EAAM,KAC3B,MACF,IAAK,IACHD,EAAO2d,IACPkJ,EAAO,IACPC,EAAQ,IACR5mB,EAAMF,EAAOqjB,QAAQpjB,EAAM,KAC3B,MACF,QACE4mB,EAAO,IACPC,EAAQ,IAGV,IAAMxlB,GAASulB,EAAO,SAAW,IAAMA,EACrC,WAAa1L,EAAQ,OAASjb,EAAM,SAAWib,EAAQ,KACtD0L,EAAO,UAAY,IAAMC,EAC5B9mB,EAAOU,KAAK,IAAI,UAAUY,EAAOtB,EAAOM,MAAMC,IACpBP,EAAOQ,eAAeC,MAClD,EAQAovC,EAAe+D,eAAiB,SAAS5zC,EAAmBC,GAC1D,IAAMC,EAAMF,EAAOI,YAAYH,GACzBioC,EAAOzsB,SAASvb,EAAK,IAC3B,GAAI2zC,MAAM3L,GACR,MAAM,IAAI,UAAS,gBAAiB,kBAEtC,GAAIA,GAAQ,EAGV,OAFAloC,EAAOye,OAAS,IAAMze,EAAOye,OAAOC,MAAM1e,EAAO2d,QACjD3d,EAAO2d,EAAI,GAKb,IAFA,IAAIm2B,EAAQryB,MAAMymB,GAAM6L,KAAK,KACzBC,EAAU,GACLr2B,EAAI,EAAGA,EAAIuqB,EAAMvqB,IAAK,CAC7B,IAAI7Z,EAAMgwC,EAAMp1B,QAChB5a,EAAI6Z,GAAK,IACTq2B,EAAQ3zC,KAAKyD,EAAI6X,KAAK,QAExB3b,EAAOye,OAASu1B,EAAQr4B,KAAK,SAAW3b,EAAOye,OAAOC,MAAM1e,EAAO2d,GACnE3d,EAAO2d,EAAI,CACb,EAQAkyB,EAAeoE,QAAU,SAASj0C,EAAmBC,GACnD,IAAMwc,EAAOzc,EAAO0c,UACdq1B,EAAO/xC,EAAOI,YAAYH,GAC1B+xC,EAAOhyC,EAAOI,YAAYH,GAC1BgyC,EAAOjyC,EAAOI,YAAYH,GAC5BuF,EAAIiW,SAASu2B,EAAM,IACnB9tC,EAAIuX,SAASw2B,EAAM,IACvB,GAAI4B,MAAMruC,IAAMquC,MAAM3vC,IAAMA,EAAEyvB,aAAese,GAAQzsC,EAAEmuB,aAAeqe,EACpE,MAAM,IAAI,UAAS,gBAAiB,kBAKtC,GAHAxsC,EAAIA,EAAI,EAAI,EAAIA,EAChBtB,EAAIA,EAAI,EAAI,EAAIA,GAEXuY,EAAM,CACT,IAAM3Y,EAAM2d,MAAMvd,GAAG6vC,KAAKhC,GAAMp2B,KAAK,OAC/B,EAAS8F,MAAMjc,GAAGuuC,KAAKjwC,GAAK6X,KAAK,SAGvC,OAFA3b,EAAOye,OAAS,EAASze,EAAOye,OAAOC,MAAM1e,EAAO2d,QACpD3d,EAAO2d,EAAI,GAGb,IAAIzT,EAAS,GACb,GAAU,IAAN1E,GAAiB,IAANtB,EAEbgG,EAAS6nC,OACJ,GAAU,IAANvsC,EAAS,CAEd1B,EAAM,GACV,IADA,IACS6Z,EAAI,EAAGA,GAAKzZ,EAAGyZ,IACtB7Z,EAAIzD,KAAK,UAAG0xC,EAAI,aAAKp0B,EAAC,MAExBzT,EAASpG,EAAI6X,KAAK,YACb,GAAU,IAANzX,EAAS,CAGlB,IADIJ,EAAM,GACD6Z,EAAI,EAAGA,GAAKnY,EAAGmY,IACtB7Z,EAAIzD,KAAK,UAAG0xC,EAAI,aAAKp0B,EAAC,MAExBzT,EAASpG,EAAI6X,KAAK,aACb,CAEL,IAAIu4B,EAAO,GACX,IAASv2B,EAAI,EAAGA,GAAKnY,EAAGmY,IAAK,CACvB7Z,EAAM,GACV,IADA,IACSkqC,EAAI,EAAGA,GAAK9pC,EAAG8pC,IACtBlqC,EAAIzD,KAAK,UAAG0xC,EAAI,cAAMp0B,EAAC,aAAKqwB,EAAC,OAE/BkG,EAAK7zC,KAAKyD,EAAI6X,KAAK,QAErBzR,EAASgqC,EAAKv4B,KAAK,SAErB3b,EAAOye,OAASvU,EAASlK,EAAOye,OAAOC,MAAM1e,EAAO2d,GACpD3d,EAAO2d,EAAI,CAEb,EAQAkyB,EAAesE,YAAc,SAASn0C,EAAmBC,GACvD,IAAMC,EAAMF,EAAOI,YAAYH,GAC3BiK,EAAShK,EAAIwe,MAAM,GACvB,OAAQxe,EAAI,IACZ,IAAK,IACHgK,GAAU,mBACV,MACF,IAAK,IACL,IAAK,IACHA,GAAU,mBACV,MACF,IAAK,IACL,IAAK,IACHA,GAAU,oBACV,MACF,IAAK,IACL,IAAK,IACHA,GAAU,oBAIZlK,EAAOye,OAASvU,EAASlK,EAAOye,OAAOC,MAAM1e,EAAO2d,GACpD3d,EAAO2d,EAAI,CACb,EASAkyB,EAAeuE,eAAiB,SAASp0C,EAAmBC,EACnBo0C,GACvC,GAAyB,MAArBr0C,EAAO0d,UAAX,CAGA,IAAI42B,EAASt0C,EAAO2d,EACL3d,EAAOI,YAAYH,GAClC,IAAIs0C,EAAOv0C,EAAO2d,EAClB3d,EAAO2d,EAAI22B,EAAS,EAIpB,IAHA,IAAIE,EAAW,GACXC,EAAU,GACVC,EAAW10C,EAAO2d,EACf+2B,EAAWH,GAAM,CACtB,IACEE,EAAUz0C,EAAOqjB,QAAQpjB,EAAM,KAC/B,MAAO00C,GACP30C,EAAO2d,EAAI42B,EACXC,EAASn0C,KAAKL,EAAOye,OAAOC,MAAMg2B,EAAUH,EAAO,IACnD,MAEF,GAAIv0C,EAAO2d,GAAK42B,EAAM,CACpBC,EAASn0C,KAAKL,EAAOye,OAAOC,MAAMg2B,EAAUH,IAC5C,MAEFG,EAAW10C,EAAO2d,EAClB62B,EAASn0C,KAAKo0C,GAEhBz0C,EAAOye,OAUT,SAAwB+1B,EAAoBH,GAG1C,IAFA,IAAI/wC,EAASkxC,EAASlxC,OAClB4G,EAAS,GACJyT,EAAI,EAAGA,EAAIra,EAAQqa,IAC1BzT,EAAO7J,KAAKohB,MAAM4yB,EAAO/wC,EAASqa,EAAIA,EAAI,GAAGhC,KAAK,KACtC,UAAY64B,EAAS72B,GAAK,KAExC,OAAOzT,EAAOyR,KAAK,QACrB,CAlBkBi5B,CAAeJ,EAAUH,GAAQr0C,EAAOye,OAAOC,MAAM61B,GACrEv0C,EAAO2d,EAAI,EACb,EAyBAkyB,EAAegF,UAAY,SAAS70C,EAAmBinB,EAAe6tB,GACpE,IAAMC,EAAK/0C,EAAOW,OAAO,QAAS,KAAM,CAACye,UAAU,GAAQ6H,GACrDpL,EAAO7b,EAAO8b,YAAYnb,OAAO,MAAOo0C,GAC5Cz3B,cAAc,CAAC03B,UAAW/tB,IAC5BjnB,EAAOU,KAAKmb,EACd,EAQAg0B,EAAeoF,OAAS,SAASj1C,EAAmB+f,GAClD,IAAIqwB,EAAWpwC,EAAO4C,QAAQksC,QAAQE,SACpC,yBAA2B,oBAC7B,OAAOhvC,EAAOU,KAAK,IAAI,UAAU0vC,EAAUpwC,EAAOM,MAAMC,IACvBP,EAAOQ,eAAeC,MACzD,EAQAovC,EAAeqF,MAAQ,SAASl1C,EAAmB+f,GACjD,IAAIqwB,EAAWpwC,EAAO4C,QAAQksC,QAAQC,WAAa,IAAM,WACzD,OAAO/uC,EAAOU,KAAK,IAAI,UAAU0vC,EAAUpwC,EAAOM,MAAMC,IACvBP,EAAOQ,eAAeC,MACzD,EAMAovC,EAAe9vC,MAAQ,UAAYA,MAEnC8vC,EAAesF,QAAU,UAAYA,QAErCtF,EAAepuB,MAAQ,UAAYA,MAGnC,UAAeouB,ihBCl7Bf,cAGA,WACA,aACA,cACA,WACA,cACA,WAEa,EAAAuF,eAAiB,CAS5BC,cAAA,SAAcr1C,EAAmBs1C,GAC/B,GAAkB,QAAdA,IAAwB,EAAA9c,qBAAqBlC,IAAIgf,GACnD,MAAM,IAAI,UAAS,cAAe,4BAA6BA,GAEjE,IAAMlzC,EAASpC,EAAO4C,QAAQ2yC,WACxB3yC,EAAUR,EAAOozC,aAAaF,GACpC,QAAiBG,IAAZ7yC,IAA0BR,EAAOszC,sBAAoC,IAAZ9yC,EAC5D,MAAM,IAAI,UAAS,qBAAsB,yCAA0C0yC,GAErF,OAAO,CACT,EAUAK,aAAA,SAAa31C,EAAmBs1C,EAAmBM,SAC3CxzC,EAASpC,EAAO4C,QAAQ2yC,WACxB3yC,EAAUR,EAAOozC,aAAaF,IAAc,CAAC,EAC7CO,EAASjzC,EAAQq6B,eAAe2Y,MAAY,IAAAE,UAASlzC,EAAQgzC,IAAWhzC,EAAQgzC,GAAU,KAChG,IAAc,IAAVC,GAA8B,OAAVA,IAAmBzzC,EAAO2zC,oBAChD,MAAM,IAAI,UAAS,oBAAqB,uCAAwCH,GAElF,KAAuE,QAAlE,EAAe,QAAdN,EAAsBt1C,EAAO4C,QAAU5C,EAAO4C,QAAQ0yC,UAAW,eAAErY,eAAe2Y,IACtF,KAAkB,QAAdN,EACI,IAAI,UAAS,mBAAoB,0BAA2BM,GAE5D,IAAI,UAAS,mBAAoB,uCAAwCA,EAAQN,GAG3F,OAAO,CACT,EAWAU,YAAA,SAAYvoB,EAAoBwoB,EAAoBC,EAAiBvmB,GACnE,OAAOA,CACT,GAIF,IAAMwmB,EAAgB,IAAI,EAAAp1C,WAAW,aAAc,CACjDq1C,WAAY,cACX,CAODlM,WAAA,SAAWlqC,EAAmBC,WACtBq1C,EAAYt1C,EAAOib,YAAYhb,IAAS,MACxC2C,EAAU,UAAU4vB,cAAcxyB,EAAOI,YAAYH,IACrDmC,EAASpC,EAAO4C,QAAQ2yC,WAC9B,GAAKnzC,EAAOizC,cAAcr1C,EAAQs1C,OAClC,IAAkB,QAAA/wB,OAAOuU,KAAKl2B,IAAQ,8BAAE,CAAnC,IAAMirC,EAAG,QACRzrC,EAAOuzC,aAAa31C,EAAQs1C,EAAWzH,MAC1B,QAAdyH,EAAsBt1C,EAAO4C,QAAU5C,EAAO4C,QAAQ0yC,IAAYzH,GACjEzrC,EAAO4zC,YAAYh2C,EAAQs1C,EAAWzH,EAAKjrC,EAAQirC,uGAG3D,IAoBW,EAAAwI,wBAA0B,EAAAj1C,cAAcT,OACnD,aAAc,CACZU,QAAS,CAACC,MAAO,CAAC,eAClBc,OAZJ,SAA0BK,EAA8BC,GACtD,IAAM4zC,EAAU5zC,EAAIC,aAAaqa,SAASsZ,IAAI,SAASgC,OAAO,WAC1Dge,IACFH,EAAcj5B,IAAI,UAAW,IAAI,EAAAnd,MAAM,UAAWu2C,EAAQC,QAC1DJ,EAAcj5B,IAAI,UAAW,IAAI,EAAAnd,MAAM,UAAW,UAAYA,MACvB,CAAC,oCAAqC,EAAG,MAEpF,EAMIyC,SAAU,EACVI,QAAS,CACP2yC,WAAY,CACVF,cAAe,EAAAD,eAAeC,cAC9BM,aAAc,EAAAP,eAAeO,aAC7BK,YAAa,EAAAZ,eAAeY,YAC5BN,qBAAqB,EACrBK,qBAAqB,EACrBP,cAAc,IAAAlc,YAAW,CAKvBjF,IAAK,CACHmiB,SAAS,EACTC,aAAa,EACbC,SAAS,EACTC,SAAS,EACTz0C,MAAM,EACN00C,WAAW,EACXC,WAAW,EACXhe,QAAQ,EACRK,cAAc,GAKhBqc,YAAY,EACZuB,UAAU,EACVR,SAAS,EACTS,cAAc,EACdC,WAAW,imBClJrB,cAEA,WAMI5M,EAAQ,EAQZ,SAAgB6M,EAAgB70C,EAA6BM,GAM3D,IAAMR,EAAOQ,EAAIC,aAAaC,QAAQV,KACzB,SAATA,GAAmBE,EAAOF,KAAK+6B,eAAe/6B,IAChD,EAAAmoC,YAAYntB,IAAIhb,EAAME,EAAOF,KAAKA,IAMpC,IASA,yEA6BA,QA7BwB,OAKf,YAAAwxB,aAAP,SAAoBluB,GAClB,OAAO9C,EAAIC,aAAaC,QAAQo0C,UAAUE,OAAO1xC,EACnD,EAKO,YAAAglC,UAAP,SAAiB7lC,GACf,OAAOjC,EAAIC,aAAaC,QAAQo0C,UAAUryC,IAAIA,EAChD,EAKO,YAAAwyC,SAAP,SAAgBtN,GACd,OAAOnnC,EAAIC,aAAaC,QAAQo0C,UAAUnN,GAAGA,EAC/C,EAKO,YAAAuN,UAAP,SAAiBvN,EAAYlvB,GAC3B,OAAOjY,EAAIC,aAAaC,QAAQo0C,UAAUjY,IAAI8K,EAAIlvB,EACpD,EACF,EA7BA,CATiB,EAAA0vB,YAAY1pC,OAAO+B,EAAIC,aAAaC,QAAQV,MAAMuoC,aA8C7DC,EAAU,iBADhBN,EAKA,EAAAC,YAAYntB,IAAIwtB,EAASC,GACzBjoC,EAAIC,aAAaC,QAAQV,KAAOwoC,CAClC,CAlEA,oBAuEa,EAAA2M,uBAAyB,EAAAj2C,cAAcT,OAClD,YAAa,CACXyB,OAAQ,CAAC60C,EAAiB,IAC1Br0C,QAAS,CACPo0C,UAAW,CACTE,OAAQ,SAAC1xC,GAAc,OAAAA,EAAEmuB,UAAF,EACvBhvB,IAAQ,SAACA,GAAgB,UAAMA,EAAM,GAAZ,EACzBklC,GAAQ,SAACA,GAAe,iBAAaA,EAAGttB,QAAQ,MAAO,IAA/B,EACxBwiB,IAAQ,SAAC8K,EAAYlvB,GAAiB,OAAAA,EAAO,IAAM28B,mBAAmBzN,EAAhC,uGC/F9C,cACA,SAGa,EAAA0N,sBAAwB,EAAAn2C,cAAcT,OACjD,WAAY,CACVU,QAAS,CAACC,MAAO,CAAC,kLCLtB,eACA,WACA,WAEA,cACA,WAMA,IAAI,EAAAP,WAAW,kBAAmB,CAGhC,gBAAuB,CAAC,SAAU,KAClC,eAAuB,CAAC,SAAU,KAClC,qBAAwB,CAAC,SAAU,KACnC,cAAuB,CAAC,SAAU,MAClC,QAAuB,CAAC,SAAU,KAClC,cAAuB,CAAC,SAAU,KAClC,eAAuB,CAAC,SAAU,KAClC,WAAuB,CAAC,SAAU,KAClC,WAAuB,CAAC,SAAU,KAClC,cAAuB,CAAC,SAAU,KAClC,aAAuB,CAAC,SAAU,KAClC,WAAuB,CAAC,SAAU,KAClC,WAAuB,CAAC,SAAU,KAClC,eAAuB,CAAC,SAAU,KAClC,YAAuB,CAAC,SAAU,KAClC,SAAuB,CAAC,SAAU,KAClC,gBAAuB,CAAC,SAAU,KAClC,iBAAuB,CAAC,SAAU,KAClC,cAAuB,CAAC,SAAU,KAClC,mBAAuB,CAAC,SAAU,KAClC,iBAAuB,CAAC,SAAU,KAClC,iBAAuB,CAAC,SAAU,KAClC,kBAAuB,CAAC,SAAU,KAClC,cAAuB,CAAC,SAAU,KAClC,eAAuB,CAAC,SAAU,KAClC,YAAuB,CAAC,SAAU,KAClC,eAAuB,CAAC,SAAU,KAClC,iBAAuB,CAAC,SAAU,KAGlC,aAAuB,CAAC,SAAU,KAClC,eAAuB,CAAC,SAAU,KAClC,eAAuB,CAAC,SAAU,KAClC,eAAuB,CAAC,SAAU,KAClC,kBAAuB,CAAC,SAAU,KAClC,gBAAuB,CAAC,SAAU,KAClC,aAAuB,CAAC,SAAU,KAClC,aAAuB,CAAC,SAAU,KAGlC,SAAuB,CAAC,SAAU,KAClC,SAAuB,CAAC,SAAU,KAClC,kBAAuB,CAAC,SAAU,KAClC,aAAuB,CAAC,SAAU,KAClC,WAAuB,CAAC,SAAU,KAClC,SAAuB,CAAC,SAAU,KAClC,SAAuB,CAAC,SAAU,KAClC,WAAuB,CAAC,SAAU,KAClC,YAAuB,CAAC,SAAU,KAClC,SAAuB,CAAC,SAAU,KAClC,UAAuB,CAAC,SAAU,KAClC,SAAuB,CAAC,SAAU,KAClC,aAAuB,CAAC,SAAU,KAClC,QAAuB,CAAC,SAAU,KAClC,QAAuB,CAAC,SAAU,KAGlC,aAAuB,CAAC,SAAU,KAClC,iBAAuB,CAAC,SAAU,KAClC,aAAuB,CAAC,SAAU,MAClC,cAAuB,CAAC,SAAU,KAClC,eAAuB,CAAC,SAAU,KAClC,gBAAuB,CAAC,SAAU,KAClC,cAAuB,CAAC,SAAU,KAGlC,WAAuB,CAAC,SAAU,KAClC,cAAuB,CAAC,SAAU,KAClC,UAAuB,CAAC,SAAU,KAClC,cAAuB,CAAC,SAAU,KAClC,aAAuB,CAAC,SAAU,KAClC,cAAuB,CAAC,SAAU,KAClC,gBAAuB,CAAC,SAAU,KAClC,oBAAuB,CAAC,SAAU,KAClC,gBAAuB,CAAC,SAAU,KAClC,WAAuB,CAAC,SAAU,KAClC,eAAuB,CAAC,SAAU,KAClC,mBAAuB,CAAC,SAAU,KAClC,gBAAuB,CAAC,SAAU,KAClC,WAAuB,CAAC,SAAU,KAClC,kBAAuB,CAAC,SAAU,KAKlC,WAAuB,CAAC,SAAU,KAClC,WAAuB,CAAC,SAAU,KAClC,cAAuB,CAAC,SAAU,KAClC,cAAuB,CAAC,SAAU,KAClC,WAAuB,CAAC,SAAU,KAClC,WAAuB,CAAC,SAAU,KAGlC,YAAuB,CAAC,SAAU,KAClC,WAAuB,CAAC,SAAU,KAClC,QAAuB,CAAC,SAAU,KAClC,cAAuB,CAAC,SAAU,KAClC,oBAAuB,CAAC,SAAU,KAClC,cAAuB,CAAC,SAAU,KAClC,SAAuB,CAAC,SAAU,KAClC,QAAuB,CAAC,SAAU,KAClC,UAAuB,CAAC,SAAU,KAClC,OAAuB,CAAC,SAAU,KAClC,QAAuB,CAAC,SAAU,KAClC,YAAuB,CAAC,SAAU,KAClC,eAAuB,CAAC,SAAU,KAClC,gBAAuB,CAAC,SAAU,KAClC,OAAuB,CAAC,SAAU,KAClC,eAAuB,CAAC,SAAU,KAClC,SAAuB,CAAC,SAAU,KAClC,kBAAuB,CAAC,SAAU,KAClC,kBAAuB,CAAC,SAAU,KAClC,UAAuB,CAAC,SAAU,KAClC,gBAAuB,CAAC,SAAU,KAClC,YAAuB,CAAC,SAAU,KAGlC,SAAuB,CAAC,SAAU,KAClC,SAAuB,CAAC,SAAU,KAClC,aAAuB,CAAC,SAAU,KAElC,YAAuB,CAAC,SAAU,KAGlC,iBAAuB,CAAC,SAAU,IAAU,EAAAwD,YAAY0G,QAAQusC,UAEhE,mBAAuB,CAAC,SAAU,IAAU,EAAAjzC,YAAY0G,QAAQusC,UAGhE,iBAAuB,CAAC,SAAU,IAAK,EAAAjzC,YAAY0G,QAAQusC,UAC3D,gBAAuB,CAAC,SAAU,IAAK,EAAAjzC,YAAY0G,QAAQusC,UAC3D,gBAAuB,CAAC,SAAU,IAAK,EAAAjzC,YAAY0G,QAAQusC,UAC3D,kBAAuB,CAAC,SAAU,IAAK,EAAAjzC,YAAY0G,QAAQusC,UAC3D,iBAAuB,CAAC,SAAU,IAAK,EAAAjzC,YAAY0G,QAAQusC,UAC3D,iBAAuB,CAAC,SAAU,IAAK,EAAAjzC,YAAY0G,QAAQusC,UAC3D,gBAAuB,CAAC,SAAU,IAAK,EAAAjzC,YAAY0G,QAAQusC,UAC3D,kBAAuB,CAAC,SAAU,IAAK,EAAAjzC,YAAY0G,QAAQusC,UAC3D,kBAAuB,CAAC,SAAU,IAAK,EAAAjzC,YAAY0G,QAAQusC,UAC3D,iBAAuB,CAAC,SAAU,IAAK,EAAAjzC,YAAY0G,QAAQusC,WAC1D,CACDC,OAAQ,SAASz3C,EAAmBC,EAAcwd,EAAWN,GAC3D,GAAInd,aAAkB,EAAA03C,WAAY,CAChC,IAAKv6B,EAEH,YADA,EAAAw6B,kBAAkBF,OAAOz3C,EAAQC,EAAMwd,GAGzCzd,EAAO43C,WAET53C,EAAOU,KAAK,UAAUm3C,aACpB73C,EAAQyd,EAAGN,EAAO,CAACnS,YAAamS,GAAQ,CAAC,GAC7C,2NCnKF,cACA,cACA,WACA,WACA,WACA,WAsDA,SAASsO,EAAazrB,EAAmB8kB,EAAcgzB,EAAyB9sC,GAC9E,IAAM5I,EAASpC,EAAOQ,cAAck1B,YAAYY,IAAI,cAIpD,OAHMt2B,aAAkB,EAAA03C,aACtBt1C,EAAO21C,UAAY/3C,GAEd,CAAC,IAAK,EAAA03C,WAAW5yB,EAAM9Z,EAAc,CAACA,YAAW,GAAI,CAAC,EAAG5I,EAAOO,aAAcm1C,GAAQr3C,MAC/F,CAzDA,SAKa,EAAAu3C,sBAAwB,EAAA52C,cAAcT,OAAO,YAAa,CACrEX,OAAQ,OACRqB,QAAS,CACPK,UAAW,CAAC,UAAW,gBACvBJ,MAAO,CAAC,gBAEVmtC,SAAU,CAIR/sC,UAAW,SAAC1B,EAAoByd,GAC9Bzd,EAAO8kB,MAAQrH,CACjB,EAQAnc,MAAO,SAACtB,EAAoBC,GAC1B,IAAM83C,EAAY/3C,EAAO+3C,UACnBz2C,EAAQy2C,EAAUzf,OAAO,QAASr4B,GACpCqB,GAASA,EAAMi1C,QAAU,EAAAoB,kBAAkB53C,OAC7CC,EAAOmyB,MAAM,YAAa,oCAAqC,KAAOlyB,GAExE83C,EAAUE,MAAM,QAAS,CAACj4C,EAAQC,GACpC,GAEF4B,OAAK,KACH,EAAC,EAAAq2C,UAAUn2C,UAAUC,MAAO,EAAAk2C,UAC5B,EAAC,EAAAC,SAASp2C,UAAUC,MAAO,EAAAm2C,SAC3B,EAAC,EAAAC,QAAQr2C,UAAUC,MAAO,EAAAo2C,QAC1B,EAAC,EAAAC,UAAUt2C,UAAUC,MAAO,EAAAq2C,eAwBnB,EAAAC,wBAA0B,EAAAl3C,cAAcT,OAAO,aAAc,CAKxEyB,OAAA,SAAOK,EAA8BC,GAKnC,IAAM61C,EAAW,IAAI,EAAAC,oBAAoB91C,EAAIC,aAAaC,QAAQ61C,WAAWC,SAAU,CAAC,MAAO,SAC/FH,EAASp2C,OACT,IAAMQ,EAAe,IAAI,UAAa41C,EAAU,IAChD51C,EAAaC,QAAUF,EAAIC,aAAaC,QACxC21C,EAASn2C,OAAOM,GAChB,EAAA2nC,YAAYsO,QAAQJ,EAASr2C,MAC7BS,EAAaT,KAAO,EAAAmoC,YAAYuO,aAChCj2C,EAAaT,KAAK1B,cAAgBmC,EAOlCA,EAAa+yB,YAAchzB,EAAIC,aAAa+yB,YAC5C/yB,EAAa+yB,YAAYC,IAAI,aAAc,CAAChzB,aAAY,EAAED,IAAG,EAAEq1C,UAAW,OAC1Ep1C,EAAaC,QAAQ6oB,aAAeA,CACtC,EACAlD,cAAe,CAAC,SAACnD,GAKf,IAAMhjB,EAASgjB,EAAKA,KAAKsQ,YAAYY,IAAI,cACzCl0B,EAAOO,aAAawsB,YAAY0pB,cAAcz2C,EAAOM,IAAIo2C,WAC3D,GACAl2C,QAAS,CACP61C,WAAY,CACVC,SAAU,CAAC,mFC9GjB,eACA,WACA,WACA,WAKA,IAAI,EAAAn2B,SAAS,eAAgB,CAC3B,EAAc,OACd,IAAc,UACd,IAAc,eACd,EAAc,eACd,IAAc,YACd,IAAc,YACd,IAAc,QACd,IAAc,QACd,KAAc,QACd,KAAc,QACd,KAAc,QACd,IAAc,QACd,IAAc,YACd,IAAc,aACd,IAAc,YACd,IAAc,cACb,EAAAo1B,mBAKH,IAAI,EAAA52C,WAAW,cAAe,CAC5B,IAAc,OAEd,EAAc,YACd,EAAc,YACd,IAAc,YACd,IAAc,YACd,IAAc,YACd,IAAc,YACd,IAAc,YACd,IAAc,YACd,KAAc,YAEd,IAAc,CAAC,SAAU,KACzB,IAAc,CAAC,SAAU,KACzB,IAAc,CAAC,SAAU,KACzB,IAAc,CAAC,SAAU,KACzB,IAAc,CAAC,SAAU,KACzB,IAAc,CAAC,SAAU,KACzB,IAAc,CAAC,SAAU,KACzB,IAAc,CAAC,SAAU,KACzB,IAAc,CAAC,SAAU,KACzB,EAAc,CAAC,SAAU,KACzB,EAAc,CAAC,SAAU,KAEzBg4C,KAAc,OACdC,GAAc,CAAC,UAAW,EAAAz0C,YAAY0G,QAAQ6B,QAC9CmsC,IAAc,CAAC,UAAW,EAAA10C,YAAY0G,QAAQC,QAC9CguC,SAAc,CAAC,UAAW,EAAA30C,YAAY0G,QAAQusC,UAC9C2B,IAAc,CAAC,UAAW,EAAA50C,YAAY0G,QAAQmkC,cAC9CgK,GAAc,CAAC,UAAW,eAC1BC,GAAc,CAAC,UAAW,EAAA90C,YAAY0G,QAAQua,MAC9C8zB,OAAc,CAAC,UAAW,EAAA/0C,YAAY0G,QAAQ0C,cAC9C4rC,IAAc,CAAC,UAAW,EAAAh1C,YAAY0G,QAAQ4a,QAC9C2zB,KAAc,CAAC,UAAW,EAAAj1C,YAAY0G,QAAQ0a,SAC9C8zB,GAAc,CAAC,UAAW,EAAAl1C,YAAY0G,QAAQ8a,WAC9C2zB,GAAc,CAAC,UAAW,EAAAn1C,YAAY0G,QAAQ0uC,WAE9CC,KAAc,CAAC,UAAW,IAC1BC,KAAc,CAAC,UAAW,IAC1BC,WAAc,CAAC,UAAW,IAC1BnG,MAAc,CAAC,UAAW,KAC1BoG,WAAc,CAAC,UAAW,GAC1BC,MAAc,CAAC,UAAW,KAC1BC,MAAc,CAAC,UAAW,MAC1BC,MAAc,CAAC,UAAW,MAC1BC,KAAc,CAAC,UAAW,MAC1BC,KAAc,CAAC,UAAW,MAE1BC,IAAc,CAAC,QAAS,gBAAiB,GACzCC,WAAc,CAAC,QAAS,YAAa,GACrCC,OAAc,CAAC,QAAS,YAAa,GACrCC,OAAc,CAAC,QAAS,YAAa,GACrCC,OAAc,CAAC,QAAS,YAAa,GACrCC,OAAc,CAAC,QAAS,YAAa,GACrCC,OAAc,CAAC,QAAS,YAAa,GACrCC,OAAc,CAAC,QAAS,YAAa,GAErCC,OAAc,CAAC,SAAU,KACzBC,QAAc,CAAC,SAAU,KACzBC,EAAc,CAAC,SAAU,KAEzB,IAAc,CAAC,SAAU,EAAA7zC,UAAU8zC,eACnC,IAAc,CAAC,SAAU,EAAA9zC,UAAU+zC,iBACnC,IAAc,CAAC,SAAU,EAAA/zC,UAAU+zC,iBACnC,IAAc,CAAC,SAAU,EAAA/zC,UAAUkC,gBACnC,IAAc,CAAC,SAAU,EAAAlC,UAAUg0C,uBACnCC,QAAc,CAAC,SAAU,IACzBC,KAAc,CAAC,SAAU,GACzBC,MAAc,CAAC,SAAU,GACzBC,UAAc,CAAC,SAAU,EAAAp0C,UAAU8zC,eACnCO,aAAc,CAAC,SAAU,EAAAr0C,UAAUg0C,uBAEnCM,MAAc,QACdC,OAAc,QACdC,KAAc,QACdC,MAAc,QACdtsB,OAAc,QACdusB,MAAc,QACd1vB,KAAc,OACd2vB,KAAc,CAAC,QACfC,MAAc,CAAC,OAAQ,SAEvB7mB,MAAc,gBACdC,UAAc,gBACdE,SAAc,gBACdC,UAAc,gBACdsJ,KAAc,gBACd3jB,MAAc,gBACdmjB,MAAc,gBACdS,MAAc,gBACdmK,QAAc,gBAEdgT,IAAc,CAAC,aAAa,GAC5Bn0C,MAAc,CAAC,aAAa,IAE3B,EAAA+vC,0MC9HH,kBACA,WAEA,cAKa,EAAAA,kBAAoB,CAM/BqE,QAAA,SAAQh8C,EAAoBi8C,GAC1B,KAAOj8C,EAAO2d,EAAI3d,EAAOye,OAAOnb,QAA6C,OAAnCtD,EAAOye,OAAO5B,OAAO7c,EAAO2d,IACpE3d,EAAO2d,IAET3d,EAAO2d,GACT,EAMAyS,KAAA,SAAKpwB,EAAoB6mB,GACvB7mB,EAAO43C,WAOP,IANA,IACI5J,EAAGvwB,EADHE,EAAI3d,EAAO2d,EAEX2W,EAAS,EAIL7W,EAAIzd,EAAO0d,WAEjB,OADAswB,EAAIhuC,EAAO2d,IACHF,GAER,IAAK,KAEQ,MADAzd,EAAO4d,UACFH,EAAI,OACtB,IAAK,IAKH,GAAe,IAAX6W,GAAgBzN,IAASpJ,EAAG,CAC9B,IAAMrb,EAASpC,EAAO+3C,UAAUv3C,cAC1BC,EAAM,IAAK,UAAUT,EAAOye,OAAO3B,OAAOa,EAAGqwB,EAAIrwB,GAAI3d,EAAOM,MAAMC,IAAK6B,GAAS3B,MAEtF,YADAT,EAAOk8C,SAASz7C,GAGlB,MAEF,IAAK,IACH6zB,IACA,MAEF,IAAK,IACY,IAAXA,GACFt0B,EAAOmyB,MAAM,wBAAyB,2CAExCmC,IAIJt0B,EAAOmyB,MAAM,oBAAqB,uCACpC,EAMAgqB,aAAA,SAAan8C,EAAoByd,GAC/Bzd,EAAOmyB,MAAM,eAAgB,iCAAoC1U,EACnE,EAMA2+B,UAAA,SAAUp8C,EAAoByd,GAC5Bzd,EAAOmyB,MAAM,YAAa,4BAA+B1U,EAC3D,EAMA4+B,UAAA,SAAUr8C,EAAoBi8C,GAK5B,IAAM17C,EAAMP,EAAOM,MAAMC,IACzBP,EAAOs8C,SAASj8C,KAAKE,GACrBP,EAAOM,MAAMC,IAAMgkB,OAAOC,OAAO,CAAC,EAAGjkB,EACvC,EAMAg8C,WAAA,SAAWv8C,EAAoBi8C,GAIzBj8C,EAAOs8C,SAASh5C,QAClBtD,EAAO43C,WACP53C,EAAOM,MAAMC,IAAMP,EAAOs8C,SAASpsB,OAEnClwB,EAAOmyB,MAAM,wBAAyB,0CAE1C,EAMAqqB,UAAA,SAAUx8C,EAAoByd,GAIxBzd,EAAOye,OAAO5B,OAAO7c,EAAO2d,KAAOF,GACrCzd,EAAO8kB,MAAQ,IACf9kB,EAAO2d,KAEP3d,EAAO8kB,MAAQ,GAEnB,EAMA23B,WAAA,SAAWz8C,EAAoByd,GAIzBzd,EAAOye,OAAO5B,OAAO7c,EAAO2d,KAAOF,GACrCzd,EAAO8kB,MAAQ,IACf9kB,EAAO2d,KAEP3d,EAAO8kB,MAAQ,GAEnB,EAMAtD,MAAA,SAAMxhB,EAAoBi8C,GACxBj8C,EAAO8kB,MAAQ,GACjB,EAMAg3B,MAAA,SAAM97C,EAAoBi8C,GAExB,IADAj8C,EAAO8kB,MAAQ,IACR9kB,EAAO0d,UAAUnC,MAAM,OAAOvb,EAAO2d,GAC9C,EAMA++B,UAAA,SAAU18C,EAAoBC,GAC5BD,EAAO8kB,MAAQ7kB,EAAK6c,OAAO,EAC7B,EAOA26B,OAAA,SAAOz3C,EAAoB+f,EAAetC,GACxCzd,EAAO8kB,MAAQrH,CACjB,EAOA8D,OAAA,SAAOvhB,EAAoBC,EAAcwd,GAIvC,IAAM9C,EAAO3a,EAAOa,SAASZ,GACvB2mC,EAAS5mC,EAAOW,OAAO,QAAS,KAAM,CAAC,EAAG8c,GAChDzd,EAAO28C,cAAc/V,GACrB5mC,EAAOU,KAAKV,EAAOW,OAAO,OAAQ,QAAS,CAACga,EAAMisB,IACpD,EAMAgW,KAAA,SAAK58C,EAAoBC,GAIvB,IAAMslB,EAA4C,gBAAjCvlB,EAAOM,MAAMC,IAAIyK,YAAgC,SAAW,cAC7EhL,EAAOU,KAAKV,EAAO68C,aAAa58C,EAAM,CAAC+K,YAAaua,IACtD,EAOAu3B,QAAA,SAAQ98C,EAAoB+f,EAAewF,GACzCvlB,EAAO43C,WACP53C,EAAOM,MAAMC,IAAIyK,YAAcua,CACjC,EAOAw3B,QAAA,SAAQ/8C,EAAoB+f,EAAemoB,GACzCloC,EAAO43C,WACP53C,EAAOM,MAAMC,IAAIy8C,SAAW9U,CAC9B,EAMA+U,cAAA,SAAcj9C,EAAoBC,GAChC,IAAM62C,EAAW92C,EAAOQ,cAAck1B,YAAYY,IAAI,YAChDyhB,EAAY/3C,EAAO+3C,UACzB93C,EAAOA,EAAKye,MAAM,GAQlB,IAAMpd,EAAQy2C,EAAUzf,OAAO,QAASr4B,GACxC,IAAKqB,GAAUw1C,GAAYx1C,EAAMi1C,QAAUO,EAASoG,SAAW,CAE7D,GADAnF,EAAUE,MAAM,QAAS,CAACF,EAAW93C,KAChCqB,EAAO,QACZ,IAAA67C,YAAWC,QAAQC,WAErBtF,EAAUE,MAAM,QAAS,CAACj4C,EAAQC,GACpC,EAKAF,MAAO,UAAYA,MACnB2hB,OAAQ,UAAYA,OACpB47B,MAAO,UAAYA,MACnBpxB,KAAM,UAAYA,KAClB2vB,KAAM,UAAYA,KAClBv6B,UAAW,UAAYA,g+CCnQzB,kBACA,aAEA,cAEA,WAEA,cACA,WAKA,cAwCE,WAAYwD,EAAcvkB,EAAcC,EAA6Bs3C,GAArE,MACE,YAAMhzB,EAAMvkB,EAAKC,IAAc,YAC/B,EAAKs3C,MAAQA,GACf,CAgIF,OA3KgC,OAyB9B,sBAAW,wBAAS,KAApB,WACE,OAAO10C,KAAK5C,cAAck1B,YAAYY,IAAI,cAAcyhB,SAC1D,kCAKA,sBAAW,mBAAI,KAAf,WACE,OAAO30C,KAAK20C,UAAU71C,IACxB,kCAgBO,YAAAzB,IAAP,WACE,OAAsB,MAAd2C,KAAK00C,MACL10C,KAAKzC,OAAO,OAAQ,SAAUyC,KAAKI,MAAO,CAACuY,cAAc,EAAOyD,YAAapc,KAAK00C,QAC5D,IAAtB10C,KAAKI,MAAMF,OAAeF,KAAKI,MAAM,GAAKJ,KAAKzC,OAAO,OAAQ,OAAQyC,KAAKI,MACrF,EAKO,YAAAiqC,MAAP,WACErqC,KAAK0hB,KAAO,GACZ1hB,KAAKI,MAAQ,GACbJ,KAAKk5C,SAAW,GAChB,YAAM7O,MAAK,UACb,EAKO,YAAAmK,SAAP,WACE,GAAIx0C,KAAK0hB,KAAM,CACb,IAAM9Z,EAAc5H,KAAK9C,MAAMC,IAAIyK,YAC7B8Z,EAAO,UAAU+yB,aAAaz0C,KAAMA,KAAK0hB,KAAM9Z,EAAc,CAACA,YAAW,GAAI,CAAC,GACpF5H,KAAK0hB,KAAO,GACZ1hB,KAAK1C,KAAKokB,GAEd,EAKO,YAAApkB,KAAP,SAAYD,GAIV,GAHI2C,KAAK0hB,MACP1hB,KAAKw0C,WAEHn3C,aAAe,EAAA03C,SACjB,OAAO,YAAMz3C,KAAI,UAACD,GAEhBA,aAAe,EAAA43C,UACjBj1C,KAAK9C,MAAMC,IAAIi2B,UAAYpzB,KAAK9C,MAAMC,IAAI00B,MAGxCx0B,aAAe,EAAA88C,kBACjBn6C,KAAKu5C,cAAcl8C,GACnB2C,KAAKI,MAAMnD,KAAKI,GAEpB,EAQO,YAAAy7C,SAAP,SAAgBz7C,WACRF,EAAM6C,KAAK9C,MAAMC,IAClBE,EAAImF,OAAO,aACdnF,EAAM2C,KAAKzC,OAAO,OAAQ,UAAW,CAACF,SAExC,IAAmB,SAAC,WAAY,cAAY,8BAAE,CAAzC,IAAM,EAAI,QACTF,EAAI,KAAUE,EAAIq3B,WAAW0lB,YAAY,KACtC/8C,EAAIg9C,SAAYh9C,EAAImF,OAAO,YAC9BnF,EAAM2C,KAAKzC,OAAO,OAAQ,SAAU,CAACF,KAEvC,UAAS6D,aAAa7D,EAAK,EAAMF,EAAI,uGAGrCE,EAAI4Z,aACN5Z,EAAM2C,KAAKzC,OAAO,OAAQ,OAAQF,EAAI6Z,aAExClX,KAAKI,MAAMnD,KAAKI,EAClB,EAQO,YAAAk8C,cAAP,SAAqBl8C,WACbF,EAAM6C,KAAK9C,MAAMC,IACvB,GAAKE,EAAIg9C,YACT,IAAmB,SAAC,WAAY,YAAa,gBAAc,8BAAE,CAAxD,IAAM,EAAI,QACTl9C,EAAI,KAAUE,EAAIq3B,WAAW0lB,YAAY,IAC3C,UAASl5C,aAAa7D,EAAK,EAAMF,EAAI,sGAG3C,EAQO,YAAAs8C,aAAP,SAAoB58C,EAAcM,GAGhC,OAAO,IAAKm3C,EAFCt0C,KAAKhD,YAAYH,GAC9BM,EAAMgkB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGphB,KAAK9C,MAAMC,KAAMA,GACrB6C,KAAK5C,eAAgBC,KACzD,EAOO,YAAAI,SAAP,SAAgBZ,GACd,OAAO,IAAKy3C,EAAWt0C,KAAKhD,YAAYH,GAAOmD,KAAK9C,MAAMC,IAAK6C,KAAK5C,eAAgBC,KACtF,EASO,YAAA0xB,MAAP,SAAa0X,EAAYsE,OAAiB,wDACxC,MAAM,IAAI,UAAQ,WAAR,UAAQ,UAACtE,EAAIsE,GAAO,EAAKjrC,IAAI,IACzC,EAEF,EA3KA,CAAgC,WAAnB,EAAAw0C,WAAAA,6MCbb,cAGA,aACA,WAEA,cACA,cACA,WAGW,EAAAgG,eAA8C,CAAC,EAE1D,IAAIC,EAAkE,CAAC,EAOvE,EAAAD,eAAAE,QAAyB,SAAS59C,EAAmBC,GACnD,IAAI49C,EAAK79C,EAAOib,YAAYhb,GACxB69C,EAAU,KACV3gC,EAAO,KACP0gC,IACEA,EAAGthC,QAAQ,KAAM,IACjBhB,MAAM,8CACRuiC,EAAUD,EAAGthC,QAAQ,KAAM,IAAIhT,MAAM,KACrC4T,EAAOnd,EAAOib,YAAYhb,IAE1Bkd,EAAO0gC,GAGX,IAAIr4C,EAAI,UAAUoX,WAAW5c,EAAOI,YAAYH,IAAOsc,QAAQ,MAAO,KACtE,IAAK/W,EAAE+V,MAAM,4BACX,MAAM,IAAI,UAAS,aAAc,0CAEnC,IAAIwiC,EAAItiC,SAASjW,EAAE+V,MAAM,MAAQ,IAAM/V,EAAIA,GACtCm4C,EAAaI,GAEN5gC,IACVA,EAAOwgC,EAAaI,GAAG,IAFvBJ,EAAaI,GAAK,CAAC,IAAK,IAAK5gC,EAAM4gC,GAIjCD,IACFH,EAAaI,GAAG,GAAK3tB,KAAKsH,MAA+B,IAAzBvB,WAAW2nB,EAAQ,KACnDH,EAAaI,GAAG,GAAK3tB,KAAKsH,MAA+B,IAAzBvB,WAAW2nB,EAAQ,MAErD,IAAIv4B,EAAUvlB,EAAOM,MAAMC,IAAI4c,KAC3BtX,EAAe,CAAC,EAChBsX,GACFwgC,EAAaI,GAAG,GAAKl4C,EAAIm4C,WAAa7gC,EAAKZ,QAAQ,KAAM,KACrDgJ,IACEA,EAAQhK,MAAM,UAChB1V,EAAIo4C,WAAa,QAEf14B,EAAQhK,MAAM,oBAChB1V,EAAIq4C,UAAY,YAGX34B,IACT1f,EAAImF,YAAcua,GAEpB,IAAID,EAAOtlB,EAAOW,OAAO,QAAS,QAASkF,GAAK,IAAAs4C,SAAQ34C,IACxD,UAAS3B,YAAYyhB,EAAM,WAAW,GACtCtlB,EAAOU,KAAK4kB,EACd,EAGA,IAAI,EAAAvkB,WAAW,UAAW,CAACgoC,QAAS,WAAY,EAAA2U,gBAGnC,EAAAU,qBAAuB,EAAAh9C,cAAcT,OAChD,UAAW,CAACU,QAAS,CAACC,MAAO,CAAC,6GCxEhC,cAEA,WACA,WAmBA,IAAI,EAAAgF,aAAa,WAVjB,SAA2BtG,EAAmBk+B,GAC5C,IAAMr4B,EAAMq4B,EAAMpG,YAAc,CAAC,EACjCjyB,EAAImF,YAAc,EAAAzG,YAAY0G,QAAQ6B,OACtC,IAAMwY,EAAOtlB,EAAOW,OAAO,QAAS,KAAMkF,EAAKq4B,EAAME,MACrDp+B,EAAOU,KAAK4kB,EACd,GAK+C,CAC7C+4B,QAAgB,IAChBC,OAAgB,IAChBC,QAAgB,IAChBC,QAAgB,IAChBC,UAAgB,IAChBC,OAAgB,IAChBC,MAAgB,IAChBC,QAAgB,IAChBC,OAAgB,IAChBC,QAAgB,IAChBC,SAAgB,IAChBC,KAAgB,IAChBC,KAAgB,IAChBC,KAAgB,IAChBC,UAAgB,IAChBC,KAAgB,IAChBC,MAAgB,IAChBC,QAAgB,IAChBC,MAAgB,IAChBC,UAAgB,IAChBC,MAAgB,IAChBC,MAAgB,IAChBC,MAAgB,IAChBC,QAAgB,IAChBC,aAAgB,IAChBC,WAAgB,IAChBC,QAAgB,IAChBC,SAAgB,IAChBC,WAAgB,IAChBC,SAAgB,IAEhBC,QAAgB,IAChBC,QAAgB,IAChBC,QAAgB,IAChBC,SAAgB,IAChBC,KAAgB,IAChBC,KAAgB,IAChBC,QAAgB,IAChBC,UAAgB,IAChBC,MAAgB,IAChBC,MAAgB,IAChBC,QAAgB,MAIL,EAAAC,qBAAuB,EAAA1/C,cAAcT,OAChD,UAAW,CACTU,QAAS,CAACC,MAAO,CAAC,kNCtEtB,cACA,WAEA,WAEA,aAIW,EAAAy/C,YAA2C,CAAC,EAQvD,EAAAA,YAAAC,KAAmB,SAAShhD,EAAmBC,GAC7C,IAAMwd,EAAIzd,EAAO0d,UACXza,IAAUjD,EAAO2d,EACvB,GAAU,KAANF,EACF,MAAM,IAAI,UAAS,gBAAiB,0BAA2Bxd,GAEjE,KAAOD,EAAO2d,EAAI3d,EAAOye,OAAOnb,QACzBtD,EAAOye,OAAO5B,OAAO7c,EAAO2d,KAAOF,GACxCzd,EAAO2d,IAET,GAAI3d,EAAO2d,IAAM3d,EAAOye,OAAOnb,OAC7B,MAAM,IAAI,UAAS,iBACA,sCACAtD,EAAOkgB,WAE5B,IAAM4E,EAAO9kB,EAAOye,OAAOC,MAAMzb,EAAOjD,EAAO2d,GAAGpB,QAAQ,KAAM,KAChEvc,EAAO2d,IACP3d,EAAOU,KAAKV,EAAOW,OAAO,QAAS,QACT,CAACqK,YAAa,EAAAzG,YAAY0G,QAAQ0uC,WAClC70B,GAC5B,EAGA,IAAI,EAAA/jB,WAAW,OAAQ,CAACkgD,KAAM,QAAS,EAAAF,aAG1B,EAAAG,kBAAoB,EAAA9/C,cAAcT,OAC7C,OAAQ,CAACU,QAAS,CAACC,MAAO,CAAC,0BCnC7BijB,OAAO48B,eAAeC,EAAS,aAAc,CAAEzxB,OAAO,IACtDyxB,EAAQnW,kBAAe,EACvB,IAAIA,EAAgB,WAChB,SAASA,IACT,CAIA,OAHAA,EAAaC,MAAQ,SAAUmW,EAAOhpB,GAClC,OAAOipB,EAAcC,GAAGC,EAAcD,GAAGF,EAAOhpB,GAAgB,QAATA,EAC3D,EACO4S,CACX,CAPmB,GASnB,SAASwW,EAAyBC,GAC9B,IAAIC,EAASC,EACTC,EAAc,CAAC,EACnB,IAAKF,KAAWD,EACZ,IAAKE,KAASF,EAAEC,GAAU,CACtB,IAAIG,EAAaF,EAAMr4C,MAAM,KAC7Bm4C,EAAEC,GAASC,GAAOE,WAAaA,EAC/B,IAAK,IAAInkC,EAAI,EAAGA,EAAImkC,EAAWx+C,OAAQqa,IACnCkkC,EAAYC,EAAWnkC,IAAM,EAErC,CAEJ,IAAKgkC,KAAWD,EACZ,IAAKE,KAASF,EAAEC,GAEZ,IADIG,EAAaJ,EAAEC,GAASC,GAAOE,YAAc,GACxCnkC,EAAI,EAAGA,EAAImkC,EAAWx+C,OAAQqa,IAAK,CACxC,IAAIuvB,EAAIwU,EAAEC,GAASC,GACnB1U,EAAE6U,QAAU,GAAG98C,OAAOioC,EAAE6U,SACxB,IAAK,IAAIC,EAAI,EAAGA,EAAI9U,EAAE6U,QAAQz+C,OAAQ0+C,IACN,iBAAjB9U,EAAE6U,QAAQC,KACjB9U,EAAE6U,QAAQC,GAAK,CAAEC,MAAO/U,EAAE6U,QAAQC,KAI1C,IADA,IAAIE,EAAeP,EAAQp4C,MAAM,KACxBykC,EAAI,EAAGA,EAAIkU,EAAa5+C,OAAQ0qC,IACrC,GAAsB,MAAlB8T,EAAWnkC,GAAY,CACvB,IAAImpB,OAAI,EACR,IAAKA,KAAK+a,EACNA,EAAY/a,GAAGzmC,KAAK,CAAEshD,QAASO,EAAalU,GAAImU,KAAMjV,GAE9D,MAEI2U,EAAYC,EAAWnkC,IAAItd,KAAK,CAAEshD,QAASO,EAAalU,GAAImU,KAAMjV,GAG9E,CAGR,OAAO2U,CACX,CAxCAT,EAAQnW,aAAeA,EA0CvB,IAAIuW,EAAgB,CAChBD,GAAI,SAAUF,EAAOe,GACjB,IAAKf,EACD,MAAO,QAEU5L,IAAjB2M,IACAA,EAAe,MAEnB,IAMIC,EANAT,EAAQ,IACRU,EAAS,CACbA,iBAA6B,GAG7BjB,GADAA,GADAA,EAAQA,EAAM9kC,QAAQ,MAAO,MACfA,QAAQ,8BAA+B,MACvCA,QAAQ,YAAa,OAInC,IAFA,IAAIgmC,EAAW,GACXC,EAAS,KACA,CACLH,IAAchB,GACdkB,EAAW,GACXF,EAAYhB,GAGZkB,IAEJ,IAAIvX,EAAUwW,EAAciB,cAAcL,GACtCtb,EAAIkE,EAAQ6W,YAAYD,IAAU5W,EAAQ6W,YAAY,KAC1Da,EAAoB,IAAK,IAAI/kC,EAAI,EAAGA,EAAImpB,EAAExjC,OAAQqa,IAAK,CACnD,IAAIglC,EAAUnB,EAAcoB,SAASC,OAAO/b,EAAEnpB,GAAGgkC,QAASN,GAC1D,GAAIsB,EAAS,CAET,IADA,IAAIR,EAAOrb,EAAEnpB,GAAGwkC,KACPW,EAAK,EAAGA,EAAKX,EAAKJ,QAAQz+C,OAAQw/C,IAAM,CAC7C,IAAIpB,OAAI,EACR,GAAI1W,EAAQ+X,QAAQZ,EAAKJ,QAAQe,GAAIb,OACjCP,EAAI1W,EAAQ+X,QAAQZ,EAAKJ,QAAQe,GAAIb,OAAOK,EAAQK,EAAQE,OAAQV,EAAKJ,QAAQe,GAAIlN,YAEpF,KAAI4L,EAAcuB,QAAQZ,EAAKJ,QAAQe,GAAIb,OAI5C,KAAM,CAAC,aAAc,iCAAmCE,EAAKJ,QAAQe,GAAIb,MAAQ,KAHjFP,EAAIF,EAAcuB,QAAQZ,EAAKJ,QAAQe,GAAIb,OAAOK,EAAQK,EAAQE,OAAQV,EAAKJ,QAAQe,GAAIlN,OAI/F,CACA4L,EAAcwB,YAAYR,EAAQd,EACtC,CAEA,GADAE,EAAQO,EAAKc,WAAarB,IACtBP,EAAM/9C,OAAS,GASf,OAAOk/C,EALP,GAHKL,EAAKe,UACN7B,EAAQsB,EAAQQ,YAEfhB,EAAKiB,WACN,MAAMV,CAMlB,CACJ,CACA,GAAIH,GAAY,EACZ,KAAM,CAAC,aAAc,+BAE7B,CACJ,EACAS,YAAa,SAAU5/B,EAAGE,GACtB,GAAIA,EACA,GAAI7B,MAAMsX,QAAQzV,GACd,IAAK,IAAI+/B,EAAK,EAAGA,EAAK//B,EAAEhgB,OAAQ+/C,IAC5BjgC,EAAE/iB,KAAKijB,EAAE+/B,SAIbjgC,EAAE/iB,KAAKijB,EAGnB,EACAs/B,SAAU,CACNA,SAAU,CACN,MAAS,KACT,KAAQ,KACR,MAAS,KACT,MAAS,MACT,UAAW,kBACX,OAAU,OACV,MAAO,SACP,EAAK,KACL,GAAM,MACN,GAAM,MACN,QAAW,uQACX,UAAW,yNACX,+BAAgC,+BAChC,iCAAkC,mCAClC,+BAAgC,kMAChC,OAAU,UACV,QAAS,sDACT,qBAAsB,+BACtB,mBAAoB,SAAUvB,GAC1B,IAAI9lC,EAAQ8lC,EAAM9lC,MAAM,6MACxB,OAAIA,GAASA,EAAM,GACR,CAAEsnC,OAAQtnC,EAAMmD,MAAM,GAAIykC,UAAW9B,EAAMvkC,OAAOvB,EAAM,GAAGjY,SAE/D,IACX,EACA,cAAe,4GACf,yBAA0B,SAAU+9C,GAChC,IAAIj+B,EAAIo+B,EAAcoB,SAASU,kBAAkBjC,EAAO,GAAI,yBAA0B,IAAK,IAC3F,GAAIj+B,GAAKA,EAAE+/B,UAAU5nC,MAAM,qBACvB,OAAO6H,EAEX,IAAI7H,EAAQ8lC,EAAM9lC,MAAM,qCACxB,OAAIA,EACO,CAAEsnC,OAAQtnC,EAAM,GAAI4nC,UAAW9B,EAAMvkC,OAAOvB,EAAM,GAAGjY,SAEzD,IACX,EACA,6BAA8B,yBAC9B,MAAO,kBACP,MAAO,kBACP,KAAM,WACN,IAAK,QACL,IAAK,OACL,SAAU,kCACV,MAAO,oBACP,WAAY,SAAU+9C,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,KAAM,GAAI,GAAI,IAAM,EAC1G,WAAY,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,IAAK,IAAK,IAAK,GAAK,EAC1G,KAAM,qBACN,WAAY,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,IAAK,iBAAkB,IAAK,GAAI,GAAI,IAAK,IAAK,IAAI,EAAO,EAC/I,SAAU,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,IAAK,iBAAkB,IAAK,GAAK,EACrH,OAAQ,sBACR,QAAS,aACT,IAAM,KACN,WAAY,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,KAAM,GAAI,GAAI,IAAM,EAC1G,WAAY,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,IAAK,IAAK,IAAK,GAAK,EAC1G,GAAM,yBACN,WAAY,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,IAAK,iBAAkB,IAAK,GAAI,GAAI,IAAK,IAAK,IAAI,EAAO,EAC/I,SAAU,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,IAAK,iBAAkB,IAAK,GAAK,EACrH,OAAQ,qBACR,KAAM,+BACN,MAAO,cACP,KAAM,QACN,QAAS,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,GAAI,IAAK,IAAK,GAAK,EACtG,UAAW,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,IAAK,GAAI,GAAI,IAAM,EACxG,QAAS,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,GAAI,IAAK,IAAK,GAAK,EACtG,qBAAsB,SAAUA,GAC5B,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,KAAM,GAAI,GAAI,OAASG,EAAcoB,SAASU,kBAAkBjC,EAAO,IAAK,GAAI,GAAI,IAC/I,EACA,MAAO,SACP,IAAK,aACL,IAAK,MACL,KAAM,iCACN,KAAM,cACN,oBAAqB,uCACrB,IAAK,KACL,cAAe,+BACf,SAAY,kEACZ,YAAe,2CACf,gBAAiB,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,UAAW,GAAI,GAAI,IAAM,EACpH,KAAM,yDACN,IAAO,eACP,UAAW,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,IAAK,GAAI,GAAI,IAAM,EACxG,mBAAoB,uBACpB,MAAO,iBACP,UAAW,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,GAAI,iBAAkB,IAAK,GAAI,GAAI,IAAK,IAAK,IAAI,EAAO,EAC7I,QAAS,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,GAAI,iBAAkB,IAAK,GAAK,EACnH,OAAQ,4BACR,MAAO,gCACP,QAAW,sDACX,OAAU,UACV,gBAAiB,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,UAAW,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAM,EACtI,mBAAoB,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,aAAc,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAM,EAC5I,oBAAqB,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,cAAe,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAM,EAC9I,sBAAuB,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,gBAAiB,GAAI,GAAI,KAAM,IAAK,GAAI,GAAI,IAAM,EACnJ,iBAAkB,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,WAAY,GAAI,GAAI,IAAM,EACtH,wBAAyB,SAAUA,GAC/B,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,WAAY,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,MACzFG,EAAcoB,SAASU,kBAAkBjC,EAAO,UAAW,KAAM,GAAI,UAAW,IAAK,GAAI,GAAI,IACrG,EACA,cAAe,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,QAAS,GAAI,GAAI,IAAM,EAChH,cAAe,SAAUA,GAAS,OAAOG,EAAcoB,SAASU,kBAAkBjC,EAAO,QAAS,GAAI,GAAI,IAAM,EAChH,WAAc,mDACd,eAAgB,oDAChB,OAAQ,iEACR,OAAU,SAAUA,GAChB,IAAI9lC,EAEJ,GADAA,EAAQ8lC,EAAM9lC,MAAM,4LAEhB,MAAO,CAAEsnC,OAAQtnC,EAAM,GAAI4nC,UAAW9B,EAAMvkC,OAAOvB,EAAM,GAAGjY,SAEhE,IAAI8f,EAAIo+B,EAAcoB,SAASU,kBAAkBjC,EAAO,GAAI,IAAK,IAAK,IACtE,OAAIj+B,IACA7H,EAAQ6H,EAAEy/B,OAAOtnC,MAAM,uFAEZ,CAAEsnC,OAAQtnC,EAAM,GAAI4nC,UAAW9B,EAAMvkC,OAAOvB,EAAM,GAAGjY,SAG7D,IACX,EACA,QAAW,SAAU+9C,GAAS,OAAOj+C,KAAa,OAAEi+C,EAAQ,EAC5D,gBAAiB,8BACjB,SAAY,SAAUA,GAClB,GAAIA,EAAM9lC,MAAM,gBACZ,OAAO,KAEX,IAAIA,EAAQ8lC,EAAM9lC,MAAM,uGACxB,OAAIA,EACO,CAAEsnC,OAAQtnC,EAAM,GAAI4nC,UAAW9B,EAAMvkC,OAAOvB,EAAM,GAAGjY,SAEzD,IACX,EACA,gBAAmB,2CACnB,IAAK,cACL,KAAM,gBACN,IAAK,eAETggD,kBAAmB,SAAUjC,EAAOkC,EAASC,EAASC,EAASC,EAASC,EAAUC,EAAUC,EAAUC,EAAUC,GAC5G,IAAIC,EAAS,SAAU3C,EAAOM,GAC1B,GAAuB,iBAAZA,EACP,OAA+B,IAA3BN,EAAM90B,QAAQo1B,GACP,KAEJA,EAGP,IAAIsC,EAAU5C,EAAM9lC,MAAMomC,GAC1B,OAAKsC,EAGEA,EAAQ,GAFJ,IAInB,EA2BI1oC,EAAQyoC,EAAO3C,EAAOkC,GAC1B,GAAc,OAAVhoC,EACA,OAAO,KAIX,GAFA8lC,EAAQA,EAAMvkC,OAAOvB,EAAMjY,QAEb,QADdiY,EAAQyoC,EAAO3C,EAAOmC,IAElB,OAAO,KAEX,IAAI7O,EAnCqB,SAAU0M,EAAO1jC,EAAGumC,GAEzC,IADA,IAAI5vB,EAAS,EACN3W,EAAI0jC,EAAM/9C,QAAQ,CACrB,IAAI8f,EAAIi+B,EAAMxkC,OAAOc,GACjBwmC,EAAUH,EAAO3C,EAAMvkC,OAAOa,GAAIumC,GACtC,GAAgB,OAAZC,GAA+B,IAAX7vB,EACpB,MAAO,CAAE8vB,cAAezmC,EAAG0mC,YAAa1mC,EAAIwmC,EAAQ7gD,QAEnD,GAAU,MAAN8f,EACLkR,SAEC,GAAU,MAANlR,EAAW,CAChB,GAAe,IAAXkR,EACA,KAAM,CAAC,wBAAyB,2CAGhCA,GAER,CACA3W,GACJ,CACA,OACW,IAGf,CAUQ2mC,CAAmBjD,EAAO9lC,EAAMjY,OAAQmgD,GAAWC,GAC3D,GAAU,OAAN/O,EACA,OAAO,KAEX,IAAI4P,EAASlD,EAAMmD,UAAU,EAAIf,EAAU9O,EAAE0P,YAAc1P,EAAEyP,eAC7D,GAAMT,GAAYC,EAMb,CACD,IAAIa,EAASrhD,KAAKkgD,kBAAkBjC,EAAMvkC,OAAO63B,EAAE0P,aAAcV,EAAUC,EAAUC,EAAUC,GAC/F,GAAe,OAAXW,EACA,OAAO,KAEX,IAAIC,EAAW,CAACH,EAAQE,EAAO5B,QAC/B,MAAO,CACHA,OAASkB,EAAUW,EAAS/oC,KAAK,IAAM+oC,EACvCvB,UAAWsB,EAAOtB,UAE1B,CAfI,MAAO,CACHN,OAAQ0B,EACRpB,UAAW9B,EAAMvkC,OAAO63B,EAAE0P,aActC,EACAxB,OAAQ,SAAU3+C,EAAGm9C,GACjB,IAAIM,EAAUH,EAAcoB,SAASA,SAAS1+C,GAC9C,QAAgBuxC,IAAZkM,EACA,KAAM,CAAC,aAAc,iCAAmCz9C,EAAI,KAE3D,GAAuB,mBAAZy9C,EACZ,OAAOH,EAAcoB,SAASA,SAAS1+C,GAAGm9C,GAG1C,IAAI9lC,EAAQ8lC,EAAM9lC,MAAMomC,GACxB,OAAIpmC,EACIA,EAAMjY,OAAS,EACR,CAAEu/C,OAAQtnC,EAAMmD,MAAM,GAAIykC,UAAW9B,EAAMvkC,OAAOvB,EAAM,GAAGjY,SAG3D,CAAEu/C,OAAQtnC,EAAM,IAAMA,EAAM,GAAI4nC,UAAW9B,EAAMvkC,OAAOvB,EAAM,GAAGjY,SAGzE,IAEf,GAEJy/C,QAAS,CACL,KAAM,SAAUT,EAAQp+C,GAAKo+C,EAAOl/B,GAAKk/B,EAAOl/B,GAAK,IAAMlf,CAAqB,EAChF,KAAM,SAAUo+C,EAAQp+C,GAAKo+C,EAAOh/B,GAAKg/B,EAAOh/B,GAAK,IAAMpf,CAAqB,EAChF,KAAM,SAAUo+C,EAAQp+C,GAAKo+C,EAAOpV,GAAKoV,EAAOpV,GAAK,IAAMhpC,CAAqB,EAChF,KAAM,SAAUo+C,EAAQp+C,GAAKo+C,EAAOZ,GAAKY,EAAOZ,GAAK,IAAMx9C,CAAqB,EAChF,QAAS,SAAUo+C,EAAQqC,EAAIvhC,GAAKk/B,EAAOZ,GAAKY,EAAOZ,GAAK,IAAMt+B,CAAqB,EACvF,KAAM,SAAUk/B,EAAQp+C,GAAKo+C,EAAOsC,GAAKtC,EAAOsC,GAAK,IAAM1gD,CAAqB,EAChF,KAAM,SAAUo+C,EAAQp+C,GAAKo+C,EAAOuC,GAAKvC,EAAOuC,GAAK,IAAM3gD,CAAqB,EAChF,MAAO,SAAUo+C,EAAQp+C,GAAKo+C,EAAOtJ,IAAMsJ,EAAOtJ,IAAM,IAAM90C,CAAqB,EACnF,QAAS,SAAUo+C,EAAQp+C,GAAKo+C,EAAOwC,OAASxC,EAAOwC,OAAS,IAAM5gD,CAAqB,EAC3F,OAAU,SAAU6gD,EAASJ,EAAIvhC,GAAK,MAAO,CAAE6+B,MAAO7+B,EAAK,EAC3D,YAAa,SAAU2hC,EAAS7gD,EAAGkf,GAAK,MAAO,CAAE6+B,MAAO7+B,EAAG4hC,GAAI9gD,EAAK,EACpE,eAAgB,SAAU6gD,EAAS7gD,EAAGkf,GAAK,MAAO,CAAE6+B,MAAO7+B,EAAG4hC,GAAI9gD,EAAE,GAAI+gD,GAAI/gD,EAAE,GAAM,EACpF,KAAQ,SAAU6gD,EAAS7gD,GAAK,OAAOA,CAAG,EAC1C,MAAS,SAAU6gD,EAASJ,EAAIvhC,GAAK,OAAOA,CAAG,EAC/C,GAAM,SAAU2hC,EAAS7gD,GAAK,MAAO,CAAE+9C,MAAO,KAAM+C,GAAI9gD,EAAK,EAC7D,KAAQ,SAAU6gD,EAAS7gD,GAAK,OAAOs9C,EAAcD,GAAGr9C,EAAG,OAAS,EACpE,WAAY,SAAU6gD,EAAS7gD,GAAK,OAAOs9C,EAAcD,GAAGr9C,EAAG,WAAa,EAC5E,iBAAkB,SAAU6gD,EAAS7gD,GAAK,OAAOs9C,EAAcD,GAAGr9C,EAAG,iBAAmB,EACxF,KAAQ,SAAU6gD,EAAS7gD,EAAG89C,GAAK,MAAO,CAAEC,MAAO,OAAQiD,MAAOlD,GAAK99C,EAAK,EAC5E,gBAAiB,SAAU6gD,EAAS7gD,GAAK,MAAO,CAAE+9C,MAAO,SAAUhtB,MAAO/wB,EAAK,EAC/E,GAAM,SAAU6gD,EAAS7gD,GAAK,OAAOs9C,EAAcD,GAAGr9C,EAAG,KAAO,EAChE,GAAM,SAAU6gD,EAAS7gD,GAAK,OAAOs9C,EAAcD,GAAGr9C,EAAG,KAAO,EAChE,MAAO,SAAU6gD,EAAS7gD,GACtB,IAAIihD,EAAM,GACNjhD,EAAEqX,MAAM,YACR4pC,EAAI9kD,KAAK6D,EAAE4Y,OAAO,EAAG,IACrB5Y,EAAIA,EAAE4Y,OAAO,IAEjB,IAAItX,EAAItB,EAAEqX,MAAM,0DAOhB,OANA/V,EAAE,GAAKA,EAAE,GAAG+W,QAAQ,MAAO,IAC3B4oC,EAAI9kD,KAAK,CAAE4hD,MAAO,OAAQ+C,GAAIx/C,EAAE,GAAIy/C,GAAIz/C,EAAE,KACtCA,EAAE,KACFA,EAAE,GAAKA,EAAE,GAAG+W,QAAQ,MAAO,IAC3B4oC,EAAI9kD,KAAK,CAAE4hD,MAAO,WAAY+C,GAAIx/C,EAAE,MAEjC2/C,CACX,EACA,MAAO,SAAUJ,EAAS7gD,GAAK,OAAOs9C,EAAcD,GAAGr9C,EAAG,MAAQ,GAEtEu+C,cAAe,CACX,IAAO,CACHZ,YAAaJ,EAAyB,CAClC,MAAS,CACL,EAAK,CAAEM,QAAS,SAEpB,cAAe,CACX,EAAK,CAAEA,QAAS,CAAC,CAAEE,MAAO,QAASrM,OAAQ,KAAO,KAAM,CAAEqM,MAAO,QAASrM,OAAQ,QAEtF,cAAe,CACX,EAAK,CAAEmM,QAAS,CAAC,CAAEE,MAAO,QAASrM,OAAQ,KAAO,KAAM,CAAEqM,MAAO,QAASrM,OAAQ,QAEtF,KAAQ,CACJ,EAAK,CAAEmM,QAAS,WAGxBgB,QAAS,CAAC,GAEd,GAAM,CACFlB,YAAaJ,EAAyB,CAClC,MAAS,CACL,IAAK,CAAEM,QAAS,WAEpB,KAAQ,CACJ,QAAS,CAAEA,QAAS,uBAAwBmB,SAAS,EAAME,YAAY,IAE3E,WAAc,CACV,EAAK,CAAErB,QAAS,qBAEpB,IAAO,CACH,EAAK,CAAEA,QAAS,OAAQkB,UAAW,MACnC,GAAM,CAAElB,QAAS,OAAQkB,UAAW,QAExC,YAAe,CACX,WAAY,CAAElB,QAAS,CAAC,WAAY,SAAU,YAAakB,UAAW,MAE1E,gBAAmB,CACf,QAAS,CAAElB,QAAS,CAAC,KAAM,UAAWkB,UAAW,MAErD,QAAW,CACP,UAAW,CAAElB,QAAS,KAAMkB,UAAW,MAE3C,KAAM,CACF,UAAW,CAAElB,QAAS,KAAMkB,UAAW,KACvC,OAAQ,CAAElB,QAAS,CAAC,SAAU,MAAOkB,UAAW,KAChD,IAAK,CAAElB,QAAS,CAAC,SAAU,MAAOkB,UAAW,MAEjD,IAAK,CACD,EAAK,CAAElB,QAAS,QAASkB,UAAW,KACpC,MAAO,CAAElB,QAAS,KAAMkB,UAAW,KACnC,EAAK,CAAElB,QAAS,KAAMkB,UAAW,MACjC,QAAS,CAAElB,QAAS,KAAMkB,UAAW,MACrC,GAAM,CAAElB,QAAS,CAAC,SAAU,MAAOkB,UAAW,KAC9C,EAAK,CAAElB,QAAS,CAAC,WAAY,SAAU,YAAakB,UAAW,MAEnE,OAAU,CACN,MAAO,CAAElB,QAAS,KAAMkB,UAAW,MAEvC,cAAe,CACX,aAAc,CAAElB,QAAS,CAAC,WAAY,SAAU,CAAEE,MAAO,WAAYrM,OAAQ,SAAWqN,UAAW,MAEvG,SAAY,CACR,aAAc,CAAElB,QAAS,CAAC,WAAY,SAAU,YAAakB,UAAW,MAE5E,KAAM,CACF,MAAO,CAAElB,QAAS,CAAC,iBAAkB,UAAWkB,UAAW,MAC3D,EAAK,CAAElB,QAAS,KAAMkB,UAAW,KACjC,EAAK,CAAElB,QAAS,CAAC,SAAU,CAAEE,MAAO,OAAQrM,OAAQ,MAAQqN,UAAW,KACvE,EAAK,CAAElB,QAAS,KAAMkB,UAAW,MACjC,GAAM,CAAElB,QAAS,KAAMkB,UAAW,MAClC,QAAS,CAAElB,QAAS,CAAC,SAAU,CAAEE,MAAO,OAAQrM,OAAQ,MAAQqN,UAAW,MAE/E,KAAM,CACF,MAAO,CAAElB,QAAS,CAAC,SAAU,CAAEE,MAAO,SAAUrM,OAAQ,WAAaqN,UAAW,MAEpF,oBAAqB,CACjB,EAAK,CAAElB,QAAS,CAAC,SAAU,CAAEE,MAAO,SAAUrM,OAAQ,WAAaqN,UAAW,KAC9E,EAAK,CAAElB,QAAS,CAAC,SAAU,CAAEE,MAAO,SAAUrM,OAAQ,WAAaqN,UAAW,MAElF,IAAK,CACD,QAAS,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,sBAAuB,CAAEqM,MAAO,OAAQrM,OAAQ,MAAQqN,UAAW,KACxH,EAAK,CAAElB,QAAS,CAAEE,MAAO,OAAQrM,OAAQ,MACzC,EAAK,CAAEmM,QAAS,CAAC,SAAU,CAAEE,MAAO,SAAUrM,OAAQ,WAAaqN,UAAW,KAC9E,GAAM,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,CAAEqM,MAAO,OAAQrM,OAAQ,MAAQqN,UAAW,KAC9F,EAAK,CAAElB,QAAS,MAChB,EAAK,CAAEA,QAAS,CAAEE,MAAO,cAAerM,QAAQ,GAASqN,UAAW,KACpE,EAAK,CAAElB,QAAS,CAAEE,MAAO,cAAerM,QAAQ,GAASqN,UAAW,KACpE,UAAW,CAAElB,QAAS,CAAEE,MAAO,cAAerM,QAAQ,GAAQqN,UAAW,KACzE,SAAU,CAAElB,QAAS,CAAC,SAAU,CAAEE,MAAO,OAAQrM,OAAQ,MAAQqN,UAAW,MAEhF,QAAW,CACP,MAAO,CAAElB,QAAS,KAAMkB,UAAW,MAEvC,QAAW,CACP,wBAAyB,CAAElB,QAAS,KAAMkB,UAAW,KACrD,OAAQ,CAAElB,QAAS,CAAC,SAAU,MAAOkB,UAAW,KAChD,YAAa,CAAElB,QAAS,YAAakB,UAAW,MAEpD,OAAU,CACN,EAAK,CAAElB,QAAS,KAAMkB,UAAW,KACjC,MAAO,CAAElB,QAAS,KAAMkB,UAAW,MACnC,EAAK,CAAElB,QAAS,CAAC,SAAU,MAAOkB,UAAW,KAC7C,EAAK,CAAElB,QAAS,KAAMkB,UAAW,MAErC,UAAW,CACP,SAAU,CAAElB,QAAS,KAEzB,MAAS,CACL,EAAK,CAAEA,QAAS,GAAIkB,UAAW,MAC/B,EAAK,CAAElB,QAAS,YAChB,MAAO,CAAEA,QAAS,WAClB,kBAAmB,CAAEA,QAAS,SAAUkB,UAAW,KACnD,IAAK,CAAElB,QAAS,CAAC,SAAU,WAAYkB,UAAW,MAEtD,mBAAoB,CAChB,MAAO,CAAElB,QAAS,CAAC,SAAU,CAAEE,MAAO,YAAarM,OAAQ,sBAC3D,IAAK,CAAEmM,QAAS,CAAC,SAAU,CAAEE,MAAO,YAAarM,OAAQ,qBAAuBqN,UAAW,MAE/F,UAAW,CACP,OAAQ,CAAElB,QAAS,MAAOkB,UAAW,MACrC,SAAU,CAAElB,QAAS,MAAOkB,UAAW,QAE3C,MAAO,CACH,iBAAkB,CAAElB,QAAS,CAAC,SAAU,CAAEE,MAAO,OAAQrM,OAAQ,QAAUqN,UAAW,KACtF,IAAK,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,CAAEqM,MAAO,SAAUrM,OAAQ,aAAeqN,UAAW,MAE1G,SAAU,CACN,IAAK,CAAElB,QAAS,CAAC,SAAU,CAAEE,MAAO,SAAUrM,OAAQ,sBAAwBqN,UAAW,MAE7F,yBAA0B,CACtB,IAAK,CAAElB,QAAS,CAAC,SAAU,wBAAyBkB,UAAW,MAEnE,MAAO,CACH,SAAU,CAAElB,QAAS,CAAC,KAAM,SAAU,sBAAuBkB,UAAW,KACxE,UAAW,CAAElB,QAAS,CAAC,KAAM,SAAU,sBAAuBkB,UAAW,KACzE,IAAK,CAAElB,QAAS,CAAC,SAAU,KAAM,SAAU,sBAAuBkB,UAAW,MAEjF,MAAO,CACH,mBAAoB,CAAElB,QAAS,CAAC,KAAM,sBAAuBkB,UAAW,KACxE,sBAAuB,CAAElB,QAAS,CAAC,SAAU,KAAM,sBAAuBkB,UAAW,MAEzF,KAAM,CACF,IAAK,CAAElB,QAAS,CAAC,SAAU,SAAUkB,UAAW,MAEpD,KAAM,CACF,IAAK,CAAElB,QAAS,KAEpB,oBAAqB,CACjB,WAAY,CAAEA,QAAS,KAAMkB,UAAW,KACxC,EAAK,CAAElB,QAAS,KAAMkB,UAAW,MACjC,MAAO,CAAElB,QAAS,QAASkB,UAAW,KACtC,EAAK,CAAElB,QAAS,KAAMkB,UAAW,MACjC,eAAgB,CAAElB,QAAS,CAAC,SAAU,MAAOkB,UAAW,MAE5D,4BAA8B,CAC1B,WAAY,CAAElB,QAAS,KAAMkB,UAAW,KACxC,EAAK,CAAElB,QAAS,KAAMkB,UAAW,MACjC,MAAO,CAAElB,QAAS,QAASkB,UAAW,KACtC,EAAK,CAAElB,QAAS,KAAMkB,UAAW,MACjC,YAAa,CAAElB,QAAS,MACxB,GAAM,CAAEA,QAAS,CAAC,SAAU,MAAOkB,UAAW,MAElD,6BAA8B,CAC1B,iBAAkB,CAAElB,QAAS,CAAC,SAAU,MAAOkB,UAAW,MAE9D,4CAA6C,CACzC,WAAY,CAAElB,QAAS,KAAMkB,UAAW,KACxC,EAAK,CAAElB,QAAS,KAAMkB,UAAW,MACjC,MAAO,CAAElB,QAAS,KAAMkB,UAAW,KACnC,MAAO,CAAElB,QAAS,KAAMkB,UAAW,MACnC,aAAc,CAAElB,QAAS,CAAC,SAAU,MAAOkB,UAAW,MAE1D,MAAO,CACH,gCAAiC,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,QAASqN,UAAW,MAErG,IAAK,CACD,iBAAkB,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,CAAEqM,MAAO,OAAQrM,OAAQ,MAAQqN,UAAW,MAE9G,MAAO,CACH,IAAK,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,CAAEqM,MAAO,SAAUrM,OAAQ,aAAeqN,UAAW,MAE1G,KAAM,CACF,IAAK,CAAElB,QAAS,CAAEE,MAAO,SAAUrM,OAAQ,GAAKqN,UAAW,MAE/D,QAAS,CACL,sBAAuB,CAAElB,QAAS,KAAMkB,UAAW,KACnD,mBAAoB,CAAElB,QAAS,CAAC,SAAU,MAAOkB,UAAW,MAEhE,QAAS,CACL,EAAK,CAAElB,QAAS,MAChB,sBAAuB,CAAEA,QAAS,KAAMkB,UAAW,KACnD,OAAQ,CAAElB,QAAS,MACnB,iBAAkB,CAAEA,QAAS,CAAC,SAAU,MAAOkB,UAAW,MAE9D,gBAAiB,CACb,IAAK,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,QAASqN,UAAW,MAEzE,gBAAiB,CACb,IAAK,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,eAAgBqN,UAAW,MAEhF,mBAAoB,CAChB,IAAK,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,kBAAmBqN,UAAW,MAEnF,oBAAqB,CACjB,IAAK,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,mBAAoBqN,UAAW,MAEpF,sBAAuB,CACnB,IAAK,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,qBAAsBqN,UAAW,MAEtF,wBAAyB,CACrB,IAAK,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,gBAAiBqN,UAAW,MAEjF,iBAAkB,CACd,IAAK,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,mBAErD,cAAe,CACX,IAAK,CAAEmM,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,MAAOqN,UAAW,MAEvE,MAAO,CACH,IAAK,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,QAASqN,UAAW,MAEzE,cAAe,CACX,IAAK,CAAElB,QAAS,CAAC,SAAU,CAAEE,MAAO,QAASrM,OAAQ,KAAO,KAAM,CAAEqM,MAAO,QAASrM,OAAQ,MAAQqN,UAAW,MAEnH,oBAAqB,CACjB,2BAA4B,CAAElB,QAAS,CAAC,KAAM,UAAWkB,UAAW,KACpE,IAAK,CAAElB,QAAS,CAAC,SAAU,KAAM,UAAWkB,UAAW,MAE3D,OAAU,CACN,IAAK,CAAElB,QAAS,CAAC,CAAEE,MAAO,SAAUrM,OAAQ,GAAK,QAASqN,UAAW,MAEzE,MAAS,CACL,EAAK,CAAElB,QAAS,SAAUkB,UAAW,IAAKC,SAAS,GACnD,GAAM,CAAEnB,QAAS,CAAC,SAAU,WAAYkB,UAAW,IAAKC,SAAS,GACjE,kBAAmB,CAAEnB,QAAS,CAAC,UAAWkB,UAAW,IAAKC,SAAS,GACnE,IAAK,CAAEnB,QAAS,CAAC,SAAU,QAASkB,UAAW,QAGvDF,QAAS,CACL,YAAa,SAAUT,EAAQp+C,GAC3B,IAAIihD,EACJ,IAAK7C,EAAOuC,GAAK,IAAItpC,MAAM,iBAAkB,CACzC,IAAI6pC,EAAM9C,EAAOuC,EACjBvC,EAAOuC,OAAIpP,GACX0P,EAAM/hD,KAAa,OAAEk/C,IACjBjiD,KAAK,CAAE4hD,MAAO,aAClBK,EAAOh/B,EAAI8hC,CACf,MAEID,EAAM/hD,KAAa,OAAEk/C,GAGzB,OADAd,EAAcuB,QAAQ,MAAMT,EAAQp+C,GAC7BihD,CACX,EACA,QAAS,SAAU7C,EAAQp+C,GACvBo+C,EAAOuC,EAAI3gD,EACXo+C,EAAO+C,MAAQ,IAEnB,EACA,iBAAkB,SAAU/C,EAAQp+C,GAChC,GAAIo+C,EAAuB,eAAG,CAC1B,IAAI6C,EAAM,GAGV,OAFA3D,EAAcwB,YAAYmC,EAAK/hD,KAAa,OAAEk/C,IAC9Cd,EAAcwB,YAAYmC,EAAK3D,EAAcuB,QAAc,KAAET,EAAQp+C,EAAG,MACjEihD,CACX,CAEI7C,EAAOuC,EAAI3gD,CAGnB,EACA,cAAe,SAAUo+C,EAAQp+C,EAAGohD,GAChC,IAAIC,EAAK/D,EAAcoB,SAASC,OAAO,UAAWP,EAAOZ,GAAK,IAC1D8D,EAAKhE,EAAcoB,SAASC,OAAO,+BAAgCP,EAAOZ,GAAK,IAC/E+D,EAAKjE,EAAcoB,SAASC,OAAO,+BAAgCP,EAAOZ,GAAK,IAC/EgE,EAAKlE,EAAcoB,SAASC,OAAO,iCAAkCP,EAAOZ,GAAK,IACjFiE,EAAsB,MAANzhD,IAAcqhD,GAAuB,KAAjBA,EAAGpC,WAAoBqC,GAAMC,GAAMC,IACvEC,GAAkBrD,EAAOl/B,GAAMk/B,EAAOh/B,GAAMg/B,EAAOpV,GAAMoV,EAAOuC,GAAMvC,EAAOsC,GAAMW,IAAME,IACzFnD,EAAOZ,EAAI,IAAMY,EAAOZ,EAAI,KAEhC,IAAIyD,EAAM,GAgBV,OAfIQ,GACAnE,EAAcwB,YAAYmC,EAAK/hD,KAAa,OAAEk/C,IAC9C6C,EAAI9kD,KAAK,CAAE4hD,MAAO,aAGlBsD,EAAK/D,EAAcoB,SAASC,OAAO,SAAUP,EAAOuC,GAAK,IACrDS,GAAYC,GAAuB,KAAjBA,EAAGpC,WACrB3B,EAAcwB,YAAYmC,EAAK3D,EAAcuB,QAAQ,MAAMT,EAAQp+C,IACnEs9C,EAAcwB,YAAYmC,EAAK/hD,KAAa,OAAEk/C,MAG9Cd,EAAcwB,YAAYmC,EAAK/hD,KAAa,OAAEk/C,IAC9Cd,EAAcwB,YAAYmC,EAAK3D,EAAcuB,QAAc,KAAET,EAAQp+C,EAAG,QAGzEihD,CACX,EACA,SAAU,SAAU7C,GAChBA,EAAOZ,EAAIY,EAAOl/B,EAClBk/B,EAAOl/B,OAAIqyB,CAEf,EACA,UAAW,SAAU6M,GAAUA,EAAOsD,IAAK,CAAwB,EACnE,WAAY,SAAUtD,GAAUA,EAAOsD,IAAK,CAAyB,EACrE,sBAAuB,SAAUtD,GAAUA,EAAuB,gBAAI,CAAwB,EAC9F,uBAAwB,SAAUA,GAAUA,EAAuB,gBAAI,CAAyB,EAChG,qBAAsB,SAAUA,GAAUA,EAAyB,kBAAuB,EAC1F,qBAAsB,SAAUA,GAAUA,EAAyB,kBAAuB,EAC1F,uBAAwB,SAAUyC,EAAS7gD,GACvC,MAAO,CAAE+9C,MAAO,uBAAwB+C,GAAIxD,EAAcD,GAAGr9C,EAAG,KACpE,EACA,MAAS,SAAUo+C,EAAQp+C,GACvB,IAAIkf,EAAIlf,EAAEqY,QAAQ,OAAQ,IAE1B,OADiB6G,IAAMlf,GACyB,IAA/Bo+C,EAAyB,iBAC/B,CAAEL,MAAO,sBAAuB+C,GAAI5hC,GAGpC,CAAE6+B,MAAO,sBAAuB+C,GAAI5hC,EAEnD,EACA,OAAU,SAAUk/B,EAAQqC,EAAIkB,GAC5B,IAAIV,EACJ,GAAK7C,EAAOzjC,EAsCP,CACD,IAAIinC,EAEAA,EADe,MAAfxD,EAAOyD,IACFvE,EAAcD,GAAGe,EAAOwD,GAAI,YAEb,MAAfxD,EAAOyD,IACP,CAAC,CAAE9D,MAAO,OAAQ+C,GAAI1C,EAAOwD,IAAM,KAGnCtE,EAAcD,GAAGe,EAAOwD,GAAI,MAErC,IAAIE,EAEAA,EADe,MAAf1D,EAAO2D,IACFzE,EAAcD,GAAGe,EAAO0D,GAAI,YAEb,MAAf1D,EAAO2D,IACP,CAAC,CAAEhE,MAAO,OAAQ+C,GAAI1C,EAAO0D,IAAM,KAGnCxE,EAAcD,GAAGe,EAAO0D,GAAI,MAErCb,EAAM,CACFlD,MAAO,QACPpjC,EAAGyjC,EAAOzjC,EACVinC,GAAIA,EACJE,GAAIA,EAEZ,MAhEIb,EAAM,IACD7C,EAAOl/B,GAAMk/B,EAAOh/B,GAAMg/B,EAAOpV,GAAMoV,EAAOZ,GAAMY,EAAOsC,GAAMtC,EAAOuC,GAAMgB,KAG3EvD,EAAOsD,IACPT,EAAI9kD,KAAK,CAAE4hD,MAAO,eAEjBK,EAAOZ,GAAMY,EAAOsC,GAAMtC,EAAOuC,GAAMvC,EAAOh/B,GAAMg/B,EAAOpV,GAAuB,IAAlB2Y,EAI3DvD,EAAOZ,GAAMY,EAAOsC,GAAMtC,EAAOuC,IAAMvC,EAAOh/B,IAAKg/B,EAAOpV,EAO5DoV,EAAOZ,GAAsB,OAAjBY,EAAO+C,OAAkB7D,EAAcoB,SAASC,OAAO,eAAgBP,EAAOuC,GAAK,IAC/FvC,EAAO+C,MAAQ,YAEV/C,EAAOZ,GAAsB,OAAjBY,EAAO+C,QAAmB/C,EAAOsC,IAClDtC,EAAO+C,WAAQ5P,IAVnB6M,EAAOZ,EAAIY,EAAOl/B,EAClBk/B,EAAOuC,EAAIvC,EAAOh/B,EAClBg/B,EAAOsC,EAAItC,EAAOpV,EAClBoV,EAAOl/B,EAAIk/B,EAAOh/B,EAAIg/B,EAAOpV,OAAIuI,IAPjC6M,EAAOZ,EAAIY,EAAOl/B,EAClBk/B,EAAOl/B,OAAIqyB,GAgBf0P,EAAI9kD,KAAK,CACL4hD,MAAO,WACP7+B,EAAGo+B,EAAcD,GAAGe,EAAOl/B,EAAG,KAC9BE,EAAGk+B,EAAcD,GAAGe,EAAOh/B,EAAG,MAC9B4pB,EAAGsU,EAAcD,GAAGe,EAAOpV,EAAG,MAC9BwU,EAAGF,EAAcD,GAAGe,EAAOZ,EAAG,KAC9BkD,EAAGpD,EAAcD,GAAGe,EAAOsC,EAAG,MAC9BC,EAAGrD,EAAcD,GAAGe,EAAOuC,EAAqB,cAAjBvC,EAAO+C,MAAwB,YAAc,MAC5EA,MAAO/C,EAAO+C,SAgC1B,IAAK,IAAInY,KAAKoV,EACA,qBAANpV,GAAkC,mBAANA,UACrBoV,EAAOpV,GAGtB,OAAOiY,CACX,EACA,mBAAoB,SAAUJ,EAAS7gD,GACnC,IAAIihD,EAAM,CAAC,KAGX,OAFA3D,EAAcwB,YAAYmC,EAAK3D,EAAcD,GAAGr9C,EAAG,cACnDihD,EAAI9kD,KAAK,KACF8kD,CACX,EACA,cAAe,SAAUJ,EAAS7gD,GAC9B,MAAO,CAAE+9C,MAAO,UAAW+C,GAAIxD,EAAcD,GAAGr9C,EAAE,GAAI,MAAO+gD,GAAIzD,EAAcD,GAAGr9C,EAAE,GAAI,MAC5F,EACA,iBAAkB,SAAU6gD,EAAS7gD,GACjC,MAAO,CAAE+9C,MAAO,UAAW+C,GAAIxD,EAAcD,GAAGr9C,EAAE,GAAI,MAAO+gD,GAAIzD,EAAcD,GAAGr9C,EAAE,GAAI,MAC5F,EACA,kBAAmB,SAAU6gD,EAAS7gD,GAClC,MAAO,CAAE+9C,MAAO,WAAY+C,GAAIxD,EAAcD,GAAGr9C,EAAE,GAAI,MAAO+gD,GAAIzD,EAAcD,GAAGr9C,EAAE,GAAI,MAC7F,EACA,oBAAqB,SAAU6gD,EAAS7gD,GACpC,MAAO,CAAE+9C,MAAO,aAAc+C,GAAIxD,EAAcD,GAAGr9C,EAAE,GAAI,MAAO+gD,GAAIzD,EAAcD,GAAGr9C,EAAE,GAAI,MAC/F,EACA,eAAgB,SAAU6gD,EAAS7gD,GAC/B,MAAO,CAAE+9C,MAAO,QAASiE,OAAQhiD,EAAE,GAAIiiD,OAAQ3E,EAAcD,GAAGr9C,EAAE,GAAI,MAC1E,EACA,KAAM,SAAUo+C,EAAQp+C,GAAKo+C,EAAOzjC,EAAI3a,CAAqB,EAC7D,OAAQ,SAAUo+C,EAAQp+C,GAAKo+C,EAAOyD,IAAM7hD,CAAqB,EACjE,MAAO,SAAUo+C,EAAQp+C,GAAKo+C,EAAOwD,GAAK5hD,CAAqB,EAC/D,OAAQ,SAAUo+C,EAAQp+C,GAAKo+C,EAAO2D,IAAM/hD,CAAqB,EACjE,MAAO,SAAUo+C,EAAQp+C,GAAKo+C,EAAO0D,GAAK9hD,CAAqB,EAC/D,SAAY,SAAU6gD,EAAS7gD,EAAG8gD,GAAM,MAAO,CAAE/C,MAAO,WAAYiD,MAAQF,GAAM9gD,EAAM,IAGhG,EAAK,CACD29C,YAAaJ,EAAyB,CAClC,MAAS,CACL,IAAK,CAAEM,QAAS,KAEpB,OAAQ,CACJ,EAAK,CAAEA,QAAS,QAEpB,KAAQ,CACJ,EAAK,CAAEA,QAAS,GAAIkB,UAAW,IAAKC,SAAS,IAEjD,qBAAsB,CAClB,IAAK,CAAEnB,QAAS,iBAAkBkB,UAAW,MAEjD,IAAK,CACD,IAAK,CAAElB,QAAS,CAAEE,MAAO,SAAUrM,OAAQ,kBAE/C,MAAS,CACL,IAAK,CAAEmM,QAAS,WAGxBgB,QAAS,CAAC,GAEd,EAAK,CACDlB,YAAaJ,EAAyB,CAClC,MAAS,CACL,IAAK,CAAEM,QAAS,KAEpB,OAAQ,CACJ,EAAK,CAAEA,QAAS,QAEpB,KAAQ,CACJ,EAAK,CAAEA,QAAS,GAAIkB,UAAW,IAAKC,SAAS,IAEjD,QAAW,CACP,IAAK,CAAEnB,QAAS,OAEpB,OAAQ,CACJ,IAAK,CAAEA,QAAS,CAAEE,MAAO,SAAUrM,OAAQ,WAE/C,cAAe,CACX,IAAK,CAAEmM,QAAS,CAAC,CAAEE,MAAO,QAASrM,OAAQ,KAAO,KAAM,CAAEqM,MAAO,QAASrM,OAAQ,QAEtF,oBAAqB,CACjB,IAAK,CAAEmM,QAAS,SAEpB,qBAAsB,CAClB,IAAK,CAAEA,QAAS,aAEpB,UAAW,CACP,IAAK,CAAEA,QAAS,CAAC,CAAEE,MAAO,QAASrM,OAAQ,KAAO,OAAQ,CAAEqM,MAAO,QAASrM,OAAQ,QAExF,MAAS,CACL,IAAK,CAAEmM,QAAS,WAGxBgB,QAAS,CAAC,GAEd,KAAQ,CACJlB,YAAaJ,EAAyB,CAClC,MAAS,CACL,IAAK,CAAEM,QAAS,WAEpB,QAAS,CACL,IAAK,CAAEA,QAAS,UAEpB,qBAAsB,CAClB,IAAK,CAAEA,QAAS,aAEpB,UAAW,CACP,IAAK,CAAEA,QAAS,CAAC,SAAU,QAE/B,cAAe,CACX,IAAK,CAAEA,QAAS,CAAC,SAAU,CAAEE,MAAO,QAASrM,OAAQ,KAAO,KAAM,CAAEqM,MAAO,QAASrM,OAAQ,QAEhG,wBAAyB,CACrB,IAAK,CAAEmM,QAAS,CAAC,SAAU,UAE/B,KAAQ,CACJ,IAAK,CAAEA,QAAS,YAGxBgB,QAAS,CACL,OAAU,SAAUT,GAChB,GAAIA,EAAOwC,MAAO,CACd,IAAIK,EAAM,CAAElD,MAAO,OAAQ+C,GAAI1C,EAAOwC,OACtC,IAAK,IAAI5X,KAAKoV,SACHA,EAAOpV,GAElB,OAAOiY,CACX,CAEJ,IAGR,GAAM,CACFtD,YAAaJ,EAAyB,CAClC,MAAS,CACL,IAAK,CAAEM,QAAS,KAEpB,yBAA0B,CACtB,IAAK,CAAEA,QAAS,yBAEpB,GAAM,CACF,EAAK,CAAEA,QAAS,GAAIkB,UAAW,KAAMC,SAAS,IAElD,gBAAiB,CACb,EAAK,CAAEnB,QAAS,KAAMkB,UAAW,MAErC,SAAY,CACR,EAAK,CAAElB,QAAS,GAAIkB,UAAW,IAAKC,SAAS,IAEjD,OAAQ,CACJ,EAAK,CAAEnB,QAAS,QAEpB,KAAQ,CACJ,EAAK,CAAEA,QAAS,GAAIkB,UAAW,KAAMC,SAAS,IAElD,qBAAsB,CAClB,IAAK,CAAEnB,QAAS,aAEpB,UAAW,CACP,IAAK,CAAEA,QAAS,SAEpB,MAAO,CACH,EAAK,CAAEA,QAAS,aAEpB,QAAW,CACP,IAAK,CAAEA,QAAS,OAEpB,QAAS,CACL,IAAK,CAAEA,QAAS,QAEpB,IAAK,CACD,IAAK,CAAEA,QAAS,CAAEE,MAAO,YAAarM,OAAQ,yBAElD,wBAAyB,CACrB,IAAK,CAAEmM,QAAS,iBAEpB,iBAAkB,CACd,IAAK,CAAEA,QAAS,kBAEpB,cAAe,CACX,IAAK,CAAEA,QAAS,OAEpB,cAAe,CACX,IAAK,CAAEA,QAAS,CAAC,CAAEE,MAAO,QAASrM,OAAQ,KAAO,KAAM,CAAEqM,MAAO,QAASrM,OAAQ,QAEtF,wBAAyB,CACrB,IAAK,CAAEmM,QAAS,SAEpB,MAAS,CACL,IAAK,CAAEA,QAAS,WAGxBgB,QAAS,CACL,uBAAwB,SAAUgC,EAAS7gD,GACvC,MAAO,CAAE+9C,MAAO,iCAAkC+C,GAAIxD,EAAcD,GAAGr9C,EAAG,KAC9E,EACA,eAAgB,SAAU6gD,EAAS7gD,GAC/B,MAAO,CAAE+9C,MAAO,QAASiE,OAAQhiD,EAAE,GAAIiiD,OAAQ3E,EAAcD,GAAGr9C,EAAE,GAAI,MAC1E,IAGR,GAAM,CACF29C,YAAaJ,EAAyB,CAClC,MAAS,CACL,IAAK,CAAEM,QAAS,KAEpB,GAAM,CACF,EAAK,CAAEA,QAAS,GAAIkB,UAAW,KAAMC,SAAS,IAElD,SAAY,CACR,EAAK,CAAEnB,QAAS,GAAIkB,UAAW,IAAKC,SAAS,IAEjD,KAAQ,CACJ,EAAK,CAAEnB,QAAS,GAAIkB,UAAW,KAAMC,SAAS,IAElD,qBAAsB,CAClB,IAAK,CAAEnB,QAAS,QAEpB,IAAK,CACD,IAAK,CAAEA,QAAS,CAAEE,MAAO,SAAUrM,OAAQ,kBAE/C,MAAO,CACH,EAAK,CAAEmM,QAAS,aAEpB,EAAK,CACD,IAAK,CAAEA,QAAS,CAAEE,MAAO,SAAUrM,OAAQ,UAE/C,QAAW,CACP,IAAK,CAAEmM,QAAS,OAEpB,IAAM,CACF,IAAK,CAAEA,QAAS,CAAEE,MAAO,SAAUrM,OAAQ,WAE/C,qBAAsB,CAClB,IAAK,CAAEmM,QAAS,aAEpB,UAAW,CACP,IAAK,CAAEA,QAAS,SAEpB,wBAAyB,CACrB,IAAK,CAAEA,QAAS,iBAEpB,iBAAkB,CACd,IAAK,CAAEA,QAAS,kBAEpB,cAAe,CACX,IAAK,CAAEA,QAAS,OAEpB,cAAe,CACX,IAAK,CAAEA,QAAS,CAAC,CAAEE,MAAO,QAASrM,OAAQ,KAAO,KAAM,CAAEqM,MAAO,QAASrM,OAAQ,QAEtF,wBAAyB,CACrB,IAAK,CAAEmM,QAAS,SAEpB,MAAS,CACL,IAAK,CAAEA,QAAS,WAGxBgB,QAAS,CACL,eAAgB,SAAUgC,EAAS7gD,GAC/B,MAAO,CAAE+9C,MAAO,QAASiE,OAAQhiD,EAAE,GAAIiiD,OAAQ3E,EAAcD,GAAGr9C,EAAE,GAAI,MAC1E,IAGR,UAAa,CACT29C,YAAaJ,EAAyB,CAClC,MAAS,CACL,IAAK,CAAEM,QAAS,kBAEpB,cAAe,CACX,IAAK,CAAEA,QAAS,CAAEE,MAAO,QAASrM,OAAQ,UAE9C,KAAQ,CACJ,IAAK,CAAEmM,QAAS,SAGxBgB,QAAS,CACL,gBAAiB,SAAUT,GAAU,MAAO,CAAEL,MAAO,gBAAiB+C,GAAI1C,EAAOZ,GAAK,GAAM,IAGpG,WAAY,CACRG,YAAaJ,EAAyB,CAClC,MAAS,CACL,IAAK,CAAEM,QAAS,WAEpB,cAAe,CACX,IAAK,CAAEA,QAAS,CAAC,SAAU,QAE/B,cAAe,CACX,IAAK,CAAEA,QAAS,CAAC,SAAU,CAAEE,MAAO,QAASrM,OAAQ,KAAO,KAAM,CAAEqM,MAAO,QAASrM,OAAQ,QAEhG,8BAA+B,CAC3B,IAAK,CAAEmM,QAAS,OAEpB,KAAQ,CACJ,IAAK,CAAEA,QAAS,SAGxBgB,QAAS,CACL,OAAU,SAAUT,GAChB,GAAIA,EAAOZ,EAAG,CACV,IAAIyD,EAAM,CAAElD,MAAO,WAAY+C,GAAI1C,EAAOZ,GAC1C,IAAK,IAAIxU,KAAKoV,SACHA,EAAOpV,GAElB,OAAOiY,CACX,CAEJ,IAGR,iBAAkB,CACdtD,YAAaJ,EAAyB,CAClC,MAAS,CACL,IAAK,CAAEM,QAAS,WAEpB,cAAe,CACX,IAAK,CAAEA,QAAS,CAAC,SAAU,QAE/B,cAAe,CACX,IAAK,CAAEA,QAAS,CAAC,SAAU,CAAEE,MAAO,QAASrM,OAAQ,KAAO,KAAM,CAAEqM,MAAO,QAASrM,OAAQ,QAEhG,8BAA+B,CAC3B,IAAK,CAAEmM,QAAS,OAEpB,MAAO,CACH,IAAK,CAAEA,QAAS,mBAEpB,KAAQ,CACJ,IAAK,CAAEA,QAAS,SAGxBgB,QAAS,CACL,iBAAkB,SAAUT,EAAQp+C,GAAKo+C,EAAOZ,GAAKY,EAAOZ,GAAK,IAAM,IAAMx9C,EAAI,GAAuB,EACxG,OAAU,SAAUo+C,GAChB,GAAIA,EAAOZ,EAAG,CACV,IAAIyD,EAAM,CAAElD,MAAO,WAAY+C,GAAI1C,EAAOZ,GAC1C,IAAK,IAAIxU,KAAKoV,SACHA,EAAOpV,GAElB,OAAOiY,CACX,CAEJ,IAGR,MAAO,CACHtD,YAAaJ,EAAyB,CAClC,MAAS,CACL,IAAK,CAAEM,QAAS,KAEpB,IAAK,CACD,IAAK,CAAEA,QAAS,UAEpB,KAAQ,CACJ,IAAK,CAAEA,QAAS,WAGxBgB,QAAS,CACL,MAAS,WAAc,MAAO,CAAEd,MAAO,eAAkB,IAGjE,GAAM,CACFJ,YAAaJ,EAAyB,CAClC,MAAS,CACL,IAAK,CAAEM,QAAS,WAEpB,OAAU,CACN,IAAK,CAAEA,QAAS,CAAC,SAAU,WAE/B,UAAW,CACP,MAAO,CAAEA,QAAS,SAEtB,cAAe,CACX,EAAK,CAAEA,QAAS,UAAWkB,UAAW,MAE1C,mBAAoB,CAChB,EAAK,CAAElB,QAAS,UAAWkB,UAAW,MAE1C,MAAS,CACL,MAAO,CAAElB,QAAS,KAEtB,cAAe,CACX,MAAO,CAAEA,QAAS,CAAEE,MAAO,WAAYrM,OAAQ,QAAUqN,UAAW,MAExE,SAAY,CACR,MAAO,CAAElB,QAAS,OAAQkB,UAAW,MAEzC,KAAM,CACF,EAAK,CAAElB,QAAS,KAAMkB,UAAW,MAErC,IAAK,CACD,EAAK,CAAElB,QAAS,KAAMkB,UAAW,MAErC,aAAc,CACV,MAAO,CAAElB,QAAS,KAAMkB,UAAW,KACnC,EAAK,CAAElB,QAAS,CAAC,QAAS,MAAOkB,UAAW,KAC5C,MAAO,CAAElB,QAAS,KAAMkB,UAAW,QAG3CF,QAAS,CACL,QAAW,SAAUgC,EAAS7gD,GAC1B,IAAIihD,EAAM,GA6BV,MA5Ba,OAATjhD,EAAE,IAAwB,QAATA,EAAE,GACnBihD,EAAI9kD,KAAK,SAEJ6D,EAAE,IACPihD,EAAI9kD,KAAK6D,EAAE,IAEXA,EAAE,KACFs9C,EAAcwB,YAAYmC,EAAK3D,EAAcD,GAAGr9C,EAAE,GAAI,WAClDA,EAAE,KACEA,EAAE,GAAGqX,MAAM,QACXimC,EAAcwB,YAAYmC,EAAK3D,EAAcD,GAAGr9C,EAAE,GAAI,WAGtDihD,EAAI9kD,KAAK6D,EAAE,MAGfA,EAAE,IAAMA,EAAE,MACG,MAATA,EAAE,IAAuB,MAATA,EAAE,GAClBihD,EAAI9kD,KAAK,CAAE4hD,MAAO,SAGlBkD,EAAI9kD,KAAK,CAAE4hD,MAAO,YAI1B/9C,EAAE,IACFihD,EAAI9kD,KAAK,OAAS6D,EAAE,GAAK,KAEtBihD,CACX,EACA,UAAW,SAAUJ,EAAS7gD,GAC1B,IAAIihD,EAAM,GASV,MARa,OAATjhD,EAAE,IAAwB,QAATA,EAAE,GACnBihD,EAAI9kD,KAAK,SAEJ6D,EAAE,IACPihD,EAAI9kD,KAAK6D,EAAE,IAEfs9C,EAAcwB,YAAYmC,EAAK3D,EAAcD,GAAGr9C,EAAE,GAAI,WACtDihD,EAAI9kD,KAAK,KAAO6D,EAAE,GAAK,KAChBihD,CACX,EACA,SAAY,SAAUJ,EAAS7gD,EAAG8gD,GAAM,MAAO,CAAE/C,MAAO,WAAYiD,MAAQF,GAAM9gD,EAAM,EACxF,MAAS,WAAc,MAAO,CAAE+9C,MAAO,aAAgB,EACvD,OAAU,SAAUK,GAChB,IAAI6C,EACAiB,EAAK5E,EAAcoB,SAASC,OAAO,UAAWP,EAAOuC,GAAK,IAC1DuB,GAAuB,KAAjBA,EAAGjD,YACTb,EAAOuC,EAAIuB,EAAGvD,QAElB,IAAIwD,EAAK7E,EAAcoB,SAASC,OAAO,UAAWP,EAAOsC,GAAK,IAQ9D,GAPIyB,GAAuB,KAAjBA,EAAGlD,YACTb,EAAOsC,EAAIyB,EAAGxD,QAEdP,EAAOuC,IACPvC,EAAOuC,EAAIvC,EAAOuC,EAAEtoC,QAAQ,uBAAwB,gBACpD+lC,EAAOuC,EAAIvC,EAAOuC,EAAEtoC,QAAQ,uBAAwB,iBAEpD+lC,EAAOsC,EAAG,CACVtC,EAAOsC,EAAItC,EAAOsC,EAAEroC,QAAQ,uBAAwB,gBACpD+lC,EAAOsC,EAAItC,EAAOsC,EAAEroC,QAAQ,uBAAwB,gBACpD,IAAI+pC,EAAK,CACLzB,EAAGrD,EAAcD,GAAGe,EAAOuC,EAAG,MAC9BD,EAAGpD,EAAcD,GAAGe,EAAOsC,EAAG,OAEjB,OAAbtC,EAAOZ,EACPyD,EAAM,CAAElD,MAAO,UAAW+C,GAAIsB,EAAGzB,EAAGI,GAAIqB,EAAG1B,IAG3CO,EAAMmB,EAAGzB,EACLyB,EAAGzB,EAAEvhD,OAAS,GAAKgjD,EAAG1B,EAAEthD,OAAS,EACjC6hD,EAAI9kD,KAAK,CAAE4hD,MAAO,QAGlBkD,EAAI9kD,KAAK,CAAE4hD,MAAO,MAEtBT,EAAcwB,YAAYmC,EAAKmB,EAAG1B,GAE1C,MAEIO,EAAM3D,EAAcD,GAAGe,EAAOuC,EAAG,QAErC,IAAK,IAAI3X,KAAKoV,SACHA,EAAOpV,GAElB,OAAOiY,CACX,IAGR,OAAQ,CACJtD,YAAaJ,EAAyB,CAClC,MAAS,CACL,IAAK,CAAEM,QAAS,WAEpB,IAAK,CACD,IAAK,CAAEA,QAAS,CAAC,SAAU,QAASkB,UAAW,MAEnD,MAAO,CACH,IAAK,CAAElB,QAAS,QAEpB,MAAS,CACL,IAAK,CAAEA,QAAS,CAAC,SAAU,SAAUkB,UAAW,MAEpD,iBAAkB,CACd,EAAK,CAAElB,QAAS,UAEpB,QAAS,CACL,EAAK,CAAEA,QAAS,MAAOkB,UAAW,KAClC,EAAK,CAAElB,QAAS,QAASkB,UAAW,MAExC,aAAc,CACV,IAAK,CAAElB,QAAS,MAAOkB,UAAW,QAG1CF,QAAS,CACL,KAAQ,WAAc,MAAO,CAAEd,MAAO,aAAgB,EACtD,QAAS,SAAUK,EAAQp+C,GAAKo+C,EAAOtJ,IAAM,KAAO90C,EAAI,GAAuB,EAC/E,MAAS,WAAc,MAAO,CAAE+9C,MAAO,aAAgB,EACvD,OAAU,SAAUK,GAChB,IAAI6C,EAAM,GACV,GAAI7C,EAAOtJ,GAAI,CACX,IAAIuN,EAAM/E,EAAcoB,SAASC,OAAO,UAAWP,EAAOtJ,IAAM,IAE5DmM,EADAoB,GAAyB,KAAlBA,EAAIpD,UACL3B,EAAcD,GAAGgF,EAAI1D,OAAQ,MAG7B,CAAEZ,MAAO,KAAM+C,GAAI1C,EAAOtJ,GAExC,CACA,IAAK,IAAI9L,KAAKoV,SACHA,EAAOpV,GAElB,OAAOiY,CACX,IAGR,SAAU,CACNtD,YAAaJ,EAAyB,CAClC,MAAS,CACL,EAAK,CAAEM,QAAS,YAChB,EAAK,CAAEA,QAAS,aAEpB,IAAK,CACD,EAAK,CAAEA,QAAS,CAAC,WAAY,SAAUkB,UAAW,MAEtD,IAAK,CACD,EAAK,CAAElB,QAAS,CAAC,WAAY,QAASkB,UAAW,MAErD,KAAQ,CACJ,IAAK,CAAElB,QAAS,YAGxBgB,QAAS,CACL,MAAS,WAAc,MAAO,CAAEd,MAAO,eAAkB,EACzD,WAAY,SAAUK,GAClB,IAAI6C,EAAM,GAEV,GADA7C,EAAOwC,MAAQxC,EAAOwC,OAAS,GAC3BxC,EAAOwC,MAAMxhD,OAAS,EAAG,CACzB,IAAI8f,EAAIk/B,EAAOwC,MAAMxhD,OAAS,EACpB,IAAN8f,IACAA,EAAI,GAER,IAAK,IAAIzF,EAAI2kC,EAAOwC,MAAMxhD,OAAS,EAAGqa,EAAI,EAAGA,GAAK,EAC9CwnC,EAAI9kD,KAAKiiD,EAAOwC,MAAMhoC,OAAOa,EAAG,IAChCwnC,EAAI9kD,KAAK,CAAE4hD,MAAO,mBAEtBkD,EAAI9kD,KAAKiiD,EAAOwC,MAAMhoC,OAAO,EAAGsG,IAChC+hC,EAAIroB,SACR,MAEIqoB,EAAI9kD,KAAKiiD,EAAOwC,OAEpB,IAAK,IAAI5X,KAAKoV,SACHA,EAAOpV,GAElB,OAAOiY,CACX,EACA,WAAY,SAAU7C,GAClB,IAAI6C,EAAM,GAEV,GADA7C,EAAOwC,MAAQxC,EAAOwC,OAAS,GAC3BxC,EAAOwC,MAAMxhD,OAAS,EAAG,CACzB,IAAI8f,EAAIk/B,EAAOwC,MAAMxhD,OAAS,EAC1Bqa,OAAI,EACR,IAAKA,EAAI,EAAGA,EAAIyF,EAAGzF,GAAK,EACpBwnC,EAAI9kD,KAAKiiD,EAAOwC,MAAMhoC,OAAOa,EAAG,IAChCwnC,EAAI9kD,KAAK,CAAE4hD,MAAO,mBAEtBkD,EAAI9kD,KAAKiiD,EAAOwC,MAAMhoC,OAAOa,GACjC,MAEIwnC,EAAI9kD,KAAKiiD,EAAOwC,OAEpB,IAAK,IAAI5X,KAAKoV,SACHA,EAAOpV,GAElB,OAAOiY,CACX,MAKZ7D,EAAgB,CAChBC,GAAI,SAAUF,EAAOmF,GACjB,IAAKnF,EACD,MAAO,GAIX,IAFA,IAAIoF,EAAM,GACNC,GAAM,EACD/oC,EAAI,EAAGA,EAAI0jC,EAAM/9C,OAAQqa,IAAK,CACnC,IAAIgpC,EAAStF,EAAM1jC,GACG,iBAAXgpC,EACPF,GAAOE,GAGPF,GAAOnF,EAAcsF,KAAKD,GACL,qBAAjBA,EAAO1E,QACPyE,GAAM,GAGlB,CAIA,OAHIF,IAAmBE,GAAOD,IAC1BA,EAAM,IAAMA,EAAM,KAEfA,CACX,EACAI,SAAU,SAAUxF,GAChB,OAAOC,EAAcC,GAAGF,GAAO,EACnC,EACAuF,KAAM,SAAUE,GACZ,IAAIL,EACJ,OAAQK,EAAI7E,OACR,IAAK,WACDwE,EAAM,GACN,IAAIH,EAAK,CACLljC,EAAGk+B,EAAcuF,SAASC,EAAI1jC,GAC9BE,EAAGg+B,EAAcuF,SAASC,EAAIxjC,GAC9B4pB,EAAGoU,EAAcuF,SAASC,EAAI5Z,GAC9BwU,EAAGJ,EAAcuF,SAASC,EAAIpF,GAC9BkD,EAAGtD,EAAcuF,SAASC,EAAIlC,GAC9BC,EAAGvD,EAAcuF,SAASC,EAAIjC,IAE9ByB,EAAGljC,IACCkjC,EAAGljC,EAAE7H,MAAM,YACX+qC,EAAGljC,EAAI,IAAMkjC,EAAGljC,EAAI,KAExBqjC,GAAOH,EAAGljC,EAAI,QAEdkjC,EAAGhjC,GAAKgjC,EAAGpZ,KACXuZ,GAAO,kBACPA,GAAO,iBAAmBH,EAAGhjC,GAAK,IAAM,mBAAqBgjC,EAAGpZ,GAAK,IAAM,KAC3EuZ,GAAO,gBACPA,GAAO,kBACPA,GAAO,sCAAwCH,EAAGhjC,GAAK,IAAM,KAC7DmjC,GAAO,qCAAuCH,EAAGpZ,GAAK,IAAM,OAE5DoZ,EAAG5E,IACC4E,EAAG5E,EAAEnmC,MAAM,YACX+qC,EAAG5E,EAAI,IAAM4E,EAAG5E,EAAI,KAExB+E,GAAOH,EAAG5E,GAEI,OAAdoF,EAAIzB,QACAiB,EAAGzB,GAAKyB,EAAG1B,KACX6B,GAAO,mBAEPH,EAAGzB,IACH4B,GAAO,KAAOH,EAAGzB,EAAI,KAErByB,EAAG1B,IACH6B,GAAO,gBAAkBH,EAAG1B,EAAI,OAGjB,cAAdkC,EAAIzB,OACLiB,EAAGzB,IACH4B,GAAO,kBACPA,GAAO,KAAOH,EAAGzB,EAAI,KAErByB,EAAG1B,IACH6B,GAAO,kBACPA,GAAO,gBAAkBH,EAAG1B,EAAI,QAIhC0B,EAAG1B,IACH6B,GAAO,kBACPA,GAAO,gBAAkBH,EAAG1B,EAAI,MAEhC0B,EAAGzB,IACH4B,GAAO,kBACPA,GAAO,KAAOH,EAAGzB,EAAI,MAG7B,MACJ,IAAK,KAYL,IAAK,gBACD4B,EAAM,YAAcK,EAAI9B,GAAK,IAC7B,MAXJ,IAAK,OACG8B,EAAI9B,GAAGzpC,MAAM,UACburC,EAAI9B,GAAK8B,EAAI9B,GAAGzoC,QAAQ,IAAK,KAAKA,QAAQ,IAAK,aAC/CkqC,EAAM,YAAcK,EAAI9B,GAAK,KAG7ByB,EAAM,UAAYK,EAAI9B,GAAK,IAE/B,MAIJ,IAAK,uBACDyB,EAAM,cAAgBnF,EAAcuF,SAASC,EAAI9B,IACjD,MACJ,IAAK,iCACDyB,EAAM,cAAgBnF,EAAcuF,SAASC,EAAI9B,IACjD,MACJ,IAAK,OAED,KADAyB,EAAMnF,EAAcyF,SAASD,EAAI5B,QAE7B,KAAM,CAAC,kBAAmB,oCAAsC4B,EAAI5B,MAAQ,KAEhF,MACJ,IAAK,OACD,IAAIznC,EAAI,UAAYqpC,EAAI9B,GAAK,KAAO8B,EAAI7B,GAAK,IAC7CwB,EAAM,2BAA6BhpC,EAAI,KAAOA,EAAI,KAAOA,EAAI,KAAOA,EAAI,IACxE,MACJ,IAAK,UACD,IAAIonC,EAAI,UAAYvD,EAAcuF,SAASC,EAAI9B,IAAM,KAAO1D,EAAcuF,SAASC,EAAI7B,IAAM,IAC7FwB,EAAM,2BAA6B5B,EAAI,KAAOA,EAAI,KAAOA,EAAI,KAAOA,EAAI,IACxE,MACJ,IAAK,WA2DL,IAAK,mBACD4B,EAAMK,EAAI9B,GAAK,IACf,MA1DJ,IAAK,UACDyB,EAAM,UAAYnF,EAAcuF,SAASC,EAAI9B,IAAM,KAAO1D,EAAcuF,SAASC,EAAI7B,IAAM,IAC3F,MACJ,IAAK,UACDwB,EAAM,aAAenF,EAAcuF,SAASC,EAAI9B,IAAM,KAAO1D,EAAcuF,SAASC,EAAI7B,IAAM,IAC9F,MACJ,IAAK,WACDwB,EAAM,cAAgBnF,EAAcuF,SAASC,EAAI9B,IAAM,KAAO1D,EAAcuF,SAASC,EAAI7B,IAAM,IAC/F,MACJ,IAAK,aACDwB,EAAM,gBAAkBnF,EAAcuF,SAASC,EAAI9B,IAAM,MAAQ1D,EAAcuF,SAASC,EAAI7B,IAAM,IAClG,MACJ,IAAK,QACDwB,EAAM,YAAcK,EAAIZ,OAAS,KAAO5E,EAAcuF,SAASC,EAAIX,QAAU,KAC7E,MACJ,IAAK,SACDM,EAAM,WAAaK,EAAI7xB,MAAQ,IAC/B,MACJ,IAAK,QACD,IAAI+xB,EAAK,CACLlB,GAAIxE,EAAcuF,SAASC,EAAIhB,IAC/BE,GAAI1E,EAAcuF,SAASC,EAAId,KAE/B7mC,EAAQmiC,EAAc2F,UAAUH,EAAIjoC,GACpCmoC,EAAGlB,IAAMkB,EAAGhB,GACE,QAAVc,EAAIjoC,GAAyB,SAAVioC,EAAIjoC,GAA0B,SAAVioC,EAAIjoC,GAA0B,YAAVioC,EAAIjoC,GAC/DM,EAAQ,SAAWA,EACf6nC,EAAGlB,KACH3mC,EAAQ,aAAe6nC,EAAGlB,GAAK,KAAO3mC,EAAQ,KAE9C6nC,EAAGhB,KAEC7mC,EADU,YAAV2nC,EAAIjoC,EACI,yBAA2BmoC,EAAGhB,GAAK,MAAQ7mC,EAAQ,IAGnD,yBAA2B6nC,EAAGhB,GAAK,MAAQ7mC,EAAQ,KAGnEA,EAAQ,gBAAkBA,EAAQ,SAG9B6nC,EAAGhB,KACH7mC,GAAS,KAAO6nC,EAAGhB,GAAK,MAG5B7mC,EAAQ,oBADRA,GAAS,IAAM6nC,EAAGlB,GAAK,KACc,QAIzC3mC,EAAQ,sBAAwBA,EAAQ,OAE5CsnC,EAAMtnC,EACN,MACJ,IAAK,WACDsnC,EAAMnF,EAAc4F,aAAaJ,EAAI5B,OACrC,MAIJ,IAAK,QACDuB,EAAM,IACN,MACJ,IAAK,WACDA,EAAM,aACN,MACJ,IAAK,aAGL,IAAK,aACDA,EAAM,IACN,MACJ,IAAK,aACDA,EAAM,cACN,MACJ,IAAK,iBACDA,EAAM,cACN,MACJ,IAAK,eACDA,EAAM,MACN,MACJ,IAAK,sBACDA,EAAM,IAAMK,EAAI9B,GAAK,eACrB,MACJ,IAAK,sBACDyB,EAAM,IAAMK,EAAI9B,GAAK,eACrB,MACJ,IAAK,sBACDyB,EAAM,IAAMK,EAAI9B,GAAK,eACrB,MACJ,IAAK,SACDyB,EAAM,YACN,MACJ,IAAK,oBACDA,EAAM,iBACN,MACJ,IAAK,eACDA,EAAM,iCACN,MACJ,IAAK,OACDA,EAAM,YACN,MACJ,IAAK,QACDA,EAAM,WACN,MACJ,IAAK,OACDA,EAAM,UACN,MACJ,IAAK,aACDA,EAAM,gCACN,MACJ,IAAK,QACDA,EAAM,WACN,MACJ,IAAK,QACDA,EAAM,UACN,MACJ,IAAK,IACDA,EAAM,UACN,MACJ,IAAK,IACDA,EAAM,YACN,MACJ,IAAK,WACDA,EAAM,WACN,MACJ,IAAK,IACDA,EAAM,IACN,MACJ,IAAK,MACDA,EAAM,UACN,MACJ,QAEI,KAAM,CAAC,aAAc,gCAE7B,OAAOA,CACX,EACAQ,UAAW,SAAU7jC,GACjB,OAAQA,GACJ,IAAK,KACL,IAAK,IACL,IAAK,IAAU,MAAO,aACtB,IAAK,KAAM,MAAO,YAClB,IAAK,MAAO,MAAO,iBACnB,IAAK,UAAQ,MAAO,kBACpB,IAAK,MACL,IAAK,IAAU,MAAO,oBACtB,IAAK,OAAQ,MAAO,oBACpB,IAAK,OAAQ,MAAO,oBACpB,QAEI,KAAM,CAAC,aAAc,gCAEjC,EACA2jC,SAAU,SAAU3jC,GAChB,OAAQA,GACJ,IAAK,IACL,IAAK,IAAK,MAAO,MACjB,IAAK,IACL,IAAK,IAAK,MAAO,MACjB,IAAK,IACL,IAAK,IAAK,MAAO,YACjB,IAAK,IAAK,MAAO,iBACjB,IAAK,KAAM,MAAO,oDAClB,IAAK,KACL,IAAK,MAAO,MAAO,6DACnB,IAAK,MAAO,MAAO,6DACnB,IAAK,MAAO,MAAO,6BACnB,IAAK,OAAQ,MAAO,qCACpB,IAAK,KAAM,MAAO,iBAClB,IAAK,KAAM,MAAO,gBAClB,IAAK,IAAK,MAAO,MACjB,IAAK,IAAK,MAAO,MACjB,QAEI,KAAM,CAAC,aAAc,gCAEjC,EACA8jC,aAAc,SAAU9jC,GACpB,OAAQA,GACJ,IAAK,IAAK,MAAO,UACjB,IAAK,IAAK,MAAO,UACjB,IAAK,IAAK,MAAO,UACjB,IAAK,IAAK,MAAO,UACjB,IAAK,IAAK,MAAO,UACjB,IAAK,KAAM,MAAO,aAClB,IAAK,KAAM,MAAO,aAClB,IAAK,OAAQ,MAAO,aACpB,IAAK,WACL,IAAK,aAAc,MAAO,iBAC1B,IAAK,IACL,IAAK,MAAO,MAAO,kBACnB,IAAK,IACL,IAAK,MAAO,MAAO,gBACnB,QAEI,KAAM,CAAC,aAAc,gCAEjC","sources":["webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/AllPackages.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/action/ActionConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/ams/AmsConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/ams/AmsItems.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/ams/AmsMappings.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/ams/AmsMethods.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/amscd/AmsCdConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/amscd/AmsCdMappings.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/amscd/AmsCdMethods.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/bbox/BboxConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/boldsymbol/BoldsymbolConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/braket/BraketConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/braket/BraketItems.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/braket/BraketMappings.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/braket/BraketMethods.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/bussproofs/BussproofsConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/bussproofs/BussproofsItems.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/bussproofs/BussproofsMappings.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/bussproofs/BussproofsMethods.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/bussproofs/BussproofsUtil.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/cancel/CancelConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/cases/CasesConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/centernot/CenternotConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/color/ColorConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/color/ColorConstants.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/color/ColorMethods.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/color/ColorUtil.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/colortbl/ColortblConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/colorv2/ColorV2Configuration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/configmacros/ConfigMacrosConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/empheq/EmpheqConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/empheq/EmpheqUtil.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/enclose/EncloseConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/extpfeil/ExtpfeilConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/gensymb/GensymbConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/html/HtmlConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/html/HtmlMethods.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/mathtools/MathtoolsConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/mathtools/MathtoolsItems.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/mathtools/MathtoolsMappings.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/mathtools/MathtoolsMethods.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/mathtools/MathtoolsTags.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/mathtools/MathtoolsUtil.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/mhchem/MhchemConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/newcommand/NewcommandConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/newcommand/NewcommandItems.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/newcommand/NewcommandMappings.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/newcommand/NewcommandMethods.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/newcommand/NewcommandUtil.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/noerrors/NoErrorsConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/noundefined/NoUndefinedConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/physics/PhysicsConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/physics/PhysicsItems.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/physics/PhysicsMappings.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/physics/PhysicsMethods.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/setoptions/SetOptionsConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/tagformat/TagFormatConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/textcomp/TextcompConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/textcomp/TextcompMappings.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/textmacros/TextMacrosConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/textmacros/TextMacrosMappings.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/textmacros/TextMacrosMethods.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/textmacros/TextParser.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/unicode/UnicodeConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/upgreek/UpgreekConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mathjax-full/ts/input/tex/verb/VerbConfiguration.ts","webpack://nbdime-webapp/../../node_modules/mhchemparser/dist/mhchemParser.js"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Loads all the TeX extensions\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport './base/BaseConfiguration.js';\nimport './action/ActionConfiguration.js';\nimport './ams/AmsConfiguration.js';\nimport './amscd/AmsCdConfiguration.js';\nimport './bbox/BboxConfiguration.js';\nimport './boldsymbol/BoldsymbolConfiguration.js';\nimport './braket/BraketConfiguration.js';\nimport './bussproofs/BussproofsConfiguration.js';\nimport './cancel/CancelConfiguration.js';\nimport './cases/CasesConfiguration.js';\nimport './centernot/CenternotConfiguration.js';\nimport './color/ColorConfiguration.js';\nimport './colorv2/ColorV2Configuration.js';\nimport './colortbl/ColortblConfiguration.js';\nimport './configmacros/ConfigMacrosConfiguration.js';\nimport './empheq/EmpheqConfiguration.js';\nimport './enclose/EncloseConfiguration.js';\nimport './extpfeil/ExtpfeilConfiguration.js';\nimport './gensymb/GensymbConfiguration.js';\nimport './html/HtmlConfiguration.js';\nimport './mathtools/MathtoolsConfiguration.js';\nimport './mhchem/MhchemConfiguration.js';\nimport './newcommand/NewcommandConfiguration.js';\nimport './noerrors/NoErrorsConfiguration.js';\nimport './noundefined/NoUndefinedConfiguration.js';\nimport './physics/PhysicsConfiguration.js';\nimport './setoptions/SetOptionsConfiguration.js';\nimport './tagformat/TagFormatConfiguration.js';\nimport './textcomp/TextcompConfiguration.js';\nimport './textmacros/TextMacrosConfiguration.js';\nimport './upgreek/UpgreekConfiguration.js';\nimport './unicode/UnicodeConfiguration.js';\nimport './verb/VerbConfiguration.js';\n\ndeclare const MathJax: any;\nif (typeof MathJax !== 'undefined' && MathJax.loader) {\n  MathJax.loader.preLoad(\n    '[tex]/action',\n    '[tex]/ams',\n    '[tex]/amscd',\n    '[tex]/bbox',\n    '[tex]/boldsymbol',\n    '[tex]/braket',\n    '[tex]/bussproofs',\n    '[tex]/cancel',\n    '[tex]/cases',\n    '[tex]/centernot',\n    '[tex]/color',\n    '[tex]/colorv2',\n    '[tex]/colortbl',\n    '[tex]/empheq',\n    '[tex]/enclose',\n    '[tex]/extpfeil',\n    '[tex]/gensymb',\n    '[tex]/html',\n    '[tex]/mathtools',\n    '[tex]/mhchem',\n    '[tex]/newcommand',\n    '[tex]/noerrors',\n    '[tex]/noundefined',\n    '[tex]/physics',\n    '[tex]/upgreek',\n    '[tex]/unicode',\n    '[tex]/verb',\n    '[tex]/configmacros',\n    '[tex]/tagformat',\n    '[tex]/textcomp',\n    '[tex]/textmacros',\n    '[tex]/setoptions',\n  );\n}\n\nexport const AllPackages: string[] = [\n  'base',\n  'action',\n  'ams',\n  'amscd',\n  'bbox',\n  'boldsymbol',\n  'braket',\n  'bussproofs',\n  'cancel',\n  'cases',\n  'centernot',\n  'color',\n  'colortbl',\n  'empheq',\n  'enclose',\n  'extpfeil',\n  'gensymb',\n  'html',\n  'mathtools',\n  'mhchem',\n  'newcommand',\n  'noerrors',\n  'noundefined',\n  'upgreek',\n  'unicode',\n  'verb',\n  'configmacros',\n  'tagformat',\n  'textcomp',\n  'textmacros'\n];\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the action package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport TexParser from '../TexParser.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport BaseMethods from '../base/BaseMethods.js';\n\n\n// Namespace\nexport let ActionMethods: Record<string, ParseMethod> = {};\n\nActionMethods.Macro = BaseMethods.Macro;\n\n/**\n * Implement \\toggle {math1} {math2} ... \\endtoggle\n *    (as an <maction actiontype=\"toggle\">)\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\nActionMethods.Toggle = function(parser: TexParser, name: string) {\n  const children = [];\n  let arg;\n  while ((arg = parser.GetArgument(name)) !== '\\\\endtoggle') {\n    children.push(\n      new TexParser(arg, parser.stack.env, parser.configuration).mml());\n  }\n  parser.Push(\n    parser.create('node', 'maction', children, {actiontype: 'toggle'}));\n};\n\n\n/**\n * Implement \\mathtip{math}{tip}\n *   (an an <maction actiontype=\"tooltip\">)\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\nActionMethods.Mathtip = function(parser: TexParser, name: string) {\n  const arg = parser.ParseArg(name);\n  const tip = parser.ParseArg(name);\n  parser.Push(\n    parser.create('node', 'maction', [arg, tip], {actiontype: 'tooltip'}));\n};\n\n\nnew CommandMap('action-macros', {\n  toggle:  'Toggle',\n  mathtip: 'Mathtip',\n  texttip: ['Macro', '\\\\mathtip{#1}{\\\\text{#2}}', 2]\n}, ActionMethods);\n\n\nexport const ActionConfiguration = Configuration.create(\n  'action', {handler: {macro: ['action-macros']}}\n);\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the AMS package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport {MultlineItem, FlalignItem} from './AmsItems.js';\nimport {AbstractTags} from '../Tags.js';\nimport {NEW_OPS} from './AmsMethods.js';\nimport './AmsMappings.js';\nimport {CommandMap} from '../SymbolMap.js';\n\n\n/**\n * Standard AMS style tagging.\n * @constructor\n * @extends {AbstractTags}\n */\nexport class AmsTags extends AbstractTags { }\n\n\n/**\n * Init method for AMS package.\n * @param {ParserConfiguration} config The current configuration.\n */\nlet init = function(config: ParserConfiguration) {\n  new CommandMap(NEW_OPS, {}, {});\n  config.append(Configuration.local({handler: {macro: [NEW_OPS]},\n                                    priority: -1}));\n};\n\nexport const AmsConfiguration = Configuration.create(\n  'ams', {\n    handler: {\n      character: ['AMSmath-operatorLetter'],\n      delimiter: ['AMSsymbols-delimiter', 'AMSmath-delimiter'],\n      macro: ['AMSsymbols-mathchar0mi', 'AMSsymbols-mathchar0mo',\n              'AMSsymbols-delimiter', 'AMSsymbols-macros',\n              'AMSmath-mathchar0mo', 'AMSmath-macros', 'AMSmath-delimiter'],\n      environment: ['AMSmath-environment']\n    },\n    items: {\n      [MultlineItem.prototype.kind]: MultlineItem,\n      [FlalignItem.prototype.kind]: FlalignItem,\n    },\n    tags: {'ams': AmsTags},\n    init: init,\n    config: (_config: ParserConfiguration, jax: any)  => {\n      //\n      //  Move multlineWidth from old location to ams block (remove in next version)\n      //\n      if (jax.parseOptions.options.multlineWidth) {\n        jax.parseOptions.options.ams.multlineWidth = jax.parseOptions.options.multlineWidth;\n      }\n      delete jax.parseOptions.options.multlineWidth;\n    },\n    options: {\n      multlineWidth: '',\n      ams: {\n        multlineWidth: '100%',  // The width to use for multline environments.\n        multlineIndent: '1em',  // The margin to use on both sides of multline environments.\n      }\n    }\n  }\n);\n\n\n","/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview StackItems needed for parsing AMS math commands.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {ArrayItem, EqnArrayItem} from '../base/BaseItems.js';\nimport ParseUtil from '../ParseUtil.js';\nimport NodeUtil from '../NodeUtil.js';\nimport TexError from '../TexError.js';\nimport {TexConstant} from '../TexConstants.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\n\n\n/**\n * Item dealing with multiline environments as a special case of arrays. Note,\n * that all other AMS equation environments (e.g., align, split) can be handled\n * by the regular EqnArrayItem class.\n *\n * Handles tagging information according to the given tagging style.\n */\nexport class MultlineItem extends ArrayItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: any, ...args: any[]) {\n    super(factory);\n    this.factory.configuration.tags.start('multline', true, args[0]);\n  }\n\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'multline';\n  }\n\n\n  /**\n   * @override\n   */\n  public EndEntry() {\n    if (this.table.length) {\n      ParseUtil.fixInitialMO(this.factory.configuration, this.nodes);\n    }\n    const shove = this.getProperty('shove');\n    const mtd = this.create('node',\n                            'mtd', this.nodes, shove ? {columnalign: shove} : {});\n    this.setProperty('shove', null);\n    this.row.push(mtd);\n    this.Clear();\n  }\n\n  /**\n   * @override\n   */\n  public EndRow() {\n    if (this.row.length !== 1) {\n      // @test MultlineRowsOneCol\n      throw new TexError(\n        'MultlineRowsOneCol',\n        'The rows within the %1 environment must have exactly one column',\n        'multline');\n    }\n    let row = this.create('node', 'mtr', this.row);\n    this.table.push(row);\n    this.row = [];\n  }\n\n  /**\n   * @override\n   */\n  public EndTable() {\n    super.EndTable();\n    if (this.table.length) {\n      let m = this.table.length - 1, label = -1;\n      if (!NodeUtil.getAttribute(\n        NodeUtil.getChildren(this.table[0])[0], 'columnalign')) {\n        NodeUtil.setAttribute(NodeUtil.getChildren(this.table[0])[0],\n                              'columnalign', TexConstant.Align.LEFT);\n      }\n      if (!NodeUtil.getAttribute(\n        NodeUtil.getChildren(this.table[m])[0], 'columnalign')) {\n        NodeUtil.setAttribute(NodeUtil.getChildren(this.table[m])[0],\n                              'columnalign', TexConstant.Align.RIGHT);\n      }\n      let tag = this.factory.configuration.tags.getTag();\n      if (tag) {\n        label = (this.arraydef.side === TexConstant.Align.LEFT ? 0 : this.table.length - 1);\n        const mtr = this.table[label];\n        const mlabel = this.create('node', 'mlabeledtr',\n                                   [tag].concat(NodeUtil.getChildren(mtr)));\n        NodeUtil.copyAttributes(mtr, mlabel);\n        this.table[label] = mlabel;\n      }\n    }\n    this.factory.configuration.tags.end();\n  }\n}\n\n/**\n * StackItem for handling flalign, xalignat, and xxalignat environments.\n */\nexport class FlalignItem extends EqnArrayItem {\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'flalign';\n  }\n\n\n  /**\n   * @override\n   */\n  constructor(factory: any, public name: string, public numbered: boolean,\n              public padded: boolean, public center: boolean) {\n    super(factory);\n    this.factory.configuration.tags.start(name, numbered, numbered);\n  }\n\n  /**\n   * @override\n   */\n  public EndEntry() {\n    super.EndEntry();\n    const n = this.getProperty('xalignat') as number;\n    if (!n) return;\n    if (this.row.length > n) {\n      throw new TexError('XalignOverflow', 'Extra %1 in row of %2', '&', this.name);\n    }\n  }\n\n\n  /**\n   * @override\n   */\n  public EndRow() {\n    let cell: MmlNode;\n    let row = this.row;\n    //\n    //  For xalignat and xxalignat, pad the row to the expected number if it is too short.\n    //\n    const n = this.getProperty('xalignat') as number;\n    while (row.length < n) {\n      row.push(this.create('node', 'mtd'));\n    }\n    //\n    //  Insert padding cells between pairs of entries, as needed for \"fit\" columns,\n    //    and include initial and end cells if that is needed.\n    //\n    this.row = [];\n    if (this.padded) {\n      this.row.push(this.create('node', 'mtd'));\n    }\n    while ((cell = row.shift())) {\n      this.row.push(cell);\n      cell = row.shift();\n      if (cell) this.row.push(cell);\n      if (row.length || this.padded) {\n        this.row.push(this.create('node', 'mtd'));\n      }\n    }\n    //\n    if (this.row.length > this.maxrow) {\n      this.maxrow = this.row.length;\n    }\n    super.EndRow();\n    //\n    // For full-width environments with labels that aren't supposed to take up space,\n    //   move the label into a zero-width mpadded element that laps in the proper direction.\n    //\n    const mtr = this.table[this.table.length - 1];\n    if (this.getProperty('zeroWidthLabel') && mtr.isKind('mlabeledtr')) {\n      const mtd = NodeUtil.getChildren(mtr)[0];\n      const side = this.factory.configuration.options['tagSide'];\n      const def = {width: 0, ...(side === 'right' ? {lspace: '-1width'} : {})};\n      const mpadded = this.create('node', 'mpadded', NodeUtil.getChildren(mtd), def);\n      mtd.setChildren([mpadded]);\n    }\n  }\n\n\n  /**\n   * @override\n   */\n  public EndTable() {\n    super.EndTable();\n    if (this.center) {\n      //\n      //  If there is only one equation (one pair):\n      //    Don't make it 100%, and don't change the indentalign.\n      //\n      if (this.maxrow <= 2) {\n        const def = this.arraydef;\n        delete def.width;\n        delete this.global.indentalign;\n      }\n    }\n  }\n\n}\n","\n/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing of the AMS math package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {AmsMethods} from './AmsMethods.js';\nimport *  as sm from '../SymbolMap.js';\nimport {TexConstant} from '../TexConstants.js';\nimport ParseMethods from '../ParseMethods.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {MATHSPACE} from '../../../util/lengths.js';\n\n\n/**\n * Operators from the AMS Math package.\n */\nnew sm.CharacterMap('AMSmath-mathchar0mo', ParseMethods.mathchar0mo, {\n  iiiint:     ['\\u2A0C', {texClass: TEXCLASS.OP}]\n});\n\n/**\n * Extra characters that are letters in \\operatorname\n */\nnew sm.RegExpMap('AMSmath-operatorLetter', AmsMethods.operatorLetter, /[-*]/i);\n\n/**\n * Macros from the AMS Math package.\n */\nnew sm.CommandMap('AMSmath-macros', {\n  mathring:   ['Accent', '02DA'],  // or 0x30A\n  nobreakspace: 'Tilde',\n  negmedspace:    ['Spacer', MATHSPACE.negativemediummathspace],\n  negthickspace:  ['Spacer', MATHSPACE.negativethickmathspace],\n\n  idotsint:   ['MultiIntegral', '\\\\int\\\\cdots\\\\int'],\n\n  dddot:      ['Accent', '20DB'],\n  ddddot:     ['Accent', '20DC'],\n\n  sideset:     'SideSet',\n\n  boxed:      ['Macro', '\\\\fbox{$\\\\displaystyle{#1}$}', 1],\n\n  tag:         'HandleTag',\n  notag:       'HandleNoTag',\n  eqref:       ['HandleRef', true],\n\n  substack:   ['Macro', '\\\\begin{subarray}{c}#1\\\\end{subarray}', 1],\n\n  injlim:     ['NamedOp', 'inj&thinsp;lim'],\n  projlim:    ['NamedOp', 'proj&thinsp;lim'],\n  varliminf:  ['Macro', '\\\\mathop{\\\\underline{\\\\mmlToken{mi}{lim}}}'],\n  varlimsup:  ['Macro', '\\\\mathop{\\\\overline{\\\\mmlToken{mi}{lim}}}'],\n  varinjlim:  ['Macro', '\\\\mathop{\\\\underrightarrow{\\\\mmlToken{mi}{lim}}}'],\n  varprojlim: ['Macro', '\\\\mathop{\\\\underleftarrow{\\\\mmlToken{mi}{lim}}}'],\n\n  DeclareMathOperator: 'HandleDeclareOp',\n  operatorname:        'HandleOperatorName',\n\n  genfrac:     'Genfrac',\n  frac:       ['Genfrac', '', '', '', ''],\n  tfrac:      ['Genfrac', '', '', '', '1'],\n  dfrac:      ['Genfrac', '', '', '', '0'],\n  binom:      ['Genfrac', '(', ')', '0', ''],\n  tbinom:     ['Genfrac', '(', ')', '0', '1'],\n  dbinom:     ['Genfrac', '(', ')', '0', '0'],\n\n  cfrac:       'CFrac',\n\n  shoveleft:  ['HandleShove', TexConstant.Align.LEFT],\n  shoveright: ['HandleShove', TexConstant.Align.RIGHT],\n\n  xrightarrow: ['xArrow', 0x2192, 5, 10],\n  xleftarrow:  ['xArrow', 0x2190, 10, 5]\n}, AmsMethods);\n\n\n/**\n * Environments from the AMS Math package.\n */\nnew sm.EnvironmentMap('AMSmath-environment', ParseMethods.environment, {\n  'equation*':   ['Equation', null, false],\n  'eqnarray*':   ['EqnArray', null, false, true, 'rcl',\n                  ParseUtil.cols(0, MATHSPACE.thickmathspace), '.5em'],\n  align:         ['EqnArray', null, true, true,  'rl',  ParseUtil.cols(0, 2)],\n  'align*':      ['EqnArray', null, false, true, 'rl',  ParseUtil.cols(0, 2)],\n  multline:      ['Multline', null, true],\n  'multline*':   ['Multline', null, false],\n  split:         ['EqnArray', null, false, false, 'rl', ParseUtil.cols(0)],\n  gather:        ['EqnArray', null, true, true,  'c'],\n  'gather*':     ['EqnArray', null, false, true, 'c'],\n\n  alignat:       ['AlignAt', null, true, true],\n  'alignat*':    ['AlignAt', null, false, true],\n  alignedat:     ['AlignAt', null, false, false],\n\n  aligned:       ['AmsEqnArray', null, null, null, 'rl', ParseUtil.cols(0, 2), '.5em', 'D'],\n  gathered:      ['AmsEqnArray', null, null, null, 'c', null, '.5em', 'D'],\n\n  xalignat:      ['XalignAt', null, true, true],\n  'xalignat*':   ['XalignAt', null, false, true],\n  xxalignat:     ['XalignAt', null, false, false],\n  flalign:       ['FlalignArray', null, true, false, true, 'rlc', 'auto auto fit'],\n  'flalign*':    ['FlalignArray', null, false, false, true, 'rlc', 'auto auto fit'],\n\n  subarray:      ['Array', null, null, null, null, ParseUtil.cols(0), '0.1em', 'S', 1],\n  smallmatrix:   ['Array', null, null, null, 'c', ParseUtil.cols(1 / 3),\n                  '.2em', 'S', 1],\n  matrix:       ['Array', null, null, null, 'c'],\n  pmatrix:      ['Array', null, '(', ')', 'c'],\n  bmatrix:      ['Array', null, '[', ']', 'c'],\n  Bmatrix:      ['Array', null, '\\\\{', '\\\\}', 'c'],\n  vmatrix:      ['Array', null, '\\\\vert', '\\\\vert', 'c'],\n  Vmatrix:      ['Array', null, '\\\\Vert', '\\\\Vert', 'c'],\n  cases:        ['Array', null, '\\\\{', '.', 'll', null, '.2em', 'T']\n}, AmsMethods);\n\n\n/**\n * Delimiters from the AMS Math package.\n */\nnew sm.DelimiterMap('AMSmath-delimiter', ParseMethods.delimiter, {\n  '\\\\lvert':     ['\\u007C', {texClass: TEXCLASS.OPEN}],\n  '\\\\rvert':     ['\\u007C', {texClass: TEXCLASS.CLOSE}],\n  '\\\\lVert':     ['\\u2016', {texClass: TEXCLASS.OPEN}],\n  '\\\\rVert':     ['\\u2016', {texClass: TEXCLASS.CLOSE}]\n});\n\n\n/**\n * Identifiers from the AMS Symbols package.\n */\nnew sm.CharacterMap('AMSsymbols-mathchar0mi', ParseMethods.mathchar0mi, {\n  // Lowercase Greek letters\n  digamma:                '\\u03DD',\n  varkappa:               '\\u03F0',\n\n  // Uppercase Greek letters\n  varGamma:               ['\\u0393', {mathvariant: TexConstant.Variant.ITALIC}],\n  varDelta:               ['\\u0394', {mathvariant: TexConstant.Variant.ITALIC}],\n  varTheta:               ['\\u0398', {mathvariant: TexConstant.Variant.ITALIC}],\n  varLambda:              ['\\u039B', {mathvariant: TexConstant.Variant.ITALIC}],\n  varXi:                  ['\\u039E', {mathvariant: TexConstant.Variant.ITALIC}],\n  varPi:                  ['\\u03A0', {mathvariant: TexConstant.Variant.ITALIC}],\n  varSigma:               ['\\u03A3', {mathvariant: TexConstant.Variant.ITALIC}],\n  varUpsilon:             ['\\u03A5', {mathvariant: TexConstant.Variant.ITALIC}],\n  varPhi:                 ['\\u03A6', {mathvariant: TexConstant.Variant.ITALIC}],\n  varPsi:                 ['\\u03A8', {mathvariant: TexConstant.Variant.ITALIC}],\n  varOmega:               ['\\u03A9', {mathvariant: TexConstant.Variant.ITALIC}],\n\n  // Hebrew letters\n  beth:                   '\\u2136',\n  gimel:                  '\\u2137',\n  daleth:                 '\\u2138',\n\n  // Miscellaneous symbols\n  //    hbar:                   '\\u0127',  // in TeX/jax.js\n  backprime:              ['\\u2035', {variantForm: true}],\n  hslash:                 '\\u210F',\n  varnothing:             ['\\u2205', {variantForm: true}],\n  blacktriangle:          '\\u25B4',\n  triangledown:           ['\\u25BD', {variantForm: true}],\n  blacktriangledown:      '\\u25BE',\n  square:                 '\\u25FB',\n  Box:                    '\\u25FB',\n  blacksquare:            '\\u25FC',\n  lozenge:                '\\u25CA',\n  Diamond:                '\\u25CA',\n  blacklozenge:           '\\u29EB',\n  circledS:               ['\\u24C8', {mathvariant: TexConstant.Variant.NORMAL}],\n  bigstar:                '\\u2605',\n  //    angle:                  '\\u2220',  // in TeX/jax.js\n  sphericalangle:         '\\u2222',\n  measuredangle:          '\\u2221',\n  nexists:                '\\u2204',\n  complement:             '\\u2201',\n  mho:                    '\\u2127',\n  eth:                    ['\\u00F0', {mathvariant: TexConstant.Variant.NORMAL}],\n  Finv:                   '\\u2132',\n  diagup:                 '\\u2571',\n  Game:                   '\\u2141',\n  diagdown:               '\\u2572',\n  Bbbk:                   ['\\u006B',\n                           {mathvariant: TexConstant.Variant.DOUBLESTRUCK}],\n\n  yen:                    '\\u00A5',\n  circledR:               '\\u00AE',\n  checkmark:              '\\u2713',\n  maltese:                '\\u2720'\n});\n\n\n/**\n * Operators from the AMS Symbols package.\n */\nnew sm.CharacterMap('AMSsymbols-mathchar0mo', ParseMethods.mathchar0mo, {\n  // Binary operators\n  dotplus:                '\\u2214',\n  ltimes:                 '\\u22C9',\n  smallsetminus:          ['\\u2216', {variantForm: true}],\n  rtimes:                 '\\u22CA',\n  Cap:                    '\\u22D2',\n  doublecap:              '\\u22D2',\n  leftthreetimes:         '\\u22CB',\n  Cup:                    '\\u22D3',\n  doublecup:              '\\u22D3',\n  rightthreetimes:        '\\u22CC',\n  barwedge:               '\\u22BC',\n  curlywedge:             '\\u22CF',\n  veebar:                 '\\u22BB',\n  curlyvee:               '\\u22CE',\n  doublebarwedge:         '\\u2A5E',\n  boxminus:               '\\u229F',\n  circleddash:            '\\u229D',\n  boxtimes:               '\\u22A0',\n  circledast:             '\\u229B',\n  boxdot:                 '\\u22A1',\n  circledcirc:            '\\u229A',\n  boxplus:                '\\u229E',\n  centerdot:              ['\\u22C5', {variantForm: true}],\n  divideontimes:          '\\u22C7',\n  intercal:               '\\u22BA',\n\n  // Binary relations\n  leqq:                   '\\u2266',\n  geqq:                   '\\u2267',\n  leqslant:               '\\u2A7D',\n  geqslant:               '\\u2A7E',\n  eqslantless:            '\\u2A95',\n  eqslantgtr:             '\\u2A96',\n  lesssim:                '\\u2272',\n  gtrsim:                 '\\u2273',\n  lessapprox:             '\\u2A85',\n  gtrapprox:              '\\u2A86',\n  approxeq:               '\\u224A',\n  lessdot:                '\\u22D6',\n  gtrdot:                 '\\u22D7',\n  lll:                    '\\u22D8',\n  llless:                 '\\u22D8',\n  ggg:                    '\\u22D9',\n  gggtr:                  '\\u22D9',\n  lessgtr:                '\\u2276',\n  gtrless:                '\\u2277',\n  lesseqgtr:              '\\u22DA',\n  gtreqless:              '\\u22DB',\n  lesseqqgtr:             '\\u2A8B',\n  gtreqqless:             '\\u2A8C',\n  doteqdot:               '\\u2251',\n  Doteq:                  '\\u2251',\n  eqcirc:                 '\\u2256',\n  risingdotseq:           '\\u2253',\n  circeq:                 '\\u2257',\n  fallingdotseq:          '\\u2252',\n  triangleq:              '\\u225C',\n  backsim:                '\\u223D',\n  thicksim:               ['\\u223C', {variantForm: true}],\n  backsimeq:              '\\u22CD',\n  thickapprox:            ['\\u2248', {variantForm: true}],\n  subseteqq:              '\\u2AC5',\n  supseteqq:              '\\u2AC6',\n  Subset:                 '\\u22D0',\n  Supset:                 '\\u22D1',\n  sqsubset:               '\\u228F',\n  sqsupset:               '\\u2290',\n  preccurlyeq:            '\\u227C',\n  succcurlyeq:            '\\u227D',\n  curlyeqprec:            '\\u22DE',\n  curlyeqsucc:            '\\u22DF',\n  precsim:                '\\u227E',\n  succsim:                '\\u227F',\n  precapprox:             '\\u2AB7',\n  succapprox:             '\\u2AB8',\n  vartriangleleft:        '\\u22B2',\n  lhd:                    '\\u22B2',\n  vartriangleright:       '\\u22B3',\n  rhd:                    '\\u22B3',\n  trianglelefteq:         '\\u22B4',\n  unlhd:                  '\\u22B4',\n  trianglerighteq:        '\\u22B5',\n  unrhd:                  '\\u22B5',\n  vDash:                  ['\\u22A8', {variantForm: true}],\n  Vdash:                  '\\u22A9',\n  Vvdash:                 '\\u22AA',\n  smallsmile:             ['\\u2323', {variantForm: true}],\n  shortmid:               ['\\u2223', {variantForm: true}],\n  smallfrown:             ['\\u2322', {variantForm: true}],\n  shortparallel:          ['\\u2225', {variantForm: true}],\n  bumpeq:                 '\\u224F',\n  between:                '\\u226C',\n  Bumpeq:                 '\\u224E',\n  pitchfork:              '\\u22D4',\n  varpropto:              ['\\u221D', {variantForm: true}],\n  backepsilon:            '\\u220D',\n  blacktriangleleft:      '\\u25C2',\n  blacktriangleright:     '\\u25B8',\n  therefore:              '\\u2234',\n  because:                '\\u2235',\n  eqsim:                  '\\u2242',\n  vartriangle:            ['\\u25B3', {variantForm: true}],\n  Join:                   '\\u22C8',\n\n  // Negated relations\n  nless:                  '\\u226E',\n  ngtr:                   '\\u226F',\n  nleq:                   '\\u2270',\n  ngeq:                   '\\u2271',\n  nleqslant:              ['\\u2A87', {variantForm: true}],\n  ngeqslant:              ['\\u2A88', {variantForm: true}],\n  nleqq:                  ['\\u2270', {variantForm: true}],\n  ngeqq:                  ['\\u2271', {variantForm: true}],\n  lneq:                   '\\u2A87',\n  gneq:                   '\\u2A88',\n  lneqq:                  '\\u2268',\n  gneqq:                  '\\u2269',\n  lvertneqq:              ['\\u2268', {variantForm: true}],\n  gvertneqq:              ['\\u2269', {variantForm: true}],\n  lnsim:                  '\\u22E6',\n  gnsim:                  '\\u22E7',\n  lnapprox:               '\\u2A89',\n  gnapprox:               '\\u2A8A',\n  nprec:                  '\\u2280',\n  nsucc:                  '\\u2281',\n  npreceq:                ['\\u22E0', {variantForm: true}],\n  nsucceq:                ['\\u22E1', {variantForm: true}],\n  precneqq:               '\\u2AB5',\n  succneqq:               '\\u2AB6',\n  precnsim:               '\\u22E8',\n  succnsim:               '\\u22E9',\n  precnapprox:            '\\u2AB9',\n  succnapprox:            '\\u2ABA',\n  nsim:                   '\\u2241',\n  ncong:                  '\\u2247',\n  nshortmid:              ['\\u2224', {variantForm: true}],\n  nshortparallel:         ['\\u2226', {variantForm: true}],\n  nmid:                   '\\u2224',\n  nparallel:              '\\u2226',\n  nvdash:                 '\\u22AC',\n  nvDash:                 '\\u22AD',\n  nVdash:                 '\\u22AE',\n  nVDash:                 '\\u22AF',\n  ntriangleleft:          '\\u22EA',\n  ntriangleright:         '\\u22EB',\n  ntrianglelefteq:        '\\u22EC',\n  ntrianglerighteq:       '\\u22ED',\n  nsubseteq:              '\\u2288',\n  nsupseteq:              '\\u2289',\n  nsubseteqq:             ['\\u2288', {variantForm: true}],\n  nsupseteqq:             ['\\u2289', {variantForm: true}],\n  subsetneq:              '\\u228A',\n  supsetneq:              '\\u228B',\n  varsubsetneq:           ['\\u228A', {variantForm: true}],\n  varsupsetneq:           ['\\u228B', {variantForm: true}],\n  subsetneqq:             '\\u2ACB',\n  supsetneqq:             '\\u2ACC',\n  varsubsetneqq:          ['\\u2ACB', {variantForm: true}],\n  varsupsetneqq:          ['\\u2ACC', {variantForm: true}],\n\n\n  // Arrows\n  leftleftarrows:         '\\u21C7',\n  rightrightarrows:       '\\u21C9',\n  leftrightarrows:        '\\u21C6',\n  rightleftarrows:        '\\u21C4',\n  Lleftarrow:             '\\u21DA',\n  Rrightarrow:            '\\u21DB',\n  twoheadleftarrow:       '\\u219E',\n  twoheadrightarrow:      '\\u21A0',\n  leftarrowtail:          '\\u21A2',\n  rightarrowtail:         '\\u21A3',\n  looparrowleft:          '\\u21AB',\n  looparrowright:         '\\u21AC',\n  leftrightharpoons:      '\\u21CB',\n  rightleftharpoons:      ['\\u21CC', {variantForm: true}],\n  curvearrowleft:         '\\u21B6',\n  curvearrowright:        '\\u21B7',\n  circlearrowleft:        '\\u21BA',\n  circlearrowright:       '\\u21BB',\n  Lsh:                    '\\u21B0',\n  Rsh:                    '\\u21B1',\n  upuparrows:             '\\u21C8',\n  downdownarrows:         '\\u21CA',\n  upharpoonleft:          '\\u21BF',\n  upharpoonright:         '\\u21BE',\n  downharpoonleft:        '\\u21C3',\n  restriction:            '\\u21BE',\n  multimap:               '\\u22B8',\n  downharpoonright:       '\\u21C2',\n  leftrightsquigarrow:    '\\u21AD',\n  rightsquigarrow:        '\\u21DD',\n  leadsto:                '\\u21DD',\n  dashrightarrow:         '\\u21E2',\n  dashleftarrow:          '\\u21E0',\n\n  // Negated arrows\n  nleftarrow:             '\\u219A',\n  nrightarrow:            '\\u219B',\n  nLeftarrow:             '\\u21CD',\n  nRightarrow:            '\\u21CF',\n  nleftrightarrow:        '\\u21AE',\n  nLeftrightarrow:        '\\u21CE'\n});\n\n\n/**\n * Delimiters from the AMS Symbols package.\n */\nnew sm.DelimiterMap('AMSsymbols-delimiter', ParseMethods.delimiter, {\n  // corners\n  '\\\\ulcorner':           '\\u231C',\n  '\\\\urcorner':           '\\u231D',\n  '\\\\llcorner':           '\\u231E',\n  '\\\\lrcorner':           '\\u231F'\n});\n\n\n/**\n * Macros from the AMS Symbols package.\n */\nnew sm.CommandMap('AMSsymbols-macros', {\n  implies:    ['Macro', '\\\\;\\\\Longrightarrow\\\\;'],\n  impliedby:  ['Macro', '\\\\;\\\\Longleftarrow\\\\;']\n}, AmsMethods);\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview The AMS Parse methods.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {StackItem} from '../StackItem.js';\nimport {ParseMethod} from '../Types.js';\nimport ParseUtil from '../ParseUtil.js';\nimport ParseMethods from '../ParseMethods.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {TexConstant} from '../TexConstants.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {Macro} from '../Symbol.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ArrayItem} from '../base/BaseItems.js';\nimport {FlalignItem} from './AmsItems.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {MmlMunderover} from '../../../core/MmlTree/MmlNodes/munderover.js';\nimport {MmlNode, AbstractMmlTokenNode} from '../../../core/MmlTree/MmlNode.js';\n\n\n// Namespace\nexport const AmsMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Handle AMS array environments.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n * @param {boolean} numbered Environment numbered.\n * @param {boolean} taggable Environment taggable (e.g., align* is taggable,\n *     split is not).\n * @param {string} align Column alignment.\n * @param {string} spacing Column spacing.\n * @param {string} style Display style indicator.\n */\nAmsMethods.AmsEqnArray = function(parser: TexParser, begin: StackItem,\n                                      numbered: boolean, taggable: boolean,\n                                      align: string, spacing: string,\n                                      style: string) {\n  // @test Aligned, Gathered\n  const args = parser.GetBrackets('\\\\begin{' + begin.getName() + '}');\n  const array = BaseMethods.EqnArray(parser, begin, numbered, taggable, align, spacing, style);\n  return ParseUtil.setArrayAlign(array as ArrayItem, args);\n};\n\n\n/**\n * Handle AMS  alignat environments.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n * @param {boolean} numbered Environment numbered.\n * @param {boolean} taggable Environment taggable (e.g., align* is taggable,\n *     split is not).\n */\nAmsMethods.AlignAt = function(parser: TexParser, begin: StackItem,\n                              numbered: boolean, taggable: boolean) {\n  const name = begin.getName();\n  let n, valign, align = '', spacing = [];\n  if (!taggable) {\n    // @test Alignedat\n    valign = parser.GetBrackets('\\\\begin{' + name + '}');\n  }\n  n = parser.GetArgument('\\\\begin{' + name + '}');\n  if (n.match(/[^0-9]/)) {\n    // @test PositiveIntegerArg\n    throw new TexError('PositiveIntegerArg',\n                        'Argument to %1 must me a positive integer',\n                        '\\\\begin{' + name + '}');\n  }\n  let count = parseInt(n, 10);\n  while (count > 0) {\n    align  += 'rl';\n    spacing.push('0em 0em');\n    count--;\n  }\n  let spaceStr = spacing.join(' ');\n  if (taggable) {\n    // @test Alignat, Alignat Star\n    return AmsMethods.EqnArray(parser, begin, numbered, taggable, align, spaceStr);\n  }\n  // @test Alignedat\n  let array = AmsMethods.EqnArray(parser, begin, numbered, taggable, align, spaceStr);\n  return ParseUtil.setArrayAlign(array as ArrayItem, valign);\n};\n\n\n/**\n * Implements multline environment (mostly handled through STACKITEM below)\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n * @param {boolean} numbered Environment numbered.\n */\nAmsMethods.Multline = function (parser: TexParser, begin: StackItem, numbered: boolean) {\n  // @test Shove*, Multline\n  parser.Push(begin);\n  ParseUtil.checkEqnEnv(parser);\n  const item = parser.itemFactory.create('multline', numbered, parser.stack) as ArrayItem;\n  item.arraydef = {\n    displaystyle: true,\n    rowspacing: '.5em',\n    columnspacing: '100%',\n    width: parser.options.ams['multlineWidth'],\n    side: parser.options['tagSide'],\n    minlabelspacing: parser.options['tagIndent'],\n    framespacing: parser.options.ams['multlineIndent'] + ' 0',\n    frame: '',   // Use frame spacing with no actual frame\n    'data-width-includes-label': true // take label space out of 100% width\n  };\n  return item;\n};\n\n\n/**\n * Generate an align at environment.\n * @param {TexParser} parser The current TeX parser.\n * @param {StackItem} begin The begin stackitem.\n * @param {boolean} numbered Is this a numbered array.\n * @param {boolean} padded Is it padded.\n */\nAmsMethods.XalignAt = function(parser: TexParser, begin: StackItem,\n                                  numbered: boolean, padded: boolean) {\n  let n = parser.GetArgument('\\\\begin{' + begin.getName() + '}');\n  if (n.match(/[^0-9]/)) {\n    throw new TexError('PositiveIntegerArg',\n                       'Argument to %1 must me a positive integer',\n                       '\\\\begin{' + begin.getName() + '}');\n  }\n  const align = (padded ? 'crl' : 'rlc');\n  const width = (padded ? 'fit auto auto' : 'auto auto fit');\n  const item = AmsMethods.FlalignArray(parser, begin, numbered, padded, false, align, width, true) as FlalignItem;\n  item.setProperty('xalignat', 2 * parseInt(n));\n  return item;\n};\n\n\n/**\n * Generate an flalign environment.\n * @param {TexParser} parser The current TeX parser.\n * @param {StackItem} begin The begin stackitem.\n * @param {boolean} numbered Is this a numbered array.\n * @param {boolean} padded Is it padded.\n * @param {boolean} center Is it centered.\n * @param {string} align The horizontal alignment for columns\n * @param {string} width The column widths of the table\n * @param {boolean} zeroWidthLabel True if the label should be in llap/rlap\n */\nAmsMethods.FlalignArray = function(parser: TexParser, begin: StackItem, numbered: boolean,\n                                  padded: boolean, center: boolean, align: string,\n                                  width: string, zeroWidthLabel: boolean = false) {\n  parser.Push(begin);\n  ParseUtil.checkEqnEnv(parser);\n  align = align\n    .split('')\n    .join(' ')\n    .replace(/r/g, 'right')\n    .replace(/l/g, 'left')\n    .replace(/c/g, 'center');\n  const item = parser.itemFactory.create(\n    'flalign', begin.getName(), numbered, padded, center, parser.stack) as FlalignItem;\n  item.arraydef = {\n    width: '100%',\n    displaystyle: true,\n    columnalign: align,\n    columnspacing: '0em',\n    columnwidth: width,\n    rowspacing: '3pt',\n    side: parser.options['tagSide'],\n    minlabelspacing: (zeroWidthLabel ? '0' : parser.options['tagIndent']),\n    'data-width-includes-label': true,\n  };\n  item.setProperty('zeroWidthLabel', zeroWidthLabel);\n  return item;\n};\n\n\nexport const NEW_OPS = 'ams-declare-ops';\n\n/**\n * Handle DeclareMathOperator.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsMethods.HandleDeclareOp =  function (parser: TexParser, name: string) {\n  let star = (parser.GetStar() ? '*' : '');\n  let cs = ParseUtil.trimSpaces(parser.GetArgument(name));\n  if (cs.charAt(0) === '\\\\') {\n    cs = cs.substr(1);\n  }\n  let op = parser.GetArgument(name);\n  (parser.configuration.handlers.retrieve(NEW_OPS) as CommandMap).\n    add(cs, new Macro(cs, AmsMethods.Macro, [`\\\\operatorname${star}{${op}}`]));\n};\n\n\n/**\n * Handle operatorname.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsMethods.HandleOperatorName = function(parser: TexParser, name: string) {\n  // @test Operatorname\n  const star = parser.GetStar();\n  //\n  //  Parse the argument using operator letters and grouping multiple letters.\n  //\n  let op = ParseUtil.trimSpaces(parser.GetArgument(name));\n  let mml = new TexParser(op, {\n    ...parser.stack.env,\n    font: TexConstant.Variant.NORMAL,\n    multiLetterIdentifiers: /^[-*a-z]+/i as any,\n    operatorLetters: true\n  }, parser.configuration).mml();\n  //\n  //  If we get something other than a single mi, wrap in a TeXAtom.\n  //\n  if (!mml.isKind('mi')) {\n    mml = parser.create('node', 'TeXAtom', [mml]);\n  }\n  //\n  //  Mark the limit properties and the TeX class.\n  //\n  NodeUtil.setProperties(mml, {movesupsub: star, movablelimits: true, texClass: TEXCLASS.OP});\n  //\n  //  Skip a following \\limits macro if not a starred operator\n  //\n  if (!star) {\n    const c = parser.GetNext(), i = parser.i;\n    if (c === '\\\\' && ++parser.i && parser.GetCS() !== 'limits') {\n      parser.i = i;\n    }\n  }\n  //\n  parser.Push(mml);\n};\n\n/**\n * Handle sideset.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsMethods.SideSet = function (parser: TexParser, name: string) {\n  //\n  //  Get the pre- and post-scripts, and any extra material from the arguments\n  //\n  const [preScripts, preRest] = splitSideSet(parser.ParseArg(name));\n  const [postScripts, postRest] = splitSideSet(parser.ParseArg(name));\n  const base = parser.ParseArg(name);\n  let mml = base;\n  //\n  //  If there are pre-scripts...\n  //\n  if (preScripts) {\n    //\n    //  If there is other material...\n    //\n    if (preRest) {\n      //\n      //  Replace the empty base of the prescripts with a phantom element of the\n      //    original base, with width 0 (but still of the correct height and depth).\n      //    so the scripts will be at the right heights.\n      //\n      preScripts.replaceChild(\n        parser.create('node', 'mphantom', [\n          parser.create('node', 'mpadded', [ParseUtil.copyNode(base, parser)], {width: 0})\n        ]),\n        NodeUtil.getChildAt(preScripts, 0)\n      );\n    } else {\n      //\n      //  If there is no extra meterial, make a mmultiscripts element\n      //\n      mml = parser.create('node', 'mmultiscripts', [base]);\n      //\n      //  Add any postscripts\n      //\n      if (postScripts) {\n        NodeUtil.appendChildren(mml, [\n          NodeUtil.getChildAt(postScripts, 1) || parser.create('node', 'none'),\n          NodeUtil.getChildAt(postScripts, 2) || parser.create('node', 'none')\n        ]);\n      }\n      //\n      //  Add the prescripts (left aligned)\n      //\n      NodeUtil.setProperty(mml, 'scriptalign', 'left');\n      NodeUtil.appendChildren(mml, [\n        parser.create('node', 'mprescripts'),\n        NodeUtil.getChildAt(preScripts, 1) || parser.create('node', 'none'),\n        NodeUtil.getChildAt(preScripts, 2) || parser.create('node', 'none')\n      ]);\n    }\n  }\n  //\n  //  If there are postscripts and we didn't make a mmultiscript element above...\n  //\n  if (postScripts && mml === base) {\n    //\n    //  Replace the emtpy base with actual base, and use that as the mml\n    //\n    postScripts.replaceChild(base, NodeUtil.getChildAt(postScripts, 0));\n    mml = postScripts;\n  }\n  //\n  //  Put the needed pieces into a TeXAtom of class OP.\n  //  Note that the postScripts are in the mml element,\n  //    either as part of the mmultiscripts node, or the\n  //    msubsup with the base inserted into it.\n  //\n  const mrow = parser.create('node', 'TeXAtom', [], {texClass: TEXCLASS.OP, movesupsub: true, movablelimits: true});\n  if (preRest) {\n    preScripts && mrow.appendChild(preScripts);\n    mrow.appendChild(preRest);\n  }\n  mrow.appendChild(mml);\n  postRest && mrow.appendChild(postRest);\n  parser.Push(mrow);\n};\n\n/**\n * Utility for breaking the \\sideset scripts from any other material.\n * @param {MmlNode} mml The node to check.\n * @return {[MmlNode, MmlNode]} The msubsup with the scripts together with any extra nodes.\n */\nfunction splitSideSet(mml: MmlNode): [MmlNode, MmlNode] {\n    if (!mml || (mml.isInferred && mml.childNodes.length === 0)) return [null, null];\n    if (mml.isKind('msubsup') && checkSideSetBase(mml)) return [mml, null];\n    const child = NodeUtil.getChildAt(mml, 0);\n    if (!(mml.isInferred && child && checkSideSetBase(child))) return [null, mml];\n    mml.childNodes.splice(0, 1); // remove first child\n    return [child, mml];\n}\n\n/**\n * Utility for checking if a \\sideset argument has scripts with an empty base.\n * @param {MmlNode} mml The node to check.\n * @return {boolean} True if the base is not and empty mi element.\n */\nfunction checkSideSetBase(mml: MmlNode): boolean {\n  const base = mml.childNodes[0];\n  return base && base.isKind('mi') && (base as AbstractMmlTokenNode).getText() === '';\n}\n\n\n/**\n * Handle extra letters in \\operatorname (- and *), default to normal otherwise.\n * @param {TexParser} parser The calling parser.\n * @param {string} c The letter being checked\n */\nAmsMethods.operatorLetter = function (parser: TexParser, c: string) {\n  return parser.stack.env.operatorLetters ? ParseMethods.variable(parser, c) : false;\n};\n\n\n/**\n * Handle multi integral signs.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} integral The actual integral sign.\n */\nAmsMethods.MultiIntegral = function(parser: TexParser, name: string,\n                                    integral: string) {\n  let next = parser.GetNext();\n  if (next === '\\\\') {\n    // @test MultiInt with Command\n    let i = parser.i;\n    next = parser.GetArgument(name);\n    parser.i = i;\n    if (next === '\\\\limits') {\n      if (name === '\\\\idotsint') {\n       // @test MultiInt with Limits\n        integral = '\\\\!\\\\!\\\\mathop{\\\\,\\\\,' + integral + '}';\n      }\n      else {\n        // Question: This is not used anymore?\n        integral = '\\\\!\\\\!\\\\!\\\\mathop{\\\\,\\\\,\\\\,' + integral + '}';\n      }\n    }\n  }\n  // @test MultiInt, MultiInt in Context\n  parser.string = integral + ' ' + parser.string.slice(parser.i);\n  parser.i = 0;\n};\n\n\n/**\n *  Handle stretchable arrows.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {number} chr The arrow character in hex code.\n * @param {number} l Left width.\n * @param {number} r Right width.\n */\nAmsMethods.xArrow = function(parser: TexParser, name: string,\n                             chr: number, l: number, r: number) {\n  let def = {width: '+' + ParseUtil.Em((l + r) / 18), lspace: ParseUtil.Em(l / 18)};\n  let bot = parser.GetBrackets(name);\n  let first = parser.ParseArg(name);\n  let dstrut = parser.create('node', 'mspace', [], {depth: '.25em'});\n  let arrow = parser.create('token',\n    'mo', {stretchy: true, texClass: TEXCLASS.REL}, String.fromCodePoint(chr));\n  arrow = parser.create('node', 'mstyle', [arrow], {scriptlevel: 0});\n  let mml = parser.create('node', 'munderover', [arrow]) as MmlMunderover;\n  let mpadded = parser.create('node', 'mpadded', [first, dstrut], def);\n  NodeUtil.setAttribute(mpadded, 'voffset', '-.2em');\n  NodeUtil.setAttribute(mpadded, 'height', '-.2em');\n  NodeUtil.setChild(mml, mml.over, mpadded);\n  if (bot) {\n    // @test Above Below Left Arrow, Above Below Right Arrow\n    let bottom = new TexParser(bot, parser.stack.env, parser.configuration).mml();\n    let bstrut = parser.create('node', 'mspace', [], {height: '.75em'});\n    mpadded = parser.create('node', 'mpadded', [bottom, bstrut], def);\n    NodeUtil.setAttribute(mpadded, 'voffset', '.15em');\n    NodeUtil.setAttribute(mpadded, 'depth', '-.15em');\n    NodeUtil.setChild(mml, mml.under, mpadded);\n  }\n  // @test Above Left Arrow, Above Right Arrow, Above Left Arrow in Context,\n  //       Above Right Arrow in Context\n  NodeUtil.setProperty(mml, 'subsupOK', true);\n  parser.Push(mml);\n};\n\n\n/**\n * Record presence of \\shoveleft and \\shoveright\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} shove The shove value.\n */\nAmsMethods.HandleShove = function(parser: TexParser, _name: string,\n                                  shove: string) {\n  let top = parser.stack.Top();\n  // @test Shove (Left|Right) (Top|Middle|Bottom)\n  if (top.kind !== 'multline') {\n    // @test Shove Error Environment\n    throw new TexError('CommandOnlyAllowedInEnv',\n                        '%1 only allowed in %2 environment',\n                        parser.currentCS, 'multline');\n  }\n  if (top.Size()) {\n    // @test Shove Error (Top|Middle|Bottom)\n    throw new TexError('CommandAtTheBeginingOfLine',\n                        '%1 must come at the beginning of the line', parser.currentCS);\n  }\n  top.setProperty('shove', shove);\n};\n\n\n/**\n * Handle \\cfrac\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsMethods.CFrac = function(parser: TexParser, name: string) {\n  let lr  = ParseUtil.trimSpaces(parser.GetBrackets(name, ''));\n  let num = parser.GetArgument(name);\n  let den = parser.GetArgument(name);\n  let lrMap: {[key: string]: string} = {\n    l: TexConstant.Align.LEFT, r: TexConstant.Align.RIGHT, '': ''};\n  let numNode = new TexParser('\\\\strut\\\\textstyle{' + num + '}',\n                              parser.stack.env, parser.configuration).mml();\n  let denNode = new TexParser('\\\\strut\\\\textstyle{' + den + '}',\n                              parser.stack.env, parser.configuration).mml();\n  let frac = parser.create('node', 'mfrac', [numNode, denNode]);\n  lr = lrMap[lr];\n  if (lr == null) {\n    // @test Center Fraction Error\n    throw new TexError('IllegalAlign', 'Illegal alignment specified in %1', parser.currentCS);\n  }\n  if (lr) {\n    // @test Right Fraction, Left Fraction\n    NodeUtil.setProperties(frac, {numalign: lr, denomalign: lr});\n  }\n  // @test Center Fraction\n  parser.Push(frac);\n};\n\n\n/**\n * Implement AMS generalized fraction.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} left Left delimiter.\n * @param {string} right Right delimiter.\n * @param {string} thick Line thickness.\n * @param {string} style Math style.\n */\nAmsMethods.Genfrac = function(parser: TexParser, name: string, left: string,\n                              right: string, thick: string, style: string) {\n  if (left  == null) { // @test Genfrac\n    left = parser.GetDelimiterArg(name);\n  }\n  if (right == null) { // @test Genfrac\n    right = parser.GetDelimiterArg(name);\n  }\n  if (thick == null) { // @test Genfrac\n    thick = parser.GetArgument(name);\n  }\n  if (style == null) { // @test Genfrac\n    style = ParseUtil.trimSpaces(parser.GetArgument(name));\n  }\n  let num = parser.ParseArg(name);\n  let den = parser.ParseArg(name);\n  let frac = parser.create('node', 'mfrac', [num, den]);\n  if (thick !== '') {\n    // @test Normal Binomial, Text Binomial, Display Binomial\n    NodeUtil.setAttribute(frac, 'linethickness', thick);\n  }\n  if (left || right) {\n    // @test Normal Binomial, Text Binomial, Display Binomial\n    NodeUtil.setProperty(frac, 'withDelims', true);\n    frac = ParseUtil.fixedFence(parser.configuration, left, frac, right);\n  }\n  if (style !== '') {\n    let styleDigit = parseInt(style, 10);\n    let styleAlpha = ['D', 'T', 'S', 'SS'][styleDigit];\n    if (styleAlpha == null) {\n      // @test Genfrac Error\n      throw new TexError('BadMathStyleFor', 'Bad math style for %1', parser.currentCS);\n    }\n    frac = parser.create('node', 'mstyle', [frac]);\n    if (styleAlpha === 'D') {\n      // @test Display Fraction, Display Sub Fraction, Display Binomial,\n      //       Display Sub Binomial\n      NodeUtil.setProperties(frac, {displaystyle: true, scriptlevel: 0});\n    }\n    else {\n      // @test Text Fraction, Text Sub Fraction, Text Binomial,\n      //       Text Sub Binomial\n      NodeUtil.setProperties(frac, {displaystyle: false,\n                                      scriptlevel: styleDigit - 1});\n    }\n  }\n  // @test Text Fraction, Normal Sub Binomial, Normal Binomial\n  parser.Push(frac);\n};\n\n\n\n/**\n * Add the tag to the environment (to be added to the table row later).\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsMethods.HandleTag = function(parser: TexParser, name: string) {\n  if (!parser.tags.currentTag.taggable && parser.tags.env) {\n    // @test Illegal Tag Error\n    throw new TexError('CommandNotAllowedInEnv',\n                        '%1 not allowed in %2 environment',\n                        parser.currentCS, parser.tags.env);\n  }\n  if (parser.tags.currentTag.tag) {\n    // @test Double Tag Error\n    throw new TexError('MultipleCommand', 'Multiple %1', parser.currentCS);\n  }\n  let star = parser.GetStar();\n  let tagId = ParseUtil.trimSpaces(parser.GetArgument(name));\n  parser.tags.tag(tagId, star);\n};\n\n\nAmsMethods.HandleNoTag = BaseMethods.HandleNoTag;\n\nAmsMethods.HandleRef = BaseMethods.HandleRef;\n\nAmsMethods.Macro = BaseMethods.Macro;\n\nAmsMethods.Accent = BaseMethods.Accent;\n\nAmsMethods.Tilde = BaseMethods.Tilde;\n\nAmsMethods.Array = BaseMethods.Array;\n\nAmsMethods.Spacer = BaseMethods.Spacer;\n\nAmsMethods.NamedOp = BaseMethods.NamedOp;\n\nAmsMethods.EqnArray = BaseMethods.EqnArray;\n\nAmsMethods.Equation = BaseMethods.Equation;\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the AMScd package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport './AmsCdMappings.js';\n\n\nexport const AmsCdConfiguration = Configuration.create(\n  'amscd', {\n    handler: {\n      character: ['amscd_special'],\n      macro: ['amscd_macros'],\n      environment: ['amscd_environment']\n    },\n    options: {\n      amscd: {\n        colspace: '5pt',\n        rowspace: '5pt',\n        harrowsize: '2.75em',\n        varrowsize: '1.75em',\n        hideHorizontalLabels: false\n      }\n    }\n  }\n);\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Symbol mappings for the AMScd package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport * as sm from '../SymbolMap.js';\nimport ParseMethods from '../ParseMethods.js';\nimport AmsCdMethods from './AmsCdMethods.js';\n\n\nnew sm.EnvironmentMap('amscd_environment', ParseMethods.environment,\n                      {CD: 'CD'}, AmsCdMethods);\n\nnew sm.CommandMap('amscd_macros', {\n  minCDarrowwidth: 'minCDarrowwidth',\n  minCDarrowheight: 'minCDarrowheight',\n}, AmsCdMethods);\n\nnew sm.MacroMap('amscd_special', {'@': 'arrow'}, AmsCdMethods);\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Methods for the AMScd package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport TexParser from '../TexParser.js';\nimport {ParseMethod} from '../Types.js';\nimport {StackItem, EnvList} from '../StackItem.js';\nimport {ArrayItem} from '../base/BaseItems.js';\nimport {Other} from '../base/BaseConfiguration.js';\nimport {MmlMunderover} from '../../../core/MmlTree/MmlNodes/munderover.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport NodeUtil from '../NodeUtil.js';\n\n\n// Namespace\nlet AmsCdMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Handles CD environment for commutative diagrams.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n */\nAmsCdMethods.CD = function(parser: TexParser, begin: StackItem) {\n  parser.Push(begin);\n  let item = parser.itemFactory.create('array') as ArrayItem;\n  let options = parser.configuration.options.amscd;\n  item.setProperties({\n    minw: parser.stack.env.CD_minw || options.harrowsize,\n    minh: parser.stack.env.CD_minh || options.varrowsize\n  });\n  item.arraydef = {\n      columnalign: 'center',\n      columnspacing: options.colspace,\n      rowspacing: options.rowspace,\n      displaystyle: true\n  };\n  return item;\n};\n\n\n/**\n * Converts arrows.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsCdMethods.arrow = function(parser: TexParser, name: string) {\n  let c = parser.string.charAt(parser.i);\n  if (!c.match(/[><VA.|=]/)) {\n    return Other(parser, name);\n  } else {\n    parser.i++;\n  }\n  let first = parser.stack.Top();\n  if (!first.isKind('array') || first.Size()) {\n    AmsCdMethods.cell(parser, name);\n    first = parser.stack.Top();\n  }\n  let top = first as ArrayItem;\n  //\n  //  Add enough cells to place the arrow correctly\n  //\n  let arrowRow = ((top.table.length % 2) === 1);\n  let n = (top.row.length + (arrowRow ? 0 : 1)) % 2;\n  while (n) {\n    AmsCdMethods.cell(parser, name);\n    n--;\n  }\n\n  let mml;\n  let hdef = {minsize: top.getProperty('minw'), stretchy: true},\n  vdef = {minsize: top.getProperty('minh'),\n          stretchy: true, symmetric: true, lspace: 0, rspace: 0};\n\n  if (c === '.') {\n  } else if (c === '|') {\n    mml = parser.create('token', 'mo',  vdef, '\\u2225');\n  } else if (c === '=') {\n    mml = parser.create('token', 'mo', hdef, '=');\n  } else {\n    //\n    //  for @>>> @<<< @VVV and @AAA, get the arrow and labels\n    //\n    // TODO: cleanup!\n    let arrow: string = ({\n      '>': '\\u2192', '<': '\\u2190', 'V': '\\u2193', 'A': '\\u2191'} as {[key: string]: string}) [c];\n    let a = parser.GetUpTo(name + c, c);\n    let b = parser.GetUpTo(name + c, c);\n    if (c === '>' || c === '<') {\n      //\n      //  Lay out horizontal arrows with munderover if it has labels\n      //\n      mml = parser.create('token', 'mo', hdef, arrow);\n      if (!a) {\n        a = '\\\\kern ' + top.getProperty('minw');\n      } // minsize needs work\n      if (a || b) {\n        let pad: EnvList = {width: '+.67em', lspace: '.33em'};\n        mml = parser.create('node', 'munderover', [mml]) as MmlMunderover;\n        if (a) {\n          let nodeA = new TexParser(a, parser.stack.env, parser.configuration).mml();\n          let mpadded = parser.create('node', 'mpadded', [nodeA], pad);\n          NodeUtil.setAttribute(mpadded, 'voffset', '.1em');\n          NodeUtil.setChild(mml, mml.over, mpadded);\n        }\n        if (b) {\n          let nodeB = new TexParser(b, parser.stack.env, parser.configuration).mml();\n          NodeUtil.setChild(mml, mml.under, parser.create('node', 'mpadded', [nodeB], pad));\n        }\n        if (parser.configuration.options.amscd.hideHorizontalLabels) {\n          mml = parser.create('node', 'mpadded', mml, {depth: 0, height: '.67em'});\n        }\n      }\n    } else {\n      //\n      //  Lay out vertical arrows with mrow if there are labels\n      //\n      let arrowNode = parser.create('token', 'mo', vdef, arrow);\n      mml = arrowNode;\n      if (a || b) {\n        mml = parser.create('node', 'mrow');\n        if (a) {\n          NodeUtil.appendChildren(\n            mml, [new TexParser('\\\\scriptstyle\\\\llap{' + a + '}', parser.stack.env, parser.configuration).mml()]);\n        }\n        arrowNode.texClass = TEXCLASS.ORD;\n        NodeUtil.appendChildren(mml, [arrowNode]);\n        if (b) {\n          NodeUtil.appendChildren(mml, [new TexParser('\\\\scriptstyle\\\\rlap{' + b + '}',\n                                                      parser.stack.env, parser.configuration).mml()]);\n        }\n      }\n    }\n  }\n  if (mml) {\n    parser.Push(mml);\n  }\n  AmsCdMethods.cell(parser, name);\n};\n\n\n/**\n * Converts a cell in the diagram.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsCdMethods.cell = function(parser: TexParser, name: string) {\n  let top = parser.stack.Top() as ArrayItem;\n  if ((top.table || []).length % 2 === 0 && (top.row || []).length === 0) {\n    //\n    // Add a strut to the first cell in even rows to get\n    // better spacing of arrow rows.\n    //\n    parser.Push(parser.create('node', 'mpadded', [], {height: '8.5pt', depth: '2pt'}));\n  }\n  parser.Push(parser.itemFactory.create('cell').setProperties({isEntry: true, name: name}));\n};\n\n\n/**\n * Sets minimal width for arrows.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsCdMethods.minCDarrowwidth = function(parser: TexParser, name: string) {\n  parser.stack.env.CD_minw = parser.GetDimen(name);\n};\n\n\n/**\n * Sets minimal height for arrows.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsCdMethods.minCDarrowheight = function(parser: TexParser, name: string) {\n  parser.stack.env.CD_minh = parser.GetDimen(name);\n};\n\n\nexport default AmsCdMethods;\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the bbox package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport TexParser from '../TexParser.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport TexError from '../TexError.js';\n\n\n// Namespace\nexport let BboxMethods: Record<string, ParseMethod> = {};\n\n/**\n * Implements MathJax Bbox macro to pad and colorize background boxes.\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\nBboxMethods.BBox = function(parser: TexParser, name: string) {\n  const bbox = parser.GetBrackets(name, '');\n  let math = parser.ParseArg(name);\n  const parts = bbox.split(/,/);\n  let def, background, style;\n  for (let i = 0, m = parts.length; i < m; i++) {\n    const part = parts[i].trim();\n    const match = part.match(/^(\\.\\d+|\\d+(\\.\\d*)?)(pt|em|ex|mu|px|in|cm|mm)$/);\n    if (match) {\n      // @test Bbox-Padding\n      if (def) {\n        // @test Bbox-Padding-Error\n        throw new TexError('MultipleBBoxProperty', '%1 specified twice in %2', 'Padding', name);\n      }\n      const pad = BBoxPadding(match[1] + match[3]);\n      if (pad) {\n        // @test Bbox-Padding\n        def = {\n          height: '+' + pad,\n          depth: '+' + pad,\n          lspace: pad,\n          width: '+' + (2 * parseInt(match[1], 10)) + match[3]\n        };\n      }\n    } else if (part.match(/^([a-z0-9]+|\\#[0-9a-f]{6}|\\#[0-9a-f]{3})$/i)) {\n      // @test Bbox-Background\n      if (background) {\n        // @test Bbox-Background-Error\n        throw new TexError('MultipleBBoxProperty', '%1 specified twice in %2',\n                           'Background', name);\n      }\n      background = part;\n    } else if (part.match(/^[-a-z]+:/i)) {\n      // @test Bbox-Frame\n      if (style) {\n        // @test Bbox-Frame-Error\n        throw new TexError('MultipleBBoxProperty', '%1 specified twice in %2',\n                           'Style', name);\n      }\n      style = BBoxStyle(part);\n    } else if (part !== '') {\n      // @test Bbox-General-Error\n      throw new TexError(\n        'InvalidBBoxProperty',\n        '\"%1\" doesn\\'t look like a color, a padding dimension, or a style',\n        part);\n    }\n  }\n  if (def) {\n    // @test Bbox-Padding\n    math = parser.create('node', 'mpadded', [math], def);\n  }\n  if (background || style) {\n    def = {};\n    if (background) {\n      // @test Bbox-Background\n      Object.assign(def, {mathbackground: background});\n    }\n    if (style) {\n      // @test Bbox-Frame\n      Object.assign(def, {style: style});\n    }\n    math = parser.create('node', 'mstyle', [math], def);\n  }\n  parser.Push(math);\n};\n\n\n// Dummy methods. Need to be made Safe with security check.\nlet BBoxStyle = function(styles: string) {\n  return styles;\n};\n\nlet BBoxPadding = function(pad: string) {\n  return pad;\n};\n\n\nnew CommandMap('bbox', {bbox: 'BBox'}, BboxMethods);\n\n\nexport const BboxConfiguration = Configuration.create(\n  'bbox', {handler: {macro: ['bbox']}}\n);\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the boldsymbol package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport {Configuration} from '../Configuration.js';\nimport NodeUtil from '../NodeUtil.js';\nimport TexParser from '../TexParser.js';\nimport {TexConstant} from '../TexConstants.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport {NodeFactory} from '../NodeFactory.js';\nimport ParseOptions from '../ParseOptions.js';\n\nlet BOLDVARIANT: {[key: string]: string} = {};\nBOLDVARIANT[TexConstant.Variant.NORMAL] = TexConstant.Variant.BOLD;\nBOLDVARIANT[TexConstant.Variant.ITALIC]    = TexConstant.Variant.BOLDITALIC;\nBOLDVARIANT[TexConstant.Variant.FRAKTUR]   = TexConstant.Variant.BOLDFRAKTUR;\nBOLDVARIANT[TexConstant.Variant.SCRIPT]    = TexConstant.Variant.BOLDSCRIPT;\nBOLDVARIANT[TexConstant.Variant.SANSSERIF] = TexConstant.Variant.BOLDSANSSERIF;\nBOLDVARIANT['-tex-calligraphic']   = '-tex-bold-calligraphic';\nBOLDVARIANT['-tex-oldstyle']       = '-tex-bold-oldstyle';\nBOLDVARIANT['-tex-mathit']         = TexConstant.Variant.BOLDITALIC;\n\n\n// Namespace\nexport let BoldsymbolMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Parse function for boldsymbol macro.\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the macro.\n */\nBoldsymbolMethods.Boldsymbol = function(parser: TexParser, name: string) {\n  let boldsymbol = parser.stack.env['boldsymbol'];\n  parser.stack.env['boldsymbol'] = true;\n  let mml = parser.ParseArg(name);\n  parser.stack.env['boldsymbol'] = boldsymbol;\n  parser.Push(mml);\n};\n\n\nnew CommandMap('boldsymbol', {boldsymbol: 'Boldsymbol'}, BoldsymbolMethods);\n\n\n/**\n * Creates token nodes in bold font if possible.\n * @param {NodeFactory} factory The current node factory.\n * @param {string} kind The type of token node to create.\n * @param {any} def Properties for the node.\n * @param {string} text The text content.\n * @return {MmlNode} The generated token node.\n */\nexport function createBoldToken(factory: NodeFactory, kind: string,\n                                def: any, text: string): MmlNode  {\n  let token = NodeFactory.createToken(factory, kind, def, text);\n  if (kind !== 'mtext' &&\n      factory.configuration.parser.stack.env['boldsymbol']) {\n    NodeUtil.setProperty(token, 'fixBold', true);\n    factory.configuration.addNode('fixBold', token);\n  }\n  return token;\n}\n\n\n/**\n * Postprocessor to rewrite token nodes to bold font, if possible.\n * @param {ParseOptions} data The parse options.\n */\nexport function rewriteBoldTokens(arg: {data: ParseOptions}) {\n  for (let node of arg.data.getList('fixBold')) {\n    if (NodeUtil.getProperty(node, 'fixBold')) {\n      let variant = NodeUtil.getAttribute(node, 'mathvariant') as string;\n      if (variant == null) {\n        NodeUtil.setAttribute(node, 'mathvariant', TexConstant.Variant.BOLD);\n      } else {\n        NodeUtil.setAttribute(node,\n                              'mathvariant', BOLDVARIANT[variant] || variant);\n      }\n      NodeUtil.removeProperties(node, 'fixBold');\n    }\n  }\n}\n\n\nexport const BoldsymbolConfiguration = Configuration.create(\n    'boldsymbol', {\n        handler: {macro: ['boldsymbol']},\n        nodes: {'token': createBoldToken},\n        postprocessors: [rewriteBoldTokens]\n    }\n);\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the Braket package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {BraketItem} from './BraketItems.js';\nimport './BraketMappings.js';\n\n\nexport const BraketConfiguration = Configuration.create(\n  'braket', {\n    handler: {\n      character: ['Braket-characters'],\n      macro: ['Braket-macros']\n    },\n    items: {\n      [BraketItem.prototype.kind]: BraketItem,\n    }\n  }\n);\n\n\n","/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Stack items for parsing the braket package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {CheckType, BaseItem, StackItem} from '../StackItem.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport ParseUtil from '../ParseUtil.js';\n\n\n/**\n * A bra-ket command. Collates elements from the opening brace to the closing\n * brace, adding bars to a given maximal number (e.g., only one in case of\n * set). To finalise it adds the surrounding angle brackets or braces.\n */\nexport class BraketItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'braket';\n  }\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('close')) {\n      return [[this.factory.create('mml', this.toMml())], true];\n    }\n    if (item.isKind('mml')) {\n      this.Push(item.toMml());\n      if (this.getProperty('single')) {\n        return [[this.toMml()], true];\n      }\n      return BaseItem.fail;\n    }\n    return super.checkItem(item);\n  }\n\n\n  /**\n   * @override\n   */\n  public toMml() {\n    let inner = super.toMml();\n    let open = this.getProperty('open') as string;\n    let close = this.getProperty('close') as string;\n    if (this.getProperty('stretchy')) {\n      return ParseUtil.fenced(this.factory.configuration, open, inner, close);\n    }\n    let attrs = {fence: true, stretchy: false, symmetric: true, texClass: TEXCLASS.OPEN};\n    let openNode = this.create('token', 'mo', attrs, open);\n    attrs.texClass = TEXCLASS.CLOSE;\n    let closeNode = this.create('token', 'mo', attrs, close);\n    let mrow = this.create('node', 'mrow', [openNode, inner, closeNode],\n                         {open: open, close: close, texClass: TEXCLASS.INNER});\n    return mrow;\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing of the braket package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {CommandMap, MacroMap} from '../SymbolMap.js';\nimport BraketMethods from './BraketMethods.js';\n\n\n/**\n * Macros for braket package.\n */\nnew CommandMap('Braket-macros', {\n  bra: ['Macro', '{\\\\langle {#1} \\\\vert}', 1],\n  ket: ['Macro', '{\\\\vert {#1} \\\\rangle}', 1],\n  braket: ['Braket', '\\u27E8', '\\u27E9', false, Infinity],\n  'set': ['Braket', '{', '}', false, 1],\n  Bra: ['Macro', '{\\\\left\\\\langle {#1} \\\\right\\\\vert}', 1],\n  Ket: ['Macro', '{\\\\left\\\\vert {#1} \\\\right\\\\rangle}', 1],\n  Braket: ['Braket', '\\u27E8', '\\u27E9', true, Infinity],\n  Set: ['Braket', '{', '}', true, 1],\n  // Not part of the LaTeX package:\n  ketbra: ['Macro', '{\\\\vert {#1} \\\\rangle\\\\langle {#2} \\\\vert}', 2],\n  Ketbra: ['Macro', '{\\\\left\\\\vert {#1} \\\\right\\\\rangle\\\\left\\\\langle {#2} \\\\right\\\\vert}', 2],\n  // Treatment of bar.\n  '|': 'Bar'\n}, BraketMethods);\n\n\n/**\n * Character map for braket package.\n */\nnew MacroMap('Braket-characters', {\n  '|': 'Bar'\n}, BraketMethods);\n\n\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Methods for TeX parsing of the braket package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {ParseMethod} from '../Types.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport TexParser from '../TexParser.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport TexError from '../TexError.js';\n\n\nlet BraketMethods: Record<string, ParseMethod> = {};\n\nBraketMethods.Macro = BaseMethods.Macro;\n\n\n/**\n * Generate a bra-ket expression.\n * @param {TexParser} parser The current TeX parser.\n * @param {string} name Name of the current control sequence.\n * @param {string} open Opening delimiter.\n * @param {string} close Closing delimiter.\n * @param {boolean} stretchy Is it stretchy.\n * @param {number} barmax Maximum number of bars allowed.\n */\nBraketMethods.Braket = function(parser: TexParser, _name: string,\n                                open: string, close: string,\n                                stretchy: boolean, barmax: number) {\n  let next = parser.GetNext();\n  if (next === '') {\n    throw new TexError('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n  }\n  let single = true;\n  if (next === '{') {\n    parser.i++;\n    single = false;\n  }\n  parser.Push(\n    parser.itemFactory.create('braket')\n      .setProperties({barmax: barmax, barcount: 0, open: open,\n                      close: close, stretchy: stretchy, single: single}));\n};\n\n\n/**\n * Generate a bar. If inside a bra-ket expressions it's handled accordingly.\n * @param {TexParser} parser The current TeX parser.\n * @param {string} name Name of the current control sequence.\n */\nBraketMethods.Bar = function(parser: TexParser, name: string) {\n  let c = name === '|' ? '|' : '\\u2225';\n  let top = parser.stack.Top();\n  if (top.kind !== 'braket' ||\n      top.getProperty('barcount') >= top.getProperty('barmax')) {\n    let mml = parser.create('token', 'mo', {texClass: TEXCLASS.ORD, stretchy: false}, c);\n    parser.Push(mml);\n    return;\n  }\n  if (c === '|' && parser.GetNext() === '|') {\n    parser.i++;\n    c = '\\u2225';\n  }\n  let stretchy = top.getProperty('stretchy');\n  if (!stretchy) {\n    let node = parser.create('token', 'mo', {stretchy: false, braketbar: true}, c);\n    parser.Push(node);\n    return;\n  }\n  let node = parser.create('node', 'TeXAtom', [], {texClass: TEXCLASS.CLOSE});\n  parser.Push(node);\n  top.setProperty('barcount', top.getProperty('barcount') as number + 1);\n  node = parser.create('token', 'mo', {stretchy: true, braketbar: true}, c);\n  parser.Push(node);\n  node = parser.create('node', 'TeXAtom', [], {texClass: TEXCLASS.OPEN});\n  parser.Push(node);\n};\n\n\nexport default BraketMethods;\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the Bussproofs package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {ProofTreeItem} from './BussproofsItems.js';\nimport {saveDocument, clearDocument, balanceRules, makeBsprAttributes} from './BussproofsUtil.js';\nimport './BussproofsMappings.js';\n\n\nexport const BussproofsConfiguration = Configuration.create(\n  'bussproofs', {\n    handler: {\n      macro: ['Bussproofs-macros'],\n      environment: ['Bussproofs-environments']\n    },\n    items: {\n      [ProofTreeItem.prototype.kind]: ProofTreeItem,\n    },\n    preprocessors: [\n      [saveDocument, 1]\n    ],\n    postprocessors: [\n      [clearDocument, 3],\n      [makeBsprAttributes, 2],\n      [balanceRules, 1]\n    ]\n  }\n);\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Items for TeX parsing of bussproofs.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport TexError from '../TexError.js';\nimport {BaseItem, CheckType, StackItem} from '../StackItem.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport Stack from '../Stack.js';\nimport * as BussproofsUtil from './BussproofsUtil.js';\n\n\nexport class ProofTreeItem extends BaseItem {\n\n\n  /**\n   * The current left label.\n   * @type {MmlNode[]}\n   */\n  public leftLabel: MmlNode[] = null;\n\n  /**\n   * The current right label.\n   * @type {MmlNode[]}\n   */\n  public rigthLabel: MmlNode[] = null;\n\n  private innerStack: Stack = new Stack(this.factory, {}, true);\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'proofTree';\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('end') && item.getName() === 'prooftree') {\n      let node = this.toMml();\n      BussproofsUtil.setProperty(node, 'proof', true);\n      return [[this.factory.create('mml', node), item], true];\n    }\n    if (item.isKind('stop')) {\n      throw new TexError('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n    this.innerStack.Push(item);\n    return BaseItem.fail;\n  }\n\n\n  /**\n   * @override\n   */\n  public toMml() {\n    const tree = super.toMml();\n    const start = this.innerStack.Top();\n    if (start.isKind('start') && !start.Size()) {\n      return tree;\n    }\n    this.innerStack.Push(this.factory.create('stop'));\n    let prefix = this.innerStack.Top().toMml();\n    return this.create('node', 'mrow', [prefix, tree], {});\n  }\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing for Bussproofs package commands.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport BussproofsMethods from './BussproofsMethods.js';\nimport ParseMethods from '../ParseMethods.js';\nimport {CommandMap, EnvironmentMap} from '../SymbolMap.js';\n\n\n/**\n * Macros for bussproofs etc.\n */\nnew CommandMap('Bussproofs-macros', {\n  AxiomC:           'Axiom',\n  UnaryInfC:        ['Inference', 1],\n  BinaryInfC:       ['Inference', 2],\n  TrinaryInfC:      ['Inference', 3],\n  QuaternaryInfC:   ['Inference', 4],\n  QuinaryInfC:      ['Inference', 5],\n  RightLabel:       ['Label', 'right'],\n  LeftLabel:        ['Label', 'left'],\n  // Abbreviations are automatically enabled\n  AXC:              'Axiom',\n  UIC:              ['Inference', 1],\n  BIC:              ['Inference', 2],\n  TIC:              ['Inference', 3],\n  RL:               ['Label', 'right'],\n  LL:               ['Label', 'left'],\n\n  noLine:           ['SetLine', 'none', false],\n  singleLine:       ['SetLine', 'solid', false],\n  solidLine:        ['SetLine', 'solid', false],\n  dashedLine:       ['SetLine', 'dashed', false],\n  // Not yet implemented in CSS!\n  // doubleLine:       ['SetLine', 'double', false],\n  // dottedLine:       ['SetLine', 'dotted', false],\n\n  alwaysNoLine:           ['SetLine', 'none', true],\n  alwaysSingleLine:       ['SetLine', 'solid', true],\n  alwaysSolidLine:        ['SetLine', 'solid', true],\n  alwaysDashedLine:       ['SetLine', 'dashed', true],\n  // Not yet implemented in CSS!\n  // alwaysDoubleLine:       ['SetLine', 'double', true],\n  // alwaysDottedLine:       ['SetLine', 'dotted', true],\n\n  rootAtTop: ['RootAtTop', true],\n  alwaysRootAtTop: ['RootAtTop', true],\n\n  rootAtBottom: ['RootAtTop', false],\n  alwaysRootAtBottom: ['RootAtTop', false],\n  // TODO: always commands should be persistent.\n\n  fCenter:         'FCenter',\n  Axiom:           'AxiomF',\n  UnaryInf:        ['InferenceF', 1],\n  BinaryInf:        ['InferenceF', 2],\n  TrinaryInf:        ['InferenceF', 3],\n  QuaternaryInf:        ['InferenceF', 4],\n  QuinaryInf:        ['InferenceF', 5]\n}, BussproofsMethods);\n\n\nnew EnvironmentMap('Bussproofs-environments', ParseMethods.environment, {\n  prooftree:        ['Prooftree', null, false]\n}, BussproofsMethods);\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing for the bussproofs package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {ParseMethod} from '../Types.js';\nimport TexError from '../TexError.js';\nimport TexParser from '../TexParser.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {StackItem} from '../StackItem.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport * as BussproofsUtil from './BussproofsUtil.js';\n\n\n// Namespace\nlet BussproofsMethods: Record<string, ParseMethod> = {};\n\n/**\n * Implements the proof tree environment.\n * @param {TexParser} parser The current parser.\n * @param {StackItem} begin The opening element of the environment.\n * @return {StackItem} The proof tree stackitem.\n */\n// TODO: Error handling if we have leftover elements or elements are not in the\n// required order.\nBussproofsMethods.Prooftree = function(parser: TexParser, begin: StackItem): StackItem {\n  parser.Push(begin);\n  // TODO: Check if opening a proof tree is legal.\n  let newItem = parser.itemFactory.create('proofTree').\n    setProperties({name: begin.getName(),\n                   line: 'solid', currentLine: 'solid', rootAtTop: false});\n  // parser.Push(item);\n  return newItem;\n};\n\n\n/**\n * Implements the Axiom command.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n */\nBussproofsMethods.Axiom = function(parser: TexParser, name: string) {\n  let top = parser.stack.Top();\n  // TODO: Label error\n  if (top.kind !== 'proofTree') {\n    throw new TexError('IllegalProofCommand',\n                       'Proof commands only allowed in prooftree environment.');\n  }\n  let content = paddedContent(parser, parser.GetArgument(name));\n  BussproofsUtil.setProperty(content, 'axiom', true);\n  top.Push(content);\n};\n\n\n/**\n * Pads content of an inference rule.\n * @param {TexParser} parser The calling parser.\n * @param {string} content The content to be padded.\n * @return {MmlNode} The mrow element with padded content.\n */\nconst paddedContent = function(parser: TexParser, content: string): MmlNode {\n  // Add padding on either site.\n  let nodes = ParseUtil.internalMath(parser, ParseUtil.trimSpaces(content), 0);\n  if (!nodes[0].childNodes[0].childNodes.length) {\n    return parser.create('node', 'mrow', []);\n  }\n  let lpad = parser.create('node', 'mspace', [], {width: '.5ex'});\n  let rpad = parser.create('node', 'mspace', [], {width: '.5ex'});\n  return parser.create('node', 'mrow', [lpad, ...nodes, rpad]);\n};\n\n\n/**\n * Implements the Inference rule commands.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n * @param {number} n Number of premises for this inference rule.\n */\nBussproofsMethods.Inference = function(parser: TexParser, name: string, n: number) {\n  let top = parser.stack.Top();\n  if (top.kind !== 'proofTree') {\n    throw new TexError('IllegalProofCommand',\n                       'Proof commands only allowed in prooftree environment.');\n  }\n  if (top.Size() < n) {\n    throw new TexError('BadProofTree', 'Proof tree badly specified.');\n  }\n  const rootAtTop = top.getProperty('rootAtTop') as boolean;\n  const childCount = (n === 1 && !top.Peek()[0].childNodes.length) ? 0 : n;\n  let children: MmlNode[] = [];\n  do {\n    if (children.length) {\n      children.unshift(parser.create('node', 'mtd', [], {}));\n    }\n    children.unshift(\n      parser.create('node', 'mtd', [top.Pop()],\n                    {'rowalign': (rootAtTop ? 'top' : 'bottom')}));\n    n--;\n  } while (n > 0);\n  let row = parser.create('node', 'mtr', children, {});\n  let table = parser.create('node', 'mtable', [row], {framespacing: '0 0'});\n  let conclusion = paddedContent(parser, parser.GetArgument(name));\n  let style = top.getProperty('currentLine') as string;\n  if (style !== top.getProperty('line')) {\n    top.setProperty('currentLine', top.getProperty('line'));\n  }\n  let rule = createRule(\n    parser, table, [conclusion], top.getProperty('left') as MmlNode,\n    top.getProperty('right') as MmlNode, style, rootAtTop);\n  top.setProperty('left', null);\n  top.setProperty('right', null);\n  BussproofsUtil.setProperty(rule, 'inference', childCount);\n  parser.configuration.addNode('inference', rule);\n  top.Push(rule);\n};\n\n\n/**\n * Creates a ND style inference rule.\n * @param {TexParser} parser The calling parser.\n * @param {MmlNode} premise The premise (a single table).\n * @param {MmlNode[]} conclusions Elements that are combined into the conclusion.\n * @param {MmlNode|null} left The left label if it exists.\n * @param {MmlNode|null} right The right label if it exists.\n * @param {string} style Style of inference rule line.\n * @param {boolean} rootAtTop Direction of inference rule: true for root at top.\n */\nfunction createRule(parser: TexParser, premise: MmlNode,\n                    conclusions: MmlNode[], left: MmlNode | null,\n                    right: MmlNode | null, style: string,\n                    rootAtTop: boolean) {\n  const upper = parser.create(\n    'node', 'mtr', [parser.create('node', 'mtd', [premise], {})], {});\n  const lower = parser.create(\n    'node', 'mtr', [parser.create('node', 'mtd', conclusions, {})], {});\n  let rule = parser.create('node', 'mtable', rootAtTop ? [lower, upper] : [upper, lower],\n                           {align: 'top 2', rowlines: style, framespacing: '0 0'});\n  BussproofsUtil.setProperty(rule, 'inferenceRule', rootAtTop ? 'up' : 'down');\n  let leftLabel, rightLabel;\n  if (left) {\n    leftLabel = parser.create(\n      'node', 'mpadded', [left],\n      {height: '+.5em', width: '+.5em', voffset: '-.15em'});\n    BussproofsUtil.setProperty(leftLabel, 'prooflabel', 'left');\n  }\n  if (right) {\n    rightLabel = parser.create(\n      'node', 'mpadded', [right],\n      {height: '+.5em', width: '+.5em', voffset: '-.15em'});\n    BussproofsUtil.setProperty(rightLabel, 'prooflabel', 'right');\n  }\n  let children, label;\n  if (left && right) {\n    children = [leftLabel, rule, rightLabel];\n    label = 'both';\n  } else if (left) {\n    children = [leftLabel, rule];\n    label = 'left';\n  } else if (right) {\n    children = [rule, rightLabel];\n    label = 'right';\n  } else {\n    return rule;\n  }\n  rule = parser.create('node', 'mrow', children);\n  BussproofsUtil.setProperty(rule, 'labelledRule', label);\n  return rule;\n}\n\n\n/**\n * Implements the label command.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n * @param {string} side The side of the label.\n */\nBussproofsMethods.Label = function(parser: TexParser, name: string, side: string) {\n  let top = parser.stack.Top();\n  // Label error\n  if (top.kind !== 'proofTree') {\n    throw new TexError('IllegalProofCommand',\n                       'Proof commands only allowed in prooftree environment.');\n  }\n  let content = ParseUtil.internalMath(parser, parser.GetArgument(name), 0);\n  let label = (content.length > 1) ?\n    parser.create('node', 'mrow', content, {}) : content[0];\n  top.setProperty(side, label);\n};\n\n\n/**\n * Sets line style for inference rules.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n * @param {string} style The line style to set.\n * @param {boolean} always Set as permanent style.\n */\nBussproofsMethods.SetLine = function(parser: TexParser, _name: string, style: string, always: boolean) {\n  let top = parser.stack.Top();\n  // Label error\n  if (top.kind !== 'proofTree') {\n    throw new TexError('IllegalProofCommand',\n                       'Proof commands only allowed in prooftree environment.');\n  }\n  top.setProperty('currentLine', style);\n  if (always) {\n    top.setProperty('line', style);\n  }\n};\n\n\n/**\n * Implements commands indicating where the root of the proof tree is.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n * @param {string} where If true root is at top, otherwise at bottom.\n */\nBussproofsMethods.RootAtTop = function(parser: TexParser, _name: string, where: boolean) {\n  let top = parser.stack.Top();\n  if (top.kind !== 'proofTree') {\n    throw new TexError('IllegalProofCommand',\n                       'Proof commands only allowed in prooftree environment.');\n  }\n  top.setProperty('rootAtTop', where);\n};\n\n\n/**\n * Implements Axiom command for sequents.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n */\nBussproofsMethods.AxiomF = function(parser: TexParser, name: string) {\n  let top = parser.stack.Top();\n  if (top.kind !== 'proofTree') {\n    throw new TexError('IllegalProofCommand',\n                       'Proof commands only allowed in prooftree environment.');\n  }\n  let line = parseFCenterLine(parser, name);\n  BussproofsUtil.setProperty(line, 'axiom', true);\n  top.Push(line);\n};\n\n\n/**\n * Parses a line with a sequent (i.e., one containing \\\\fcenter).\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the calling command.\n * @return {MmlNode} The parsed line.\n */\nfunction parseFCenterLine(parser: TexParser, name: string): MmlNode {\n  let dollar = parser.GetNext();\n  if (dollar !== '$') {\n    throw new TexError('IllegalUseOfCommand',\n                       'Use of %1 does not match it\\'s definition.', name);\n  }\n  parser.i++;\n  let axiom = parser.GetUpTo(name, '$');\n  if (axiom.indexOf('\\\\fCenter') === -1) {\n    throw new TexError('IllegalUseOfCommand',\n                       'Missing \\\\fCenter in %1.', name);\n  }\n  // Check for fCenter and throw error?\n  let [prem, conc] = axiom.split('\\\\fCenter');\n  let premise = (new TexParser(prem, parser.stack.env, parser.configuration)).mml();\n  let conclusion = (new TexParser(conc, parser.stack.env, parser.configuration)).mml();\n  let fcenter = (new TexParser('\\\\fCenter', parser.stack.env, parser.configuration)).mml();\n  const left = parser.create('node', 'mtd', [premise], {});\n  const middle = parser.create('node', 'mtd', [fcenter], {});\n  const right = parser.create('node', 'mtd', [conclusion], {});\n  const row = parser.create('node', 'mtr', [left, middle, right], {});\n  const table = parser.create('node', 'mtable', [row], {columnspacing: '.5ex', columnalign: 'center 2'});\n  BussproofsUtil.setProperty(table, 'sequent', true);\n  parser.configuration.addNode('sequent', row);\n  return table;\n}\n\n\n/**\n * Placeholder for Fcenter macro that can be overwritten with renewcommand.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n */\nBussproofsMethods.FCenter = function(_parser: TexParser, _name: string) { };\n\n\n/**\n * Implements inference rules for sequents.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n * @param {number} n Number of premises for this inference rule.\n */\nBussproofsMethods.InferenceF = function(parser: TexParser, name: string, n: number) {\n  let top = parser.stack.Top();\n  if (top.kind !== 'proofTree') {\n    throw new TexError('IllegalProofCommand',\n                       'Proof commands only allowed in prooftree environment.');\n  }\n  if (top.Size() < n) {\n    throw new TexError('BadProofTree', 'Proof tree badly specified.');\n  }\n  const rootAtTop = top.getProperty('rootAtTop') as boolean;\n  const childCount = (n === 1 && !top.Peek()[0].childNodes.length) ? 0 : n;\n  let children: MmlNode[] = [];\n  do {\n    if (children.length) {\n      children.unshift(parser.create('node', 'mtd', [], {}));\n    }\n    children.unshift(\n      parser.create('node', 'mtd', [top.Pop()],\n                    {'rowalign': (rootAtTop ? 'top' : 'bottom')}));\n    n--;\n  } while (n > 0);\n  let row = parser.create('node', 'mtr', children, {});\n  let table = parser.create('node', 'mtable', [row], {framespacing: '0 0'});\n\n  let conclusion = parseFCenterLine(parser, name); // TODO: Padding\n  let style = top.getProperty('currentLine') as string;\n  if (style !== top.getProperty('line')) {\n    top.setProperty('currentLine', top.getProperty('line'));\n  }\n  let rule = createRule(\n    parser, table, [conclusion], top.getProperty('left') as MmlNode,\n    top.getProperty('right') as MmlNode, style, rootAtTop);\n  top.setProperty('left', null);\n  top.setProperty('right', null);\n  BussproofsUtil.setProperty(rule, 'inference', childCount);\n  parser.configuration.addNode('inference', rule);\n  top.Push(rule);\n};\n\nexport default BussproofsMethods;\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Postfilter utility for the Bussproofs package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport ParseOptions from '../ParseOptions.js';\nimport NodeUtil from '../NodeUtil.js';\nimport ParseUtil from '../ParseUtil.js';\n\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport {Property} from '../../../core/Tree/Node.js';\nimport {MathItem} from '../../../core/MathItem.js';\nimport {MathDocument} from '../../../core/MathDocument.js';\n\n\ntype MATHITEM = MathItem<any, any, any>;\ntype MATHDOCUMENT = MathDocument<any, any, any>;\n\ntype FilterData = {math: MATHITEM, document: MATHDOCUMENT, data: ParseOptions};\n\n/**\n *  Global constants local to the module. They instantiate an output jax for\n *  bounding box computation.\n */\nlet doc: MATHDOCUMENT = null;\nlet item: MATHITEM = null;\n\n\n/**\n * Get the bounding box of a node.\n * @param {MmlNode} node The target node.\n */\nlet getBBox = function(node: MmlNode) {\n  item.root = node;\n    let {w: width} = (doc.outputJax as any).getBBox(item, doc);\n  return width;\n};\n\n\n/**\n * Get the actual table that represents the inference rule, i.e., the rule\n * without the label. We ignore preceding elements or spaces.\n *\n * @param {MmlNode} node The out node representing the inference.\n * @return {MmlNode} The actual table representing the inference rule.\n */\nlet getRule = function(node: MmlNode): MmlNode {\n  let i = 0;\n  while (node && !NodeUtil.isType(node, 'mtable')) {\n    if (NodeUtil.isType(node, 'text')) {\n      return null;\n    }\n    if (NodeUtil.isType(node, 'mrow')) {\n      node = node.childNodes[0] as MmlNode;\n      i = 0;\n      continue;\n    }\n    node = node.parent.childNodes[i] as MmlNode;\n    i++;\n  }\n  return node;\n};\n\n\n/*******************************\n * Convenience methods for retrieving bits of the proof tree.\n */\n\n/**\n * Gets premises of an inference rule.\n * @param {MmlNode} rule The rule.\n * @param {string} direction Up or down.\n * @return {MmlNode} The premisses.\n */\nlet getPremises = function(rule: MmlNode, direction: string): MmlNode {\n  return rule.childNodes[direction === 'up' ? 1 : 0].childNodes[0].\n    childNodes[0].childNodes[0].childNodes[0] as MmlNode;\n};\n\n\n/**\n * Gets nth premise.\n * @param {MmlNode} premises The premises.\n * @param {number} n Number of premise to get.\n * @return {MmlNode} The nth premise.\n */\nlet getPremise = function(premises: MmlNode, n: number): MmlNode {\n  return premises.childNodes[n].childNodes[0].childNodes[0] as MmlNode;\n};\n\n\n/**\n * Gets first premise.\n * @param {MmlNode} premises The premises.\n * @return {MmlNode} The first premise.\n */\nlet firstPremise = function(premises: MmlNode): MmlNode {\n  return getPremise(premises, 0) as MmlNode;\n};\n\n\n/**\n * Gets last premise.\n * @param {MmlNode} premises The premises.\n * @return {MmlNode} The last premise.\n */\nlet lastPremise = function(premises: MmlNode): MmlNode {\n  return getPremise(premises, premises.childNodes.length - 1);\n};\n\n\n/**\n * Get conclusion in an inference rule.\n * @param {MmlNode} rule The rule.\n * @param {string} direction Up or down.\n * @return {MmlNode} The conclusion.\n */\nlet getConclusion = function(rule: MmlNode, direction: string): MmlNode {\n  return rule.childNodes[direction === 'up' ? 0 : 1].childNodes[0].childNodes[0].childNodes[0] as MmlNode;\n};\n\n\n/**\n * Gets the actual column element in an inference rule. I.e., digs down through\n * row, padding and space elements.\n * @param {MmlNode} inf The rule.\n * @return {MmlNode} The mtd element.\n */\nlet getColumn = function(inf: MmlNode): MmlNode {\n  while (inf && !NodeUtil.isType(inf, 'mtd')) {\n    inf = inf.parent as MmlNode;\n  }\n  return inf;\n};\n\n\n/**\n * Gets the next sibling of an inference rule.\n * @param {MmlNode} inf The inference rule.\n * @return {MmlNode} The next sibling.\n */\nlet nextSibling = function(inf: MmlNode): MmlNode {\n  return inf.parent.childNodes[inf.parent.childNodes.indexOf(inf) + 1] as MmlNode;\n};\n\n\n/**\n * Gets the previous sibling of an inference rule.\n * @param {MmlNode} inf The inference rule.\n * @return {MmlNode} The previous sibling.\n */\n// @ts-ignore\nlet previousSibling = function(inf: MmlNode): MmlNode {\n  return inf.parent.childNodes[inf.parent.childNodes.indexOf(inf) - 1] as MmlNode;\n};\n\n\n/**\n * Get the parent inference rule.\n * @param {MmlNode} inf The inference rule.\n * @return {MmlNode} Its parent.\n */\nlet getParentInf = function(inf: MmlNode): MmlNode {\n  while (inf && getProperty(inf, 'inference') == null) {\n    inf = inf.parent as MmlNode;\n  }\n  return inf;\n};\n\n\n// Computes bbox spaces\n//\n//\n\n/**\n * Computes spacing left or right of an inference rule. In the case of\n * right: right space + right label\n * left: left space + left label\n * @param {MmlNode} inf The overall proof tree.\n * @param {MmlNode} rule The particular inference rule.\n * @param {boolean = false} right True for right, o/w left.\n * @return {number} The spacing next to the rule.\n */\nlet getSpaces = function(inf: MmlNode, rule: MmlNode, right: boolean = false): number {\n  let result = 0;\n  if (inf === rule) {\n    return result;\n  }\n  if (inf !== rule.parent) {\n    let children = inf.childNodes as MmlNode[];\n    let index = right ? children.length - 1 : 0;\n    if (NodeUtil.isType(children[index], 'mspace')) {\n      result += getBBox(children[index]);\n    }\n    inf = rule.parent;\n  }\n  if (inf === rule) {\n    return result;\n  }\n  let children = inf.childNodes as MmlNode[];\n  let index = right ? children.length - 1 : 0;\n  if (children[index] !== rule) {\n    result += getBBox(children[index]);\n  }\n  return result;\n};\n\n\n// - Get rule T from Wrapper W.\n// - Get conclusion C in T.\n// - w: Preceding/following space/label.\n// - (x - y)/2: Distance from left boundary to middle of C.\n/**\n * Computes an space adjustment value to move the inference rule.\n * @param {MmlNode} inf The inference rule.\n * @param {boolean = false} right True if adjustments are on the right.\n * @return {number} The adjustment value.\n */\nlet adjustValue = function(inf: MmlNode, right: boolean = false): number {\n  let rule = getRule(inf);\n  let conc = getConclusion(rule, getProperty(rule, 'inferenceRule') as string);\n  // TODO:  Here we have to improve sequent adjustment!\n  let w = getSpaces(inf, rule, right);\n  let x = getBBox(rule);\n  let y = getBBox(conc);\n  return w + ((x - y) / 2);\n};\n\n\n/**\n * Adds (positive or negative) space in the column containing the inference rule.\n * @param {ParseOptions} config The parser configuration.\n * @param {MmlNode} inf The inference rule to place.\n * @param {number} space The space to be added.\n * @param {boolean = false} right True if adjustment is on the right.\n */\nlet addSpace = function(config: ParseOptions, inf: MmlNode,\n                        space: number, right: boolean = false) {\n  if (getProperty(inf, 'inferenceRule') ||\n      getProperty(inf, 'labelledRule')) {\n    const mrow = config.nodeFactory.create('node', 'mrow');\n    inf.parent.replaceChild(mrow, inf);\n    mrow.setChildren([inf]);\n    moveProperties(inf, mrow);\n    inf = mrow;\n  }\n  // TODO: Simplify below as we now have a definite mrow.\n  const index = right ? inf.childNodes.length - 1 : 0;\n  let mspace = inf.childNodes[index] as MmlNode;\n  if (NodeUtil.isType(mspace, 'mspace')) {\n    NodeUtil.setAttribute(\n      mspace, 'width',\n      ParseUtil.Em(ParseUtil.dimen2em(\n        NodeUtil.getAttribute(mspace, 'width') as string) + space));\n    return;\n  }\n  mspace = config.nodeFactory.create('node', 'mspace', [],\n                                     {width: ParseUtil.Em(space)});\n  if (right) {\n    inf.appendChild(mspace);\n    return;\n  }\n  mspace.parent = inf;\n  inf.childNodes.unshift(mspace);\n};\n\n\n/**\n * Propagates properties up the tree.\n * @param {MmlNode} src The source node.\n * @param {MmlNode} dest The destination node.\n */\nlet moveProperties = function(src: MmlNode, dest: MmlNode) {\n  let props = ['inference', 'proof', 'maxAdjust', 'labelledRule'];\n  props.forEach(x => {\n    let value = getProperty(src, x);\n    if (value != null) {\n      setProperty(dest, x, value);\n      removeProperty(src, x);\n    }\n  });\n};\n\n\n\n/********************************\n * The following methods deal with sequents. There are still issues with the\n * spatial layout, though.\n */\n// Sequents look like this: table row 3 cells\n// The table has the 'sequent' property.\n// The row is the node that is actually saved in the config object.\n/**\n * Method to adjust sequent positioning after the tree is computed.\n * @param {ParseOptions} config Parser configuration options.\n */\nlet adjustSequents = function(config: ParseOptions) {\n  let sequents = config.nodeLists['sequent'];\n  if (!sequents) {\n    return;\n  }\n  for (let i = sequents.length - 1, seq; seq = sequents[i]; i--) {\n    if (getProperty(seq, 'sequentProcessed')) {\n      removeProperty(seq, 'sequentProcessed');\n      continue;\n    }\n    let collect = [];\n    let inf = getParentInf(seq);\n    if (getProperty(inf, 'inference') !== 1) {\n      continue;\n    }\n    collect.push(seq);\n    while (getProperty(inf, 'inference') === 1) {\n      // In case we have a table with a label.\n      inf = getRule(inf);\n      let premise = firstPremise(getPremises(inf, getProperty(inf, 'inferenceRule') as string));\n      let sequent = (getProperty(premise, 'inferenceRule')) ?\n        // If the first premise is an inference rule, check the conclusions for a sequent.\n        getConclusion(premise, getProperty(premise, 'inferenceRule') as string) :\n        // Otherwise it is a hyp and we have to check the formula itself.\n        premise;\n      if (getProperty(sequent, 'sequent')) {\n        seq = sequent.childNodes[0] as MmlNode;\n        collect.push(seq);\n        setProperty(seq, 'sequentProcessed', true);\n      }\n      inf = premise;\n    }\n    adjustSequentPairwise(config, collect);\n  }\n};\n\n\n/**\n * Add spaces to the sequents where necessary.\n * @param {ParseOptions} config Parser configuration options.\n * @param {MmlNode} sequent The sequent inference rule.\n * @param {number} position Position of formula to adjust (0 or 2).\n * @param {string} direction Left or right of the turnstyle.\n * @param {number} width The space to add to the formulas.\n */\nconst addSequentSpace = function(config: ParseOptions, sequent: MmlNode,\n                                 position: number, direction: string, width: number) {\n  let mspace = config.nodeFactory.create('node', 'mspace', [],\n                                         {width: ParseUtil.Em(width)});\n  if (direction === 'left') {\n    let row = sequent.childNodes[position].childNodes[0] as MmlNode;\n    mspace.parent = row;\n    row.childNodes.unshift(mspace);\n  } else {\n    sequent.childNodes[position].appendChild(mspace);\n  }\n  setProperty(sequent.parent, 'sequentAdjust_' + direction, width);\n};\n\n\n/**\n * Adjusts the sequent positioning for a list of inference rules by pairwise\n * adjusting the width of formulas in sequents. I.e.,\n *    A,B |- C\n * ------------\n *    A |- B,C\n *\n * will be adjusted to\n *\n *    A, B |- C\n * ----------------\n *       A |- B,C\n *\n * @param {ParseOptions} config Parser configuration options.\n * @param {MmlNode[]} sequents The list of sequents.\n */\nconst adjustSequentPairwise = function(config: ParseOptions, sequents: MmlNode[]) {\n  let top = sequents.pop();\n  while (sequents.length) {\n    let bottom = sequents.pop();\n    let [left, right] = compareSequents(top, bottom);\n    if (getProperty(top.parent, 'axiom')) {\n      addSequentSpace(config, left < 0 ? top : bottom, 0, 'left', Math.abs(left));\n      addSequentSpace(config, right < 0 ? top : bottom, 2, 'right', Math.abs(right));\n    }\n    top = bottom;\n  }\n};\n\n\n/**\n * Compares the top and bottom sequent of a inference rule\n * Top:     A |- B\n *        ----------\n * Bottom:  C |- D\n *\n * @param {MmlNode} top Top sequent.\n * @param {MmlNode} bottom Bottom sequent.\n * @return {[number, number]} The delta for left and right side of the sequents.\n */\nconst compareSequents = function(top: MmlNode, bottom: MmlNode): [number, number] {\n  const tr = getBBox(top.childNodes[2] as MmlNode);\n  const br = getBBox(bottom.childNodes[2] as MmlNode);\n  const tl = getBBox(top.childNodes[0] as MmlNode);\n  const bl = getBBox(bottom.childNodes[0] as MmlNode);\n  // Deltas\n  const dl = tl - bl;\n  const dr = tr - br;\n  return [dl, dr];\n};\n\n// For every inference rule we adjust the width of ruler by subtracting and\n// adding suitable spaces around the rule. The algorithm in detail.\n//\n// Notions that we need:\n//\n//\n// * Inference: The inference consisting either of an inference rule or a\n//              structure containing the rule plus 0 - 2 labels and spacing\n//              elements.  s l{0,1} t r{0,1} s', m,n \\in IN_0\n//\n//              Technically this is realised as nested rows, if the spaces\n//              and/or labels exist:\n//              mr s mr l t r /mr s' /mr\n//\n// * InferenceRule: The rule without the labels and spacing.\n//\n// * Conclusion: The element forming the conclusion of the rule. In\n//               downwards inferences this is the final row of the table.\n//\n// * Premises: The premises of the rule. In downwards inferences this is the\n//             first row of the rule. Note that this is a rule itself,\n//             with one column for each premise and an empty column\n//             inbetween.\n//\n// * |x|: Width of bounding box of element x.\n//\n// Left adjustment:\n//\n// * For the given inference I:\n//    + compute rule R of I\n//    + compute premises P of I\n//    + compute premise P_f, P_l as first and last premise of I\n//\n// * If P_f is an inference rule:\n//    + compute adjust value a_f for wrapper W_f of P_f\n//    + add -a_f space to wrapper W_f\n//    + add  a_f space to wrapper W\n//\n// * If P_l is an inference rule:\n//   + compute adjust value a_l for wrapper W_l of P_l\n//   + if I has (right) label L: a_l = a_l + |L|\n//   + add -a_l space to P_l\n//   + a_l = max(a_l, A_I), where A_I is saved ajust value in the\n//     \"maxAdjust\" attribute of I.\n//\n//   + Case I is proof: Add a_l space to inf. (Correct after proof.)\n//   + Case I has sibling: Add a_l space to sibling.  (Correct after column.)\n//   + Otherwise: Propagate a_l by\n//                ++ find direct parent infererence rule I'\n//                ++ Set A_{I'} = a_l.\n//\n/**\n * Implements the above algorithm.\n * @param {FilterData} arg The parser configuration and mathitem to filter.\n */\nexport let balanceRules = function(arg: FilterData) {\n  item = new arg.document.options.MathItem('', null, arg.math.display);\n  let config = arg.data;\n  adjustSequents(config);\n  let inferences = config.nodeLists['inference'] || [];\n  for (let inf of inferences) {\n    let isProof = getProperty(inf, 'proof');\n    // This currently only works with downwards rules.\n    let rule = getRule(inf);\n    let premises = getPremises(rule, getProperty(rule, 'inferenceRule') as string);\n    let premiseF = firstPremise(premises);\n    if (getProperty(premiseF, 'inference')) {\n      let adjust = adjustValue(premiseF);\n      if (adjust) {\n        addSpace(config, premiseF, -adjust);\n        let w = getSpaces(inf, rule, false);\n        addSpace(config, inf, adjust - w);\n      }\n    }\n    // Right adjust:\n    let premiseL = lastPremise(premises);\n    if (getProperty(premiseL, 'inference') == null) {\n      continue;\n    }\n    let adjust = adjustValue(premiseL, true);\n    addSpace(config, premiseL, -adjust, true);\n    let w = getSpaces(inf, rule, true);\n    let maxAdjust = getProperty(inf, 'maxAdjust') as number;\n    if (maxAdjust != null) {\n      adjust = Math.max(adjust, maxAdjust);\n    }\n    let column: MmlNode;\n    if (isProof || !(column = getColumn(inf))) {\n      // After the tree we add a space with the accumulated max value.\n      // If the element is not in a column, we know we have some noise and the\n      // proof is an mrow around the final inference.\n      addSpace(config,\n               // in case the rule has been moved into an mrow in Left Adjust.\n               getProperty(inf, 'proof') ? inf : inf.parent, adjust - w, true);\n      continue;\n    }\n    let sibling = nextSibling(column);\n    if (sibling) {\n      // If there is a next column, it is the empty one and we make it wider by\n      // the accumulated max value.\n      const pos = config.nodeFactory.create('node', 'mspace', [],\n                                            {width: adjust - w + 'em'});\n      sibling.appendChild(pos);\n      inf.removeProperty('maxAdjust');\n      continue;\n    }\n    let parentRule = getParentInf(column);\n    if (!parentRule) {\n      continue;\n    }\n    // We are currently in rightmost inference, so we propagate the max\n    // correction value up in the tree.\n    adjust = getProperty(parentRule, 'maxAdjust') ?\n      Math.max(getProperty(parentRule, 'maxAdjust') as number, adjust) : adjust;\n    setProperty(parentRule, 'maxAdjust', adjust);\n  }\n};\n\n\n/**\n * Facilities for semantically relevant properties. These are used by SRE and\n * are always prefixed with bspr_.\n */\nlet property_prefix = 'bspr_';\nlet blacklistedProperties = {\n  [property_prefix + 'maxAdjust']: true\n};\n\n\n/**\n * Sets a bussproofs property used for postprocessing and to convey\n * semantics. Uses the bspr prefix.\n * @param {MmlNode} node The node.\n * @param {string} property The property to set.\n * @param {Property} value Its value.\n */\nexport let setProperty = function(node: MmlNode, property: string, value: Property) {\n  NodeUtil.setProperty(node, property_prefix + property, value);\n};\n\n\n/**\n * Gets a bussproofs property.\n * @param {MmlNode} node The node.\n * @param {string} property The property to retrieve.\n * @return {Property} The property object.\n */\nexport let getProperty = function(node: MmlNode, property: string): Property {\n  return NodeUtil.getProperty(node, property_prefix + property);\n};\n\n\n/**\n * Removes a bussproofs property.\n * @param {MmlNode} node\n * @param {string} property\n */\nexport let removeProperty = function(node: MmlNode, property: string) {\n  node.removeProperty(property_prefix + property);\n};\n\n\n/**\n * Postprocessor that adds properties as attributes to the nodes, unless they\n * are blacklisted.\n * @param {FilterData} arg The object to post-process.\n */\nexport let makeBsprAttributes = function(arg: FilterData) {\n  arg.data.root.walkTree((mml: MmlNode, _data?: any) => {\n    let attr: string[] = [];\n    mml.getPropertyNames().forEach(x => {\n      if (!blacklistedProperties[x] && x.match(RegExp('^' + property_prefix))) {\n        attr.push(x + ':' + mml.getProperty(x));\n      }\n    });\n    if (attr.length) {\n      NodeUtil.setAttribute(mml, 'semantics', attr.join(';'));\n    }\n  });\n};\n\n/**\n * Preprocessor that sets the document and jax for bounding box computations\n * @param {FilterData} arg The object to pre-process.\n */\nexport let saveDocument = function (arg: FilterData) {\n  doc = arg.document;\n  if (!('getBBox' in doc.outputJax)) {\n    throw Error('The bussproofs extension requires an output jax with a getBBox() method');\n  }\n};\n\n/**\n * Clear the document when we are done\n * @param {FilterData} arg The object to pre-process.\n */\nexport let clearDocument = function (_arg: FilterData) {\n  doc = null;\n};\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the cancel package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport TexParser from '../TexParser.js';\nimport {TexConstant} from '../TexConstants.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {ENCLOSE_OPTIONS} from '../enclose/EncloseConfiguration.js';\n\n\n// Namespace\nexport let CancelMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Parse function for cancel macros of the form \\(b|x)?cancel[attributes]{math}\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n * @param {string} notation The type of cancel notation to use.\n */\nCancelMethods.Cancel = function(parser: TexParser, name: string, notation: string) {\n  const attr = parser.GetBrackets(name, '');\n  const math = parser.ParseArg(name);\n  const def = ParseUtil.keyvalOptions(attr, ENCLOSE_OPTIONS);\n  def['notation'] = notation;\n  parser.Push(parser.create('node', 'menclose', [math], def));\n};\n\n\n/**\n * Parse function implementing \\cancelto{value}[attributes]{math}\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\n\nCancelMethods.CancelTo = function(parser: TexParser, name: string) {\n  const attr = parser.GetBrackets(name, '');\n  let value = parser.ParseArg(name);\n  const math = parser.ParseArg(name);\n  const def = ParseUtil.keyvalOptions(attr, ENCLOSE_OPTIONS);\n  def ['notation'] = [TexConstant.Notation.UPDIAGONALSTRIKE,\n                      TexConstant.Notation.UPDIAGONALARROW,\n                      TexConstant.Notation.NORTHEASTARROW].join(' ');\n  value = parser.create('node', 'mpadded', [value],\n                        {depth: '-.1em', height: '+.1em', voffset: '.1em'});\n  parser.Push(parser.create('node', 'msup',\n                            [parser.create('node', 'menclose', [math], def), value]));\n};\n\n\nnew CommandMap('cancel', {\n  cancel:   ['Cancel', TexConstant.Notation.UPDIAGONALSTRIKE],\n  bcancel:  ['Cancel', TexConstant.Notation.DOWNDIAGONALSTRIKE],\n  xcancel:  ['Cancel', TexConstant.Notation.UPDIAGONALSTRIKE + ' ' +\n             TexConstant.Notation.DOWNDIAGONALSTRIKE],\n  cancelto: 'CancelTo'\n}, CancelMethods);\n\n\nexport const CancelConfiguration = Configuration.create(\n  'cancel', {handler: {macro: ['cancel']}}\n);\n\n\n","import {Configuration} from '../Configuration.js';\nimport {EnvironmentMap, MacroMap} from '../SymbolMap.js';\nimport ParseUtil from '../ParseUtil.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {BeginItem, EqnArrayItem} from '../base/BaseItems.js';\nimport {AmsTags} from '../ams/AmsConfiguration.js';\nimport {StackItem, CheckType} from '../StackItem.js';\nimport {MmlMtable} from '../../../core/MmlTree/MmlNodes/mtable.js';\nimport {EmpheqUtil} from '../empheq/EmpheqUtil.js';\n\n/**\n * The StackItem for the numcases environment.\n */\nexport class CasesBeginItem extends BeginItem {\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'cases-begin';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem) {\n    if (item.isKind('end') && item.getName() === this.getName()) {\n      if (this.getProperty('end')) {\n        this.setProperty('end', false);\n        return [[], true] as CheckType;\n      }\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n/**\n * A tagging class for the subnumcases environment.\n */\nexport class CasesTags extends AmsTags {\n\n  /**\n   * The counter for the subnumber.\n   */\n  protected subcounter = 0;\n\n  /**\n   * @override\n   */\n  public start(env: string, taggable: boolean, defaultTags: boolean) {\n    this.subcounter = 0;\n    super.start(env, taggable, defaultTags);\n  }\n\n  /**\n   * @override\n   */\n  public autoTag() {\n    if (this.currentTag.tag != null) return;\n    if (this.currentTag.env === 'subnumcases') {\n      if (this.subcounter === 0) this.counter++;\n      this.subcounter++;\n      this.tag(this.formatNumber(this.counter, this.subcounter), false);\n    } else {\n      if (this.subcounter === 0 || this.currentTag.env !== 'numcases-left') this.counter++;\n      this.tag(this.formatNumber(this.counter), false);\n    }\n  }\n\n  /**\n   * @override\n   */\n  public formatNumber(n: number, m: number = null) {\n    return n.toString() + (m === null ? '' : String.fromCharCode(0x60 + m));\n  }\n\n}\n\nexport const CasesMethods = {\n\n  /**\n   * Implements the numcases environment.\n   *\n   * @param {TexParser} texparser   The active tex parser.\n   * @param {CasesBeginItem} begin  The environment begin item.\n   */\n  NumCases(parser: TexParser, begin: CasesBeginItem) {\n    if (parser.stack.env.closing === begin.getName()) {\n      delete parser.stack.env.closing;\n      parser.Push(parser.itemFactory.create('end').setProperty('name', begin.getName())); // finish eqnarray\n      const cases = parser.stack.Top();\n      const table = cases.Last as MmlMtable;\n      const original = ParseUtil.copyNode(table, parser) as MmlMtable;\n      const left = cases.getProperty('left');\n      EmpheqUtil.left(table, original, left + '\\\\empheqlbrace\\\\,', parser, 'numcases-left');\n      parser.Push(parser.itemFactory.create('end').setProperty('name', begin.getName()));\n      return null;\n    } else {\n      const left = parser.GetArgument('\\\\begin{' + begin.getName() + '}');\n      begin.setProperty('left', left);\n      const array = BaseMethods.EqnArray(parser, begin, true, true, 'll', ) as EqnArrayItem;\n      array.arraydef.displaystyle = false;\n      array.arraydef.rowspacing = '.2em';\n      array.setProperty('numCases', true);\n      parser.Push(begin);\n      return array;\n    }\n  },\n\n  /**\n   * Replacement for & in cases environment.\n   */\n  Entry(parser: TexParser, name: string) {\n    if (!parser.stack.Top().getProperty('numCases')) {\n      return BaseMethods.Entry(parser, name);\n    }\n    parser.Push(parser.itemFactory.create('cell').setProperties({isEntry: true, name: name}));\n    //\n    //  Make second column be in \\text{...}\n    //\n    const tex = parser.string;\n    let braces = 0, i = parser.i, m = tex.length;\n    //\n    //  Look through the string character by character...\n    //\n    while (i < m) {\n      const c = tex.charAt(i);\n      if (c === '{') {\n        //\n        //  Increase the nested brace count and go on\n        //\n        braces++;\n        i++;\n      } else if (c === '}') {\n        //\n        //  If there are too many close braces, just end (we will get an\n        //    error message later when the rest of the string is parsed)\n        //  Otherwise\n        //    decrease the nested brace count,\n        //    go on to the next character.\n        //\n        if (braces === 0) {\n          break;\n        } else {\n          braces--;\n          i++;\n        }\n      } else if (c === '&' && braces === 0) {\n        //\n        //  Extra alignment tabs are not allowed in cases\n        //\n        throw new TexError('ExtraCasesAlignTab', 'Extra alignment tab in text for numcase environment');\n      } else if (c === '\\\\' && braces === 0) {\n        //\n        //  If the macro is \\cr or \\\\, end the search, otherwise skip the macro\n        //  (multi-letter names don't matter, as we will skip the rest of the\n        //   characters in the main loop)\n        //\n        const cs = (tex.slice(i + 1).match(/^[a-z]+|./i) || [])[0];\n        if (cs === '\\\\' || cs === 'cr' || cs === 'end' || cs === 'label') {\n          break;\n        } else {\n          i += cs.length;\n        }\n      } else {\n        //\n        //  Go on to the next character\n        //\n        i++;\n      }\n    }\n    //\n    //  Process the second column as text and continue parsing from there,\n    //\n    const text = tex.substr(parser.i, i - parser.i).replace(/^\\s*/, '');\n    parser.PushAll(ParseUtil.internalMath(parser, text, 0));\n    parser.i = i;\n  }\n\n};\n\n/**\n * The environments for this package\n */\nnew EnvironmentMap('cases-env', EmpheqUtil.environment, {\n  numcases: ['NumCases', 'cases'],\n  subnumcases: ['NumCases', 'cases']\n}, CasesMethods);\n\n/**\n * The macros for this package\n */\nnew MacroMap('cases-macros', {\n  '&': 'Entry'\n}, CasesMethods);\n\n//\n//  Define the package for our new environment\n//\nexport const CasesConfiguration = Configuration.create('cases', {\n  handler: {\n    environment: ['cases-env'],\n    character: ['cases-macros']\n  },\n  items: {\n    [CasesBeginItem.prototype.kind]: CasesBeginItem\n  },\n  tags: {'cases': CasesTags}\n});\n","/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the centernot package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport ParseOptions from '../ParseOptions.js';\nimport TexParser from '../TexParser.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport BaseMethods from '../base/BaseMethods.js';\n\nnew CommandMap('centernot', {\n  centerOver: 'CenterOver',\n  centernot: ['Macro', '\\\\centerOver{#1}{{\\u29F8}}', 1]\n}, {\n  /**\n   * Implements \\centerOver{base}{symbol}\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} name        The name of the macro being processed.\n   */\n  CenterOver(parser: TexParser, name: string) {\n    const arg = '{' + parser.GetArgument(name) + '}';\n    const over = parser.ParseArg(name);\n    const base = new TexParser(arg, parser.stack.env, parser.configuration).mml();\n    let mml = parser.create('node', 'TeXAtom', [\n      new TexParser(arg, parser.stack.env, parser.configuration).mml(),\n      parser.create('node', 'mpadded', [\n        parser.create('node', 'mpadded', [over], {width: 0, lspace: '-.5width'}),\n        parser.create('node', 'mphantom', [base])\n      ], {width: 0, lspace: '-.5width'})\n    ]);\n    parser.configuration.addNode('centerOver', base);\n    parser.Push(mml);\n  },\n  Macro: BaseMethods.Macro\n});\n\n/**\n * Filter to copy texClass to the surrounding TeXAtom so that the negated\n *   item has the same class of the base.\n *\n * @param {ParseOptions} data   The active tex parser.\n */\nexport function filterCenterOver({data}: {data: ParseOptions}) {\n  for (const base of data.getList('centerOver')) {\n    const texClass = NodeUtil.getTexClass(base.childNodes[0].childNodes[0] as MmlNode);\n    if (texClass !== null) {\n      NodeUtil.setProperties(base.parent.parent.parent.parent.parent.parent, {texClass});\n    }\n  }\n}\n\n\nexport const CenternotConfiguration = Configuration.create(\n  'centernot', {\n    handler: {macro: ['centernot']},\n    postprocessors: [filterCenterOver]\n  }\n);\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 Omar Al-Ithawi and The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Configuration file for the color package.\n *\n * @author i@omardo.com (Omar Al-Ithawi)\n */\n\n\nimport {CommandMap} from '../SymbolMap.js';\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport {ColorMethods} from './ColorMethods.js';\nimport {ColorModel} from './ColorUtil.js';\nimport {TeX} from '../../tex.js';\n\n/**\n * The color macros\n */\nnew CommandMap('color', {\n  color: 'Color',\n  textcolor: 'TextColor',\n  definecolor: 'DefineColor',\n  colorbox: 'ColorBox',\n  fcolorbox: 'FColorBox'\n}, ColorMethods);\n\n/**\n * Config method for Color package.\n *\n * @param {Configuration} config The current configuration.\n * @param {TeX} jax              The TeX jax having that configuration\n */\nconst config = function(_config: ParserConfiguration, jax: TeX<any, any, any>) {\n  jax.parseOptions.packageData.set('color', {model: new ColorModel()});\n};\n\n/**\n * The configuration for the color macros\n */\nexport const ColorConfiguration = Configuration.create(\n  'color', {\n    handler: {\n      macro: ['color'],\n    },\n    options: {\n      color: {\n        padding: '5px',\n        borderWidth: '2px'\n      }\n    },\n    config: config\n  }\n);\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 Omar Al-Ithawi and The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Constants file for the color package.\n *\n * @author i@omardo.com (Omar Al-Ithawi)\n */\n\nexport const COLORS: Map<string, string> = new Map<string, string>([\n  ['Apricot', '#FBB982'],\n  ['Aquamarine', '#00B5BE'],\n  ['Bittersweet', '#C04F17'],\n  ['Black', '#221E1F'],\n  ['Blue', '#2D2F92'],\n  ['BlueGreen', '#00B3B8'],\n  ['BlueViolet', '#473992'],\n  ['BrickRed', '#B6321C'],\n  ['Brown', '#792500'],\n  ['BurntOrange', '#F7921D'],\n  ['CadetBlue', '#74729A'],\n  ['CarnationPink', '#F282B4'],\n  ['Cerulean', '#00A2E3'],\n  ['CornflowerBlue', '#41B0E4'],\n  ['Cyan', '#00AEEF'],\n  ['Dandelion', '#FDBC42'],\n  ['DarkOrchid', '#A4538A'],\n  ['Emerald', '#00A99D'],\n  ['ForestGreen', '#009B55'],\n  ['Fuchsia', '#8C368C'],\n  ['Goldenrod', '#FFDF42'],\n  ['Gray', '#949698'],\n  ['Green', '#00A64F'],\n  ['GreenYellow', '#DFE674'],\n  ['JungleGreen', '#00A99A'],\n  ['Lavender', '#F49EC4'],\n  ['LimeGreen', '#8DC73E'],\n  ['Magenta', '#EC008C'],\n  ['Mahogany', '#A9341F'],\n  ['Maroon', '#AF3235'],\n  ['Melon', '#F89E7B'],\n  ['MidnightBlue', '#006795'],\n  ['Mulberry', '#A93C93'],\n  ['NavyBlue', '#006EB8'],\n  ['OliveGreen', '#3C8031'],\n  ['Orange', '#F58137'],\n  ['OrangeRed', '#ED135A'],\n  ['Orchid', '#AF72B0'],\n  ['Peach', '#F7965A'],\n  ['Periwinkle', '#7977B8'],\n  ['PineGreen', '#008B72'],\n  ['Plum', '#92268F'],\n  ['ProcessBlue', '#00B0F0'],\n  ['Purple', '#99479B'],\n  ['RawSienna', '#974006'],\n  ['Red', '#ED1B23'],\n  ['RedOrange', '#F26035'],\n  ['RedViolet', '#A1246B'],\n  ['Rhodamine', '#EF559F'],\n  ['RoyalBlue', '#0071BC'],\n  ['RoyalPurple', '#613F99'],\n  ['RubineRed', '#ED017D'],\n  ['Salmon', '#F69289'],\n  ['SeaGreen', '#3FBC9D'],\n  ['Sepia', '#671800'],\n  ['SkyBlue', '#46C5DD'],\n  ['SpringGreen', '#C6DC67'],\n  ['Tan', '#DA9D76'],\n  ['TealBlue', '#00AEB3'],\n  ['Thistle', '#D883B7'],\n  ['Turquoise', '#00B4CE'],\n  ['Violet', '#58429B'],\n  ['VioletRed', '#EF58A0'],\n  ['White', '#FFFFFF'],\n  ['WildStrawberry', '#EE2967'],\n  ['Yellow', '#FFF200'],\n  ['YellowGreen', '#98CC70'],\n  ['YellowOrange', '#FAA21A'],\n]);\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 Omar Al-Ithawi and The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Parse methods and helper functtions for the color package.\n *\n * @author i@omardo.com (Omar Al-Ithawi)\n */\n\n\nimport NodeUtil from '../NodeUtil.js';\nimport {ParseMethod} from '../Types.js';\nimport {PropertyList} from '../../../core/Tree/Node.js';\nimport ParseUtil from '../ParseUtil.js';\nimport TexParser from '../TexParser.js';\n\nimport {ColorModel} from './ColorUtil.js';\n\n\n/**\n * Build PropertyList from padding value.\n *\n * @param {string} colorPadding: Padding for \\colorbox and \\fcolorbox.\n * @return {PropertyList} The padding properties.\n */\nfunction padding(colorPadding: string): PropertyList {\n  const pad = `+${colorPadding}`;\n  const unit = colorPadding.replace(/^.*?([a-z]*)$/, '$1');\n  const pad2 = 2 * parseFloat(pad);\n  return {\n    width: `+${pad2}${unit}`,\n    height: pad,\n    depth: pad,\n    lspace: colorPadding,\n  };\n}\n\n\nexport const ColorMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Override \\color macro definition.\n *\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the control sequence.\n */\nColorMethods.Color = function (parser: TexParser, name: string) {\n  const model = parser.GetBrackets(name, '');\n  const colorDef = parser.GetArgument(name);\n  const colorModel: ColorModel = parser.configuration.packageData.get('color').model;\n  const color = colorModel.getColor(model, colorDef);\n\n  const style = parser.itemFactory.create('style')\n    .setProperties({styles: { mathcolor: color }});\n  parser.stack.env['color'] = color;\n\n  parser.Push(style);\n};\n\n\n/**\n * Define the \\textcolor macro.\n *\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the control sequence.\n */\nColorMethods.TextColor = function (parser: TexParser, name: string) {\n  const model = parser.GetBrackets(name, '');\n  const colorDef = parser.GetArgument(name);\n  const colorModel: ColorModel = parser.configuration.packageData.get('color').model;\n  const color = colorModel.getColor(model, colorDef);\n  const old = parser.stack.env['color'];\n\n  parser.stack.env['color'] = color;\n  const math = parser.ParseArg(name);\n\n  if (old) {\n    parser.stack.env['color'] = old;\n  } else {\n    delete parser.stack.env['color'];\n  }\n\n  const node = parser.create('node', 'mstyle', [math], {mathcolor: color});\n  parser.Push(node);\n};\n\n/**\n * Define the \\definecolor macro.\n *\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the control sequence.\n */\nColorMethods.DefineColor = function (parser: TexParser, name: string) {\n  const cname = parser.GetArgument(name);\n  const model = parser.GetArgument(name);\n  const def = parser.GetArgument(name);\n\n  const colorModel: ColorModel = parser.configuration.packageData.get('color').model;\n  colorModel.defineColor(model, cname, def);\n};\n\n/**\n * Produce a text box with a colored background: `\\colorbox`.\n *\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the control sequence.\n */\nColorMethods.ColorBox = function (parser: TexParser, name: string) {\n  const cname = parser.GetArgument(name);\n  const math = ParseUtil.internalMath(parser, parser.GetArgument(name));\n  const colorModel: ColorModel = parser.configuration.packageData.get('color').model;\n\n  const node = parser.create('node', 'mpadded', math, {\n    mathbackground: colorModel.getColor('named', cname)\n  });\n\n  NodeUtil.setProperties(node, padding(parser.options.color.padding));\n  parser.Push(node);\n};\n\n/**\n * Produce a framed text box with a colored background: `\\fcolorbox`.\n *\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the control sequence.\n */\nColorMethods.FColorBox = function (parser: TexParser, name: string) {\n  const fname = parser.GetArgument(name);\n  const cname = parser.GetArgument(name);\n  const math = ParseUtil.internalMath(parser, parser.GetArgument(name));\n  const options = parser.options.color;\n  const colorModel: ColorModel = parser.configuration.packageData.get('color').model;\n\n  const node = parser.create('node', 'mpadded', math, {\n    mathbackground: colorModel.getColor('named', cname),\n    style: `border: ${options.borderWidth} solid ${colorModel.getColor('named', fname)}`\n  });\n\n  NodeUtil.setProperties(node, padding(options.padding));\n  parser.Push(node);\n};\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 Omar Al-Ithawi and The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Utility functions and classes for the color package.\n *\n * @author i@omardo.com (Omar Al-Ithawi)\n */\n\n\nimport TexError from '../TexError.js';\nimport {COLORS} from './ColorConstants.js';\n\ntype ColorModelProcessor = (def: string) => string;\nconst ColorModelProcessors: Map<string, ColorModelProcessor> = new Map<string, ColorModelProcessor>();\n\n\nexport class ColorModel {\n\n  /**\n   * User defined colors.\n   *\n   * This variable is local to the parser, so two parsers in the same\n   * JavaScript thread can have two different sets of user-defined colors.\n   */\n  private userColors: Map<string, string> = new Map<string, string>();\n\n  /**\n   * Converts a color model from string representation to its CSS format `#44ff00`\n   *\n   * @param {string} model The coloring model type: `rgb` `RGB` or `gray`.\n   * @param {string} def The color definition: `0.5,0,1`, `128,0,255`, `0.5`.\n   * @return {string} The color definition in CSS format e.g. `#44ff00`.\n   */\n  private normalizeColor(model: string, def: string): string {\n    if (!model || model === 'named') {\n      // Allow to define colors directly by using the CSS format e.g. `#888`\n      return def;\n    }\n\n    if (ColorModelProcessors.has(model)) {\n      const modelProcessor = ColorModelProcessors.get(model);\n      return modelProcessor(def);\n    }\n\n    throw new TexError('UndefinedColorModel', 'Color model \\'%1\\' not defined', model);\n  }\n\n  /**\n   * Look up a color based on its model and definition.\n   *\n   * @param {string} model The coloring model type: `named`, `rgb` `RGB` or `gray`.\n   * @param {string} def The color definition: `red, `0.5,0,1`, `128,0,255`, `0.5`.\n   * @return {string} The color definition in CSS format e.g. `#44ff00`.\n   */\n  public getColor(model: string, def: string): string {\n    if (!model || model === 'named') {\n      return this.getColorByName(def);\n    }\n\n    return this.normalizeColor(model, def);\n  }\n\n  /**\n   * Get a named color.\n   *\n   * @param {string} name The color name e.g. `darkblue`.\n   * @return {string} The color definition in CSS format e.g. `#44ff00`.\n   *\n   * To retain backward compatilbity with MathJax v2 this method returns\n   * unknown as-is, this is useful for both passing through CSS format colors like `#ff0`,\n   * or even standard CSS color names that this plugin is unaware of.\n   *\n   * In TeX format, this would help to let `\\textcolor{#f80}{\\text{Orange}}` show an\n   * orange word.\n   */\n  private getColorByName(name: string): string {\n    if (this.userColors.has(name)) {\n      return this.userColors.get(name);\n    }\n\n    if (COLORS.has(name)) {\n      return COLORS.get(name);\n    }\n\n    // Pass the color name as-is to CSS\n    return name;\n  }\n\n  /**\n   * Create a new user-defined color.\n   *\n   * This color is local to the parser, so another MathJax parser won't be poluted.\n   *\n   * @param {string} model The coloring model type: e.g. `rgb`, `RGB` or `gray`.\n   * @param {string} name The color name: `darkblue`.\n   * @param {string} def The color definition in the color model format: `128,0,255`.\n   */\n  public defineColor(model: string, name: string, def: string) {\n    const normalized = this.normalizeColor(model, def);\n    this.userColors.set(name, normalized);\n  }\n}\n\n\n/**\n * Get an rgb color.\n *\n * @param {OptionList} parserOptions The parser options object.\n * @param {string} rgb The color definition in rgb: `0.5,0,1`.\n * @return {string} The color definition in CSS format e.g. `#44ff00`.\n */\nColorModelProcessors.set('rgb', function (rgb: string): string {\n  const rgbParts: string[] = rgb.trim().split(/\\s*,\\s*/);\n  let RGB: string = '#';\n\n  if (rgbParts.length !== 3) {\n    throw new TexError('ModelArg1', 'Color values for the %1 model require 3 numbers', 'rgb');\n  }\n\n  for (const rgbPart of rgbParts) {\n    if (!rgbPart.match(/^(\\d+(\\.\\d*)?|\\.\\d+)$/)) {\n      throw new TexError('InvalidDecimalNumber', 'Invalid decimal number');\n    }\n\n    const n = parseFloat(rgbPart);\n    if (n < 0 || n > 1) {\n      throw new TexError('ModelArg2',\n                         'Color values for the %1 model must be between %2 and %3',\n                         'rgb', '0', '1');\n    }\n\n    let pn = Math.floor(n * 255).toString(16);\n    if (pn.length < 2) {\n      pn = '0' + pn;\n    }\n\n    RGB += pn;\n  }\n\n  return RGB;\n});\n\n/**\n * Get an RGB color.\n *\n * @param {OptionList} parserOptions The parser options object.\n * @param {string} rgb The color definition in RGB: `128,0,255`.\n * @return {string} The color definition in CSS format e.g. `#44ff00`.\n */\nColorModelProcessors.set('RGB', function (rgb: string): string {\n  const rgbParts: string[] = rgb.trim().split(/\\s*,\\s*/);\n  let RGB = '#';\n\n  if (rgbParts.length !== 3) {\n    throw new TexError('ModelArg1', 'Color values for the %1 model require 3 numbers', 'RGB');\n  }\n\n  for (const rgbPart of rgbParts) {\n    if (!rgbPart.match(/^\\d+$/)) {\n      throw new TexError('InvalidNumber', 'Invalid number');\n    }\n\n    const n = parseInt(rgbPart);\n    if (n > 255) {\n      throw new TexError('ModelArg2',\n                         'Color values for the %1 model must be between %2 and %3',\n                         'RGB', '0', '255');\n    }\n\n    let pn = n.toString(16);\n    if (pn.length < 2) {\n      pn = '0' + pn;\n    }\n    RGB += pn;\n  }\n  return RGB;\n});\n\n/**\n * Get a gray-scale value.\n *\n * @param {OptionList} parserOptions The parser options object.\n * @param {string} gray The color definition in RGB: `0.5`.\n * @return {string} The color definition in CSS format e.g. `#808080`.\n */\nColorModelProcessors.set('gray', function (gray: string): string {\n  if (!gray.match(/^\\s*(\\d+(\\.\\d*)?|\\.\\d+)\\s*$/)) {\n    throw new TexError('InvalidDecimalNumber', 'Invalid decimal number');\n  }\n\n  const n: number = parseFloat(gray);\n  if (n < 0 || n > 1) {\n    throw new TexError('ModelArg2',\n                       'Color values for the %1 model must be between %2 and %3',\n                       'gray', '0', '1');\n  }\n  let pn = Math.floor(n * 255).toString(16);\n  if (pn.length < 2) {\n    pn = '0' + pn;\n  }\n\n  return `#${pn}${pn}${pn}`;\n});\n","/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview    Configuration file for the colortbl package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {ArrayItem} from '../base/BaseItems.js';\nimport {Configuration, ParserConfiguration, ConfigurationHandler} from '../Configuration.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\n\nimport {TeX} from '../../tex.js';\n\n/**\n * Information about table colors.\n */\nexport interface ColorData {\n  cell: string;\n  row: string;\n  col: string[];\n}\n\n//\n//  Sublcass the ArrayItem to handle colored entries\n//\nexport class ColorArrayItem extends ArrayItem {\n  /**\n   *  Store current color for cell, row, and columns.\n   */\n  public color: ColorData = {\n    cell: '',\n    row: '',\n    col: []\n  };\n\n  /**\n   * True if any cell is colored (we will make sure the edge cells are full sized).\n   */\n  public hasColor: boolean = false;\n\n  /**\n   * @override\n   */\n  public EndEntry() {\n    super.EndEntry();\n    const cell = this.row[this.row.length - 1];\n    const color = this.color.cell || this.color.row || this.color.col[this.row.length - 1];\n    if (color) {\n      cell.attributes.set('mathbackground', color);\n      this.color.cell = '';\n      this.hasColor = true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  public EndRow() {\n    super.EndRow();\n    this.color.row = '';\n  }\n\n  /**\n   * @override\n   */\n  public createMml() {\n    //\n    // If there is any color in the array, give it an empty frame,\n    //   if there isn't one already.  This will make sure the color\n    //   in edge cells extends past their contents.\n    //\n    const mml = super.createMml();\n    let table = (mml.isKind('mrow') ? mml.childNodes[1] : mml) as MmlNode;\n    if (table.isKind('menclose')) {\n      table = table.childNodes[0].childNodes[0] as MmlNode;\n    }\n    if (this.hasColor && table.attributes.get('frame') === 'none') {\n      table.attributes.set('frame', '');\n    }\n    return mml;\n  }\n\n}\n\n//\n//  Define macros for table coloring.\n//\nnew CommandMap('colortbl', {\n  cellcolor: ['TableColor', 'cell'],\n  rowcolor:  ['TableColor', 'row'],\n  columncolor: ['TableColor', 'col']\n}, {\n  /**\n   * Add color to a column, row, or cell.\n   *\n   * @param {TexParser} parser       The active TeX parser\n   * @param {string} name            The name of the macro that is being processed\n   * @param {keyof ColorData} type   The type (col, row, cell) of color being added\n   */\n  TableColor(parser: TexParser, name: string, type: keyof ColorData) {\n    const lookup = parser.configuration.packageData.get('color').model;  // use the color extension's color model\n    const model = parser.GetBrackets(name, '');\n    const color = lookup.getColor(model, parser.GetArgument(name));\n    //\n    // Check that we are in a colorable array.\n    //\n    const top = parser.stack.Top() as ColorArrayItem;\n    if (!(top instanceof ColorArrayItem)) {\n      throw new TexError('UnsupportedTableColor', 'Unsupported use of %1', parser.currentCS);\n    }\n    //\n    //  Check the position of the macro and save the color.\n    //\n    if (type === 'col') {\n      if (top.table.length) {\n        throw new TexError('ColumnColorNotTop', '%1 must be in the top row', name);\n      }\n      top.color.col[top.row.length] = color;\n      //\n      // Ignore the left and right overlap options.\n      //\n      if (parser.GetBrackets(name, '')) {\n        parser.GetBrackets(name, '');\n      }\n    } else {\n      top.color[type] = color;\n      if (type === 'row' && (top.Size() || top.row.length)) {\n        throw new TexError('RowColorNotFirst', '%1 must be at the beginning of a row', name);\n      }\n    }\n  }\n});\n\n/**\n * The configuration function for colortbl.\n *\n * @param {ParserConfiguration} config   The configuration being used.\n * @param {Tex} jax                      The TeX jax using this configuration.\n */\nconst config = function (config: ParserConfiguration, jax: TeX<any, any, any>) {\n  //\n  //  Make sure color is configured.  (It doesn't have to be included in tex.packages.)\n  //\n  if (!jax.parseOptions.packageData.has('color')) {\n    ConfigurationHandler.get('color').config(config, jax);\n  }\n};\n\n//\n//  Create the color-table configuration.\n//\nexport const ColortblConfiguration = Configuration.create('colortbl', {\n  handler: {macro: ['colortbl']},\n  items: {'array': ColorArrayItem},  // overrides original array class\n  priority: 10,                      // make sure we are processed after the base package (to override its array)\n  config: [config, 10]               // make sure we configure after the color package, if it is used.\n});\n","/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Configuration file for the v2-compatible color package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {CommandMap} from '../SymbolMap.js';\nimport {Configuration} from '../Configuration.js';\nimport {ParseMethod} from '../Types.js';\nimport TexParser from '../TexParser.js';\n\nexport const ColorV2Methods: Record<string, ParseMethod> = {\n\n  /**\n   * Implements the v2 color macro\n   *\n   * @param {TexParser} parser The calling parser.\n   * @param {string} name The macro name.\n   */\n  Color(parser: TexParser, name: string) {\n    // @test Color Frac\n    const color = parser.GetArgument(name);\n    const old = parser.stack.env['color'];\n    parser.stack.env['color'] = color;\n    const math = parser.ParseArg(name);\n    if (old) {\n      parser.stack.env['color'] = old;\n    } else {\n      delete parser.stack.env['color'];\n    }\n    const node = parser.create('node', 'mstyle', [math], {mathcolor: color});\n    parser.Push(node);\n  }\n\n};\n\n/**\n * The color macros\n */\nnew CommandMap('colorv2', {color: 'Color'}, ColorV2Methods);\n\n/**\n * The configuration for the color macros\n */\nexport const ColorConfiguration = Configuration.create(\n  'colorv2', {handler: {macro: ['colorv2']}}\n);\n","/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview    Configuration file for the configmacros package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport {expandable} from '../../../util/Options.js';\nimport {CommandMap, EnvironmentMap} from '../SymbolMap.js';\nimport ParseMethods from '../ParseMethods.js';\nimport {Macro} from '../Symbol.js';\nimport NewcommandMethods from '../newcommand/NewcommandMethods.js';\nimport {BeginEnvItem} from '../newcommand/NewcommandItems.js';\nimport {TeX} from '../../tex.js';\n\ntype TEX = TeX<any, any, any>;\n\n/**\n * The name to use for the macros map\n */\nconst MACROSMAP = 'configmacros-map';\n\n/**\n * The name to use for the environment map\n */\nconst ENVIRONMENTMAP = 'configmacros-env-map';\n\n/**\n * Create the command map for the macros\n *\n * @param {Configuration} config   The configuration object for the input jax\n */\nfunction configmacrosInit(config: ParserConfiguration) {\n  new CommandMap(MACROSMAP, {}, {});\n  new EnvironmentMap(ENVIRONMENTMAP, ParseMethods.environment, {}, {});\n  config.append(Configuration.local({\n    handler: {\n      macro: [MACROSMAP],\n      environment: [ENVIRONMENTMAP]\n    },\n    priority: 3\n  }));\n}\n\n/**\n * Create the user-defined macros and environments from their options\n *\n * @param {Configuration} config   The configuration object for the input jax\n * @param {TeX} jax                The TeX input jax\n */\nfunction configmacrosConfig(_config: ParserConfiguration, jax: TEX) {\n  configMacros(jax);\n  configEnvironments(jax);\n}\n\n/**\n * Create user-defined macros from the macros option\n *\n * @param {TeX} jax                The TeX input jax\n */\nfunction configMacros(jax: TEX) {\n  const handler = jax.parseOptions.handlers.retrieve(MACROSMAP) as CommandMap;\n  const macros = jax.parseOptions.options.macros;\n  for (const cs of Object.keys(macros)) {\n    const def = (typeof macros[cs] === 'string' ? [macros[cs]] : macros[cs]);\n    const macro = Array.isArray(def[2]) ?\n      new Macro(cs, NewcommandMethods.MacroWithTemplate, def.slice(0, 2).concat(def[2])) :\n      new Macro(cs, NewcommandMethods.Macro, def);\n    handler.add(cs, macro);\n  }\n}\n\n/**\n * Create user-defined environments from the environments option\n *\n * @param {TeX} jax                The TeX input jax\n */\nfunction configEnvironments(jax: TEX) {\n  const handler = jax.parseOptions.handlers.retrieve(ENVIRONMENTMAP) as EnvironmentMap;\n  const environments = jax.parseOptions.options.environments;\n  for (const env of Object.keys(environments)) {\n    handler.add(env, new Macro(env, NewcommandMethods.BeginEnv, [true].concat(environments[env])));\n  }\n}\n\n/**\n * The configuration object for configmacros\n */\nexport const ConfigMacrosConfiguration = Configuration.create(\n  'configmacros', {\n    init: configmacrosInit,\n    config: configmacrosConfig,\n    items: {\n      [BeginEnvItem.prototype.kind]: BeginEnvItem,\n    },\n    options: {\n      macros: expandable({}),\n      environments: expandable({})\n    }\n  }\n);\n","/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the empheq package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\n\nimport {Configuration} from '../Configuration.js';\nimport {CommandMap, EnvironmentMap} from '../SymbolMap.js';\nimport ParseUtil from '../ParseUtil.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {BeginItem} from '../base/BaseItems.js';\nimport {StackItem} from '../StackItem.js';\nimport {EmpheqUtil} from './EmpheqUtil.js';\n\n/**\n * A StackItem for empheq environments.\n */\nexport class EmpheqBeginItem extends BeginItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'empheq-begin';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem) {\n    if (item.isKind('end') && item.getName() === this.getName()) {\n      this.setProperty('end', false);\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n/**\n * The methods that implement the empheq package.\n */\nexport const EmpheqMethods = {\n\n  /**\n   * Handle an empheq environment.\n   *\n   * @param {TexParser} parser        The active tex parser.\n   * @param {EmpheqBeginItem} begin   The begin item for this environment.\n   */\n  Empheq(parser: TexParser, begin: EmpheqBeginItem) {\n    if (parser.stack.env.closing === begin.getName()) {\n      delete parser.stack.env.closing;\n      parser.Push(parser.itemFactory.create('end').setProperty('name', parser.stack.global.empheq));\n      parser.stack.global.empheq = '';\n      const empheq = parser.stack.Top() as EmpheqBeginItem;\n      EmpheqUtil.adjustTable(empheq, parser);\n      parser.Push(parser.itemFactory.create('end').setProperty('name', 'empheq'));\n    } else {\n      ParseUtil.checkEqnEnv(parser);\n      delete parser.stack.global.eqnenv;\n      const opts = parser.GetBrackets('\\\\begin{' + begin.getName() + '}') || '';\n      const [env, n] = (parser.GetArgument('\\\\begin{' + begin.getName() + '}') || '').split(/=/);\n      if (!EmpheqUtil.checkEnv(env)) {\n        throw new TexError('UnknownEnv', 'Unknown environment \"%1\"', env);\n      }\n      if (opts) {\n        begin.setProperties(EmpheqUtil.splitOptions(opts, {left: 1, right: 1}));\n      }\n      parser.stack.global.empheq = env;\n      parser.string = '\\\\begin{' + env + '}' + (n ? '{' + n + '}' : '') + parser.string.slice(parser.i);\n      parser.i = 0;\n      parser.Push(begin);\n    }\n  },\n\n  /**\n   * Create an <mo> with a given content\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} name        The name of the macro being processed.\n   * @param {string} c           The character for the <mo>\n   */\n  EmpheqMO(parser: TexParser, _name: string, c: string) {\n    parser.Push(parser.create('token', 'mo', {}, c));\n  },\n\n  /**\n   * Create a delimiter <mo> with a given character\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} name        The name of the macro being processed.\n   */\n  EmpheqDelim(parser: TexParser, name: string) {\n    const c = parser.GetDelimiter(name);\n    parser.Push(parser.create('token', 'mo', {stretchy: true, symmetric: true}, c));\n  }\n\n};\n\n//\n//  Define an environment map to add the new empheq environment\n//\nnew EnvironmentMap('empheq-env', EmpheqUtil.environment, {\n  empheq: ['Empheq', 'empheq'],\n}, EmpheqMethods);\n\n//\n//  Define the empheq characters\n//\nnew CommandMap('empheq-macros', {\n  empheqlbrace:    ['EmpheqMO', '{'],\n  empheqrbrace:    ['EmpheqMO', '}'],\n  empheqlbrack:    ['EmpheqMO', '['],\n  empheqrbrack:    ['EmpheqMO', ']'],\n  empheqlangle:    ['EmpheqMO', '\\u27E8'],\n  empheqrangle:    ['EmpheqMO', '\\u27E9'],\n  empheqlparen:    ['EmpheqMO', '('],\n  empheqrparen:    ['EmpheqMO', ')'],\n  empheqlvert:     ['EmpheqMO', '|'],\n  empheqrvert:     ['EmpheqMO', '|'],\n  empheqlVert:     ['EmpheqMO', '\\u2016'],\n  empheqrVert:     ['EmpheqMO', '\\u2016'],\n  empheqlfloor:    ['EmpheqMO', '\\u230A'],\n  empheqrfloor:    ['EmpheqMO', '\\u230B'],\n  empheqlceil:     ['EmpheqMO', '\\u2308'],\n  empheqrceil:     ['EmpheqMO', '\\u2309'],\n  empheqbiglbrace: ['EmpheqMO', '{'],\n  empheqbigrbrace: ['EmpheqMO', '}'],\n  empheqbiglbrack: ['EmpheqMO', '['],\n  empheqbigrbrack: ['EmpheqMO', ']'],\n  empheqbiglangle: ['EmpheqMO', '\\u27E8'],\n  empheqbigrangle: ['EmpheqMO', '\\u27E9'],\n  empheqbiglparen: ['EmpheqMO', '('],\n  empheqbigrparen: ['EmpheqMO', ')'],\n  empheqbiglvert:  ['EmpheqMO', '|'],\n  empheqbigrvert:  ['EmpheqMO', '|'],\n  empheqbiglVert:  ['EmpheqMO', '\\u2016'],\n  empheqbigrVert:  ['EmpheqMO', '\\u2016'],\n  empheqbiglfloor: ['EmpheqMO', '\\u230A'],\n  empheqbigrfloor: ['EmpheqMO', '\\u230B'],\n  empheqbiglceil:  ['EmpheqMO', '\\u2308'],\n  empheqbigrceil:  ['EmpheqMO', '\\u2309'],\n  empheql:          'EmpheqDelim',\n  empheqr:          'EmpheqDelim',\n  empheqbigl:       'EmpheqDelim',\n  empheqbigr:       'EmpheqDelim'\n}, EmpheqMethods);\n\n//\n//  Define the package for our new environment\n//\nexport const EmpheqConfiguration = Configuration.create('empheq', {\n  handler: {\n    macro: ['empheq-macros'],\n    environment: ['empheq-env'],\n  },\n  items: {\n    [EmpheqBeginItem.prototype.kind]: EmpheqBeginItem\n  }\n});\n","/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Utilities file for the empheq package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\n\nimport ParseUtil from '../ParseUtil.js';\nimport TexParser from '../TexParser.js';\nimport {EnvList} from '../StackItem.js';\nimport {AbstractTags} from '../Tags.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport {MmlMtable} from '../../../core/MmlTree/MmlNodes/mtable.js';\nimport {MmlMtd} from '../../../core/MmlTree/MmlNodes/mtd.js';\nimport {EmpheqBeginItem} from './EmpheqConfiguration.js';\n\nexport const EmpheqUtil = {\n\n  /**\n   * Create the needed envinronment and process it by the give function.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} env         The environment to create.\n   * @param {Function} func      A function to process the environment.\n   * @param {any[]} args         The arguments for func.\n   */\n  environment(parser: TexParser, env: string, func: Function, args: any[]) {\n    const name = args[0];\n    const item = parser.itemFactory.create(name + '-begin').setProperties({name: env, end: name});\n    parser.Push(func(parser, item, ...args.slice(1)));\n  },\n\n  /**\n   * Parse an options string.\n   *\n   * @param {string} text                   The string to parse.\n   * @param {{[key:string]:number} allowed  Object containing options to allow\n   * @return {EnvList}                      The parsed keys\n   */\n  splitOptions(text: string, allowed: {[key: string]: number} = null): EnvList {\n    return ParseUtil.keyvalOptions(text, allowed, true);\n  },\n\n  /**\n   * Find the number of columns in the table.\n   *\n   * @param {MmlMtable} table   The table whose columns to count.\n   * @return {number}           The number of columns in the table.\n   */\n  columnCount(table: MmlMtable): number {\n    let m = 0;\n    for (const row of table.childNodes) {\n      const n = row.childNodes.length - (row.isKind('mlabeledtr') ? 1 : 0);\n      if (n > m) m = n;\n    }\n    return m;\n  },\n\n  /**\n   * Create an mpadded element with no height and depth, but whose\n   *   content is the given TeX code with a phantom that is the height and\n   *   depth of the given table.\n   *\n   * @param {string} tex        The TeX code to put in the box.\n   * @param {MmlTable} table    The table used to size the box.\n   * @param {TexParser} parser  The active tex parser.\n   * @param {string} env        The name of the current environment.\n   * @return {MmlNode}          The mpadded element.\n   */\n  cellBlock(tex: string, table: MmlMtable, parser: TexParser, env: string): MmlNode {\n    const mpadded = parser.create('node', 'mpadded', [], {height: 0, depth: 0, voffset: '-1height'});\n    const result = new TexParser(tex, parser.stack.env, parser.configuration);\n    const mml = result.mml();\n    if (env && result.configuration.tags.label) {\n      (result.configuration.tags.currentTag as any).env = env;\n      (result.configuration.tags as AbstractTags).getTag(true);\n    }\n    for (const child of (mml.isInferred ? mml.childNodes : [mml])) {\n      mpadded.appendChild(child);\n    }\n    mpadded.appendChild(parser.create('node', 'mphantom', [\n      parser.create('node', 'mpadded', [table], {width: 0})\n    ]));\n    return mpadded;\n  },\n\n  /**\n   * Make a copy of the table with only the first row and create a phantom element\n   *   that has its height and depth.\n   *\n   * @param {MmlMtable} original   The original table.\n   * @param {TexParser} parser     The active tex parser.\n   * @return {MmlNode}             The resulting mphantom element.\n   */\n  topRowTable(original: MmlMtable, parser: TexParser): MmlNode {\n    const table = ParseUtil.copyNode(original, parser);\n    table.setChildren(table.childNodes.slice(0, 1));\n    table.attributes.set('align', 'baseline 1');\n    return original.factory.create('mphantom', {}, [parser.create('node', 'mpadded', [table],  {width: 0})]);\n  },\n\n  /**\n   * Add an mpadded element that has zero height and depth but whose content is\n   *   the cell block for the given TeX code followed by a struct the size of the top row.\n   *\n   * @param {MmlMtd} mtd         The mtd to add content to.\n   * @param {string} tex         The TeX string to put into the cell.\n   * @param {MmlMtable} table    The reference table used for its various heights.\n   * @param {TexParser} parser   The active tex parser.\n   * @param {srting} env         The current environment.\n   */\n  rowspanCell(mtd: MmlMtd, tex: string, table: MmlMtable, parser: TexParser, env: string) {\n    mtd.appendChild(\n      parser.create('node', 'mpadded', [\n        this.cellBlock(tex, ParseUtil.copyNode(table, parser), parser, env),\n        this.topRowTable(table, parser)\n      ], {height: 0, depth: 0, voffset: 'height'})\n    );\n  },\n\n  /**\n   * Add something on the left of the original table.\n   *\n   * @param {MmlMtable} table     The table to modify.\n   * @param {MmlMtable} original  The original table.\n   * @param {string} left         The TeX code to add to the left.\n   * @param {TexParser} parser    The active tex parser.\n   * @param {string} env          The current environment.\n   */\n  left(table: MmlMtable, original: MmlMtable, left: string, parser: TexParser, env: string = '') {\n    table.attributes.set('columnalign', 'right ' + (table.attributes.get('columnalign') || ''));\n    table.attributes.set('columnspacing', '0em ' + (table.attributes.get('columnspacing') || ''));\n    let mtd;\n    for (const row of table.childNodes.slice(0).reverse()) {\n      mtd = parser.create('node', 'mtd');\n      row.childNodes.unshift(mtd);\n      mtd.parent = row;\n      if (row.isKind('mlabeledtr')) {\n        row.childNodes[0] = row.childNodes[1];\n        row.childNodes[1] = mtd;\n      }\n    }\n    this.rowspanCell(mtd, left, original, parser, env);\n  },\n\n  /**\n   * Add something on the right of the original table.\n   *\n   * @param {MmlMtable} table     The table to modify.\n   * @param {MmlMtable} original  The original table.\n   * @param {string} right        The TeX code to add to the right.\n   * @param {TexParser} parser    The active tex parser.\n   * @param {string} env          The current environment.\n   */\n  right(table: MmlMtable, original: MmlMtable, right: string, parser: TexParser, env: string = '') {\n    if (table.childNodes.length === 0) {\n      table.appendChild(parser.create('node', 'mtr'));\n    }\n    const m = EmpheqUtil.columnCount(table);\n    const row = table.childNodes[0];\n    while (row.childNodes.length < m) row.appendChild(parser.create('node', 'mtd'));\n    const mtd = row.appendChild(parser.create('node', 'mtd')) as MmlMtd;\n    EmpheqUtil.rowspanCell(mtd, right, original, parser, env);\n    table.attributes.set(\n      'columnalign',\n      (table.attributes.get('columnalign') as string || '').split(/ /).slice(0, m).join(' ') + ' left'\n    );\n    table.attributes.set(\n      'columnspacing',\n      (table.attributes.get('columnspacing') as string || '').split(/ /).slice(0, m - 1).join(' ') + ' 0em'\n    );\n  },\n\n  /**\n   * Add the left- and right-hand material to the table.\n   */\n  adjustTable(empheq: EmpheqBeginItem, parser: TexParser) {\n    const left = empheq.getProperty('left');\n    const right = empheq.getProperty('right');\n    if (left || right) {\n      const table = empheq.Last;\n      const original = ParseUtil.copyNode(table, parser);\n      if (left) this.left(table, original, left, parser);\n      if (right) this.right(table, original, right, parser);\n    }\n  },\n\n  /**\n   * The environments allowed to be used in the empheq environment.\n   */\n  allowEnv: {\n    equation: true,\n    align: true,\n    gather: true,\n    flalign: true,\n    alignat: true,\n    multline: true\n  },\n\n  /**\n   * Checks to see if the given environment is one of the allowed ones.\n   *\n   * @param {string} env   The environment to check.\n   * @return {boolean}     True if the environment is allowed.\n   */\n  checkEnv(env: string): boolean {\n    return this.allowEnv.hasOwnProperty(env.replace(/\\*$/, '')) || false;\n  }\n\n};\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the enclose package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport TexParser from '../TexParser.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport ParseUtil from '../ParseUtil.js';\n\n\n/**\n * The attributes allowed in \\enclose{notation}[attributes]{math}\n * @type {{[key: string]: number}}\n */\nexport const ENCLOSE_OPTIONS: {[key: string]: number} = {\n  'data-arrowhead': 1,\n  color: 1,\n  mathcolor: 1,\n  background: 1,\n  mathbackground: 1,\n  'data-padding': 1,\n  'data-thickness': 1\n};\n\n\n// Namespace\nexport let EncloseMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Implements \\enclose{notation}[attr]{math}\n * (create <menclose notation=\"notation\">math</menclose>)\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\nEncloseMethods.Enclose = function(parser: TexParser, name: string) {\n  let notation = parser.GetArgument(name).replace(/,/g, ' ');\n  const attr = parser.GetBrackets(name, '');\n  const math = parser.ParseArg(name);\n  const def = ParseUtil.keyvalOptions(attr, ENCLOSE_OPTIONS);\n  def.notation = notation;\n  parser.Push(parser.create('node', 'menclose', [math], def));\n};\n\n\nnew CommandMap('enclose', {enclose: 'Enclose'}, EncloseMethods);\n\n\nexport const EncloseConfiguration = Configuration.create(\n  'enclose', {handler: {macro: ['enclose']}}\n);\n\n\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the extpfeil package. Note that this is\n *     based on AMS package and Newcommand utilities.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport TexParser from '../TexParser.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport {AmsMethods} from '../ams/AmsMethods.js';\nimport NewcommandUtil from '../newcommand/NewcommandUtil.js';\nimport {NewcommandConfiguration} from '../newcommand/NewcommandConfiguration.js';\nimport TexError from '../TexError.js';\n\n\n// Namespace\nexport let ExtpfeilMethods: Record<string, ParseMethod> = {};\n\nExtpfeilMethods.xArrow = AmsMethods.xArrow;\n\n/**\n * Implements \\Newextarrow to define a new arrow.\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\nExtpfeilMethods.NewExtArrow = function(parser: TexParser, name: string) {\n  let cs = parser.GetArgument(name);\n  const space = parser.GetArgument(name);\n  const chr = parser.GetArgument(name);\n  if (!cs.match(/^\\\\([a-z]+|.)$/i)) {\n    throw new TexError('NewextarrowArg1',\n               'First argument to %1 must be a control sequence name', name);\n  }\n  if (!space.match(/^(\\d+),(\\d+)$/)) {\n    throw new TexError(\n      'NewextarrowArg2',\n      'Second argument to %1 must be two integers separated by a comma',\n      name);\n  }\n  if (!chr.match(/^(\\d+|0x[0-9A-F]+)$/i)) {\n    throw new TexError(\n      'NewextarrowArg3',\n      'Third argument to %1 must be a unicode character number',\n      name);\n  }\n  cs = cs.substr(1);\n  let spaces = space.split(',');\n  NewcommandUtil.addMacro(parser, cs, ExtpfeilMethods.xArrow,\n                          [parseInt(chr), parseInt(spaces[0]), parseInt(spaces[1])]);\n};\n\n\nnew CommandMap('extpfeil', {\n  xtwoheadrightarrow: ['xArrow', 0x21A0, 12, 16],\n  xtwoheadleftarrow:  ['xArrow', 0x219E, 17, 13],\n  xmapsto:            ['xArrow', 0x21A6, 6, 7],\n  xlongequal:         ['xArrow', 0x003D, 7, 7],\n  xtofrom:            ['xArrow', 0x21C4, 12, 12],\n  Newextarrow:        'NewExtArrow'\n}, ExtpfeilMethods);\n\n\nlet init = function(config: ParserConfiguration) {\n  NewcommandConfiguration.init(config);\n};\n\nexport const ExtpfeilConfiguration = Configuration.create(\n  'extpfeil', {\n    handler: {macro: ['extpfeil']},\n    init: init\n  }\n);\n","/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the gensymb package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {Symbol} from '../Symbol.js';\nimport {TexConstant} from '../TexConstants.js';\nimport {CharacterMap} from '../SymbolMap.js';\nimport TexParser from '../TexParser.js';\n\n\n/**\n * Handle characters that are known units.\n * @param {TexParser} parser The current tex parser.\n * @param {Symbol} mchar The parsed symbol.\n */\nfunction mathcharUnit(parser: TexParser, mchar: Symbol) {\n  const def = mchar.attributes || {};\n  def.mathvariant = TexConstant.Variant.NORMAL;\n  def.class = 'MathML-Unit';\n  const node = parser.create('token', 'mi', def, mchar.char);\n  parser.Push(node);\n}\n\n\n/**\n * gensymb units.\n */\nnew CharacterMap('gensymb-symbols', mathcharUnit, {\n  ohm:            '\\u2126',\n  degree:         '\\u00B0',\n  celsius:        '\\u2103',\n  perthousand:    '\\u2030',\n  micro:          '\\u00B5'\n});\n\n\nexport const GensymbConfiguration = Configuration.create(\n  'gensymb', {\n    handler: {macro: ['gensymb-symbols']},\n  }\n);\n\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the Html package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport HtmlMethods from './HtmlMethods.js';\n\n\nnew CommandMap('html_macros', {\n  href:    'Href',\n  'class': 'Class',\n  style:   'Style',\n  cssId:   'Id'\n}, HtmlMethods);\n\nexport const HtmlConfiguration = Configuration.create(\n  'html', {handler: { macro: ['html_macros']}}\n);\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Methods for the Html package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport TexParser from '../TexParser.js';\nimport {ParseMethod} from '../Types.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\n\n\n// Namespace\nlet HtmlMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Implements \\href{url}{math}\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nHtmlMethods.Href = function(parser: TexParser, name: string) {\n  const url = parser.GetArgument(name);\n  const arg = GetArgumentMML(parser, name);\n  NodeUtil.setAttribute(arg, 'href', url);\n  parser.Push(arg);\n};\n\n\n/**\n * Implements \\class{name}{math}\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nHtmlMethods.Class = function(parser: TexParser, name: string) {\n  let CLASS = parser.GetArgument(name);\n  const arg = GetArgumentMML(parser, name);\n  let oldClass = NodeUtil.getAttribute(arg, 'class');\n  if (oldClass) {\n    CLASS = oldClass + ' ' + CLASS;\n  }\n  NodeUtil.setAttribute(arg, 'class', CLASS);\n  parser.Push(arg);\n};\n\n\n/**\n * Implements \\style{style-string}{math}\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nHtmlMethods.Style = function(parser: TexParser, name: string) {\n  let style = parser.GetArgument(name);\n  const arg = GetArgumentMML(parser, name);\n  // check that it looks like a style string\n  let oldStyle = NodeUtil.getAttribute(arg, 'style');\n  if (oldStyle) {\n    if (style.charAt(style.length - 1) !== ';') {\n      style += ';';\n    }\n    style = oldStyle + ' ' + style;\n  }\n  NodeUtil.setAttribute(arg, 'style', style);\n  parser.Push(arg);\n};\n\n\n/**\n * Implements \\cssId{id}{math}\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nHtmlMethods.Id = function(parser: TexParser, name: string) {\n  const ID  = parser.GetArgument(name);\n  const arg = GetArgumentMML(parser, name);\n  NodeUtil.setAttribute(arg, 'id', ID);\n  parser.Push(arg);\n};\n\n\n/**\n * Parses the math argument of the above commands and returns it as single\n * node (in an mrow if necessary). The HTML attributes are then\n * attached to this element.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The calling macro name.\n * @return {MmlNode} The math node.\n */\nlet GetArgumentMML = function(parser: TexParser, name: string): MmlNode {\n  let arg = parser.ParseArg(name);\n  if (!NodeUtil.isInferred(arg)) {\n    return arg;\n  }\n  let children = NodeUtil.getChildren(arg);\n  if (children.length === 1) {\n    return children[0];\n  }\n  const mrow = parser.create('node', 'mrow');\n  NodeUtil.copyChildren(arg, mrow);\n  NodeUtil.copyAttributes(arg, mrow);\n  return mrow;\n};\n\n\nexport default HtmlMethods;\n","/*************************************************************\n *  Copyright (c) 2020-2022 MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview    Configuration file for the mathtools package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {expandable} from '../../../util/Options.js';\nimport {ParserConfiguration} from '../Configuration.js';\nimport {TeX} from '../../tex.js';\nimport ParseOptions from '../ParseOptions.js';\n\nimport './MathtoolsMappings.js';\nimport {MathtoolsUtil} from './MathtoolsUtil.js';\nimport {MathtoolsTagFormat} from './MathtoolsTags.js';\nimport {MultlinedItem} from './MathtoolsItems.js';\n\n/**\n * The name of the paried-delimiters command map.\n */\nexport const PAIREDDELIMS = 'mathtools-paired-delims';\n\n/**\n * Create the paired-delimiters command map, and link it into the configuration.\n * @param {ParserConfiguration} config   The current configuration.\n */\nfunction initMathtools(config: ParserConfiguration) {\n  new CommandMap(PAIREDDELIMS, {}, {});\n  config.append(Configuration.local({handler: {macro: [PAIREDDELIMS]}, priority: -5}));\n}\n\n/**\n * Add any pre-defined paired delimiters, and subclass the configured tag format.\n * @param {ParserConfiguration} config   The current configuration.\n * @param {TeX} jac                      The TeX input jax\n */\nfunction configMathtools(config: ParserConfiguration, jax: TeX<any, any, any>) {\n  const parser = jax.parseOptions;\n  const pairedDelims = parser.options.mathtools.pairedDelimiters;\n  for (const cs of Object.keys(pairedDelims)) {\n    MathtoolsUtil.addPairedDelims(parser, cs, pairedDelims[cs]);\n  }\n  MathtoolsTagFormat(config, jax);\n}\n\n/**\n * A filter to fix up mmultiscripts elements.\n * @param {ParseOptions} data   The parse options.\n */\nexport function fixPrescripts({data}: {data: ParseOptions}) {\n  for (const node of data.getList('mmultiscripts')) {\n    if (!node.getProperty('fixPrescript')) continue;\n    const childNodes = NodeUtil.getChildren(node);\n    let n = 0;\n    for (const i of [1, 2]) {\n      if (!childNodes[i]) {\n        NodeUtil.setChild(node, i, data.nodeFactory.create('node', 'none'));\n        n++;\n      }\n    }\n    for (const i of [4, 5]) {\n      if (NodeUtil.isType(childNodes[i], 'mrow') && NodeUtil.getChildren(childNodes[i]).length === 0) {\n        NodeUtil.setChild(node, i, data.nodeFactory.create('node', 'none'));\n      }\n    }\n    if (n === 2) {\n      childNodes.splice(1, 2);\n    }\n  }\n}\n\n/**\n * The configuration for the mathtools package\n */\nexport const MathtoolsConfiguration = Configuration.create(\n  'mathtools', {\n    handler: {\n      macro: ['mathtools-macros', 'mathtools-delimiters'],\n      environment: ['mathtools-environments'],\n      delimiter: ['mathtools-delimiters'],\n      character: ['mathtools-characters']\n    },\n    items: {\n      [MultlinedItem.prototype.kind]: MultlinedItem\n    },\n    init: initMathtools,\n    config: configMathtools,\n    postprocessors: [[fixPrescripts, -6]],\n    options: {\n      mathtools: {\n        'multlinegap': '1em',                   // horizontal space for multlined environments\n        'multlined-pos': 'c',                   // default alignment for multlined environments\n        'firstline-afterskip': '',              // space for first line of multlined (overrides multlinegap)\n        'lastline-preskip': '',                 // space for last line of multlined (overrides multlinegap)\n        'smallmatrix-align': 'c',               // default alignment for smallmatrix environments\n        'shortvdotsadjustabove': '.2em',        // space to remove above \\shortvdots\n        'shortvdotsadjustbelow': '.2em',        // space to remove below \\shortvdots\n        'centercolon': false,                   // true to have colon automatically centered\n        'centercolon-offset': '.04em',          // vertical adjustment for centered colons\n        'thincolon-dx': '-.04em',               // horizontal adjustment for thin colons (e.g., \\coloneqq)\n        'thincolon-dw': '-.08em',               // width adjustment for thin colons\n        'use-unicode': false,                   // true to use unicode characters rather than multi-character\n                                                //   version for \\coloneqq, etc., when possible\n        'prescript-sub-format': '',             // format for \\prescript subscript\n        'prescript-sup-format': '',             // format for \\prescript superscript\n        'prescript-arg-format': '',             // format for \\prescript base\n        'allow-mathtoolsset': true,             // true to allow \\mathtoolsset to change settings\n        pairedDelimiters: expandable({}),       // predefined paired delimiters\n                                                //     name: [left, right, body, argcount, pre, post]\n        tagforms: expandable({}),               // tag form definitions\n                                                //     name: [left, right, format]\n       }\n    }\n  }\n);\n","/*************************************************************\n *  Copyright (c) 2020-2022 MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview    Implementation of items for the mathtools package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {MultlineItem} from '../ams/AmsItems.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {TexConstant} from '../TexConstants.js';\n\n\n/**\n * The StackItem for the multlined environment\n */\nexport class MultlinedItem extends MultlineItem {\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'multlined';\n  }\n\n\n  /**\n   * @override\n   */\n  public EndTable() {\n    if (this.Size() || this.row.length) {\n      this.EndEntry();\n      this.EndRow();\n    }\n    if (this.table.length > 1) {\n      const options = this.factory.configuration.options.mathtools;\n      const gap = options.multlinegap;\n      const firstskip = options['firstline-afterskip'] || gap;\n      const lastskip = options['lastline-preskip'] || gap;\n      const first = NodeUtil.getChildren(this.table[0])[0];\n      if (NodeUtil.getAttribute(first, 'columnalign') !== TexConstant.Align.RIGHT) {\n        first.appendChild(this.create('node', 'mspace', [], {width: firstskip}));\n      }\n      const last = NodeUtil.getChildren(this.table[this.table.length - 1])[0];\n      if (NodeUtil.getAttribute(last, 'columnalign') !== TexConstant.Align.LEFT) {\n        const top = NodeUtil.getChildren(last)[0];\n        top.childNodes.unshift(null);\n        const space = this.create('node', 'mspace', [], {width: lastskip});\n        NodeUtil.setChild(top, 0, space);\n      }\n    }\n    super.EndTable.call(this);\n  }\n\n}\n","/*************************************************************\n *  Copyright (c) 2020-2022 MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview    Macro and environment mappings for the mathtools package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport ParseMethods from '../ParseMethods.js';\nimport {CommandMap, EnvironmentMap, DelimiterMap} from '../SymbolMap.js';\nimport {TexConstant} from '../TexConstants.js';\n\nimport {MathtoolsMethods} from './MathtoolsMethods.js';\n\n//\n//  Mathtools macros that are not implemented:\n//\n//    \\smashoperator[〈pos〉]{〈operator with limits〉}\n//    \\SwapAboveDisplaySkip\n//    \\noeqref{〈label,label,. . . 〉}\n//    \\intertext{〈text 〉}\n//    \\shortintertext{〈text 〉}\n//    \\reDeclarePairedDelimiterInnerWrapper{〈macro name〉}{〈star or nostarnonscaled or nostarscaled〉}{〈code〉}\n//    \\DeclareMathSizes{〈dimen〉}{〈dimen〉}{〈dimen〉}{〈dimen〉}\n//    \\newgathered{〈name〉}{〈pre_line〉}{〈post_line〉}{〈after〉}\n//    \\renewgathered{〈name〉}{〈pre_line〉}{〈post_line〉}{〈after〉}\n//\n\n/**\n * The macros for this package.\n */\nnew CommandMap('mathtools-macros', {\n\n  shoveleft:  ['HandleShove', TexConstant.Align.LEFT],    // override AMS version\n  shoveright: ['HandleShove', TexConstant.Align.RIGHT],   // override AMS version\n\n  xleftrightarrow:    ['xArrow', 0x2194, 10, 10],\n  xLeftarrow:         ['xArrow', 0x21D0, 12, 7],\n  xRightarrow:        ['xArrow', 0x21D2, 7, 12],\n  xLeftrightarrow:    ['xArrow', 0x21D4, 12, 12],\n  xhookleftarrow:     ['xArrow', 0x21A9, 10, 5],\n  xhookrightarrow:    ['xArrow', 0x21AA, 5, 10],\n  xmapsto:            ['xArrow', 0x21A6, 10, 10],\n  xrightharpoondown:  ['xArrow', 0x21C1, 5, 10],\n  xleftharpoondown:   ['xArrow', 0x21BD, 10, 5],\n  xrightleftharpoons: ['xArrow', 0x21CC, 10, 10],\n  xrightharpoonup:    ['xArrow', 0x21C0, 5, 10],\n  xleftharpoonup:     ['xArrow', 0x21BC, 10, 5],\n  xleftrightharpoons: ['xArrow', 0x21CB, 10, 10],\n\n  mathllap: ['MathLap', 'l', false],\n  mathrlap: ['MathLap', 'r', false],\n  mathclap: ['MathLap', 'c', false],\n  clap:     ['MtLap', 'c'],\n  textllap: ['MtLap', 'l'],\n  textrlap: ['MtLap', 'r'],\n  textclap: ['MtLap', 'c'],\n\n  cramped: 'Cramped',\n  crampedllap: ['MathLap', 'l', true],\n  crampedrlap: ['MathLap', 'r', true],\n  crampedclap: ['MathLap', 'c', true],\n  crampedsubstack: ['Macro', '\\\\begin{crampedsubarray}{c}#1\\\\end{crampedsubarray}', 1],\n\n  mathmbox:    'MathMBox',\n  mathmakebox: 'MathMakeBox',\n\n  overbracket:  'UnderOverBracket',\n  underbracket: 'UnderOverBracket',\n\n  refeq: 'HandleRef',\n\n  MoveEqLeft: ['Macro', '\\\\hspace{#1em}&\\\\hspace{-#1em}', 1, '2'],\n  Aboxed: 'Aboxed',\n\n  ArrowBetweenLines: 'ArrowBetweenLines',\n  vdotswithin: 'VDotsWithin',\n  shortvdotswithin: 'ShortVDotsWithin',\n  MTFlushSpaceAbove: 'FlushSpaceAbove',\n  MTFlushSpaceBelow: 'FlushSpaceBelow',\n\n  DeclarePairedDelimiter:     'DeclarePairedDelimiter',\n  DeclarePairedDelimiterX:    'DeclarePairedDelimiterX',\n  DeclarePairedDelimiterXPP:  'DeclarePairedDelimiterXPP',\n\n  //\n  //  Typos from initial release -- kept for backward compatibility for now\n  //\n  DeclarePairedDelimiters:    'DeclarePairedDelimiter',\n  DeclarePairedDelimitersX:   'DeclarePairedDelimiterX',\n  DeclarePairedDelimitersXPP: 'DeclarePairedDelimiterXPP',\n\n  centercolon: ['CenterColon', true, true],\n  ordinarycolon: ['CenterColon', false],\n  MTThinColon: ['CenterColon', true, true, true],\n\n  coloneqq:    ['Relation', ':=', '\\u2254'],\n  Coloneqq:    ['Relation', '::=', '\\u2A74'],\n  coloneq:     ['Relation', ':-'],\n  Coloneq:     ['Relation', '::-'],\n  eqqcolon:    ['Relation', '=:', '\\u2255'],\n  Eqqcolon:    ['Relation', '=::'],\n  eqcolon:     ['Relation', '-:', '\\u2239'],\n  Eqcolon:     ['Relation', '-::'],\n  colonapprox: ['Relation', ':\\\\approx'],\n  Colonapprox: ['Relation', '::\\\\approx'],\n  colonsim:    ['Relation', ':\\\\sim'],\n  Colonsim:    ['Relation', '::\\\\sim'],\n  dblcolon:    ['Relation', '::', '\\u2237'],\n\n  nuparrow:   ['NArrow', '\\u2191', '.06em'],\n  ndownarrow: ['NArrow', '\\u2193', '.25em'],\n  bigtimes:   ['Macro', '\\\\mathop{\\\\Large\\\\kern-.1em\\\\boldsymbol{\\\\times}\\\\kern-.1em}'],\n\n  splitfrac:  ['SplitFrac', false],\n  splitdfrac: ['SplitFrac', true],\n\n  xmathstrut: 'XMathStrut',\n\n  prescript: 'Prescript',\n\n  newtagform: ['NewTagForm', false],\n  renewtagform: ['NewTagForm', true],\n  usetagform: 'UseTagForm',\n\n  adjustlimits: [\n    'MacroWithTemplate',\n    '\\\\mathop{{#1}\\\\vphantom{{#3}}}_{{#2}\\\\vphantom{{#4}}}\\\\mathop{{#3}\\\\vphantom{{#1}}}_{{#4}\\\\vphantom{{#2}}}',\n    4, , '_', , '_'\n  ],\n\n  mathtoolsset: 'SetOptions'\n\n}, MathtoolsMethods);\n\n/**\n *  The environments for this package.\n */\nnew EnvironmentMap('mathtools-environments', ParseMethods.environment, {\n  dcases:  ['Array', null, '\\\\{', '', 'll', null, '.2em', 'D'],\n  rcases:  ['Array', null, '', '\\\\}', 'll', null, '.2em'],\n  drcases: ['Array', null, '', '\\\\}', 'll', null, '.2em', 'D'],\n  'dcases*':  ['Cases', null, '{', '', 'D'],\n  'rcases*':  ['Cases', null, '', '}'],\n  'drcases*': ['Cases', null, '', '}', 'D'],\n  'cases*':   ['Cases', null, '{', ''],\n\n  'matrix*':  ['MtMatrix', null, null, null],\n  'pmatrix*': ['MtMatrix', null, '(', ')'],\n  'bmatrix*': ['MtMatrix', null, '[', ']'],\n  'Bmatrix*': ['MtMatrix', null, '\\\\{', '\\\\}'],\n  'vmatrix*': ['MtMatrix', null, '\\\\vert', '\\\\vert'],\n  'Vmatrix*': ['MtMatrix', null, '\\\\Vert', '\\\\Vert'],\n\n  'smallmatrix*':  ['MtSmallMatrix', null, null, null],\n  psmallmatrix:    ['MtSmallMatrix', null, '(', ')', 'c'],\n  'psmallmatrix*': ['MtSmallMatrix', null, '(', ')'],\n  bsmallmatrix:    ['MtSmallMatrix', null, '[', ']', 'c'],\n  'bsmallmatrix*': ['MtSmallMatrix', null, '[', ']'],\n  Bsmallmatrix:    ['MtSmallMatrix', null, '\\\\{', '\\\\}', 'c'],\n  'Bsmallmatrix*': ['MtSmallMatrix', null, '\\\\{', '\\\\}'],\n  vsmallmatrix:    ['MtSmallMatrix', null, '\\\\vert', '\\\\vert', 'c'],\n  'vsmallmatrix*': ['MtSmallMatrix', null, '\\\\vert', '\\\\vert'],\n  Vsmallmatrix:    ['MtSmallMatrix', null, '\\\\Vert', '\\\\Vert', 'c'],\n  'Vsmallmatrix*': ['MtSmallMatrix', null, '\\\\Vert', '\\\\Vert'],\n\n  crampedsubarray: ['Array', null, null, null, null, '0em', '0.1em', 'S\\'', 1],\n\n  multlined: 'MtMultlined',\n\n  spreadlines: ['SpreadLines', true],\n\n  lgathered: ['AmsEqnArray', null, null, null, 'l', null, '.5em', 'D'],\n  rgathered: ['AmsEqnArray', null, null, null, 'r', null, '.5em', 'D'],\n\n}, MathtoolsMethods);\n\n/**\n * The delimiters for this package.\n */\nnew DelimiterMap('mathtools-delimiters', ParseMethods.delimiter, {\n  '\\\\lparen': '(',\n  '\\\\rparen': ')'\n});\n\n/**\n * The special characters for this package.\n */\nnew CommandMap('mathtools-characters', {\n  ':' : ['CenterColon', true]\n}, MathtoolsMethods);\n","/*************************************************************\n *  Copyright (c) 2020-2022 MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview    Macro and environment implementations for the mathtools package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\n\nimport {ArrayItem, EqnArrayItem} from '../base/BaseItems.js';\nimport {StackItem} from '../StackItem.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {ParseMethod, ParseResult} from '../Types.js';\nimport {AmsMethods} from '../ams/AmsMethods.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {length2em, em} from '../../../util/lengths.js';\nimport {lookup} from '../../../util/Options.js';\nimport NewcommandUtil from '../newcommand/NewcommandUtil.js';\nimport NewcommandMethods from '../newcommand/NewcommandMethods.js';\n\nimport {MathtoolsTags} from './MathtoolsTags.js';\nimport {MathtoolsUtil} from './MathtoolsUtil.js';\n\n/**\n * The implementations for the macros and environments for the mathtools package.\n */\nexport const MathtoolsMethods: Record<string, ParseMethod> = {\n\n  /**\n   * Handle a mathtools matrix environment, with optional alignment.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {StackItem} begin    The BeginItem for the environment.\n   * @param {string} open        The open delimiter for the matrix.\n   * @param {string} close       The close delimiter for the matrix.\n   * @return {ParserResult}      The ArrayItem for the matrix.\n   */\n  MtMatrix(parser: TexParser, begin: StackItem, open: string, close: string): ParseResult {\n    const align = parser.GetBrackets(`\\\\begin{${begin.getName()}}`, 'c');\n    return MathtoolsMethods.Array(parser, begin, open, close, align);\n  },\n\n  /**\n   * Create a smallmatrix with given delimiters, and with optional alignment (and settable default)\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {StackItem} begin    The BeginItem for the environment.\n   * @param {string} open        The open delimiter for the matrix.\n   * @param {string} close       The close delimiter for the matrix.\n   * @param {string} align       The (optional) alignment.  If not given, use a bracket argument for it.\n   * @return {ParseResult}       The ArrayItem for the matrix.\n   */\n  MtSmallMatrix(parser: TexParser, begin: StackItem, open: string, close: string, align?: string): ParseResult {\n    if (!align) {\n      align = parser.GetBrackets(`\\\\begin{${begin.getName()}}`, parser.options.mathtools['smallmatrix-align']);\n    }\n    return MathtoolsMethods.Array(\n      parser, begin, open, close, align, ParseUtil.Em(1 / 3), '.2em', 'S', 1\n    );\n  },\n\n  /**\n   * Create the multlined StackItem.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {StackItem} begin    The BeginItem for the environment.\n   * @return {ParseResult}       The MultlinedItem.\n   */\n  MtMultlined(parser: TexParser, begin: StackItem): ParseResult {\n    const name = `\\\\begin{${begin.getName()}}`;\n    let pos = parser.GetBrackets(name, parser.options.mathtools['multlined-pos'] || 'c');\n    let width = pos ? parser.GetBrackets(name, '') : '';\n    if (pos && !pos.match(/^[cbt]$/)) {\n      [width, pos] = [pos, width];\n    }\n    parser.Push(begin);\n    const item = parser.itemFactory.create('multlined', parser, begin) as ArrayItem;\n    item.arraydef = {\n      displaystyle: true,\n      rowspacing: '.5em',\n      width: width || 'auto',\n      columnwidth: '100%',\n    };\n    return ParseUtil.setArrayAlign(item as ArrayItem, pos || 'c');\n  },\n\n  /**\n   * Replacement for the AMS HandleShove that includes optional spacing values\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} name        The name of the calling macro.\n   * @param {string} shove       Which way to shove the result.\n   */\n  HandleShove(parser: TexParser, name: string, shove: string) {\n    let top = parser.stack.Top();\n    if (top.kind !== 'multline' && top.kind !== 'multlined') {\n      throw new TexError(\n        'CommandInMultlined',\n        '%1 can only appear within the multline or multlined environments',\n        name);\n    }\n    if (top.Size()) {\n      throw new TexError(\n        'CommandAtTheBeginingOfLine',\n        '%1 must come at the beginning of the line',\n        name);\n    }\n    top.setProperty('shove', shove);\n    let shift = parser.GetBrackets(name);\n    let mml = parser.ParseArg(name);\n    if (shift) {\n      let mrow = parser.create('node', 'mrow', []);\n      let mspace = parser.create('node', 'mspace', [], {width: shift});\n      if (shove === 'left') {\n        mrow.appendChild(mspace);\n        mrow.appendChild(mml);\n      } else {\n        mrow.appendChild(mml);\n        mrow.appendChild(mspace);\n      }\n      mml = mrow;\n    }\n    parser.Push(mml);\n  },\n\n  /**\n   * Handle the spreadlines environment.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {StackItem} begin    The BeginItem for the environment.\n   */\n  SpreadLines(parser: TexParser, begin: StackItem) {\n    if (parser.stack.env.closing === begin.getName()) {\n      //\n      //  When the environment ends, look through the contents and\n      //  adjust the spacing in any tables, then push the results.\n      //\n      delete parser.stack.env.closing;\n      const top = parser.stack.Pop();\n      const mml = top.toMml();\n      const spread = top.getProperty('spread') as string;\n      if (mml.isInferred) {\n        for (const child of NodeUtil.getChildren(mml)) {\n          MathtoolsUtil.spreadLines(child, spread);\n        }\n      } else {\n        MathtoolsUtil.spreadLines(mml, spread);\n      }\n      parser.Push(mml);\n    } else {\n      //\n      //  Read the spread dimension and save it, then begin the environment.\n      //\n      const spread = parser.GetDimen(`\\\\begin{${begin.getName()}}`);\n      begin.setProperty('spread', spread);\n      parser.Push(begin);\n    }\n  },\n\n  /**\n   * Implements the various cases environments.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {StackItem} begin    The BeginItem for the environment.\n   * @param {string} open        The open delimiter for the matrix.\n   * @param {string} close       The close delimiter for the matrix.\n   * @param {string} style       The style (D, T, S, SS) for the contents of the array\n   * @return {ArrayItem}         The ArrayItem for the environment\n   */\n  Cases(parser: TexParser, begin: StackItem, open: string, close: string, style: string): ArrayItem {\n    const array = parser.itemFactory.create('array').setProperty('casesEnv', begin.getName()) as ArrayItem;\n    array.arraydef = {\n      rowspacing: '.2em',\n      columnspacing: '1em',\n      columnalign: 'left'\n    };\n    if (style === 'D') {\n      array.arraydef.displaystyle = true;\n    }\n    array.setProperties({open, close});\n    parser.Push(begin);\n    return array;\n  },\n\n  /**\n   * Handle \\mathrlap, \\mathllap, \\mathclap, and their cramped versions.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {string} pos         The position (l, c, r) of the lapped content\n   * @param {boolean} cramped    True if the style should be cramped\n   */\n  MathLap(parser: TexParser, name: string, pos: string, cramped: boolean) {\n    const style = parser.GetBrackets(name, '').trim();\n    let mml = parser.create('node', 'mstyle', [\n      parser.create('node', 'mpadded', [parser.ParseArg(name)], {\n        width: 0, ...(pos === 'r' ? {} : {lspace: (pos === 'l' ? '-1width' : '-.5width')})\n      })\n    ], {'data-cramped': cramped});\n    MathtoolsUtil.setDisplayLevel(mml, style);\n    parser.Push(parser.create('node', 'TeXAtom', [mml]));\n  },\n\n  /**\n   * Implements \\cramped.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  Cramped(parser: TexParser, name: string) {\n    const style = parser.GetBrackets(name, '').trim();\n    const arg = parser.ParseArg(name);\n    const mml = parser.create('node', 'mstyle', [arg], {'data-cramped': true});\n    MathtoolsUtil.setDisplayLevel(mml, style);\n    parser.Push(mml);\n  },\n\n  /**\n   * Implements \\clap (and could do \\llap and \\rlap, where the contents are text mode).\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {string} pos         The position (l, c, r) of the lapped content\n   */\n  MtLap(parser: TexParser, name: string, pos: string) {\n    const content = ParseUtil.internalMath(parser, parser.GetArgument(name), 0);\n    let mml = parser.create('node', 'mpadded', content, {width: 0});\n    if (pos !== 'r') {\n      NodeUtil.setAttribute(mml, 'lspace', pos === 'l' ? '-1width' : '-.5width');\n    }\n    parser.Push(mml);\n  },\n\n  /**\n   * Implements \\mathmakebox.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  MathMakeBox(parser: TexParser, name: string) {\n    const width = parser.GetBrackets(name);\n    const pos = parser.GetBrackets(name, 'c');\n    const mml = parser.create('node', 'mpadded', [parser.ParseArg(name)]);\n    if (width) {\n      NodeUtil.setAttribute(mml, 'width', width);\n    }\n    const align = lookup(pos, {c: 'center', r: 'right'}, '');\n    if (align) {\n      NodeUtil.setAttribute(mml, 'data-align', align);\n    }\n    parser.Push(mml);\n  },\n\n  /**\n   * Implements \\mathmbox.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  MathMBox(parser: TexParser, name: string) {\n    parser.Push(parser.create('node', 'mrow', [parser.ParseArg(name)]));\n  },\n\n  /**\n   * Implements \\underbacket and \\overbracket.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  UnderOverBracket(parser: TexParser, name: string) {\n    const thickness = length2em(parser.GetBrackets(name, '.1em'), .1);\n    const height = parser.GetBrackets(name, '.2em');\n    const arg = parser.GetArgument(name);\n    const [pos, accent, border] = (\n      name.charAt(1) === 'o' ?\n        ['over', 'accent', 'bottom'] :\n        ['under', 'accentunder', 'top']\n    );\n    const t = em(thickness);\n    const base = new TexParser(arg, parser.stack.env, parser.configuration).mml();\n    const copy = new TexParser(arg, parser.stack.env, parser.configuration).mml();\n    const script = parser.create('node', 'mpadded', [\n      parser.create('node', 'mphantom', [copy])\n    ], {\n      style: `border: ${t} solid; border-${border}: none`,\n      height: height,\n      depth: 0\n    });\n    const node = ParseUtil.underOver(parser, base, script, pos, true);\n    const munderover = NodeUtil.getChildAt(NodeUtil.getChildAt(node, 0), 0);  // TeXAtom.inferredMrow child 0\n    NodeUtil.setAttribute(munderover, accent, true);\n    parser.Push(node);\n  },\n\n  /**\n   * Implements \\Aboxed.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  Aboxed(parser: TexParser, name: string) {\n    //\n    //  Check that the top item is an alignment, and that we are on an even number of cells\n    //  (othewise add one to make it even).\n    //\n    const top = MathtoolsUtil.checkAlignment(parser, name);\n    if (top.row.length % 2 === 1) {\n      top.row.push(parser.create('node', 'mtd', []));\n    }\n    //\n    //  Get the argument and the rest of the TeX string.\n    //\n    const arg = parser.GetArgument(name);\n    const rest = parser.string.substr(parser.i);\n    //\n    //  Put the argument back, followed by \"&&\", and a marker that we look for below.\n    //\n    parser.string = arg + '&&\\\\endAboxed';\n    parser.i = 0;\n    //\n    //  Get the two parts separated by ampersands, and ignore the rest.\n    //\n    const left = parser.GetUpTo(name, '&');\n    const right = parser.GetUpTo(name, '&');\n    parser.GetUpTo(name, '\\\\endAboxed');\n    //\n    //  Insert the TeX needed for the boxed content\n    //\n    const tex = ParseUtil.substituteArgs(\n      parser, [left, right], '\\\\rlap{\\\\boxed{#1{}#2}}\\\\kern.267em\\\\phantom{#1}&\\\\phantom{{}#2}\\\\kern.267em'\n    );\n    parser.string = tex + rest;\n    parser.i = 0;\n  },\n\n  /**\n   * Implements \\ArrowBetweenLines.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  ArrowBetweenLines(parser: TexParser, name: string) {\n    const top = MathtoolsUtil.checkAlignment(parser, name);\n    if (top.Size() || top.row.length) {\n      throw new TexError('BetweenLines', '%1 must be on a row by itself', name);\n    }\n    const star = parser.GetStar();\n    const symbol = parser.GetBrackets(name, '\\\\Updownarrow');\n    if (star) {\n      top.EndEntry();\n      top.EndEntry();\n    }\n    const tex = (star ? '\\\\quad' + symbol : symbol + '\\\\quad');\n    const mml = new TexParser(tex, parser.stack.env, parser.configuration).mml();\n    parser.Push(mml);\n    top.EndEntry();\n    top.EndRow();\n  },\n\n  /**\n   * Implements \\vdotswithin.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  VDotsWithin(parser: TexParser, name: string) {\n    const top = parser.stack.Top() as EqnArrayItem;\n    const isFlush = (top.getProperty('flushspaceabove') === top.table.length);\n    const arg = '\\\\mmlToken{mi}{}' + parser.GetArgument(name) + '\\\\mmlToken{mi}{}';\n    const base = new TexParser(arg, parser.stack.env, parser.configuration).mml();\n    let mml = parser.create('node', 'mpadded', [\n      parser.create('node', 'mpadded', [\n        parser.create('node', 'mo', [\n          parser.create('text', '\\u22EE')\n        ])\n      ], {\n        width: 0,\n        lspace: '-.5width', ...(isFlush ? {height: '-.6em', voffset: '-.18em'} : {})\n      }),\n      parser.create('node', 'mphantom', [base])\n    ], {\n      lspace: '.5width'\n    });\n    parser.Push(mml);\n  },\n\n  /**\n   * Implements \\shortvdotswithin.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  ShortVDotsWithin(parser: TexParser, _name: string) {\n    const top = parser.stack.Top() as EqnArrayItem;\n    const star = parser.GetStar();\n    MathtoolsMethods.FlushSpaceAbove(parser, '\\\\MTFlushSpaceAbove');\n    !star && top.EndEntry();\n    MathtoolsMethods.VDotsWithin(parser, '\\\\vdotswithin');\n    star && top.EndEntry();\n    MathtoolsMethods.FlushSpaceBelow(parser, '\\\\MTFlushSpaceBelow');\n  },\n\n  /**\n   * Implements \\MTFlushSpaceAbove.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  FlushSpaceAbove(parser: TexParser, name: string) {\n    const top = MathtoolsUtil.checkAlignment(parser, name);\n    top.setProperty('flushspaceabove', top.table.length);  // marker so \\vdotswithin can shorten its height\n    top.addRowSpacing('-' + parser.options.mathtools['shortvdotsadjustabove']);\n  },\n\n  /**\n   * Implements \\MTFlushSpaceBelow.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  FlushSpaceBelow(parser: TexParser, name: string) {\n    const top = MathtoolsUtil.checkAlignment(parser, name);\n    top.Size() && top.EndEntry();\n    top.EndRow();\n    top.addRowSpacing('-' + parser.options.mathtools['shortvdotsadjustbelow']);\n  },\n\n  /**\n   * Implements a paired delimiter (e.g., from \\DeclarePairedDelimiter).\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {string} open        The open delimiter.\n   * @param {string} close       The close delimiter.\n   * @param {string?} body       The body betweeen the delimiters.\n   * @param {number?} n          The number of arguments to use for the body.\n   * @param {string?} pre        The TeX to go before the open delimiter.\n   * @param {string?} post       The TeX to go after the close delimiter.\n   */\n  PairedDelimiters(parser: TexParser, name: string,\n                   open: string, close: string,\n                   body: string = '#1', n: number = 1,\n                   pre: string = '',  post: string = '') {\n    const star = parser.GetStar();\n    const size = (star ? '' : parser.GetBrackets(name));\n    const [left, right] = (star ? ['\\\\left', '\\\\right'] : size ? [size + 'l' , size + 'r'] : ['', '']);\n    const delim = (star ? '\\\\middle' : size || '');\n    if (n) {\n      const args: string[] = [];\n      for (let i = args.length; i < n; i++) {\n        args.push(parser.GetArgument(name));\n      }\n      pre  = ParseUtil.substituteArgs(parser, args, pre);\n      body = ParseUtil.substituteArgs(parser, args, body);\n      post = ParseUtil.substituteArgs(parser, args, post);\n    }\n    body = body.replace(/\\\\delimsize/g, delim);\n    parser.string = [pre, left, open, body, right, close, post, parser.string.substr(parser.i)]\n      .reduce((s, part) => ParseUtil.addArgs(parser, s, part), '');\n    parser.i = 0;\n    ParseUtil.checkMaxMacros(parser);\n  },\n\n  /**\n   * Implements \\DeclarePairedDelimiter.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  DeclarePairedDelimiter(parser: TexParser, name: string) {\n    const cs = NewcommandUtil.GetCsNameArgument(parser, name);\n    const open = parser.GetArgument(name);\n    const close = parser.GetArgument(name);\n    MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close]);\n  },\n\n  /**\n   * Implements \\DeclarePairedDelimiterX.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  DeclarePairedDelimiterX(parser: TexParser, name: string) {\n    const cs = NewcommandUtil.GetCsNameArgument(parser, name);\n    const n = NewcommandUtil.GetArgCount(parser, name);\n    const open = parser.GetArgument(name);\n    const close = parser.GetArgument(name);\n    const body = parser.GetArgument(name);\n    MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close, body, n]);\n  },\n\n  /**\n   * Implements \\DeclarePairedDelimiterXPP.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  DeclarePairedDelimiterXPP(parser: TexParser, name: string) {\n    const cs = NewcommandUtil.GetCsNameArgument(parser, name);\n    const n = NewcommandUtil.GetArgCount(parser, name);\n    const pre = parser.GetArgument(name);\n    const open = parser.GetArgument(name);\n    const close = parser.GetArgument(name);\n    const post = parser.GetArgument(name);\n    const body = parser.GetArgument(name);\n    MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close, body, n, pre, post]);\n  },\n\n  /**\n   * Implements \\centeredcolon, \\ordinarycolon, \\MTThinColon.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {boolean} center     True if colon should be centered\n   * @param {boolean} force      True menas always center (don't use centercolon option).\n   * @param {boolean} thin       True if this is a thin color (for \\coloneqq, etc).\n   */\n  CenterColon(parser: TexParser, _name: string, center: boolean, force: boolean = false, thin: boolean = false) {\n    const options = parser.options.mathtools;\n    let mml = parser.create('token', 'mo', {}, ':');\n    if (center && (options['centercolon'] || force)) {\n      const dy = options['centercolon-offset'];\n      mml = parser.create('node', 'mpadded', [mml], {\n        voffset: dy, height: `+${dy}`, depth: `-${dy}`,\n          ...(thin ? {width: options['thincolon-dw'], lspace: options['thincolon-dx']} : {})\n      });\n    }\n    parser.Push(mml);\n  },\n\n  /**\n   * Implements \\coloneqq and related macros.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {string} tex         The tex string to use (if not using unicode versions or if there isn't one).\n   * @param {string} unicode     The unicode character (if there is one).\n   */\n  Relation(parser: TexParser, _name: string, tex: string, unicode?: string) {\n    const options = parser.options.mathtools;\n    if (options['use-unicode'] && unicode) {\n      parser.Push(parser.create('token', 'mo', {texClass: TEXCLASS.REL}, unicode));\n    } else {\n      tex = '\\\\mathrel{' + tex.replace(/:/g, '\\\\MTThinColon').replace(/-/g, '\\\\mathrel{-}') + '}';\n      parser.string = ParseUtil.addArgs(parser, tex, parser.string.substr(parser.i));\n      parser.i = 0;\n    }\n  },\n\n  /**\n   * Implements \\ndownarrow and \\nuparrow via a terrible hack (visual only, no chance of this working with SRE).\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {string} c           The base arrow for the slashed version\n   * @param {string} dy          A vertical offset for the slash\n   */\n  NArrow(parser: TexParser, _name: string, c: string, dy: string) {\n    parser.Push(\n      parser.create('node', 'TeXAtom', [\n        parser.create('token', 'mtext', {}, c),\n        parser.create('node', 'mpadded', [\n          parser.create('node', 'mpadded', [\n            parser.create('node', 'menclose', [\n              parser.create('node', 'mspace', [], {height: '.2em', depth: 0, width: '.4em'})\n            ], {notation: 'updiagonalstrike', 'data-thickness': '.05em', 'data-padding': 0})\n          ], {width: 0, lspace: '-.5width', voffset: dy}),\n          parser.create('node', 'mphantom', [\n            parser.create('token', 'mtext', {}, c)\n          ])\n        ], {width: 0, lspace: '-.5width'})\n      ], {texClass: TEXCLASS.REL})\n    );\n  },\n\n  /**\n   * Implements \\splitfrac and \\splitdfrac.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {boolean} display    True if \\splitdfrac.\n   */\n  SplitFrac(parser: TexParser, name: string, display: boolean) {\n    const num = parser.ParseArg(name);\n    const den = parser.ParseArg(name);\n    parser.Push(\n      parser.create('node', 'mstyle', [\n        parser.create('node', 'mfrac', [\n          parser.create('node', 'mstyle', [\n            num,\n            parser.create('token', 'mi'),\n            parser.create('token', 'mspace', {width: '1em'}) // no parameter for this in mathtools.  Should we add one?\n          ], {scriptlevel: 0}),\n          parser.create('node', 'mstyle', [\n            parser.create('token', 'mspace', {width: '1em'}),\n            parser.create('token', 'mi'),\n            den\n          ], {scriptlevel: 0})\n        ], {linethickness: 0, numalign: 'left', denomalign: 'right'})\n      ], {displaystyle: display, scriptlevel: 0})\n    );\n  },\n\n  /**\n   * Implements \\xmathstrut.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  XMathStrut(parser: TexParser, name: string) {\n    let dd = parser.GetBrackets(name);\n    let dh = parser.GetArgument(name);\n    dh = MathtoolsUtil.plusOrMinus(name, dh);\n    dd = MathtoolsUtil.plusOrMinus(name, dd || dh);\n    parser.Push(\n      parser.create('node', 'TeXAtom', [\n        parser.create('node', 'mpadded', [\n          parser.create('node', 'mphantom', [\n            parser.create('token', 'mo', {stretchy: false}, '(')\n          ])\n        ], {width: 0, height: dh + 'height', depth: dd + 'depth'})\n      ], {texClass: TEXCLASS.ORD})\n    );\n  },\n\n  /**\n   * Implements \\prescript.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  Prescript(parser: TexParser, name: string) {\n    const sup = MathtoolsUtil.getScript(parser, name, 'sup');\n    const sub = MathtoolsUtil.getScript(parser, name, 'sub');\n    const base = MathtoolsUtil.getScript(parser, name, 'arg');\n    if (NodeUtil.isType(sup, 'none') && NodeUtil.isType(sub, 'none')) {\n      parser.Push(base);\n      return;\n    }\n    const mml = parser.create('node', 'mmultiscripts', [base]);\n    NodeUtil.getChildren(mml).push(null, null);\n    NodeUtil.appendChildren(mml, [parser.create('node', 'mprescripts'), sub, sup]);\n    mml.setProperty('fixPrescript', true);\n    parser.Push(mml);\n  },\n\n  /**\n   * Implements \\newtagform and \\renewtagform.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {boolean=} renew     True if \\renewtagform.\n   */\n  NewTagForm(parser: TexParser, name: string, renew: boolean = false) {\n    const tags = parser.tags as MathtoolsTags;\n    if (!('mtFormats' in tags)) {\n      throw new TexError('TagsNotMT', '%1 can only be used with ams or mathtools tags', name);\n    }\n    const id = parser.GetArgument(name).trim();\n    if (!id) {\n      throw new TexError('InvalidTagFormID', 'Tag form name can\\'t be empty');\n    }\n    const format = parser.GetBrackets(name, '');\n    const left = parser.GetArgument(name);\n    const right = parser.GetArgument(name);\n    if (!renew && tags.mtFormats.has(id)) {\n      throw new TexError('DuplicateTagForm', 'Duplicate tag form: %1', id);\n    }\n    tags.mtFormats.set(id, [left, right, format]);\n  },\n\n  /**\n   * Implements \\usetagform.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  UseTagForm(parser: TexParser, name: string) {\n    const tags = parser.tags as MathtoolsTags;\n    if (!('mtFormats' in tags)) {\n      throw new TexError('TagsNotMT', '%1 can only be used with ams or mathtools tags', name);\n    }\n    const id = parser.GetArgument(name).trim();\n    if (!id) {\n      tags.mtCurrent = null;\n      return;\n    }\n    if (!tags.mtFormats.has(id)) {\n      throw new TexError('UndefinedTagForm', 'Undefined tag form: %1', id);\n    }\n    tags.mtCurrent = tags.mtFormats.get(id);\n  },\n\n  /**\n   * Implements \\mathtoolsset.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  SetOptions(parser: TexParser, name: string) {\n    const options = parser.options.mathtools;\n    if (!options['allow-mathtoolsset']) {\n      throw new TexError('ForbiddenMathtoolsSet', '%1 is disabled', name);\n    }\n    const allowed = {} as {[id: string]: number};\n    Object.keys(options).forEach(id => {\n      if (id !== 'pariedDelimiters' && id !== 'tagforms' && id !== 'allow-mathtoolsset') {\n        allowed[id] = 1;\n      }\n    });\n    const args = parser.GetArgument(name);\n    const keys = ParseUtil.keyvalOptions(args, allowed, true);\n    for (const id of Object.keys(keys)) {\n      options[id] = keys[id];\n    }\n  },\n\n  /**\n   * Use the Base or AMS methods for these\n   */\n  Array:  BaseMethods.Array,\n  Macro:  BaseMethods.Macro,\n  xArrow:      AmsMethods.xArrow,\n  HandleRef:   AmsMethods.HandleRef,\n  AmsEqnArray: AmsMethods.AmsEqnArray,\n  MacroWithTemplate: NewcommandMethods.MacroWithTemplate,\n\n};\n","/*************************************************************\n *  Copyright (c) 2021-2022 MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview    Tags implementation for the mathtools package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport TexError from '../TexError.js';\nimport {ParserConfiguration} from '../Configuration.js';\nimport {TeX} from '../../tex.js';\nimport {AbstractTags, TagsFactory} from '../Tags.js';\n\n\n/**\n * The type for the Mathtools tags (including their data).\n */\nexport type MathtoolsTags = AbstractTags & {\n  mtFormats: Map<string, [string, string, string]>;  // name -> [left, right, format]\n  mtCurrent: [string, string, string];               // [left, right, format]\n};\n\n/**\n * The ID number for the current tag class\n */\nlet tagID = 0;\n\n/**\n * Creates and registers a subclass of the currently configured tag class\n * that handles the formats created by the \\newtagform macro.\n */\nexport function MathtoolsTagFormat(config: ParserConfiguration, jax: TeX<any, any, any>) {\n  /**\n   * If the tag format is being added by one of the other extensions,\n   *   as is done for the 'ams' tags, make sure it is defined so we can create it.\n   */\n  const tags = jax.parseOptions.options.tags;\n  if (tags !== 'base' && config.tags.hasOwnProperty(tags)) {\n    TagsFactory.add(tags, config.tags[tags]);\n  }\n\n  /**\n   * The original tag class to be extended (none, ams, or all)\n   */\n  const TagClass = TagsFactory.create(jax.parseOptions.options.tags).constructor as typeof AbstractTags;\n\n  /**\n   * A Tags object that uses \\newtagform to define the formatting\n   */\n  class TagFormat extends TagClass {\n\n    /**\n     * The defined tag formats\n     */\n    public mtFormats: Map<string, [string, string, string]> = new Map();\n\n    /**\n     * The format currently in use ([left, right, format]), or null for using the default\n     */\n    public mtCurrent: [string, string, string] = null;\n\n    /**\n     * @override\n     * @constructor\n     */\n    constructor() {\n      super();\n      const forms = jax.parseOptions.options.mathtools.tagforms;\n      for (const form of Object.keys(forms)) {\n        if (!Array.isArray(forms[form]) || forms[form].length !== 3) {\n          throw new TexError('InvalidTagFormDef',\n                             'The tag form definition for \"%1\" should be an array fo three strings', form);\n        }\n        this.mtFormats.set(form, forms[form]);\n      }\n    }\n\n    /**\n     * @override\n     */\n    public formatTag(tag: string) {\n      if (this.mtCurrent) {\n        const [left, right, format] = this.mtCurrent;\n        return (format ? `${left}${format}{${tag}}${right}` : `${left}${tag}${right}`);\n      }\n      return super.formatTag(tag);\n    }\n  }\n\n  //\n  //  Get a unique name for the tag class (since it is tied to the input jax)\n  //  Note:  These never get freed, so they will accumulate if you create many\n  //  TeX input jax instances with this extension.\n  //\n  tagID++;\n  const tagName = 'MathtoolsTags-' + tagID;\n  //\n  // Register the tag class\n  //\n  TagsFactory.add(tagName, TagFormat);\n  jax.parseOptions.options.tags = tagName;\n}\n","/*************************************************************\n *  Copyright (c) 2021-2022 MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview    Utility functions for the mathtools package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {EqnArrayItem} from '../base/BaseItems.js';\nimport ParseUtil from '../ParseUtil.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {Macro} from '../Symbol.js';\nimport ParseOptions from '../ParseOptions.js';\nimport {lookup} from '../../../util/Options.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\n\nimport {MathtoolsMethods} from './MathtoolsMethods.js';\nimport {PAIREDDELIMS} from './MathtoolsConfiguration.js';\n\n/**\n * Utility functions for the Mathtools package.\n */\nexport const MathtoolsUtil = {\n\n  /**\n   * Set the displaystyle and scriptlevel attributes of an mstyle element\n   *\n   * @param {MmlNode} mml     The mstyle node to modify.\n   * @param {string} style    The TeX style macro to apply.\n   */\n  setDisplayLevel(mml: MmlNode, style: string) {\n    if (!style) return;\n    const [display, script] = lookup(style, {\n      '\\\\displaystyle':      [true, 0],\n      '\\\\textstyle':         [false, 0],\n      '\\\\scriptstyle':       [false, 1],\n      '\\\\scriptscriptstyle': [false, 2]\n    }, [null, null]);\n    if (display !== null) {\n      mml.attributes.set('displaystyle', display);\n      mml.attributes.set('scriptlevel', script);\n    }\n  },\n\n  /**\n   * Check that the top stack item is an alignment table.\n   *\n   * @param {TexParser} parser   The current TeX parser.\n   * @param {string} name        The name of the macro doing the checking.\n   * @return {EqnArrayItem}      The top item (an EqnArrayItem).\n   */\n  checkAlignment(parser: TexParser, name: string): EqnArrayItem {\n    const top = parser.stack.Top() as EqnArrayItem;\n    if (top.kind !== EqnArrayItem.prototype.kind) {\n      throw new TexError('NotInAlignment', '%1 can only be used in aligment environments', name);\n    }\n    return top;\n  },\n\n  /**\n   * Add a paired delimiter to the list of them.\n   *\n   * @param {ParseOptions} config   The parse options to modify.\n   * @param {string} cs             The control sequence for the paired delimiters.\n   * @param {string[]} args         The definition for the paired delimiters.  One of:\n   *                                   [left, right]\n   *                                   [left, right, body, argcount]\n   *                                   [left, right, body, argcount, pre, post]\n   */\n  addPairedDelims(config: ParseOptions, cs: string, args: string[]) {\n    const delims = config.handlers.retrieve(PAIREDDELIMS) as CommandMap;\n    delims.add(cs, new Macro(cs, MathtoolsMethods.PairedDelimiters, args));\n  },\n\n  /**\n   * Adjust the line spacing for a table.\n   *\n   * @param {MmlNode} mtable   The mtable node to adjust (if it is a table).\n   * @param {string} spread    The dimension to change by (number-with-units).\n   */\n  spreadLines(mtable: MmlNode, spread: string) {\n    if (!mtable.isKind('mtable')) return;\n    let rowspacing = mtable.attributes.get('rowspacing') as string;\n    if (rowspacing) {\n      const add = ParseUtil.dimen2em(spread);\n      rowspacing = rowspacing\n        .split(/ /)\n        .map(s => ParseUtil.Em(Math.max(0, ParseUtil.dimen2em(s) + add)))\n        .join(' ');\n    } else {\n      rowspacing = spread;\n    }\n    mtable.attributes.set('rowspacing', rowspacing);\n  },\n\n  /**\n   * Check if a string is a number and return it with an explicit plus if there isn't one.\n   *\n   * @param {string} name   The name of the macro doing the checking.\n   * @param {string} n      The string to test as a number.\n   * @return {srtring}      The number with an explicit sign.\n   */\n  plusOrMinus(name: string, n: string): string {\n    n = n.trim();\n    if (!n.match(/^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)$/)) {\n      throw new TexError('NotANumber', 'Argument to %1 is not a number', name);\n    }\n    return (n.match(/^[-+]/) ? n : '+' + n);\n  },\n\n  /**\n   * Parse a \\prescript argument, with its associated format, if any.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} name        The name of the calling macro (\\prescript).\n   * @param {string} pos         The position for the argument (sub, sup, arg).\n   * @return {MmlNode}           The parsed MML version of the argument.\n   */\n  getScript(parser: TexParser, name: string, pos: string): MmlNode {\n    let arg = ParseUtil.trimSpaces(parser.GetArgument(name));\n    if (arg === '') {\n      return parser.create('node', 'none');\n    }\n    const format = parser.options.mathtools[`prescript-${pos}-format`];\n    format && (arg = `${format}{${arg}}`);\n    return new TexParser(arg, parser.stack.env, parser.configuration).mml();\n  }\n\n};\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the mhchem package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport TexError from '../TexError.js';\nimport TexParser from '../TexParser.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport {AmsMethods} from '../ams/AmsMethods.js';\nimport {mhchemParser} from 'mhchemparser/dist/mhchemParser.js';\n\n// Namespace\nlet MhchemMethods: Record<string, ParseMethod> = {};\n\nMhchemMethods.Macro = BaseMethods.Macro;\nMhchemMethods.xArrow = AmsMethods.xArrow;\n\n/**\n * @param{TeXParser} parser   The parser for this expression\n * @param{string} name        The macro name being called\n * @param{string} machine     The name of the fininte-state machine to use\n */\nMhchemMethods.Machine = function(parser: TexParser, name: string, machine: 'tex' | 'ce' | 'pu') {\n  let arg = parser.GetArgument(name);\n  let tex;\n  try {\n    tex = mhchemParser.toTex(arg, machine);\n  } catch (err) {\n    throw new TexError(err[0], err[1]);\n  }\n  parser.string = tex + parser.string.substr(parser.i);\n  parser.i = 0;\n};\n\nnew CommandMap(\n  'mhchem', {\n    ce: ['Machine', 'ce'],\n    pu: ['Machine', 'pu'],\n    longrightleftharpoons: [\n      'Macro',\n      '\\\\stackrel{\\\\textstyle{-}\\\\!\\\\!{\\\\rightharpoonup}}{\\\\smash{{\\\\leftharpoondown}\\\\!\\\\!{-}}}'\n    ],\n    longRightleftharpoons: [\n      'Macro',\n      '\\\\stackrel{\\\\textstyle{-}\\\\!\\\\!{\\\\rightharpoonup}}{\\\\smash{\\\\leftharpoondown}}'\n    ],\n    longLeftrightharpoons: [\n      'Macro',\n      '\\\\stackrel{\\\\textstyle\\\\vphantom{{-}}{\\\\rightharpoonup}}{\\\\smash{{\\\\leftharpoondown}\\\\!\\\\!{-}}}'\n    ],\n    longleftrightarrows: [\n      'Macro',\n      '\\\\stackrel{\\\\longrightarrow}{\\\\smash{\\\\longleftarrow}\\\\Rule{0px}{.25em}{0px}}'\n    ],\n    //\n    //  Needed for \\bond for the ~ forms\n    //\n    tripledash: [\n      'Macro',\n      '\\\\vphantom{-}\\\\raise2mu{\\\\kern2mu\\\\tiny\\\\text{-}\\\\kern1mu\\\\text{-}\\\\kern1mu\\\\text{-}\\\\kern2mu}'\n    ],\n    xleftrightarrow:    ['xArrow', 0x2194, 6, 6],\n    xrightleftharpoons: ['xArrow', 0x21CC, 5, 7],   // FIXME:  doesn't stretch in HTML-CSS output\n    xRightleftharpoons: ['xArrow', 0x21CC, 5, 7],   // FIXME:  how should this be handled?\n    xLeftrightharpoons: ['xArrow', 0x21CC, 5, 7]\n  },\n  MhchemMethods\n);\n\n\nexport const MhchemConfiguration = Configuration.create(\n  'mhchem', {handler: {macro: ['mhchem']}}\n);\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the Newcommand package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport {BeginEnvItem} from './NewcommandItems.js';\nimport NewcommandUtil from './NewcommandUtil.js';\nimport './NewcommandMappings.js';\nimport ParseMethods from '../ParseMethods.js';\nimport * as sm from '../SymbolMap.js';\n\n\n/**\n * Init method for Newcommand package.\n * @param {Configuration} config The current configuration.\n */\nlet init = function(config: ParserConfiguration) {\n  new sm.DelimiterMap(NewcommandUtil.NEW_DELIMITER,\n                      ParseMethods.delimiter, {});\n  new sm.CommandMap(NewcommandUtil.NEW_COMMAND, {}, {});\n  new sm.EnvironmentMap(NewcommandUtil.NEW_ENVIRONMENT,\n                        ParseMethods.environment, {}, {});\n  config.append(Configuration.local(\n    {handler: {character: [],\n               delimiter: [NewcommandUtil.NEW_DELIMITER],\n               macro: [NewcommandUtil.NEW_DELIMITER,\n                       NewcommandUtil.NEW_COMMAND],\n               environment: [NewcommandUtil.NEW_ENVIRONMENT]\n              },\n     priority: -1}));\n};\n\n\nexport const NewcommandConfiguration = Configuration.create(\n  'newcommand', {\n    handler: {\n      macro: ['Newcommand-macros']\n    },\n    items: {\n      [BeginEnvItem.prototype.kind]: BeginEnvItem,\n    },\n    options: {maxMacros: 1000},\n    init: init\n  }\n);\n\n\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Items for TeX parsing of new environments.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport TexError from '../TexError.js';\nimport {CheckType, BaseItem, StackItem} from '../StackItem.js';\n\n\n/**\n * Opening Item dealing with definitions of new environments. It's pushed onto\n * the stack whenever a user defined environment is encountered and remains\n * until a corresponding \\\\end collapses the stack.\n */\nexport class BeginEnvItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'beginEnv';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('end')) {\n      // @test Newenvironment Empty, Newenvironment Align\n      if (item.getName() !== this.getName()) {\n        // @test (missing) \\newenvironment{env}{aa}{bb}\\begin{env}cc\\end{equation}\n        throw new TexError('EnvBadEnd', '\\\\begin{%1} ended with \\\\end{%2}',\n                            this.getName(), item.getName());\n      }\n      return [[this.factory.create('mml', this.toMml())], true];\n    }\n    if (item.isKind('stop')) {\n      // @test (missing) \\newenvironment{env}{aa}{bb}\\begin{env}cc\n      throw new TexError('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n    // @test Newenvironment Empty, Newenvironment Align\n    return super.checkItem(item);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing for definitorial commands.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport NewcommandMethods from './NewcommandMethods.js';\nimport {CommandMap} from '../SymbolMap.js';\n\n\n/**\n * Macros for newcommand etc.\n */\nnew CommandMap('Newcommand-macros', {\n  newcommand:       'NewCommand',\n  renewcommand:     'NewCommand',\n  newenvironment:   'NewEnvironment',\n  renewenvironment: 'NewEnvironment',\n  def:              'MacroDef',\n  'let':            'Let'\n}, NewcommandMethods);\n\n\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing for definitorial commands.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {ParseMethod} from '../Types.js';\nimport TexError from '../TexError.js';\nimport TexParser from '../TexParser.js';\nimport * as sm from '../SymbolMap.js';\nimport {Symbol, Macro} from '../Symbol.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {StackItem} from '../StackItem.js';\nimport NewcommandUtil from './NewcommandUtil.js';\n\n\n// Namespace\nlet NewcommandMethods: Record<string, ParseMethod> = {};\n\n/**\n * Implements \\newcommand{\\name}[n][default]{...}\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the calling command.\n */\nNewcommandMethods.NewCommand = function(parser: TexParser, name: string) {\n  // @test Newcommand Simple\n  let cs = NewcommandUtil.GetCsNameArgument(parser, name);\n  let n = NewcommandUtil.GetArgCount(parser, name);\n  let opt = parser.GetBrackets(name);\n  let def = parser.GetArgument(name);\n  NewcommandUtil.addMacro(parser, cs, NewcommandMethods.Macro, [def, n, opt]);\n};\n\n\n/**\n * Implements \\newenvironment{name}[n][default]{begincmd}{endcmd}\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the calling command.\n */\nNewcommandMethods.NewEnvironment = function(parser: TexParser, name: string) {\n  // @test Newenvironment Empty, Newenvironment Content\n  let env = ParseUtil.trimSpaces(parser.GetArgument(name));\n  let n = NewcommandUtil.GetArgCount(parser, name);\n  let opt = parser.GetBrackets(name);\n  let bdef = parser.GetArgument(name);\n  let edef = parser.GetArgument(name);\n  NewcommandUtil.addEnvironment(parser, env, NewcommandMethods.BeginEnv, [true, bdef, edef, n, opt]);\n};\n\n\n/**\n * Implements \\def command.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the calling command.\n */\nNewcommandMethods.MacroDef = function(parser: TexParser, name: string) {\n  // @test Def DoubleLet, DefReDef\n  let cs = NewcommandUtil.GetCSname(parser, name);\n  let params = NewcommandUtil.GetTemplate(parser, name, '\\\\' + cs);\n  let def = parser.GetArgument(name);\n  !(params instanceof Array) ?\n    // @test Def DoubleLet, DefReDef\n    NewcommandUtil.addMacro(parser, cs, NewcommandMethods.Macro, [def, params]) :\n    // @test Def Let\n    NewcommandUtil.addMacro(parser, cs, NewcommandMethods.MacroWithTemplate, [def].concat(params));\n};\n\n\n/**\n * Implements the \\let command.\n *\n * All \\let commands create either new delimiters or macros in the extension\n * maps. In the latter case if the let binds a symbol we have to generate a\n * macro with the appropriate parse methods from the SymbolMap. Otherwise we\n * simply copy the macro under a new name.\n *\n * Let does not always work on special characters as TeX does.  For example\n * \"\\let\\car^ a\\car b\" will yield a superscript, on the otherhand\n * \\let\\bgroup={ is possible and will work fine in \\bgroup a } but will fail\n * in \\sqrt\\bgroup a}.\n *\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the calling command.\n */\nNewcommandMethods.Let = function(parser: TexParser, name: string) {\n  const cs = NewcommandUtil.GetCSname(parser, name);\n  let c = parser.GetNext();\n  // @test Let Bar, Let Caret\n  if (c === '=') {\n    // @test Let Brace Equal, Let Brace Equal Stretchy\n    parser.i++;\n    c = parser.GetNext();\n  }\n  const handlers = parser.configuration.handlers;\n  if (c === '\\\\') {\n    // @test Let Bar, Let Brace Equal Stretchy\n    name = NewcommandUtil.GetCSname(parser, name);\n    let macro = handlers.get('delimiter').lookup('\\\\' + name) as Symbol;\n    if (macro) {\n      // @test Let Bar, Let Brace Equal Stretchy\n      NewcommandUtil.addDelimiter(parser, '\\\\' + cs, macro.char, macro.attributes);\n      return;\n    }\n    const map = handlers.get('macro').applicable(name);\n    if (!map) {\n      // @test Let Undefined CS\n      return;\n    }\n    if (map instanceof sm.MacroMap) {\n      // @test Def Let, Newcommand Let\n      const macro = (map as sm.CommandMap).lookup(name) as Macro;\n      NewcommandUtil.addMacro(parser, cs, macro.func, macro.args, macro.symbol);\n      return;\n    }\n    macro = (map as sm.CharacterMap).lookup(name) as Symbol;\n    const newArgs = NewcommandUtil.disassembleSymbol(cs, macro);\n    const method = (p: TexParser, _cs: string, ...rest: any[]) => {\n      // @test Let Relet, Let Let, Let Circular Macro\n      const symb = NewcommandUtil.assembleSymbol(rest);\n      return map.parser(p, symb);\n    };\n    NewcommandUtil.addMacro(parser, cs, method, newArgs);\n    return;\n  }\n  // @test Let Brace Equal, Let Caret\n  parser.i++;\n  const macro = handlers.get('delimiter').lookup(c) as Symbol;\n  if (macro) {\n    // @test Let Paren Delim, Let Paren Stretchy\n    NewcommandUtil.addDelimiter(parser, '\\\\' + cs, macro.char, macro.attributes);\n    return;\n  }\n  // @test Let Brace Equal, Let Caret\n  NewcommandUtil.addMacro(parser, cs, NewcommandMethods.Macro, [c]);\n};\n\n\n/**\n * Process a macro with a parameter template by replacing parameters in the\n * parser's string.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the calling command.\n * @param {string} text The text template of the macro.\n * @param {string} n The number of parameters.\n * @param {string[]} ...params The parameter values.\n */\nNewcommandMethods.MacroWithTemplate = function (parser: TexParser, name: string,\n                                                text: string, n: string,\n                                                ...params: string[]) {\n  const argCount = parseInt(n, 10);\n  // @test Def Let\n  if (argCount) {\n    // @test Def Let\n    let args = [];\n    parser.GetNext();\n    if (params[0] && !NewcommandUtil.MatchParam(parser, params[0])) {\n      // @test Missing Arguments\n      throw new TexError('MismatchUseDef',\n                          'Use of %1 doesn\\'t match its definition', name);\n    }\n    for (let i = 0; i < argCount; i++) {\n      // @test Def Let\n      args.push(NewcommandUtil.GetParameter(parser, name, params[i + 1]));\n    }\n    text = ParseUtil.substituteArgs(parser, args, text);\n  }\n  parser.string = ParseUtil.addArgs(parser, text,\n                                    parser.string.slice(parser.i));\n  parser.i = 0;\n  ParseUtil.checkMaxMacros(parser);\n};\n\n\n/**\n * Process a user-defined environment.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The begin stackitem.\n * @param {string} bdef The begin definition in the newenvironment macro.\n * @param {string} edef The end definition in the newenvironment macro.\n * @param {number} n The number of parameters.\n * @param {string} def Default for an optional parameter.\n */\nNewcommandMethods.BeginEnv = function(parser: TexParser, begin: StackItem,\n                                      bdef: string, edef: string, n: number, def: string) {\n  // @test Newenvironment Empty, Newenvironment Content\n  // We have an end item, and we are supposed to close this environment.\n  if (begin.getProperty('end') && parser.stack.env['closing'] === begin.getName()) {\n    // @test Newenvironment Empty, Newenvironment Content\n    delete parser.stack.env['closing'];\n    // Parse the commands in the end environment definition.\n    let rest = parser.string.slice(parser.i);\n    parser.string = edef;\n    parser.i = 0;\n    parser.Parse();\n    // Reset to parsing the remainder of the expression.\n    parser.string = rest;\n    parser.i = 0;\n    // Close this environment.\n    return parser.itemFactory.create('end').setProperty('name', begin.getName());\n  }\n  if (n) {\n    // @test Newenvironment Optional, Newenvironment Arg Optional\n    let args: string[] = [];\n    if (def != null) {\n      // @test Newenvironment Optional, Newenvironment Arg Optional\n      let optional = parser.GetBrackets('\\\\begin{' + begin.getName() + '}');\n      args.push(optional == null ? def : optional);\n    }\n    for (let i = args.length; i < n; i++) {\n      // @test Newenvironment Arg Optional\n      args.push(parser.GetArgument('\\\\begin{' + begin.getName() + '}'));\n    }\n    bdef = ParseUtil.substituteArgs(parser, args, bdef);\n    edef = ParseUtil.substituteArgs(parser, [], edef); // no args, but get errors for #n in edef\n  }\n  parser.string = ParseUtil.addArgs(parser, bdef,\n                                    parser.string.slice(parser.i));\n  parser.i = 0;\n  return parser.itemFactory.create('beginEnv').setProperty('name', begin.getName());\n};\n\nNewcommandMethods.Macro = BaseMethods.Macro;\n\nexport default NewcommandMethods;\n","/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Utility functions for the newcommand package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport ParseUtil from '../ParseUtil.js';\nimport TexError from '../TexError.js';\nimport TexParser from '../TexParser.js';\nimport {Macro, Symbol} from '../Symbol.js';\nimport {Args, Attributes, ParseMethod} from '../Types.js';\nimport * as sm from '../SymbolMap.js';\n\n\nnamespace NewcommandUtil {\n\n  /**\n   * Transforms the attributes of a symbol into the arguments of a macro. E.g.,\n   * Symbol('ell', 'l', {mathvariant: \"italic\"}) is turned into Macro arguments:\n   * ['ell', 'l', 'mathvariant', 'italic'].\n   *\n   * @param {string} name The command name for the symbol.\n   * @param {Symbol} symbol The symbol associated with name.\n   * @return {Args[]} Arguments for a macro.\n   */\n  export function disassembleSymbol(name: string, symbol: Symbol): Args[] {\n    let newArgs = [name, symbol.char] as Args[];\n    // @test Let Relet, Let Let, Let Circular Macro\n    if (symbol.attributes) {\n      // @test Let Relet\n      for (let key in symbol.attributes) {\n        newArgs.push(key);\n        newArgs.push(symbol.attributes[key] as Args);\n      }\n    }\n    return newArgs;\n  }\n\n\n  /**\n   * Assembles a symbol from a list of macro arguments. This is the inverse\n   * method of the one above.\n   *\n   * @param {Args[]} args The arguments of the macro.\n   * @return {Symbol} The Symbol generated from the arguments..\n   */\n  export function assembleSymbol(args: Args[]): Symbol {\n    // @test Let Relet, Let Let, Let Circular Macro\n    let name = args[0] as string;\n    let char = args[1] as string;\n    let attrs: Attributes = {};\n    for (let i = 2; i < args.length; i = i + 2) {\n      // @test Let Relet\n      attrs[args[i] as string] = args[i + 1];\n    }\n    return new Symbol(name, char, attrs);\n  }\n\n  /**\n   * Get the next CS name or give an error.\n   * @param {TexParser} parser The calling parser.\n   * @param {string} cmd The string starting with a control sequence.\n   * @return {string} The control sequence.\n   */\n  export function GetCSname(parser: TexParser, cmd: string): string {\n    // @test Def ReDef, Let Bar, Let Brace Equal\n    let c = parser.GetNext();\n    if (c !== '\\\\') {\n      // @test No CS\n      throw new TexError('MissingCS',\n                          '%1 must be followed by a control sequence', cmd);\n    }\n    let cs = ParseUtil.trimSpaces(parser.GetArgument(cmd));\n    return cs.substr(1);\n  }\n\n  /**\n   * Get a control sequence name as an argument (doesn't require the backslash)\n   * @param {TexParser} parser The calling parser.\n   * @param {string} name The macro that is getting the name.\n   * @return {string} The control sequence.\n   */\n  export function GetCsNameArgument(parser: TexParser, name: string): string {\n    let cs = ParseUtil.trimSpaces(parser.GetArgument(name));\n    if (cs.charAt(0) === '\\\\') {\n      // @test Newcommand Simple\n      cs = cs.substr(1);\n    }\n    if (!cs.match(/^(.|[a-z]+)$/i)) {\n      // @test Illegal CS\n      throw new TexError('IllegalControlSequenceName',\n                         'Illegal control sequence name for %1', name);\n    }\n    return cs;\n  }\n\n  /**\n   * Get the number of arguments for a macro definition\n   * @param {TexParser} parser The calling parser.\n   * @param {string} name The macro that is getting the argument count.\n   * @return {string} The number of arguments (or blank).\n   */\n  export function GetArgCount(parser: TexParser, name: string): string {\n    let n = parser.GetBrackets(name);\n    if (n) {\n      // @test Newcommand Optional, Newcommand Arg, Newcommand Arg Optional\n      // @test Newenvironment Optional, Newenvironment Arg Optional\n      n = ParseUtil.trimSpaces(n);\n      if (!n.match(/^[0-9]+$/)) {\n        // @test Illegal Argument Number\n        throw new TexError('IllegalParamNumber',\n                           'Illegal number of parameters specified in %1', name);\n      }\n    }\n    return n;\n  }\n\n  /**\n   * Get a \\def parameter template.\n   * @param {TexParser} parser The calling parser.\n   * @param {string} cmd The string starting with the template.\n   * @param {string} cs The control sequence of the \\def.\n   * @return {number | string[]} The number of parameters or a string array if\n   *     there is an optional argument.\n   */\n  export function GetTemplate(parser: TexParser, cmd: string, cs: string): number | string[] {\n    // @test Def Double Let, Def ReDef, Def Let\n    let c = parser.GetNext();\n    let params: string[] = [];\n    let n = 0;\n    let i = parser.i;\n    while (parser.i < parser.string.length) {\n      c = parser.GetNext();\n      if (c === '#') {\n        // @test Def ReDef, Def Let, Def Optional Brace\n        if (i !== parser.i) {\n          // @test Def Let, Def Optional Brace\n          params[n] = parser.string.substr(i, parser.i - i);\n        }\n        c = parser.string.charAt(++parser.i);\n        if (!c.match(/^[1-9]$/)) {\n          // @test Illegal Hash\n          throw new TexError('CantUseHash2',\n                              'Illegal use of # in template for %1', cs);\n        }\n        if (parseInt(c) !== ++n) {\n          // @test No Sequence\n          throw new TexError('SequentialParam',\n                              'Parameters for %1 must be numbered sequentially', cs);\n        }\n        i = parser.i + 1;\n      } else if (c === '{') {\n        // @test Def Double Let, Def ReDef, Def Let\n        if (i !== parser.i) {\n          // @test Optional Brace Error\n          params[n] = parser.string.substr(i, parser.i - i);\n        }\n        if (params.length > 0) {\n          // @test Def Let, Def Optional Brace\n          return [n.toString()].concat(params);\n        } else {\n          // @test Def Double Let, Def ReDef\n          return n;\n        }\n      }\n      parser.i++;\n    }\n    // @test No Replacement\n    throw new TexError('MissingReplacementString',\n                        'Missing replacement string for definition of %1', cmd);\n  }\n\n\n  /**\n   * Find a single parameter delimited by a trailing template.\n   * @param {TexParser} parser The calling parser.\n   * @param {string} name The name of the calling command.\n   * @param {string} param The parameter for the macro.\n   */\n  export function GetParameter(parser: TexParser, name: string, param: string) {\n    if (param == null) {\n      // @test Def Let, Def Optional Brace, Def Options CS\n      return parser.GetArgument(name);\n    }\n    let i = parser.i;\n    let j = 0;\n    let hasBraces = 0;\n    while (parser.i < parser.string.length) {\n      let c = parser.string.charAt(parser.i);\n      // @test Def Let, Def Optional Brace, Def Options CS\n      if (c === '{') {\n        // @test Def Optional Brace, Def Options CS\n        if (parser.i === i) {\n          // @test Def Optional Brace\n          hasBraces = 1;\n        }\n        parser.GetArgument(name);\n        j = parser.i - i;\n      } else if (MatchParam(parser, param)) {\n        // @test Def Let, Def Optional Brace, Def Options CS\n        if (hasBraces) {\n          // @test Def Optional Brace\n          i++;\n          j -= 2;\n        }\n        return parser.string.substr(i, j);\n      } else if (c === '\\\\') {\n        // @test Def Options CS\n        parser.i++;\n        j++;\n        hasBraces = 0;\n        let match = parser.string.substr(parser.i).match(/[a-z]+|./i);\n        if (match) {\n          // @test Def Options CS\n          parser.i += match[0].length;\n          j = parser.i - i;\n        }\n      } else {\n        // @test Def Let\n        parser.i++;\n        j++;\n        hasBraces = 0;\n      }\n    }\n    // @test Runaway Argument\n    throw new TexError('RunawayArgument', 'Runaway argument for %1?', name);\n  }\n\n\n  /**\n   * Check if a template is at the current location.\n   * (The match must be exact, with no spacing differences. TeX is\n   *  a little more forgiving than this about spaces after macro names)\n   * @param {TexParser} parser The calling parser.\n   * @param {string} param Tries to match an optional parameter.\n   * @return {number} The number of optional parameters, either 0 or 1.\n   */\n  export function MatchParam(parser: TexParser, param: string): number {\n    // @test Def Let, Def Optional Brace, Def Options CS\n    if (parser.string.substr(parser.i, param.length) !== param) {\n      // @test Def Let, Def Options CS\n      return 0;\n    }\n    if (param.match(/\\\\[a-z]+$/i) &&\n        parser.string.charAt(parser.i + param.length).match(/[a-z]/i)) {\n      // @test (missing)\n      return 0;\n    }\n    // @test Def Let, Def Optional Brace, Def Options CS\n    parser.i += param.length;\n    return 1;\n  }\n\n\n  /**\n   * Adds a new delimiter as extension to the parser.\n   * @param {TexParser} parser The current parser.\n   * @param {string} cs The control sequence of the delimiter.\n   * @param {string} char The corresponding character.\n   * @param {Attributes} attr The attributes needed for parsing.\n   */\n  export function addDelimiter(parser: TexParser, cs: string, char: string, attr: Attributes) {\n    const handlers = parser.configuration.handlers;\n    const handler = handlers.retrieve(NEW_DELIMITER) as sm.DelimiterMap;\n    handler.add(cs, new Symbol(cs, char, attr));\n  }\n\n  /**\n   * Adds a new macro as extension to the parser.\n   * @param {TexParser} parser The current parser.\n   * @param {string} cs The control sequence of the delimiter.\n   * @param {ParseMethod} func The parse method for this macro.\n   * @param {Args[]} attr The attributes needed for parsing.\n   * @param {string=} symbol Optionally original symbol for macro, in case it is\n   *     different from the control sequence.\n   */\n  export function addMacro(parser: TexParser, cs: string, func: ParseMethod, attr: Args[],\n                           symbol: string = '') {\n    const handlers = parser.configuration.handlers;\n    const handler = handlers.retrieve(NEW_COMMAND) as sm.CommandMap;\n    handler.add(cs, new Macro(symbol ? symbol : cs, func, attr));\n  }\n\n\n  /**\n   * Adds a new environment as extension to the parser.\n   * @param {TexParser} parser The current parser.\n   * @param {string} env The environment name.\n   * @param {ParseMethod} func The parse method for this macro.\n   * @param {Args[]} attr The attributes needed for parsing.\n   */\n  export function addEnvironment(parser: TexParser, env: string, func: ParseMethod, attr: Args[]) {\n    const handlers = parser.configuration.handlers;\n    const handler = handlers.retrieve(NEW_ENVIRONMENT) as sm.EnvironmentMap;\n    handler.add(env, new Macro(env, func, attr));\n  }\n\n  /**\n   * Naming constants for the extension mappings.\n   */\n  export const NEW_DELIMITER = 'new-Delimiter';\n  export const NEW_COMMAND = 'new-Command';\n  export const NEW_ENVIRONMENT = 'new-Environment';\n\n}\n\nexport default NewcommandUtil;\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the NoErrors package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {NodeFactory} from '../NodeFactory.js';\n\n/**\n * Generates an error node containing the erroneous expression.\n * @param {TexParser} parser The node factory.\n * @param {string} message The error message (which is ignored).\n * @param {string} id The error id (which is ignored).\n * @param {string} expr The original LaTeX expression.\n */\nfunction noErrors(factory: NodeFactory,\n                  message: string, _id: string, expr: string) {\n  let mtext = factory.create('token', 'mtext', {}, expr.replace(/\\n/g, ' '));\n  let error = factory.create('node', 'merror', [mtext], {'data-mjx-error': message, title: message});\n  return error;\n}\n\nexport const NoErrorsConfiguration = Configuration.create(\n  'noerrors', {nodes: {'error': noErrors}}\n);\n\n\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the AMS package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport TexParser from '../TexParser.js';\n\n/**\n * Generates a red version of the undefined control sequence, instead of\n * throwing an error.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nfunction noUndefined(parser: TexParser, name: string) {\n  const textNode = parser.create('text', '\\\\' + name);\n  const options = parser.options.noundefined || {};\n  const def = {} as {[name: string]: string};\n  for (const id of ['color', 'background', 'size']) {\n    if (options[id]) {\n      def['math' + id] = options[id];\n    }\n  }\n  parser.Push(parser.create('node', 'mtext', [], def, textNode));\n}\n\nexport const NoUndefinedConfiguration = Configuration.create(\n  'noundefined', {\n    fallback: {macro: noUndefined},\n    options: {\n      noundefined: {\n        color: 'red',\n        background: '',\n        size: ''\n      }\n    },\n    priority: 3\n  }\n);\n\n\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the Physics package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {AutoOpen} from './PhysicsItems.js';\nimport './PhysicsMappings.js';\n\n\nexport const PhysicsConfiguration = Configuration.create(\n  'physics', {\n    handler: {\n      macro: [\n        'Physics-automatic-bracing-macros',\n        'Physics-vector-macros',\n        'Physics-vector-mo',\n        'Physics-vector-mi',\n        'Physics-derivative-macros',\n        'Physics-expressions-macros',\n        'Physics-quick-quad-macros',\n        'Physics-bra-ket-macros',\n        'Physics-matrix-macros'\n      ],\n      character: ['Physics-characters'],\n      environment: ['Physics-aux-envs']\n    },\n    items: {\n      [AutoOpen.prototype.kind]: AutoOpen\n    },\n    options: {\n      physics: {\n        italicdiff: false,\n        arrowdel: false\n      }\n    }\n  }\n);\n","/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Stack items for the physics package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {CheckType, BaseItem, StackItem} from '../StackItem.js';\nimport ParseUtil from '../ParseUtil.js';\nimport NodeUtil from '../NodeUtil.js';\nimport TexParser from '../TexParser.js';\nimport {AbstractMmlTokenNode} from '../../../core/MmlTree/MmlNode.js';\n\nexport class AutoOpen extends BaseItem {\n\n  /**\n   * @override\n   */\n  protected static errors = Object.assign(Object.create(BaseItem.errors), {\n    'stop': ['ExtraOrMissingDelims', 'Extra open or missing close delimiter']\n  });\n\n  /**\n   * The number of unpaired open delimiters that need to be matched before\n   *   a close delimiter will close this item. (#2831)\n   */\n  protected openCount: number = 0;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'auto open';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n\n  /**\n   * @override\n   */\n  public toMml() {\n    // Smash and right/left\n    let parser = this.factory.configuration.parser;\n    let right = this.getProperty('right') as string;\n    if (this.getProperty('smash')) {\n      let mml = super.toMml();\n      const smash = parser.create('node', 'mpadded', [mml],\n                                  {height: 0, depth: 0});\n      this.Clear();\n      this.Push(parser.create('node', 'TeXAtom', [smash]));\n    }\n    if (right) {\n      this.Push(new TexParser(right, parser.stack.env,\n                              parser.configuration).mml());\n    }\n    let mml = ParseUtil.fenced(\n      this.factory.configuration,\n      this.getProperty('open') as string,\n      super.toMml(),\n      this.getProperty('close') as string,\n      this.getProperty('big') as string\n    );\n    //\n    //  Remove fence markers that would cause it to be TeX class INNER,\n    //  so it is treated as a regular mrow when setting the tex class (#2760)\n    //\n    NodeUtil.removeProperties(mml, 'open', 'close', 'texClass');\n    return mml;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    //\n    //  Check for nested open delimiters (#2831)\n    //\n    if (item.isKind('mml') && item.Size() === 1) {\n      const mml = item.toMml();\n      if (mml.isKind('mo') && (mml as AbstractMmlTokenNode).getText() === this.getProperty('open')) {\n        this.openCount++;\n      }\n    }\n    let close = item.getProperty('autoclose');\n    if (close && close === this.getProperty('close') && !this.openCount--) {\n      if (this.getProperty('ignore')) {\n        this.Clear();\n        return [[], true];\n      }\n      return [[this.toMml()], true];\n    }\n    return super.checkItem(item);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing of the physics package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {EnvironmentMap, CommandMap, MacroMap, CharacterMap} from '../SymbolMap.js';\nimport PhysicsMethods from './PhysicsMethods.js';\nimport {TexConstant} from '../TexConstants.js';\nimport ParseMethods from '../ParseMethods.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\n\n\n/**\n * Macros for physics package (section 2.1).\n */\nnew CommandMap('Physics-automatic-bracing-macros', {\n  'quantity':       'Quantity',\n  'qty':            'Quantity',\n  'pqty':           ['Quantity', '(', ')', true],\n  'bqty':           ['Quantity', '[', ']', true],\n  'vqty':           ['Quantity', '|', '|', true],\n  'Bqty':           ['Quantity', '\\\\{', '\\\\}', true],\n  'absolutevalue':  ['Quantity', '|', '|', true],\n  'abs':            ['Quantity', '|', '|', true],\n  'norm':           ['Quantity', '\\\\|', '\\\\|', true],\n  'evaluated':      'Eval',\n  'eval':           'Eval',\n  'order':          ['Quantity', '(', ')', true, 'O',\n                     TexConstant.Variant.CALLIGRAPHIC],\n  'commutator':     'Commutator',\n  'comm':           'Commutator',\n  'anticommutator': ['Commutator', '\\\\{', '\\\\}'],\n  'acomm':          ['Commutator', '\\\\{', '\\\\}'],\n  'poissonbracket': ['Commutator', '\\\\{', '\\\\}'],\n  'pb':             ['Commutator', '\\\\{', '\\\\}']\n}, PhysicsMethods);\n\n\n/**\n * Macros for physics package (section 2.2).\n */\nnew CharacterMap('Physics-vector-mo', ParseMethods.mathchar0mo, {\n  dotproduct:    ['\\u22C5', {mathvariant: TexConstant.Variant.BOLD}],\n  vdot:          ['\\u22C5', {mathvariant: TexConstant.Variant.BOLD}],\n  crossproduct:  '\\u00D7',\n  cross:         '\\u00D7',\n  cp:            '\\u00D7',\n  // This is auxiliary!\n  gradientnabla: ['\\u2207', {mathvariant: TexConstant.Variant.BOLD}]\n});\n\nnew CharacterMap('Physics-vector-mi', ParseMethods.mathchar0mi, {\n  real:          ['\\u211C', {mathvariant: TexConstant.Variant.NORMAL}],\n  imaginary:     ['\\u2111', {mathvariant: TexConstant.Variant.NORMAL}]\n});\n\nnew CommandMap('Physics-vector-macros', {\n  'vnabla':      'Vnabla',\n  'vectorbold':  'VectorBold',\n  'vb':          'VectorBold',\n  'vectorarrow': ['StarMacro', 1, '\\\\vec{\\\\vb', '{#1}}'],\n  'va':          ['StarMacro', 1, '\\\\vec{\\\\vb', '{#1}}'],\n  'vectorunit':  ['StarMacro', 1, '\\\\hat{\\\\vb', '{#1}}'],\n  'vu':          ['StarMacro', 1, '\\\\hat{\\\\vb', '{#1}}'],\n  'gradient':    ['OperatorApplication', '\\\\vnabla', '(', '['],\n  'grad':        ['OperatorApplication', '\\\\vnabla', '(', '['],\n  'divergence':  ['VectorOperator', '\\\\vnabla\\\\vdot', '(', '['],\n  'div':         ['VectorOperator', '\\\\vnabla\\\\vdot', '(', '['],\n  'curl':        ['VectorOperator', '\\\\vnabla\\\\crossproduct', '(', '['],\n  'laplacian':   ['OperatorApplication', '\\\\nabla^2', '(', '['],\n}, PhysicsMethods);\n\n\n/**\n * Macros for physics package (section 2.3).\n */\nnew CommandMap('Physics-expressions-macros', {\n  'sin':              'Expression',\n  'sinh':             'Expression',\n  'arcsin':           'Expression',\n  'asin':             'Expression',\n  'cos':              'Expression',\n  'cosh':             'Expression',\n  'arccos':           'Expression',\n  'acos':             'Expression',\n  'tan':              'Expression',\n  'tanh':             'Expression',\n  'arctan':           'Expression',\n  'atan':             'Expression',\n  'csc':              'Expression',\n  'csch':             'Expression',\n  'arccsc':           'Expression',\n  'acsc':             'Expression',\n  'sec':              'Expression',\n  'sech':             'Expression',\n  'arcsec':           'Expression',\n  'asec':             'Expression',\n  'cot':              'Expression',\n  'coth':             'Expression',\n  'arccot':           'Expression',\n  'acot':             'Expression',\n  'exp':              ['Expression', false],\n  'log':              'Expression',\n  'ln':               'Expression',\n  'det':              ['Expression', false],\n  'Pr':               ['Expression', false],\n  // New expressions.\n  'tr':               ['Expression', false],\n  'trace':            ['Expression', false, 'tr'],\n  'Tr':               ['Expression', false],\n  'Trace':            ['Expression', false, 'Tr'],\n  'rank':             'NamedFn',\n  'erf':              ['Expression', false],\n  'Residue':          ['Macro', '\\\\mathrm{Res}'],\n  'Res':              ['OperatorApplication', '\\\\Residue', '(', '[', '{'],\n  'principalvalue':   ['OperatorApplication', '{\\\\cal P}'],\n  'pv':               ['OperatorApplication', '{\\\\cal P}'],\n  'PV':               ['OperatorApplication', '{\\\\rm P.V.}'],\n  'Re':               ['OperatorApplication', '\\\\mathrm{Re}', '{'],\n  'Im':               ['OperatorApplication', '\\\\mathrm{Im}', '{'],\n  // Old named functions.\n  'sine':             ['NamedFn', 'sin'],\n  'hypsine':          ['NamedFn', 'sinh'],\n  'arcsine':          ['NamedFn', 'arcsin'],\n  'asine':            ['NamedFn', 'asin'],\n  'cosine':           ['NamedFn', 'cos'],\n  'hypcosine':        ['NamedFn', 'cosh'],\n  'arccosine':        ['NamedFn', 'arccos'],\n  'acosine':          ['NamedFn', 'acos'],\n  'tangent':          ['NamedFn', 'tan'],\n  'hyptangent':       ['NamedFn', 'tanh'],\n  'arctangent':       ['NamedFn', 'arctan'],\n  'atangent':         ['NamedFn', 'atan'],\n  'cosecant':         ['NamedFn', 'csc'],\n  'hypcosecant':      ['NamedFn', 'csch'],\n  'arccosecant':      ['NamedFn', 'arccsc'],\n  'acosecant':        ['NamedFn', 'acsc'],\n  'secant':           ['NamedFn', 'sec'],\n  'hypsecant':        ['NamedFn', 'sech'],\n  'arcsecant':        ['NamedFn', 'arcsec'],\n  'asecant':          ['NamedFn', 'asec'],\n  'cotangent':        ['NamedFn', 'cot'],\n  'hypcotangent':     ['NamedFn', 'coth'],\n  'arccotangent':     ['NamedFn', 'arccot'],\n  'acotangent':       ['NamedFn', 'acot'],\n  'exponential':      ['NamedFn', 'exp'],\n  'logarithm':        ['NamedFn', 'log'],\n  'naturallogarithm': ['NamedFn', 'ln'],\n  'determinant':      ['NamedFn', 'det'],\n  'Probability':      ['NamedFn', 'Pr'],\n}, PhysicsMethods);\n\n\n/**\n * Macros for physics package (section 2.4).\n */\nnew CommandMap('Physics-quick-quad-macros', {\n  'qqtext':     'Qqtext',\n  'qq':         'Qqtext',\n  'qcomma':     ['Macro', '\\\\qqtext*{,}'],\n  'qc':         ['Macro', '\\\\qqtext*{,}'],\n  'qcc':        ['Qqtext', 'c.c.'],\n  'qif':        ['Qqtext', 'if'],\n  'qthen':      ['Qqtext', 'then'],\n  'qelse':      ['Qqtext', 'else'],\n  'qotherwise': ['Qqtext', 'otherwise'],\n  'qunless':    ['Qqtext', 'unless'],\n  'qgiven':     ['Qqtext', 'given'],\n  'qusing':     ['Qqtext', 'using'],\n  'qassume':    ['Qqtext', 'assume'],\n  'qsince':     ['Qqtext', 'since'],\n  'qlet':       ['Qqtext', 'let'],\n  'qfor':       ['Qqtext', 'for'],\n  'qall':       ['Qqtext', 'all'],\n  'qeven':      ['Qqtext', 'even'],\n  'qodd':       ['Qqtext', 'odd'],\n  'qinteger':   ['Qqtext', 'integer'],\n  'qand':       ['Qqtext', 'and'],\n  'qor':        ['Qqtext', 'or'],\n  'qas':        ['Qqtext', 'as'],\n  'qin':        ['Qqtext', 'in'],\n}, PhysicsMethods);\n\n\n/**\n * Macros for physics package (section 2.5).\n */\nnew CommandMap('Physics-derivative-macros', {\n  'diffd':                'DiffD',\n  'flatfrac':             ['Macro', '\\\\left.#1\\\\middle/#2\\\\right.', 2],\n  'differential':         ['Differential', '\\\\diffd'],\n  'dd':                   ['Differential', '\\\\diffd'],\n  'variation':            ['Differential', '\\\\delta'],\n  'var':                  ['Differential', '\\\\delta'],\n  'derivative':           ['Derivative', 2, '\\\\diffd'],\n  'dv':                   ['Derivative', 2, '\\\\diffd'],\n  'partialderivative':    ['Derivative', 3, '\\\\partial'],\n  'pderivative':          ['Derivative', 3, '\\\\partial'],\n  'pdv':                  ['Derivative', 3, '\\\\partial'],\n  'functionalderivative': ['Derivative', 2, '\\\\delta'],\n  'fderivative':          ['Derivative', 2, '\\\\delta'],\n  'fdv':                  ['Derivative', 2, '\\\\delta'],\n}, PhysicsMethods);\n\n\n/**\n * Macros for physics package (section 2.6).\n */\nnew CommandMap('Physics-bra-ket-macros', {\n  'bra':              'Bra',\n  'ket':              'Ket',\n  'innerproduct':     'BraKet',\n  'ip':               'BraKet',\n  'braket':           'BraKet',\n  'outerproduct':     'KetBra',\n  'dyad':             'KetBra',\n  'ketbra':           'KetBra',\n  'op':               'KetBra',\n  'expectationvalue': 'Expectation',\n  'expval':           'Expectation',\n  'ev':               'Expectation',\n  'matrixelement':    'MatrixElement',\n  'matrixel':         'MatrixElement',\n  'mel':              'MatrixElement',\n}, PhysicsMethods);\n\n\n/**\n * Macros for physics package (section 2.7).\n */\nnew CommandMap('Physics-matrix-macros', {\n  'matrixquantity':      'MatrixQuantity',\n  'mqty'          :      'MatrixQuantity',\n  'pmqty':               ['Macro', '\\\\mqty(#1)', 1],\n  'Pmqty':               ['Macro', '\\\\mqty*(#1)', 1],\n  'bmqty':               ['Macro', '\\\\mqty[#1]', 1],\n  'vmqty':               ['Macro', '\\\\mqty|#1|', 1],\n  // Smallmatrices\n  'smallmatrixquantity': ['MatrixQuantity', true],\n  'smqty':               ['MatrixQuantity', true],\n  'spmqty':              ['Macro', '\\\\smqty(#1)', 1],\n  'sPmqty':              ['Macro', '\\\\smqty*(#1)', 1],\n  'sbmqty':              ['Macro', '\\\\smqty[#1]', 1],\n  'svmqty':              ['Macro', '\\\\smqty|#1|', 1],\n  'matrixdeterminant':   ['Macro', '\\\\vmqty{#1}', 1],\n  'mdet':                ['Macro', '\\\\vmqty{#1}', 1],\n  'smdet':               ['Macro', '\\\\svmqty{#1}', 1],\n  'identitymatrix':      'IdentityMatrix',\n  'imat':                'IdentityMatrix',\n  'xmatrix':             'XMatrix',\n  'xmat':                'XMatrix',\n  'zeromatrix':          ['Macro', '\\\\xmat{0}{#1}{#2}', 2],\n  'zmat':                ['Macro', '\\\\xmat{0}{#1}{#2}', 2],\n  'paulimatrix':         'PauliMatrix',\n  'pmat':                'PauliMatrix',\n  'diagonalmatrix': 'DiagonalMatrix',\n  'dmat': 'DiagonalMatrix',\n  'antidiagonalmatrix': ['DiagonalMatrix', true],\n  'admat': ['DiagonalMatrix', true]\n}, PhysicsMethods);\n\n\n\n/**\n * Auxiliary environment map to define smallmatrix. This makes Physics\n * independent of AmsMath.\n */\nnew EnvironmentMap('Physics-aux-envs', ParseMethods.environment, {\n  smallmatrix:   ['Array', null, null, null, 'c', '0.333em', '.2em', 'S', 1]\n}, PhysicsMethods);\n\n\n/**\n * Character map for braket package.\n */\nnew MacroMap('Physics-characters', {\n  '|': ['AutoClose', TEXCLASS.ORD],   // texClass: TEXCLASS.ORD, // Have to push the closer as mml with special property\n  ')': 'AutoClose',\n  ']': 'AutoClose'\n}, PhysicsMethods);\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Methods for TeX parsing of the physics package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {ParseMethod} from '../Types.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {TEXCLASS, MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport ParseUtil from '../ParseUtil.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {NodeFactory} from '../NodeFactory.js';\nimport {Macro} from '../Symbol.js';\n\n\nlet PhysicsMethods: Record<string, ParseMethod> = {};\n\n\n/***********************\n * Physics package section 2.1\n * Automatic bracing\n */\n\n/**\n * Pairs open and closed fences.\n * @type {{[fence: string]: string}}\n */\nconst pairs: {[fence: string]: string} = {\n  '(': ')',\n  '[': ']',\n  '{': '}',\n  '|': '|',\n};\n\n\n/**\n * Regular expression for matching big fence arguments.\n * @type {RegExp}\n */\nconst biggs: RegExp = /^(b|B)i(g{1,2})$/;\n\n\n/**\n * Automatic sizing of fences, e.g., \\\\qty(x). Some with content.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string=} open Opening fence.\n * @param {string=} close Closing fence.\n * @param {boolean=} arg Fences contain an argument.\n * @param {string=} named Name operator.\n * @param {string=} variant A font for the mathvariant.\n */\nPhysicsMethods.Quantity = function(parser: TexParser, name: string,\n                                   open: string = '(', close: string = ')',\n                                   arg: boolean = false, named: string = '',\n                                   variant: string = '') {\n  let star = arg ? parser.GetStar() : false;\n  let next = parser.GetNext();\n  let position = parser.i;\n  let big = null;\n  if (next === '\\\\') {\n    parser.i++;\n    big = parser.GetCS();\n    if (!big.match(biggs)) {\n      // empty\n      let empty = parser.create('node', 'mrow');\n      parser.Push(ParseUtil.fenced(parser.configuration, open, empty, close));\n      parser.i = position;\n      return;\n    }\n    next = parser.GetNext();\n  }\n  let right = pairs[next];\n  if (arg && next !== '{') {\n    throw new TexError('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n  }\n  if (!right) {\n    let empty = parser.create('node', 'mrow');\n    parser.Push(ParseUtil.fenced(parser.configuration, open, empty, close));\n    parser.i = position;\n    return;\n  }\n  // Get the fences\n  if (named) {\n    const mml = parser.create('token', 'mi', {texClass: TEXCLASS.OP}, named);\n    if (variant) {\n      NodeUtil.setAttribute(mml, 'mathvariant', variant);\n    }\n    parser.Push(parser.itemFactory.create('fn', mml));\n  }\n  if (next === '{') {\n    let argument = parser.GetArgument(name);\n    next = arg ? open : '\\\\{';\n    right = arg ? close : '\\\\}';\n    // TODO: Make all these fenced expressions.\n    argument = star ? next + ' ' + argument + ' ' + right :\n      (big ?\n       '\\\\' + big + 'l' + next + ' ' + argument + ' ' + '\\\\' + big + 'r' + right :\n       '\\\\left' + next + ' ' + argument + ' ' + '\\\\right' + right);\n    parser.Push(new TexParser(argument, parser.stack.env,\n                              parser.configuration).mml());\n    return;\n  }\n  if (arg) {\n    next = open;\n    right = close;\n  }\n  parser.i++;\n  parser.Push(parser.itemFactory.create('auto open')\n              .setProperties({open: next, close: right, big: big}));\n};\n\n\n/**\n * The evaluate macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.Eval = function(parser: TexParser, name: string) {\n  let star = parser.GetStar();\n  let next = parser.GetNext();\n  if (next === '{') {\n    let arg = parser.GetArgument(name);\n    let replace = '\\\\left. ' +\n      (star ? '\\\\smash{' + arg + '}' : arg) +\n      ' ' + '\\\\vphantom{\\\\int}\\\\right|';\n    parser.string = parser.string.slice(0, parser.i) + replace +\n      parser.string.slice(parser.i);\n    return;\n  }\n  if (next === '(' || next === '[') {\n    parser.i++;\n    parser.Push(parser.itemFactory.create('auto open')\n                .setProperties(\n                  {open: next, close: '|',\n                   smash: star, right: '\\\\vphantom{\\\\int}'}));\n    return;\n  }\n  throw new TexError('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n};\n\n\n/**\n * The anti/commutator and poisson macros.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string=} open Opening fence.\n * @param {string=} close Closing fence.\n */\nPhysicsMethods.Commutator = function(parser: TexParser, name: string,\n                                     open: string = '[', close: string = ']') {\n  let star = parser.GetStar();\n  let next = parser.GetNext();\n  let big = null;\n  if (next === '\\\\') {\n    parser.i++;\n    big = parser.GetCS();\n    if (!big.match(biggs)) {\n      // Actually a commutator error arg1 error.\n      throw new TexError('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n    }\n    next = parser.GetNext();\n  }\n  if (next !== '{') {\n    throw new TexError('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n  }\n  let arg1 = parser.GetArgument(name);\n  let arg2 = parser.GetArgument(name);\n  let argument = arg1 + ',' + arg2;\n  argument = star ? open + ' ' + argument + ' ' + close :\n    (big ?\n     '\\\\' + big + 'l' + open + ' ' + argument + ' ' + '\\\\' + big + 'r' + close :\n     '\\\\left' + open + ' ' + argument + ' ' + '\\\\right' + close);\n  parser.Push(new TexParser(argument, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n/***********************\n * Physics package section 2.2\n * Vector notation\n */\n\nlet latinCap: [number, number] = [0x41, 0x5A];\nlet latinSmall: [number, number] = [0x61, 0x7A];\nlet greekCap: [number, number] = [0x391, 0x3A9];\nlet greekSmall: [number, number] = [0x3B1, 0x3C9];\nlet digits: [number, number] = [0x30, 0x39];\n\n/**\n * Checks if a value is in a given numerical interval.\n * @param {number} value The value.\n * @param {[number, number]} range The closed interval.\n */\nfunction inRange(value: number, range: [number, number]) {\n  return (value >= range[0] && value <= range[1]);\n}\n\n\n/**\n * Method to create a token for the vector commands. It creates a vector token\n * with the specific vector font (e.g., bold) in case it is a Latin or capital\n * Greek character, accent or small Greek character if command is starred. This\n * is a replacement for the original token method in the node factory.\n * @param {NodeFactory} factory The current node factory.\n * @param {string} kind The type of token to create.\n * @param {any} def The attributes for the node.\n * @param {string} text The text contained in the token node.\n * @return {MmlNode} The newly create token node.\n */\nfunction createVectorToken(factory: NodeFactory, kind: string,\n                           def: any, text: string): MmlNode  {\n  let parser = factory.configuration.parser;\n  let token = NodeFactory.createToken(factory, kind, def, text);\n  let code: number = text.codePointAt(0);\n  if (text.length === 1 && !parser.stack.env.font &&\n      parser.stack.env.vectorFont &&\n      (inRange(code, latinCap) || inRange(code, latinSmall) ||\n       inRange(code, greekCap) || inRange(code, digits) ||\n       (inRange(code, greekSmall) && parser.stack.env.vectorStar) ||\n       NodeUtil.getAttribute(token, 'accent'))) {\n    NodeUtil.setAttribute(token, 'mathvariant', parser.stack.env.vectorFont);\n  }\n  return token;\n}\n\n\n/**\n * Bold vector notation.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.VectorBold = function(parser: TexParser, name: string) {\n  let star = parser.GetStar();\n  let arg = parser.GetArgument(name);\n  let oldToken = parser.configuration.nodeFactory.get('token');\n  let oldFont = parser.stack.env.font;\n  delete parser.stack.env.font;\n  parser.configuration.nodeFactory.set('token', createVectorToken);\n  parser.stack.env.vectorFont = star ? 'bold-italic' : 'bold';\n  parser.stack.env.vectorStar = star;\n  let node = new TexParser(arg, parser.stack.env, parser.configuration).mml();\n  if (oldFont) {\n    parser.stack.env.font = oldFont;\n  }\n  delete parser.stack.env.vectorFont;\n  delete parser.stack.env.vectorStar;\n  parser.configuration.nodeFactory.set('token', oldToken);\n  parser.Push(node);\n};\n\n\n/**\n * Macros that can have an optional star which is propagated.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {number} argcount Number of arguments.\n * @param {string[]} ...parts List of parts from which to assemble the macro.\n *     If the original command is starred, a star will be injected at each part.\n */\nPhysicsMethods.StarMacro = function(parser: TexParser, name: string,\n                                argcount: number, ...parts: string[]) {\n  let star = parser.GetStar();\n  const args: string[] = [];\n  if (argcount) {\n    for (let i = args.length; i < argcount; i++) {\n      args.push(parser.GetArgument(name));\n    }\n  }\n  let macro = parts.join(star ? '*' : '');\n  macro = ParseUtil.substituteArgs(parser, args, macro);\n  parser.string = ParseUtil.addArgs(parser, macro, parser.string.slice(parser.i));\n  parser.i = 0;\n  ParseUtil.checkMaxMacros(parser);\n};\n\n\n/**\n * Computes the application of a vector operation.\n * @param {TexParser} parser The calling parser.\n * @param {string} kind The type of stack item to parse the operator into.\n * @param {string} name The macro name.\n * @param {string} operator The operator expression.\n * @param {string[]} ...fences List of opening fences that should be\n *     automatically sized and paired to its corresponding closing fence.\n */\nlet vectorApplication = function(\n  parser: TexParser, kind: string, name: string, operator: string,\n  fences: string[]) {\n  let op = new TexParser(operator, parser.stack.env,\n                         parser.configuration).mml();\n  parser.Push(parser.itemFactory.create(kind, op));\n  let left = parser.GetNext();\n  let right = pairs[left];\n  if (!right) {\n    return;\n  }\n  let lfence = '', rfence = '', arg = '';\n  let enlarge = fences.indexOf(left) !== -1;\n  if (left === '{') {\n    arg = parser.GetArgument(name);\n    lfence = enlarge ? '\\\\left\\\\{' : '';\n    rfence = enlarge ? '\\\\right\\\\}' : '';\n    let macro = lfence + ' ' + arg + ' ' + rfence;\n    parser.string = macro + parser.string.slice(parser.i);\n    parser.i = 0;\n    return;\n  }\n  if (!enlarge) {\n    return;\n  }\n  parser.i++;\n  parser.Push(parser.itemFactory.create('auto open')\n              .setProperties({open: left, close: right}));\n};\n\n\n/**\n * An operator that needs to be parsed (e.g., a Greek letter or nabla) and\n * applied to a possibly fenced expression. By default automatic fences are\n * parentheses and brakets, with braces being ignored.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} operator The operator expression.\n * @param {string[]} ...fences List of opening fences that should be\n *     automatically sized and paired to its corresponding closing fence.\n */\nPhysicsMethods.OperatorApplication = function(\n  parser: TexParser, name: string, operator: string,\n  ...fences: string[]) {\n  vectorApplication(parser, 'fn', name, operator, fences);\n};\n\n/**\n * A vector operator that needs to be parsed (e.g., a Greek letter or nabla with\n * a crossproduct) and connected to a possibly fenced expression. By default\n * automatic fences are parentheses and brakets.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} operator The operator expression.\n * @param {string[]} ...fences List of opening fences that should be\n *     automatically sized and paired to its corresponding closing fence.\n */\nPhysicsMethods.VectorOperator = function(\n  parser: TexParser, name: string, operator: string,\n  ...fences: string[]) {\n  vectorApplication(parser, 'mml', name, operator, fences);\n};\n\n\n/***********************\n * Physics package section 2.3\n * Operators\n */\n\n/**\n * Operator expression with automatic fences and optional exponent.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {boolean=} opt Set to false if no optional exponent is allowed.\n * @param {string=} id The name of the function if different from name.\n */\nPhysicsMethods.Expression = function(parser: TexParser, name: string,\n                                     opt: boolean = true, id: string = '') {\n  id = id || name.slice(1);\n  const exp = opt ? parser.GetBrackets(name) : null;\n  let mml = parser.create('token', 'mi', {texClass: TEXCLASS.OP}, id);\n  if (exp) {\n    const sup = new TexParser(exp,\n                              parser.stack.env, parser.configuration).mml();\n    mml = parser.create('node', 'msup', [mml, sup]);\n  }\n  parser.Push(parser.itemFactory.create('fn', mml));\n  if (parser.GetNext() !== '(') {\n    return;\n  }\n  parser.i++;\n  parser.Push(parser.itemFactory.create('auto open')\n              .setProperties({open: '(', close: ')'}));\n};\n\n\n/***********************\n * Physics package section 2.4\n * Quick quad text\n */\n\n/**\n * Quad text macros.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} text The text that is to be padded with quad spaces.\n */\nPhysicsMethods.Qqtext = function(parser: TexParser, name: string,\n                                 text: string) {\n  let star = parser.GetStar();\n  let arg = text ? text : parser.GetArgument(name);\n  let replace = (star ? '' : '\\\\quad') + '\\\\text{' + arg + '}\\\\quad ';\n  parser.string = parser.string.slice(0, parser.i) + replace +\n    parser.string.slice(parser.i);\n};\n\n\n/***********************\n * Physics package section 2.5\n * Derivatives\n */\n\n/**\n * The differential and variation macros.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} op The operator. It will be parsed.\n */\nPhysicsMethods.Differential = function(parser: TexParser, name: string,\n                                       op: string) {\n  const optArg = parser.GetBrackets(name);\n  const power = optArg != null ? '^{' + optArg + '}' : ' ';\n  const parens = parser.GetNext() === '(';\n  const braces = parser.GetNext() === '{';\n  let macro = op + power;\n  if (!(parens || braces)) {\n    macro += parser.GetArgument(name, true) || '';\n    let mml = new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml();\n    parser.Push(mml);\n    return;\n  }\n  if (braces) {\n    macro += parser.GetArgument(name);\n    const mml = new TexParser(macro, parser.stack.env,\n                              parser.configuration).mml();\n    parser.Push(parser.create('node', 'TeXAtom', [mml], {texClass: TEXCLASS.OP}));\n    return;\n  }\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n  parser.i++;\n  parser.Push(parser.itemFactory.create('auto open')\n              .setProperties({open: '(', close: ')'}));\n};\n\n\n/**\n * The derivative macro. Its behaviour depends on the number of arguments\n * provided. In case of\n * 1 argument: will be part of the denominator.\n * 2 arguments: argument one is numerator, argument two is denominator.\n * 3+ arguments: arguments above 2 will be part of the denominator and the\n *   exponent of the enumerator will depend on the number of denominator\n *   arguments. In particular, the optional exponent argument will be ignored!\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {number} argMax The maximum number of arguments for the macro.\n * @param {string} op The derivative operator.\n */\nPhysicsMethods.Derivative = function(parser: TexParser, name: string,\n                                     argMax: number, op: string) {\n  const star = parser.GetStar();\n  const optArg = parser.GetBrackets(name);\n  let argCounter = 1;\n  const args = [];\n  args.push(parser.GetArgument(name));\n  while (parser.GetNext() === '{' && argCounter < argMax) {\n    args.push(parser.GetArgument(name));\n    argCounter++;\n  }\n  let ignore = false;\n  let power1 = ' ';\n  let power2 = ' ';\n  if (argMax > 2 && args.length > 2) {\n    power1 = '^{' + (args.length - 1) + '}';\n    ignore = true;\n  } else if (optArg != null) {\n    if (argMax > 2 && args.length > 1) {\n      ignore = true;\n    }\n    power1 = '^{' + optArg + '}';\n    power2 = power1;\n  }\n  const frac = star ? '\\\\flatfrac' : '\\\\frac';\n  const first = args.length > 1 ? args[0] : '';\n  const second = args.length > 1 ? args[1] : args[0];\n  let rest = '';\n  for (let i = 2, arg; arg = args[i]; i++) {\n    rest += op + ' ' + arg;\n  }\n  const macro = frac + '{' + op + power1 + first + '}' +\n    '{' + op + ' ' + second + power2 + ' ' + rest + '}';\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n  if (parser.GetNext() === '(') {\n    parser.i++;\n    parser.Push(parser.itemFactory.create('auto open')\n                .setProperties({open: '(', close: ')', ignore: ignore}));\n  }\n};\n\n\n/***********************\n * Physics package section 2.6\n * Dirac bra-ket notation\n */\n\n/**\n * The bra macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.Bra = function(parser: TexParser, name: string) {\n  let starBra = parser.GetStar();\n  let bra = parser.GetArgument(name);\n  let ket = '';\n  let hasKet = false;\n  let starKet = false;\n  if (parser.GetNext() === '\\\\') {\n    let saveI = parser.i;\n    parser.i++;\n    // This ensures that bra-ket also works if \\let bound versions of \\ket.\n    let cs = parser.GetCS();\n    let symbol = parser.lookup('macro', cs) as Macro;\n    if (symbol && symbol.symbol === 'ket') {\n      hasKet = true;\n      saveI = parser.i;\n      starKet = parser.GetStar();\n      if (parser.GetNext() === '{') {\n        ket = parser.GetArgument(cs, true);\n      } else {\n        parser.i = saveI;\n        starKet = false;\n      }\n    } else {\n      parser.i = saveI;\n    }\n  }\n  let macro = '';\n  if (hasKet) {\n    macro = (starBra || starKet) ?\n    `\\\\langle{${bra}}\\\\vert{${ket}}\\\\rangle` :\n      `\\\\left\\\\langle{${bra}}\\\\middle\\\\vert{${ket}}\\\\right\\\\rangle`;\n  } else {\n    macro = (starBra || starKet) ?\n    `\\\\langle{${bra}}\\\\vert` : `\\\\left\\\\langle{${bra}}\\\\right\\\\vert{${ket}}`;\n  }\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n/**\n * The ket macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.Ket = function(parser: TexParser, name: string) {\n  let star = parser.GetStar();\n  let ket = parser.GetArgument(name);\n  let macro = star ? `\\\\vert{${ket}}\\\\rangle` :\n    `\\\\left\\\\vert{${ket}}\\\\right\\\\rangle`;\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n/**\n * The braket macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.BraKet = function(parser: TexParser, name: string) {\n  let star = parser.GetStar();\n  let bra = parser.GetArgument(name);\n  let ket = null;\n  if (parser.GetNext() === '{') {\n    ket = parser.GetArgument(name, true);\n  }\n  let macro = '';\n  if (ket == null) {\n    macro = star ?\n      `\\\\langle{${bra}}\\\\vert{${bra}}\\\\rangle` :\n      `\\\\left\\\\langle{${bra}}\\\\middle\\\\vert{${bra}}\\\\right\\\\rangle`;\n  } else {\n    macro = star ?\n      `\\\\langle{${bra}}\\\\vert{${ket}}\\\\rangle` :\n      `\\\\left\\\\langle{${bra}}\\\\middle\\\\vert{${ket}}\\\\right\\\\rangle`;\n  }\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n/**\n * The ketbra macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.KetBra = function(parser: TexParser, name: string) {\n  let star = parser.GetStar();\n  let ket = parser.GetArgument(name);\n  let bra = null;\n  if (parser.GetNext() === '{') {\n    bra = parser.GetArgument(name, true);\n  }\n  let macro = '';\n  if (bra == null) {\n    macro = star ?\n      `\\\\vert{${ket}}\\\\rangle\\\\!\\\\langle{${ket}}\\\\vert` :\n      `\\\\left\\\\vert{${ket}}\\\\middle\\\\rangle\\\\!\\\\middle\\\\langle{${ket}}\\\\right\\\\vert`;\n  } else {\n    macro = star ?\n      `\\\\vert{${ket}}\\\\rangle\\\\!\\\\langle{${bra}}\\\\vert` :\n      `\\\\left\\\\vert{${ket}}\\\\middle\\\\rangle\\\\!\\\\middle\\\\langle{${bra}}\\\\right\\\\vert`;\n  }\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n/**\n * Generates the expanded braket LaTeX code for matrix operations.\n * @param {[string, string, string]} [arg1, arg2, arg3] The three arguments\n *     <arg1|arg2|arg3>.\n * @param {boolean} star1 No automatic sizing of fences.\n * @param {boolean} star2 Automatic sizing of fences wrt. to arg1 & arg3 only.\n */\nfunction outputBraket([arg1, arg2, arg3]: [string, string, string],\n                      star1: boolean, star2: boolean) {\n  return (star1 && star2) ?\n    `\\\\left\\\\langle{${arg1}}\\\\middle\\\\vert{${arg2}}\\\\middle\\\\vert{${arg3}}\\\\right\\\\rangle` :\n    (star1 ? `\\\\langle{${arg1}}\\\\vert{${arg2}}\\\\vert{${arg3}}\\\\rangle` :\n     `\\\\left\\\\langle{${arg1}}\\\\right\\\\vert{${arg2}}\\\\left\\\\vert{${arg3}}\\\\right\\\\rangle`);\n}\n\n\n/**\n * The expectation value macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.Expectation = function(parser: TexParser, name: string) {\n  let star1 = parser.GetStar();\n  let star2 = star1 && parser.GetStar();\n  let arg1 = parser.GetArgument(name);\n  let arg2 = null;\n  if (parser.GetNext() === '{') {\n    arg2 = parser.GetArgument(name, true);\n  }\n  let macro = (arg1 && arg2) ?\n    outputBraket([arg2, arg1, arg2], star1, star2) :\n    // Braces for semantics, similar to braket package.\n    (star1 ? `\\\\langle {${arg1}} \\\\rangle` :\n     `\\\\left\\\\langle {${arg1}} \\\\right\\\\rangle`);\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n/**\n * The matrix element macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.MatrixElement = function(parser: TexParser, name: string) {\n  const star1 = parser.GetStar();\n  const star2 = star1 && parser.GetStar();\n  const arg1 = parser.GetArgument(name);\n  const arg2 = parser.GetArgument(name);\n  const arg3 = parser.GetArgument(name);\n  const macro = outputBraket([arg1, arg2, arg3], star1, star2);\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n\n/********************\n * Physics package Section 2.7\n * Matrix macros\n */\n/**\n * The matrix quantity macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {boolean=} small Use small matrix.\n */\nPhysicsMethods.MatrixQuantity = function(parser: TexParser, name: string, small?: boolean) {\n  const star = parser.GetStar();\n  const next = parser.GetNext();\n  const array = small ? 'smallmatrix' : 'array';\n  let arg = '';\n  let open = '';\n  let close = '';\n  switch (next) {\n  case '{':\n    arg = parser.GetArgument(name);\n    break;\n  case '(':\n    parser.i++;\n    open = star ? '\\\\lgroup' : '(';\n    close = star ? '\\\\rgroup' : ')';\n    arg = parser.GetUpTo(name, ')');\n    break;\n  case '[':\n    parser.i++;\n    open = '[';\n    close = ']';\n    arg = parser.GetUpTo(name, ']');\n    break;\n  case '|':\n    parser.i++;\n    open = '|';\n    close = '|';\n    arg = parser.GetUpTo(name, '|');\n    break;\n  default:\n    open = '(';\n    close = ')';\n    break;\n  }\n  const macro = (open ? '\\\\left' : '') + open +\n    '\\\\begin{' + array + '}{} ' + arg + '\\\\end{' + array + '}' +\n    (open ? '\\\\right' : '') + close;\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n/**\n * Generation of identity matrices.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.IdentityMatrix = function(parser: TexParser, name: string) {\n  const arg = parser.GetArgument(name);\n  const size = parseInt(arg, 10);\n  if (isNaN(size)) {\n    throw new TexError('InvalidNumber', 'Invalid number');\n  }\n  if (size <= 1) {\n    parser.string = '1' + parser.string.slice(parser.i);\n    parser.i = 0;\n    return;\n  }\n  let zeros = Array(size).fill('0');\n  let columns = [];\n  for (let i = 0; i < size; i++) {\n    let row = zeros.slice();\n    row[i] = '1';\n    columns.push(row.join(' & '));\n  }\n  parser.string = columns.join('\\\\\\\\ ') + parser.string.slice(parser.i);\n  parser.i = 0;\n};\n\n\n/**\n * Generation of matrices with fixed value.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.XMatrix = function(parser: TexParser, name: string) {\n  const star = parser.GetStar();\n  const arg1 = parser.GetArgument(name);\n  const arg2 = parser.GetArgument(name);\n  const arg3 = parser.GetArgument(name);\n  let n = parseInt(arg2, 10);\n  let m = parseInt(arg3, 10);\n  if (isNaN(n) || isNaN(m) || m.toString() !== arg3 || n.toString() !== arg2) {\n    throw new TexError('InvalidNumber', 'Invalid number');\n  }\n  n = n < 1 ? 1 : n;\n  m = m < 1 ? 1 : m;\n  // Elements\n  if (!star) {\n    const row = Array(m).fill(arg1).join(' & ');\n    const matrix = Array(n).fill(row).join('\\\\\\\\ ');\n    parser.string = matrix + parser.string.slice(parser.i);\n    parser.i = 0;\n    return;\n  }\n  let matrix = '';\n  if (n === 1 && m === 1) {\n    // Case 1: n=m=1, no index.\n    matrix = arg1;\n  } else if (n === 1) {\n    // Case 2: n=1, row vector, single index.\n    let row = [];\n    for (let i = 1; i <= m; i++) {\n      row.push(`${arg1}_{${i}}`);\n    }\n    matrix = row.join(' & ');\n  } else if (m === 1) {\n    // Case 3: m=1, column vector, single index.\n    let row = [];\n    for (let i = 1; i <= n; i++) {\n      row.push(`${arg1}_{${i}}`);\n    }\n    matrix = row.join('\\\\\\\\ ');\n  } else {\n    // Case 4: matrix, double index. Note the extra mrows for indices.\n    let rows = [];\n    for (let i = 1; i <= n; i++) {\n      let row = [];\n      for (let j = 1; j <= m; j++) {\n        row.push(`${arg1}_{{${i}}{${j}}}`);\n      }\n      rows.push(row.join(' & '));\n    }\n    matrix = rows.join('\\\\\\\\ ');\n  }\n  parser.string = matrix + parser.string.slice(parser.i);\n  parser.i = 0;\n  return;\n};\n\n\n/**\n * Generation of Pauli matrices. Matrix 0 is the 2x2 identity.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.PauliMatrix = function(parser: TexParser, name: string) {\n  const arg = parser.GetArgument(name);\n  let matrix = arg.slice(1);\n  switch (arg[0]) {\n  case '0':\n    matrix += ' 1 & 0\\\\\\\\ 0 & 1';\n    break;\n  case '1':\n  case 'x':\n    matrix += ' 0 & 1\\\\\\\\ 1 & 0';\n    break;\n  case '2':\n  case 'y':\n    matrix += ' 0 & -i\\\\\\\\ i & 0';\n    break;\n  case '3':\n  case 'z':\n    matrix += ' 1 & 0\\\\\\\\ 0 & -1';\n    break;\n  default:\n  }\n  parser.string = matrix + parser.string.slice(parser.i);\n  parser.i = 0;\n};\n\n\n/**\n * Generation of anti/diagonal matrices.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {boolean=} anti True if constructing anti-diagonal matrix.\n */\nPhysicsMethods.DiagonalMatrix = function(parser: TexParser, name: string,\n                                         anti?: boolean) {\n  if (parser.GetNext() !== '{') {\n    return;\n  }\n  let startI = parser.i;\n  /* let arg =*/ parser.GetArgument(name);\n  let endI = parser.i;\n  parser.i = startI + 1;\n  let elements = [];\n  let element = '';\n  let currentI = parser.i;\n  while (currentI < endI) {\n    try {\n      element = parser.GetUpTo(name, ',');\n    } catch (e) {\n      parser.i = endI;\n      elements.push(parser.string.slice(currentI, endI - 1));\n      break;\n    }\n    if (parser.i >= endI) {\n      elements.push(parser.string.slice(currentI, endI));\n      break;\n    }\n    currentI = parser.i;\n    elements.push(element);\n  }\n  parser.string = makeDiagMatrix(elements, anti) + parser.string.slice(endI);\n  parser.i = 0;\n};\n\n\n/**\n * Creates the a (anti)diagonal matrix string.\n * @param {string[]} elements The elements on the diagonal.\n * @param {boolean} anti True if constructing anti-diagonal matrix.\n */\nfunction makeDiagMatrix(elements: string[], anti: boolean) {\n  let length = elements.length;\n  let matrix = [];\n  for (let i = 0; i < length; i++) {\n    matrix.push(Array(anti ? length - i : i + 1).join('&') +\n                '\\\\mqty{' + elements[i] + '}');\n  }\n  return matrix.join('\\\\\\\\ ');\n}\n\n\n/**\n * Closes an automatic fence if one was opened.\n * @param {TexParser} parser The calling parser.\n * @param {string} fence The fence.\n * @param {number} texclass The TeX class.\n */\nPhysicsMethods.AutoClose = function(parser: TexParser, fence: string, _texclass: number) {\n  const mo = parser.create('token', 'mo', {stretchy: false}, fence);\n  const item = parser.itemFactory.create('mml', mo).\n    setProperties({autoclose: fence});\n  parser.Push(item);\n};\n\n\n/**\n * Generates the vector nabla depending on the arrowdel option.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.Vnabla = function(parser: TexParser, _name: string) {\n  let argument = parser.options.physics.arrowdel ?\n    '\\\\vec{\\\\gradientnabla}' : '{\\\\gradientnabla}';\n  return parser.Push(new TexParser(argument, parser.stack.env,\n                                   parser.configuration).mml());\n};\n\n\n/**\n * Generates the differential d depending on the italicdiff option.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.DiffD = function(parser: TexParser, _name: string) {\n  let argument = parser.options.physics.italicdiff ? 'd' : '{\\\\rm d}';\n  return parser.Push(new TexParser(argument, parser.stack.env,\n                                   parser.configuration).mml());\n};\n\n\n/**\n *  Methods taken from Base package.\n */\nPhysicsMethods.Macro = BaseMethods.Macro;\n\nPhysicsMethods.NamedFn = BaseMethods.NamedFn;\n\nPhysicsMethods.Array = BaseMethods.Array;\n\n\nexport default PhysicsMethods;\n","/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the setoptions package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {Configuration, ConfigurationHandler, ParserConfiguration} from '../Configuration.js';\nimport {TeX} from '../../tex.js';\nimport TexParser from '../TexParser.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport TexError from '../TexError.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {Macro} from '../Symbol.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport {expandable, isObject} from '../../../util/Options.js';\n\nexport const SetOptionsUtil = {\n\n  /**\n   * Check if options can be set for a given pacakge, and error otherwise.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} extension   The name of the package whose option is being set.\n   * @return {boolean}           True when options can be set for this package.\n   */\n  filterPackage(parser: TexParser, extension: string): boolean {\n    if (extension !== 'tex' && !ConfigurationHandler.get(extension)) {\n      throw new TexError('NotAPackage', 'Not a defined package: %1', extension);\n    }\n    const config = parser.options.setoptions;\n    const options = config.allowOptions[extension];\n    if ((options === undefined && !config.allowPackageDefault) || options === false) {\n      throw new TexError('PackageNotSettable', 'Options can\\'t be set for package \"%1\"', extension);\n    }\n    return true;\n  },\n\n  /**\n   * Check if an option can be set and error otherwise.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} extension   The name of the package whose option is being set.\n   * @param {string} option      The name of the option being set.\n   * @return {boolean}           True when the option can be set.\n   */\n  filterOption(parser: TexParser, extension: string, option: string): boolean {\n    const config = parser.options.setoptions;\n    const options = config.allowOptions[extension] || {};\n    const allow = (options.hasOwnProperty(option) && !isObject(options[option]) ? options[option] : null);\n    if (allow === false || (allow === null && !config.allowOptionsDefault)) {\n      throw new TexError('OptionNotSettable', 'Option \"%1\" is not allowed to be set', option);\n    }\n    if (!(extension === 'tex' ? parser.options : parser.options[extension])?.hasOwnProperty(option)) {\n      if (extension === 'tex') {\n        throw new TexError('InvalidTexOption', 'Invalid TeX option \"%1\"', option);\n      } else {\n        throw new TexError('InvalidOptionKey', 'Invalid option \"%1\" for package \"%2\"', option, extension);\n      }\n    }\n    return true;\n  },\n\n  /**\n   * Verify an option's value before setting it.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} extension   The name of the package whose option this is.\n   * @param {string} option      The name of the option being set.\n   * @param {string} value       The value to give to the option.\n   * @return {string}            The (possibly modified) value for the option\n   */\n  filterValue(_parser: TexParser, _extension: string, _option: string, value: string): string {\n    return value;\n  }\n\n};\n\nconst setOptionsMap = new CommandMap('setoptions', {\n  setOptions: 'SetOptions'\n}, {\n  /**\n   * Implements \\setOptions[package]{option-values}\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} name        The name of the macro being processed.\n   */\n  SetOptions(parser: TexParser, name: string) {\n    const extension = parser.GetBrackets(name) || 'tex';\n    const options = ParseUtil.keyvalOptions(parser.GetArgument(name));\n    const config = parser.options.setoptions;\n    if (!config.filterPackage(parser, extension)) return;\n    for (const key of Object.keys(options)) {\n      if (config.filterOption(parser, extension, key)) {\n        (extension === 'tex' ? parser.options : parser.options[extension])[key] =\n          config.filterValue(parser, extension, key, options[key]);\n      }\n    }\n  }\n});\n\n/**\n * If the require package is available, save the original require,\n *   and define a macro that loads the extension and sets\n *   its options, if any.\n *\n * @param {ParserConfiguration} config  The current configuration.\n * @param {TeX} jax                     The active tex input jax.\n */\nfunction setoptionsConfig(_config: ParserConfiguration, jax: TeX<any, any, any>) {\n  const require = jax.parseOptions.handlers.get('macro').lookup('require') as any;\n  if (require) {\n    setOptionsMap.add('Require', new Macro('Require', require._func));\n    setOptionsMap.add('require', new Macro('require', BaseMethods.Macro,\n                                           ['\\\\Require{#2}\\\\setOptions[#2]{#1}', 2, '']));\n  }\n}\n\nexport const SetOptionsConfiguration = Configuration.create(\n  'setoptions', {\n    handler: {macro: ['setoptions']},\n    config: setoptionsConfig,\n    priority: 3,  // must be less than the priority of the require package (which is 5).\n    options: {\n      setoptions: {\n        filterPackage: SetOptionsUtil.filterPackage,  // filter for whether a package can be configured\n        filterOption: SetOptionsUtil.filterOption,    // filter for whether an option can be set\n        filterValue: SetOptionsUtil.filterValue,      // filter for the value to assign to an option\n        allowPackageDefault: true,       // default for allowing packages when not explicitly set in allowOptions\n        allowOptionsDefault: true,       // default for allowing option that isn't explicitly set in allowOptions\n        allowOptions: expandable({       // list of packages to allow/disallow, and their options to allow/disallow\n          //\n          //  top-level tex items can be set, but not these\n          //    (that leaves digits and the tagging options)\n          //\n          tex: {\n            FindTeX: false,\n            formatError: false,\n            package: false,\n            baseURL: false,\n            tags: false,\n            maxBuffer: false,\n            maxMaxros: false,\n            macros: false,\n            environments: false\n          },\n          //\n          // These packages can't be configured at all\n          //\n          setoptions: false,\n          autoload: false,\n          require: false,\n          configmacros: false,\n          tagformat: false\n        })\n      }\n    }\n  }\n);\n","/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview    Configuration file for the tagformat package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport {TeX} from '../../tex.js';\nimport {AbstractTags, TagsFactory} from '../Tags.js';\n\n/**\n * Number used to make tag class unique (each TeX input has to have its own because\n *  it needs access to the parse options)\n */\nlet tagID = 0;\n\n/**\n * Configure a class to use for the tag handler that uses the input jax's options\n *   to control the formatting of the tags\n * @param {Configuration} config   The configuration for the input jax\n * @param {TeX} jax                The TeX input jax\n */\nexport function tagformatConfig(config: ParserConfiguration, jax: TeX<any, any, any>) {\n\n  /**\n   * If the tag format is being added by one of the other extensions,\n   *   as is done for the 'ams' tags, make sure it is defined so we can create it.\n   */\n  const tags = jax.parseOptions.options.tags;\n  if (tags !== 'base' && config.tags.hasOwnProperty(tags)) {\n    TagsFactory.add(tags, config.tags[tags]);\n  }\n\n  /**\n   * The original tag class to be extended (none, ams, or all)\n   */\n  const TagClass = TagsFactory.create(jax.parseOptions.options.tags).constructor as typeof AbstractTags;\n\n  /**\n   * A Tags object that uses the input jax options to perform the formatting\n   *\n   * Note:  We have to make a new class for each input jax since the format\n   * methods don't have access to the input jax, and hence to its options.\n   * If they did, we would use a common configTags class instead.\n   */\n  class TagFormat extends TagClass {\n\n    /**\n     * @override\n     */\n    public formatNumber(n: number) {\n      return jax.parseOptions.options.tagformat.number(n);\n    }\n\n    /**\n     * @override\n     */\n    public formatTag(tag: string) {\n      return jax.parseOptions.options.tagformat.tag(tag);\n    }\n\n    /**\n     * @override\n     */\n    public formatId(id: string) {\n      return jax.parseOptions.options.tagformat.id(id);\n    }\n\n    /**\n     * @override\n     */\n    public formatUrl(id: string, base: string) {\n      return jax.parseOptions.options.tagformat.url(id, base);\n    }\n  }\n\n  //\n  //  Get a unique name for the tag class (since it is tied to the input jax)\n  //  Note:  These never get freed, so they will accumulate if you create many\n  //  TeX input jax instances with this extension.\n  //\n  tagID++;\n  const tagName = 'configTags-' + tagID;\n  //\n  // Register the tag class\n  //\n  TagsFactory.add(tagName, TagFormat);\n  jax.parseOptions.options.tags = tagName;\n}\n\n/**\n * The configuration object for configTags\n */\nexport const TagFormatConfiguration = Configuration.create(\n  'tagformat', {\n    config: [tagformatConfig, 10],\n    options: {\n      tagformat: {\n        number: (n: number) => n.toString(),\n        tag:    (tag: string) => '(' + tag + ')',\n        id:     (id: string) => 'mjx-eqn:' + id.replace(/\\s/g, '_'),\n        url:    (id: string, base: string) => base + '#' + encodeURIComponent(id),\n      }\n    }\n  }\n);\n","/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the textcomp package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport './TextcompMappings.js';\n\n\nexport const TextcompConfiguration = Configuration.create(\n  'textcomp', {\n    handler: {macro: ['textcomp-macros']}\n  }\n);\n\n","/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for the textcomp package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {CommandMap} from '../SymbolMap.js';\nimport {TexConstant} from '../TexConstants.js';\nimport {TextMacrosMethods} from '../textmacros/TextMacrosMethods.js';\nimport TexParser from '../TexParser.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {TextParser} from '../textmacros/TextParser.js';\n\n\n/**\n * Identifiers from the Textcomp package.\n */\nnew CommandMap('textcomp-macros', {\n\n  // Table 3: Predefined LATEX 2ε Text-Mode Commands\n  'textasciicircum':     ['Insert', '\\u005E'],\n  'textasciitilde':      ['Insert', '\\u007E'],\n  'textasteriskcentered': ['Insert', '\\u002A'],\n  'textbackslash':       ['Insert', '\\u005C'],\n  'textbar':             ['Insert', '\\u007C'],\n  'textbraceleft':       ['Insert', '\\u007B'],\n  'textbraceright':      ['Insert', '\\u007D'],\n  'textbullet':          ['Insert', '\\u2022'],\n  'textdagger':          ['Insert', '\\u2020'],\n  'textdaggerdbl':       ['Insert', '\\u2021'],\n  'textellipsis':        ['Insert', '\\u2026'],\n  'textemdash':          ['Insert', '\\u2014'],\n  'textendash':          ['Insert', '\\u2013'],\n  'textexclamdown':      ['Insert', '\\u00A1'],\n  'textgreater':         ['Insert', '\\u003E'],\n  'textless':            ['Insert', '\\u003C'],\n  'textordfeminine':     ['Insert', '\\u00AA'],\n  'textordmasculine':    ['Insert', '\\u00BA'],\n  'textparagraph':       ['Insert', '\\u00B6'],\n  'textperiodcentered':  ['Insert', '\\u00B7'],\n  'textquestiondown':    ['Insert', '\\u00BF'],\n  'textquotedblleft':    ['Insert', '\\u201C'],\n  'textquotedblright':   ['Insert', '\\u201D'],\n  'textquoteleft':       ['Insert', '\\u2018'],\n  'textquoteright':      ['Insert', '\\u2019'],\n  'textsection':         ['Insert', '\\u00A7'],\n  'textunderscore':      ['Insert', '\\u005F'],\n  'textvisiblespace':    ['Insert', '\\u2423'],\n\n  // Table 12: textcomp Diacritics\n  'textacutedbl':        ['Insert', '\\u02DD'],\n  'textasciiacute':      ['Insert', '\\u00B4'],\n  'textasciibreve':      ['Insert', '\\u02D8'],\n  'textasciicaron':      ['Insert', '\\u02C7'],\n  'textasciidieresis':   ['Insert', '\\u00A8'],\n  'textasciimacron':     ['Insert', '\\u00AF'],\n  'textgravedbl':        ['Insert', '\\u02F5'],\n  'texttildelow':        ['Insert', '\\u02F7'],\n\n  // Table 13: textcomp Currency Symbols\n  'textbaht':            ['Insert', '\\u0E3F'],\n  'textcent':            ['Insert', '\\u00A2'],\n  'textcolonmonetary':   ['Insert', '\\u20A1'],\n  'textcurrency':        ['Insert', '\\u00A4'],\n  'textdollar':          ['Insert', '\\u0024'],\n  'textdong':            ['Insert', '\\u20AB'],\n  'texteuro':            ['Insert', '\\u20AC'],\n  'textflorin':          ['Insert', '\\u0192'],\n  'textguarani':         ['Insert', '\\u20B2'],\n  'textlira':            ['Insert', '\\u20A4'],\n  'textnaira':           ['Insert', '\\u20A6'],\n  'textpeso':            ['Insert', '\\u20B1'],\n  'textsterling':        ['Insert', '\\u00A3'],\n  'textwon':             ['Insert', '\\u20A9'],\n  'textyen':             ['Insert', '\\u00A5'],\n\n  // Table 15: textcomp Legal Symbols\n  'textcircledP':        ['Insert', '\\u2117'],\n  'textcompwordmark':    ['Insert', '\\u200C'],\n  'textcopyleft':        ['Insert', '\\u{1F12F}'],\n  'textcopyright':       ['Insert', '\\u00A9'],\n  'textregistered':      ['Insert', '\\u00AE'],\n  'textservicemark':     ['Insert', '\\u2120'],\n  'texttrademark':       ['Insert', '\\u2122'],\n\n  // Table 20: Miscellaneous textcomp Symbol\n  'textbardbl':          ['Insert', '\\u2016'],\n  'textbigcircle':       ['Insert', '\\u25EF'],\n  'textblank':           ['Insert', '\\u2422'],\n  'textbrokenbar':       ['Insert', '\\u00A6'],\n  'textdiscount':        ['Insert', '\\u2052'],\n  'textestimated':       ['Insert', '\\u212E'],\n  'textinterrobang':     ['Insert', '\\u203D'],\n  'textinterrobangdown': ['Insert', '\\u2E18'],\n  'textmusicalnote':     ['Insert', '\\u266A'],\n  'textnumero':          ['Insert', '\\u2116'],\n  'textopenbullet':      ['Insert', '\\u25E6'],\n  'textpertenthousand':  ['Insert', '\\u2031'],\n  'textperthousand':     ['Insert', '\\u2030'],\n  'textrecipe':          ['Insert', '\\u211E'],\n  'textreferencemark':   ['Insert', '\\u203B'],\n  // 'textthreequartersemdash'\n  // 'texttwelveudash'\n\n  // Table 51: textcomp Text-Mode Delimiters\n  'textlangle':          ['Insert', '\\u2329'],\n  'textrangle':          ['Insert', '\\u232A'],\n  'textlbrackdbl':       ['Insert', '\\u27E6'],\n  'textrbrackdbl':       ['Insert', '\\u27E7'],\n  'textlquill':          ['Insert', '\\u2045'],\n  'textrquill':          ['Insert', '\\u2046'],\n\n  // Table 62: textcomp Text-Mode Math and Science Symbols\n  'textcelsius':         ['Insert', '\\u2103'],\n  'textdegree':          ['Insert', '\\u00B0'],\n  'textdiv':             ['Insert', '\\u00F7'],\n  'textdownarrow':       ['Insert', '\\u2193'],\n  'textfractionsolidus': ['Insert', '\\u2044'],\n  'textleftarrow':       ['Insert', '\\u2190'],\n  'textlnot':            ['Insert', '\\u00AC'],\n  'textmho':             ['Insert', '\\u2127'],\n  'textminus':           ['Insert', '\\u2212'],\n  'textmu':              ['Insert', '\\u00B5'],\n  'textohm':             ['Insert', '\\u2126'],\n  'textonehalf':         ['Insert', '\\u00BD'],\n  'textonequarter':      ['Insert', '\\u00BC'],\n  'textonesuperior':     ['Insert', '\\u00B9'],\n  'textpm':              ['Insert', '\\u00B1'],\n  'textrightarrow':      ['Insert', '\\u2192'],\n  'textsurd':            ['Insert', '\\u221A'],\n  'textthreequarters':   ['Insert', '\\u00BE'],\n  'textthreesuperior':   ['Insert', '\\u00B3'],\n  'texttimes':           ['Insert', '\\u00D7'],\n  'texttwosuperior':     ['Insert', '\\u00B2'],\n  'textuparrow':         ['Insert', '\\u2191'],\n\n  // Table 110: textcomp Genealogical Symbols\n  'textborn':            ['Insert', '\\u002A'],\n  'textdied':            ['Insert', '\\u2020'],\n  'textdivorced':        ['Insert', '\\u26AE'],\n  //  'textleaf'\n  'textmarried':         ['Insert', '\\u26AD'],\n\n  // This is not the correct glyph\n  'textcentoldstyle':    ['Insert', '\\u00A2', TexConstant.Variant.OLDSTYLE],\n  // This is not the correct glyph\n  'textdollaroldstyle':  ['Insert', '\\u0024', TexConstant.Variant.OLDSTYLE],\n\n  // Table 16: textcomp Old-Style Numerals\n  'textzerooldstyle':    ['Insert', '0', TexConstant.Variant.OLDSTYLE],\n  'textoneoldstyle':     ['Insert', '1', TexConstant.Variant.OLDSTYLE],\n  'texttwooldstyle':     ['Insert', '2', TexConstant.Variant.OLDSTYLE],\n  'textthreeoldstyle':   ['Insert', '3', TexConstant.Variant.OLDSTYLE],\n  'textfouroldstyle':    ['Insert', '4', TexConstant.Variant.OLDSTYLE],\n  'textfiveoldstyle':    ['Insert', '5', TexConstant.Variant.OLDSTYLE],\n  'textsixoldstyle':     ['Insert', '6', TexConstant.Variant.OLDSTYLE],\n  'textsevenoldstyle':   ['Insert', '7', TexConstant.Variant.OLDSTYLE],\n  'texteightoldstyle':   ['Insert', '8', TexConstant.Variant.OLDSTYLE],\n  'textnineoldstyle':    ['Insert', '9', TexConstant.Variant.OLDSTYLE]\n}, {\n  Insert: function(parser: TexParser, name: string, c: string, font: string) {\n    if (parser instanceof TextParser) {\n      if (!font) {\n        TextMacrosMethods.Insert(parser, name, c);\n        return;\n      }\n      parser.saveText();\n    }\n    parser.Push(ParseUtil.internalText(\n      parser, c, font ? {mathvariant: font} : {}));\n  }\n});\n","/*************************************************************\n *\n *  Copyright (c) 2020-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the textmacros package\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {TeX} from '../../tex.js';\nimport TexParser from '../TexParser.js';\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport ParseOptions from '../ParseOptions.js';\nimport {TagsFactory} from '../Tags.js';\nimport {StartItem, StopItem, MmlItem, StyleItem} from '../base/BaseItems.js';\nimport {TextParser} from './TextParser.js';\nimport {TextMacrosMethods} from './TextMacrosMethods.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\n\nimport './TextMacrosMappings.js';\n\n/**\n *  The base text macro configuration (used in the TextParser)\n */\nexport const TextBaseConfiguration = Configuration.create('text-base', {\n  parser: 'text',\n  handler: {\n    character: ['command', 'text-special'],\n    macro: ['text-macros']\n  },\n  fallback: {\n    //\n    // Unknown characters are added to the text verbatim\n    //\n    character: (parser: TextParser, c: string) => {\n      parser.text += c;\n    },\n    //\n    // For unknown macros, if they are defined in the main TeX parser\n    //   and not string-replacement macros, give an error, otherwise\n    //   run the macro (this either does the string replacement or\n    //   produces the error as configured in the main TeX parser, so\n    //   this will respect the noundefined package, if loaded).\n    //\n    macro: (parser: TextParser, name: string) => {\n      const texParser = parser.texParser;\n      const macro = texParser.lookup('macro', name);\n      if (macro && macro._func !== TextMacrosMethods.Macro) {\n        parser.Error('MathMacro', '%1 is only supported in math mode', '\\\\' + name);\n      }\n      texParser.parse('macro', [parser, name]);\n    }\n  },\n  items: {\n    [StartItem.prototype.kind]: StartItem,\n    [StopItem.prototype.kind]: StopItem,\n    [MmlItem.prototype.kind]: MmlItem,\n    [StyleItem.prototype.kind]: StyleItem     // needed for \\color\n  }\n});\n\n/**\n * Replacement for ParseUtil.internalMath that handles text-mode macros.\n *\n * @param {TexParser} parser      The TexParser calling this function\n * @param {string} text           The text-mode string to be processed\n * @param {number|string} level   The scriptlevel of the text\n * @param {string} mathvariant    The mathvariant for the text\n * @return {MmlNode[]}            The final MmlNode generated for the text\n */\nfunction internalMath(parser: TexParser, text: string, level?: number | string, mathvariant?: string): MmlNode[] {\n  const config = parser.configuration.packageData.get('textmacros');\n  if (!(parser instanceof TextParser)) {\n    config.texParser = parser;\n  }\n  return [(new TextParser(text, mathvariant ? {mathvariant} : {}, config.parseOptions, level)).mml()];\n}\n\n//\n//  The textmacros package configuration\n//\nexport const TextMacrosConfiguration = Configuration.create('textmacros', {\n  /**\n   * @param {ParserConfiguration} config   The configuration object we are being configured within\n   * @param {TeX<any,any,any>} jax         The TeX input jax in which we are running\n   */\n  config(_config: ParserConfiguration, jax: TeX<any, any, any>) {\n    //\n    //  Create the configuration and parseOptions objects for the\n    //    internal TextParser and add the textBase configuration.\n    //\n    const textConf = new ParserConfiguration(jax.parseOptions.options.textmacros.packages, ['tex', 'text']);\n    textConf.init();\n    const parseOptions = new ParseOptions(textConf, []);\n    parseOptions.options = jax.parseOptions.options;      // share the TeX options\n    textConf.config(jax);\n    TagsFactory.addTags(textConf.tags);\n    parseOptions.tags = TagsFactory.getDefault();\n    parseOptions.tags.configuration = parseOptions;\n    //\n    // Share the TeX input jax's parseOptions packageData object\n    //   so that require and other packages will work in both parsers,\n    //   set the textmacros data (texParser will be filled in later),\n    //   and replace the internalMath function with our own.\n    //\n    parseOptions.packageData = jax.parseOptions.packageData;\n    parseOptions.packageData.set('textmacros', {parseOptions, jax, texParser: null});\n    parseOptions.options.internalMath = internalMath;\n  },\n  preprocessors: [(data: {data: ParseOptions}) => {\n    //\n    //  Set the MmlFactory for the nodeFactory, since it was not available\n    //  durring configuration above.\n    //\n    const config = data.data.packageData.get('textmacros');\n    config.parseOptions.nodeFactory.setMmlFactory(config.jax.mmlFactory);\n  }],\n  options: {\n    textmacros: {\n      packages: ['text-base']    // textmacro packages to load\n    }\n  }\n});\n","/*************************************************************\n *\n *  Copyright (c) 2020-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview  Character and Macro mappings for the textmacros package\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {MacroMap, CommandMap} from '../SymbolMap.js';\nimport {TexConstant} from '../TexConstants.js';\nimport {TextMacrosMethods} from './TextMacrosMethods.js';\nimport {MATHSPACE} from '../../../util/lengths.js';\n\n//\n//  The special characters in text-mode\n//\nnew MacroMap('text-special', {\n  '$':          'Math',\n  '%':          'Comment',\n  '^':          'MathModeOnly',\n  '_':          'MathModeOnly',\n  '&':          'Misplaced',\n  '#':          'Misplaced',\n  '~':          'Tilde',\n  ' ':          'Space',\n  '\\t':         'Space',\n  '\\r':         'Space',\n  '\\n':         'Space',\n  '\\u00A0':     'Tilde',\n  '{':          'OpenBrace',\n  '}':          'CloseBrace',\n  '`':          'OpenQuote',\n  '\\'':         'CloseQuote'\n}, TextMacrosMethods);\n\n//\n//  The text-mode macro mappings\n//\nnew CommandMap('text-macros', {\n  '(':          'Math',\n\n  '$':          'SelfQuote',\n  '_':          'SelfQuote',\n  '%':          'SelfQuote',\n  '{':          'SelfQuote',\n  '}':          'SelfQuote',\n  ' ':          'SelfQuote',\n  '&':          'SelfQuote',\n  '#':          'SelfQuote',\n  '\\\\':         'SelfQuote',\n\n  '\\'':         ['Accent', '\\u00B4'],\n  '\\u2019':     ['Accent', '\\u00B4'],\n  '`':          ['Accent', '\\u0060'],\n  '\\u2018':     ['Accent', '\\u0060'],\n  '^':          ['Accent', '^'],\n  '\\\"':         ['Accent', '\\u00A8'],\n  '~':          ['Accent', '~'],\n  '=':          ['Accent', '\\u00AF'],\n  '.':          ['Accent', '\\u02D9'],\n  'u':          ['Accent', '\\u02D8'],\n  'v':          ['Accent', '\\u02C7'],\n\n  emph:         'Emph',\n  rm:           ['SetFont', TexConstant.Variant.NORMAL],\n  mit:          ['SetFont', TexConstant.Variant.ITALIC],\n  oldstyle:     ['SetFont', TexConstant.Variant.OLDSTYLE],\n  cal:          ['SetFont', TexConstant.Variant.CALLIGRAPHIC],\n  it:           ['SetFont', '-tex-mathit'], // needs special handling\n  bf:           ['SetFont', TexConstant.Variant.BOLD],\n  bbFont:       ['SetFont', TexConstant.Variant.DOUBLESTRUCK],\n  scr:          ['SetFont', TexConstant.Variant.SCRIPT],\n  frak:         ['SetFont', TexConstant.Variant.FRAKTUR],\n  sf:           ['SetFont', TexConstant.Variant.SANSSERIF],\n  tt:           ['SetFont', TexConstant.Variant.MONOSPACE],\n\n  tiny:         ['SetSize', 0.5],\n  Tiny:         ['SetSize', 0.6],  // non-standard\n  scriptsize:   ['SetSize', 0.7],\n  small:        ['SetSize', 0.85],\n  normalsize:   ['SetSize', 1.0],\n  large:        ['SetSize', 1.2],\n  Large:        ['SetSize', 1.44],\n  LARGE:        ['SetSize', 1.73],\n  huge:         ['SetSize', 2.07],\n  Huge:         ['SetSize', 2.49],\n\n  Bbb:          ['Macro', '{\\\\bbFont #1}', 1],\n  textnormal:   ['Macro', '{\\\\rm #1}', 1],\n  textup:       ['Macro', '{\\\\rm #1}', 1],\n  textrm:       ['Macro', '{\\\\rm #1}', 1],\n  textit:       ['Macro', '{\\\\it #1}', 1],\n  textbf:       ['Macro', '{\\\\bf #1}', 1],\n  textsf:       ['Macro', '{\\\\sf #1}', 1],\n  texttt:       ['Macro', '{\\\\tt #1}', 1],\n\n  dagger:       ['Insert', '\\u2020'],\n  ddagger:      ['Insert', '\\u2021'],\n  S:            ['Insert', '\\u00A7'],\n\n  ',':          ['Spacer', MATHSPACE.thinmathspace],\n  ':':          ['Spacer', MATHSPACE.mediummathspace],\n  '>':          ['Spacer', MATHSPACE.mediummathspace],\n  ';':          ['Spacer', MATHSPACE.thickmathspace],\n  '!':          ['Spacer', MATHSPACE.negativethinmathspace],\n  enspace:      ['Spacer', .5],\n  quad:         ['Spacer', 1],\n  qquad:        ['Spacer', 2],\n  thinspace:    ['Spacer', MATHSPACE.thinmathspace],\n  negthinspace: ['Spacer', MATHSPACE.negativethinmathspace],\n\n  hskip:        'Hskip',\n  hspace:       'Hskip',\n  kern:         'Hskip',\n  mskip:        'Hskip',\n  mspace:       'Hskip',\n  mkern:        'Hskip',\n  rule:         'rule',\n  Rule:         ['Rule'],\n  Space:        ['Rule', 'blank'],\n\n  color:        'CheckAutoload',\n  textcolor:    'CheckAutoload',\n  colorbox:     'CheckAutoload',\n  fcolorbox:    'CheckAutoload',\n  href:         'CheckAutoload',\n  style:        'CheckAutoload',\n  class:        'CheckAutoload',\n  cssId:        'CheckAutoload',\n  unicode:      'CheckAutoload',\n\n  ref:          ['HandleRef', false],\n  eqref:        ['HandleRef', true],\n\n}, TextMacrosMethods);\n","/*************************************************************\n *\n *  Copyright (c) 2020-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview  Method definitions for the textmacros package\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport TexParser from '../TexParser.js';\nimport {retryAfter} from '../../../util/Retries.js';\nimport {TextParser} from './TextParser.js';\nimport BaseMethods from '../base/BaseMethods.js';\n\n/**\n * The methods used to implement the text-mode macros\n */\nexport const TextMacrosMethods = {\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  Comment(parser: TextParser, _c: string) {\n    while (parser.i < parser.string.length && parser.string.charAt(parser.i) !== '\\n') {\n      parser.i++;\n    }\n    parser.i++;\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} open         The delimiter used to open math-mode in text-mode\n   */\n  Math(parser: TextParser, open: string) {\n    parser.saveText();\n    let i = parser.i;\n    let j, c;\n    let braces = 0;\n    //\n    // Loop through the string looking for the closing delimiter, while matching braces\n    //\n    while ((c = parser.GetNext())) {\n      j = parser.i++;\n      switch (c) {\n\n      case '\\\\':\n        const cs = parser.GetCS();\n        if (cs === ')') c = '\\\\(';  // \\( is the opening delimiter for \\)\n      case '$':\n        //\n        //  If there are no unbalanced braces and we have found the close delimiter,\n        //    process the contents of the delimiters in math mode (using the original TeX parser)\n        //\n        if (braces === 0 && open === c) {\n          const config = parser.texParser.configuration;\n          const mml = (new TexParser(parser.string.substr(i, j - i), parser.stack.env, config)).mml();\n          parser.PushMath(mml);\n          return;\n        }\n        break;\n\n      case '{':\n        braces++;\n        break;\n\n      case '}':\n        if (braces === 0) {\n          parser.Error('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');\n        }\n        braces--;\n        break;\n      }\n    }\n    parser.Error('MathNotTerminated', 'Math-mode is not properly terminated');\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  MathModeOnly(parser: TextParser, c: string) {\n    parser.Error('MathModeOnly', '\\'%1\\' allowed only in math mode', c);\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  Misplaced(parser: TextParser, c: string) {\n    parser.Error('Misplaced', '\\'%1\\' can not be used here', c);\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  OpenBrace(parser: TextParser, _c: string) {\n    //\n    //  Save the current stack environment and make a copy of it for\n    //    use within the braced group.\n    //\n    const env = parser.stack.env;\n    parser.envStack.push(env);\n    parser.stack.env = Object.assign({}, env);\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  CloseBrace(parser: TextParser, _c: string) {\n    //\n    //  Restore the saved stack environment, if there was one\n    //\n    if (parser.envStack.length) {\n      parser.saveText();\n      parser.stack.env = parser.envStack.pop();\n    } else {\n      parser.Error('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');\n    }\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  OpenQuote(parser: TextParser, c: string) {\n    //\n    //  Handle smart open quotes\n    //\n    if (parser.string.charAt(parser.i) === c) {\n      parser.text += '\\u201C';\n      parser.i++;\n    } else {\n      parser.text += '\\u2018';\n    }\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  CloseQuote(parser: TextParser, c: string) {\n    //\n    //  Handle smart close quotes\n    //\n    if (parser.string.charAt(parser.i) === c) {\n      parser.text += '\\u201D';\n      parser.i++;\n    } else {\n      parser.text += '\\u2019';\n    }\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  Tilde(parser: TextParser, _c: string) {\n    parser.text += '\\u00A0';  // non-breaking space\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  Space(parser: TextParser, _c: string) {\n    parser.text += ' ';  // regular space, but skipping multiple spaces\n    while (parser.GetNext().match(/\\s/)) parser.i++;\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} name         The control sequence that called this function\n   */\n  SelfQuote(parser: TextParser, name: string) {\n    parser.text += name.substr(1);  // add in the quoted character\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} name         The control sequence that called this function\n   * @param {string} c            The character to insert into the string\n   */\n  Insert(parser: TextParser, _name: string, c: string) {\n    parser.text += c;\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} name         The control sequence that called this function\n   * @param {string} c            The character to insert into the string\n   */\n  Accent(parser: TextParser, name: string, c: string) {\n    //\n    //  Create an accented character using mover\n    //\n    const base = parser.ParseArg(name);\n    const accent = parser.create('token', 'mo', {}, c);\n    parser.addAttributes(accent);\n    parser.Push(parser.create('node', 'mover', [base, accent]));\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} name         The control sequence that called this function\n   */\n  Emph(parser: TextParser, name: string) {\n    //\n    //  Switch to/from italics\n    //\n    const variant = (parser.stack.env.mathvariant === '-tex-mathit' ? 'normal' : '-tex-mathit');\n    parser.Push(parser.ParseTextArg(name, {mathvariant: variant}));\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} name         The control sequence that called this function\n   * @param {string} variant      The font variant to use from now on\n   */\n  SetFont(parser: TextParser, _name: string, variant: string) {\n    parser.saveText();\n    parser.stack.env.mathvariant = variant;\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} name         The control sequence that called this function\n   * @param {number} size         The font size to use from now on\n   */\n  SetSize(parser: TextParser, _name: string, size: number) {\n    parser.saveText();\n    parser.stack.env.mathsize = size;\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} name         The control sequence that called this function\n   */\n  CheckAutoload(parser: TextParser, name: string) {\n    const autoload = parser.configuration.packageData.get('autoload');\n    const texParser = parser.texParser;\n    name = name.slice(1);\n    //\n    // Check if a macro is undefined, or currently set to autoload an extension.\n    // If so, process the macro in the original TexParser:\n    //    This will handle the undefined macro using the TeX parser's configuration, then return,\n    //    or will cause the autoloaded extension to load or be processed and restart the expression.\n    // Otherwise, process the macro in text mode.\n    //\n    const macro = texParser.lookup('macro', name);\n    if (!macro || (autoload && macro._func === autoload.Autoload)) {\n      texParser.parse('macro', [texParser, name]);\n      if (!macro) return;\n      retryAfter(Promise.resolve());\n    }\n    texParser.parse('macro', [parser, name]);\n  },\n\n  //\n  // Copy some methods from the base package\n  //\n  Macro: BaseMethods.Macro,\n  Spacer: BaseMethods.Spacer,\n  Hskip: BaseMethods.Hskip,\n  rule: BaseMethods.rule,\n  Rule: BaseMethods.Rule,\n  HandleRef: BaseMethods.HandleRef\n\n};\n\n","/*************************************************************\n *\n *  Copyright (c) 2020-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview  The TextParser class for the textmacros package\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport ParseOptions from '../ParseOptions.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {StackItem} from '../StackItem.js';\nimport {MmlNode, AbstractMmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport {EnvList} from '../StackItem.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {StopItem, StyleItem} from '../base/BaseItems.js';\n\n/**\n * Subclass of the TexParser but for handling text-mode material\n */\nexport class TextParser extends TexParser {\n\n  /**\n   * The accumulated text material to go into an mtext element\n   */\n  public text: string;\n\n  /**\n   * Saved stack environments for processing braces\n   */\n  public envStack: EnvList[];\n\n  /**\n   * The scriptlevel of this text-mode material\n   */\n  public level: number | string | undefined;\n\n  /**\n   * The accumulated MmlNodes generated by parsing the text-mode material\n   */\n  protected nodes: MmlNode[];\n\n  /**\n   * Short-hand for obtaining the saved TexParser\n   */\n  public get texParser() {\n    return this.configuration.packageData.get('textmacros').texParser;\n  }\n\n  /**\n   * @override\n   */\n  public get tags() {\n    return this.texParser.tags;\n  }\n\n  /**\n   * @override\n   * @constructor\n   */\n  constructor(text: string, env: EnvList, configuration: ParseOptions, level?: number | string) {\n    super(text, env, configuration);\n    this.level = level;\n  }\n\n  /**\n   * Make sure we only return one element (wrap multiple ones in an mrow or mstyle, as needed).\n   *\n   * @override\n   */\n  public mml() {\n    return (this.level != null ?\n            this.create('node', 'mstyle', this.nodes, {displaystyle: false, scriptlevel: this.level}) :\n            this.nodes.length === 1 ? this.nodes[0] : this.create('node', 'mrow', this.nodes));\n  }\n\n  /**\n   * @override\n   */\n  public Parse() {\n    this.text = '';\n    this.nodes = [];\n    this.envStack = [];\n    super.Parse();\n  }\n\n  /**\n   * Creates an mtext element for the saved text and pushes that onto the node list\n   */\n  public saveText() {\n    if (this.text) {\n      const mathvariant = this.stack.env.mathvariant;\n      const text = ParseUtil.internalText(this, this.text, mathvariant ? {mathvariant} : {});\n      this.text = '';\n      this.Push(text);\n    }\n  }\n\n  /**\n   * @override\n   */\n  public Push(mml: MmlNode | StackItem) {\n    if (this.text) {\n      this.saveText();\n    }\n    if (mml instanceof StopItem) {\n      return super.Push(mml);\n    }\n    if (mml instanceof StyleItem) {\n      this.stack.env.mathcolor = this.stack.env.color;\n      return;\n    }\n    if (mml instanceof AbstractMmlNode) {\n      this.addAttributes(mml);\n      this.nodes.push(mml);\n    }\n  }\n\n  /**\n   * Push some math into the node list, adding mathsize and mathcolor\n   *   if specified in the environment.\n   *\n   * @param {MmlNode} mml   The math nodes to push\n   */\n  public PushMath(mml: MmlNode) {\n    const env = this.stack.env;\n    if (!mml.isKind('TeXAtom')) {\n      mml = this.create('node', 'TeXAtom', [mml]);  // make sure the math is an ORD\n    }\n    for (const name of ['mathsize', 'mathcolor']) {\n      if (env[name] && !mml.attributes.getExplicit(name)) {\n        if (!mml.isToken && !mml.isKind('mstyle')) {\n          mml = this.create('node', 'mstyle', [mml]);\n        }\n        NodeUtil.setAttribute(mml, name, env[name]);\n      }\n    }\n    if (mml.isInferred) {\n      mml = this.create('node', 'mrow', mml.childNodes);\n    }\n    this.nodes.push(mml);\n  }\n\n  /**\n   * Add mathsize, mathcolor, and mathvariant to token nodes,\n   *   if they are specified in the environment\n   *\n   * @param {MmlNode} mml   The node to adjust\n   */\n  public addAttributes(mml: MmlNode) {\n    const env = this.stack.env;\n    if (!mml.isToken) return;\n    for (const name of ['mathsize', 'mathcolor', 'mathvariant']) {\n      if (env[name] && !mml.attributes.getExplicit(name)) {\n        NodeUtil.setAttribute(mml, name, env[name]);\n      }\n    }\n  }\n\n  /**\n   * Process the argument as text with the given environment settings\n   *\n   * @param {string} name   The macro that is calling for a parameter\n   * @param {EnvList} env   The environment to use\n   */\n  public ParseTextArg(name: string, env: EnvList) {\n    const text = this.GetArgument(name);\n    env = Object.assign(Object.assign({}, this.stack.env), env);\n    return (new TextParser(text, env, this.configuration)).mml();\n  }\n\n  /**\n   * Process an argument as text rather than math\n   *\n   * @override\n   */\n  public ParseArg(name: string) {\n    return (new TextParser(this.GetArgument(name), this.stack.env, this.configuration)).mml();\n  }\n\n  /**\n   * Throw an error\n   *\n   * @param {string} id        The id for the message string\n   * @param {string} message   The English version of the message\n   * @param {string[]} args    Any substitution args for the message\n   */\n  public Error(id: string, message: string, ...args: string[]) {\n    throw new TexError(id, message, ...args);\n  }\n\n}\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the unicode package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {EnvList} from '../StackItem.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport ParseUtil from '../ParseUtil.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {numeric} from '../../../util/Entities.js';\n\n// Namespace\nexport let UnicodeMethods: Record<string, ParseMethod> = {};\n\nlet UnicodeCache: {[key: number]: [number, number, string, number]} = {};\n\n/**\n * Parse function for unicode macro.\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the macro.\n */\nUnicodeMethods.Unicode = function(parser: TexParser, name: string) {\n  let HD = parser.GetBrackets(name);\n  let HDsplit = null;\n  let font = null;\n  if (HD) {\n    if (HD.replace(/ /g, '').\n        match(/^(\\d+(\\.\\d*)?|\\.\\d+),(\\d+(\\.\\d*)?|\\.\\d+)$/)) {\n      HDsplit = HD.replace(/ /g, '').split(/,/);\n      font = parser.GetBrackets(name);\n    } else {\n      font = HD;\n    }\n  }\n  let n = ParseUtil.trimSpaces(parser.GetArgument(name)).replace(/^0x/, 'x');\n  if (!n.match(/^(x[0-9A-Fa-f]+|[0-9]+)$/)) {\n    throw new TexError('BadUnicode', 'Argument to \\\\unicode must be a number');\n  }\n  let N = parseInt(n.match(/^x/) ? '0' + n : n);\n  if (!UnicodeCache[N]) {\n    UnicodeCache[N] = [800, 200, font, N];\n  } else if (!font) {\n    font = UnicodeCache[N][2];\n  }\n  if (HDsplit) {\n    UnicodeCache[N][0] = Math.floor(parseFloat(HDsplit[0]) * 1000);\n    UnicodeCache[N][1] = Math.floor(parseFloat(HDsplit[1]) * 1000);\n  }\n  let variant = parser.stack.env.font as string;\n  let def: EnvList = {};\n  if (font) {\n    UnicodeCache[N][2] = def.fontfamily = font.replace(/'/g, '\\'');\n    if (variant) {\n      if (variant.match(/bold/)) {\n        def.fontweight = 'bold';\n      }\n      if (variant.match(/italic|-mathit/)) {\n        def.fontstyle = 'italic';\n      }\n    }\n  } else if (variant) {\n    def.mathvariant = variant;\n  }\n  let node = parser.create('token', 'mtext', def, numeric(n));\n  NodeUtil.setProperty(node, 'unicode', true);\n  parser.Push(node);\n};\n\n\nnew CommandMap('unicode', {unicode: 'Unicode'}, UnicodeMethods);\n\n\nexport const UnicodeConfiguration = Configuration.create(\n  'unicode', {handler: {macro: ['unicode']}}\n);\n","/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the upgreek package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {Symbol} from '../Symbol.js';\nimport {CharacterMap} from '../SymbolMap.js';\nimport {TexConstant} from '../TexConstants.js';\nimport TexParser from '../TexParser.js';\n\n\n/**\n * Handle greek mathchar as mi in normal variant.\n * @param {TexParser} parser The current tex parser.\n * @param {Symbol} mchar The parsed symbol.\n */\nfunction mathchar0miNormal(parser: TexParser, mchar: Symbol) {\n  const def = mchar.attributes || {};\n  def.mathvariant = TexConstant.Variant.NORMAL;\n  const node = parser.create('token', 'mi', def, mchar.char);\n  parser.Push(node);\n}\n\n/**\n * Upright Greek characters.\n */\nnew CharacterMap('upgreek', mathchar0miNormal, {\n  upalpha:        '\\u03B1',\n  upbeta:         '\\u03B2',\n  upgamma:        '\\u03B3',\n  updelta:        '\\u03B4',\n  upepsilon:      '\\u03F5',\n  upzeta:         '\\u03B6',\n  upeta:          '\\u03B7',\n  uptheta:        '\\u03B8',\n  upiota:         '\\u03B9',\n  upkappa:        '\\u03BA',\n  uplambda:       '\\u03BB',\n  upmu:           '\\u03BC',\n  upnu:           '\\u03BD',\n  upxi:           '\\u03BE',\n  upomicron:      '\\u03BF',\n  uppi:           '\\u03C0',\n  uprho:          '\\u03C1',\n  upsigma:        '\\u03C3',\n  uptau:          '\\u03C4',\n  upupsilon:      '\\u03C5',\n  upphi:          '\\u03D5',\n  upchi:          '\\u03C7',\n  uppsi:          '\\u03C8',\n  upomega:        '\\u03C9',\n  upvarepsilon:   '\\u03B5',\n  upvartheta:     '\\u03D1',\n  upvarpi:        '\\u03D6',\n  upvarrho:       '\\u03F1',\n  upvarsigma:     '\\u03C2',\n  upvarphi:       '\\u03C6',\n\n  Upgamma:        '\\u0393',\n  Updelta:        '\\u0394',\n  Uptheta:        '\\u0398',\n  Uplambda:       '\\u039B',\n  Upxi:           '\\u039E',\n  Uppi:           '\\u03A0',\n  Upsigma:        '\\u03A3',\n  Upupsilon:      '\\u03A5',\n  Upphi:          '\\u03A6',\n  Uppsi:          '\\u03A8',\n  Upomega:        '\\u03A9'\n});\n\n\nexport const UpgreekConfiguration = Configuration.create(\n  'upgreek', {\n    handler: {macro: ['upgreek']},\n  }\n);\n\n","/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the verb package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {TexConstant} from '../TexConstants.js';\nimport TexParser from '../TexParser.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport TexError from '../TexError.js';\n\n\n// Namespace\nexport let VerbMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Implements the verbatim notation \\verb|...|.\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\nVerbMethods.Verb = function(parser: TexParser, name: string) {\n  const c = parser.GetNext();\n  const start = ++parser.i;\n  if (c === '' ) {\n    throw new TexError('MissingArgFor', 'Missing argument for %1', name);\n  }\n  while (parser.i < parser.string.length &&\n         parser.string.charAt(parser.i) !== c) {\n    parser.i++;\n  }\n  if (parser.i === parser.string.length) {\n    throw new TexError('NoClosingDelim',\n                       'Can\\'t find closing delimiter for %1',\n                       parser.currentCS);\n  }\n  const text = parser.string.slice(start, parser.i).replace(/ /g, '\\u00A0');\n  parser.i++;\n  parser.Push(parser.create('token', 'mtext',\n                            {mathvariant: TexConstant.Variant.MONOSPACE},\n                            text));\n};\n\n\nnew CommandMap('verb', {verb: 'Verb'}, VerbMethods);\n\n\nexport const VerbConfiguration = Configuration.create(\n  'verb', {handler: {macro: ['verb']}}\n);\n","\"use strict\";\n/*!\n *************************************************************************\n *\n *  mhchemParser.ts\n *  4.2.1\n *\n *  Parser for the \\ce command and \\pu command for MathJax and Co.\n *\n *  mhchem's \\ce is a tool for writing beautiful chemical equations easily.\n *  mhchem's \\pu is a tool for writing physical units easily.\n *\n *  ----------------------------------------------------------------------\n *\n *  Copyright (c) 2015-2023 Martin Hensel\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n *  ----------------------------------------------------------------------\n *\n *  https://github.com/mhchem/mhchemParser\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mhchemParser = void 0;\nvar mhchemParser = (function () {\n    function mhchemParser() {\n    }\n    mhchemParser.toTex = function (input, type) {\n        return _mhchemTexify.go(_mhchemParser.go(input, type), type !== \"tex\");\n    };\n    return mhchemParser;\n}());\nexports.mhchemParser = mhchemParser;\nfunction _mhchemCreateTransitions(o) {\n    var pattern, state;\n    var transitions = {};\n    for (pattern in o) {\n        for (state in o[pattern]) {\n            var stateArray = state.split(\"|\");\n            o[pattern][state].stateArray = stateArray;\n            for (var i = 0; i < stateArray.length; i++) {\n                transitions[stateArray[i]] = [];\n            }\n        }\n    }\n    for (pattern in o) {\n        for (state in o[pattern]) {\n            var stateArray = o[pattern][state].stateArray || [];\n            for (var i = 0; i < stateArray.length; i++) {\n                var p = o[pattern][state];\n                p.action_ = [].concat(p.action_);\n                for (var k = 0; k < p.action_.length; k++) {\n                    if (typeof p.action_[k] === \"string\") {\n                        p.action_[k] = { type_: p.action_[k] };\n                    }\n                }\n                var patternArray = pattern.split(\"|\");\n                for (var j = 0; j < patternArray.length; j++) {\n                    if (stateArray[i] === '*') {\n                        var t = void 0;\n                        for (t in transitions) {\n                            transitions[t].push({ pattern: patternArray[j], task: p });\n                        }\n                    }\n                    else {\n                        transitions[stateArray[i]].push({ pattern: patternArray[j], task: p });\n                    }\n                }\n            }\n        }\n    }\n    return transitions;\n}\n;\nvar _mhchemParser = {\n    go: function (input, stateMachine) {\n        if (!input) {\n            return [];\n        }\n        if (stateMachine === undefined) {\n            stateMachine = 'ce';\n        }\n        var state = '0';\n        var buffer = {};\n        buffer['parenthesisLevel'] = 0;\n        input = input.replace(/\\n/g, \" \");\n        input = input.replace(/[\\u2212\\u2013\\u2014\\u2010]/g, \"-\");\n        input = input.replace(/[\\u2026]/g, \"...\");\n        var lastInput;\n        var watchdog = 10;\n        var output = [];\n        while (true) {\n            if (lastInput !== input) {\n                watchdog = 10;\n                lastInput = input;\n            }\n            else {\n                watchdog--;\n            }\n            var machine = _mhchemParser.stateMachines[stateMachine];\n            var t = machine.transitions[state] || machine.transitions['*'];\n            iterateTransitions: for (var i = 0; i < t.length; i++) {\n                var matches = _mhchemParser.patterns.match_(t[i].pattern, input);\n                if (matches) {\n                    var task = t[i].task;\n                    for (var iA = 0; iA < task.action_.length; iA++) {\n                        var o = void 0;\n                        if (machine.actions[task.action_[iA].type_]) {\n                            o = machine.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\n                        }\n                        else if (_mhchemParser.actions[task.action_[iA].type_]) {\n                            o = _mhchemParser.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\n                        }\n                        else {\n                            throw [\"MhchemBugA\", \"mhchem bug A. Please report. (\" + task.action_[iA].type_ + \")\"];\n                        }\n                        _mhchemParser.concatArray(output, o);\n                    }\n                    state = task.nextState || state;\n                    if (input.length > 0) {\n                        if (!task.revisit) {\n                            input = matches.remainder;\n                        }\n                        if (!task.toContinue) {\n                            break iterateTransitions;\n                        }\n                    }\n                    else {\n                        return output;\n                    }\n                }\n            }\n            if (watchdog <= 0) {\n                throw [\"MhchemBugU\", \"mhchem bug U. Please report.\"];\n            }\n        }\n    },\n    concatArray: function (a, b) {\n        if (b) {\n            if (Array.isArray(b)) {\n                for (var iB = 0; iB < b.length; iB++) {\n                    a.push(b[iB]);\n                }\n            }\n            else {\n                a.push(b);\n            }\n        }\n    },\n    patterns: {\n        patterns: {\n            'empty': /^$/,\n            'else': /^./,\n            'else2': /^./,\n            'space': /^\\s/,\n            'space A': /^\\s(?=[A-Z\\\\$])/,\n            'space$': /^\\s$/,\n            'a-z': /^[a-z]/,\n            'x': /^x/,\n            'x$': /^x$/,\n            'i$': /^i$/,\n            'letters': /^(?:[a-zA-Z\\u03B1-\\u03C9\\u0391-\\u03A9?@]|(?:\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))))+/,\n            '\\\\greek': /^\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))/,\n            'one lowercase latin letter $': /^(?:([a-z])(?:$|[^a-zA-Z]))$/,\n            '$one lowercase latin letter$ $': /^\\$(?:([a-z])(?:$|[^a-zA-Z]))\\$$/,\n            'one lowercase greek letter $': /^(?:\\$?[\\u03B1-\\u03C9]\\$?|\\$?\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\\s*\\$?)(?:\\s+|\\{\\}|(?![a-zA-Z]))$/,\n            'digits': /^[0-9]+/,\n            '-9.,9': /^[+\\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))/,\n            '-9.,9 no missing 0': /^[+\\-]?[0-9]+(?:[.,][0-9]+)?/,\n            '(-)(9.,9)(e)(99)': function (input) {\n                var match = input.match(/^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))?(\\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))\\))?(?:(?:([eE])|\\s*(\\*|x|\\\\times|\\u00D7)\\s*10\\^)([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\}))?/);\n                if (match && match[0]) {\n                    return { match_: match.slice(1), remainder: input.substr(match[0].length) };\n                }\n                return null;\n            },\n            '(-)(9)^(-9)': /^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+)?)\\^([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\})/,\n            'state of aggregation $': function (input) {\n                var a = _mhchemParser.patterns.findObserveGroups(input, \"\", /^\\([a-z]{1,3}(?=[\\),])/, \")\", \"\");\n                if (a && a.remainder.match(/^($|[\\s,;\\)\\]\\}])/)) {\n                    return a;\n                }\n                var match = input.match(/^(?:\\((?:\\\\ca\\s?)?\\$[amothc]\\$\\))/);\n                if (match) {\n                    return { match_: match[0], remainder: input.substr(match[0].length) };\n                }\n                return null;\n            },\n            '_{(state of aggregation)}$': /^_\\{(\\([a-z]{1,3}\\))\\}/,\n            '{[(': /^(?:\\\\\\{|\\[|\\()/,\n            ')]}': /^(?:\\)|\\]|\\\\\\})/,\n            ', ': /^[,;]\\s*/,\n            ',': /^[,;]/,\n            '.': /^[.]/,\n            '. __* ': /^([.\\u22C5\\u00B7\\u2022]|[*])\\s*/,\n            '...': /^\\.\\.\\.(?=$|[^.])/,\n            '^{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"^{\", \"\", \"\", \"}\"); },\n            '^($...$)': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"^\", \"$\", \"$\", \"\"); },\n            '^a': /^\\^([0-9]+|[^\\\\_])/,\n            '^\\\\x{}{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"^\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true); },\n            '^\\\\x{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"^\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\"); },\n            '^\\\\x': /^\\^(\\\\[a-zA-Z]+)\\s*/,\n            '^(-1)': /^\\^(-?\\d+)/,\n            '\\'': /^'/,\n            '_{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"_{\", \"\", \"\", \"}\"); },\n            '_($...$)': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"_\", \"$\", \"$\", \"\"); },\n            '_9': /^_([+\\-]?[0-9]+|[^\\\\])/,\n            '_\\\\x{}{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"_\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true); },\n            '_\\\\x{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"_\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\"); },\n            '_\\\\x': /^_(\\\\[a-zA-Z]+)\\s*/,\n            '^_': /^(?:\\^(?=_)|\\_(?=\\^)|[\\^_]$)/,\n            '{}^': /^\\{\\}(?=\\^)/,\n            '{}': /^\\{\\}/,\n            '{...}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\", \"{\", \"}\", \"\"); },\n            '{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"{\", \"\", \"\", \"}\"); },\n            '$...$': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\", \"$\", \"$\", \"\"); },\n            '${(...)}$__$(...)$': function (input) {\n                return _mhchemParser.patterns.findObserveGroups(input, \"${\", \"\", \"\", \"}$\") || _mhchemParser.patterns.findObserveGroups(input, \"$\", \"\", \"\", \"$\");\n            },\n            '=<>': /^[=<>]/,\n            '#': /^[#\\u2261]/,\n            '+': /^\\+/,\n            '-$': /^-(?=[\\s_},;\\]/]|$|\\([a-z]+\\))/,\n            '-9': /^-(?=[0-9])/,\n            '- orbital overlap': /^-(?=(?:[spd]|sp)(?:$|[\\s,;\\)\\]\\}]))/,\n            '-': /^-/,\n            'pm-operator': /^(?:\\\\pm|\\$\\\\pm\\$|\\+-|\\+\\/-)/,\n            'operator': /^(?:\\+|(?:[\\-=<>]|<<|>>|\\\\approx|\\$\\\\approx\\$)(?=\\s|$|-?[0-9]))/,\n            'arrowUpDown': /^(?:v|\\(v\\)|\\^|\\(\\^\\))(?=$|[\\s,;\\)\\]\\}])/,\n            '\\\\bond{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\bond{\", \"\", \"\", \"}\"); },\n            '->': /^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\\u2192\\u27F6\\u21CC])/,\n            'CMT': /^[CMT](?=\\[)/,\n            '[(...)]': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"[\", \"\", \"\", \"]\"); },\n            '1st-level escape': /^(&|\\\\\\\\|\\\\hline)\\s*/,\n            '\\\\,': /^(?:\\\\[,\\ ;:])/,\n            '\\\\x{}{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true); },\n            '\\\\x{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\"); },\n            '\\\\ca': /^\\\\ca(?:\\s+|(?![a-zA-Z]))/,\n            '\\\\x': /^(?:\\\\[a-zA-Z]+\\s*|\\\\[_&{}%])/,\n            'orbital': /^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/,\n            'others': /^[\\/~|]/,\n            '\\\\frac{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\frac{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\"); },\n            '\\\\overset{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\overset{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\"); },\n            '\\\\underset{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\underset{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\"); },\n            '\\\\underbrace{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\underbrace{\", \"\", \"\", \"}_\", \"{\", \"\", \"\", \"}\"); },\n            '\\\\color{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\color{\", \"\", \"\", \"}\"); },\n            '\\\\color{(...)}{(...)}': function (input) {\n                return _mhchemParser.patterns.findObserveGroups(input, \"\\\\color{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\") ||\n                    _mhchemParser.patterns.findObserveGroups(input, \"\\\\color\", \"\\\\\", \"\", /^(?=\\{)/, \"{\", \"\", \"\", \"}\");\n            },\n            '\\\\ce{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\ce{\", \"\", \"\", \"}\"); },\n            '\\\\pu{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\pu{\", \"\", \"\", \"}\"); },\n            'oxidation$': /^(?:[+-][IVX]+|(?:\\\\pm|\\$\\\\pm\\$|\\+-|\\+\\/-)\\s*0)$/,\n            'd-oxidation$': /^(?:[+-]?[IVX]+|(?:\\\\pm|\\$\\\\pm\\$|\\+-|\\+\\/-)\\s*0)$/,\n            '1/2$': /^[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+(?:\\$[a-z]\\$|[a-z])?$/,\n            'amount': function (input) {\n                var match;\n                match = input.match(/^(?:(?:(?:\\([+\\-]?[0-9]+\\/[0-9]+\\)|[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+|[+\\-]?[0-9]+[.,][0-9]+|[+\\-]?\\.[0-9]+|[+\\-]?[0-9]+)(?:[a-z](?=\\s*[A-Z]))?)|[+\\-]?[a-z](?=\\s*[A-Z])|\\+(?!\\s))/);\n                if (match) {\n                    return { match_: match[0], remainder: input.substr(match[0].length) };\n                }\n                var a = _mhchemParser.patterns.findObserveGroups(input, \"\", \"$\", \"$\", \"\");\n                if (a) {\n                    match = a.match_.match(/^\\$(?:\\(?[+\\-]?(?:[0-9]*[a-z]?[+\\-])?[0-9]*[a-z](?:[+\\-][0-9]*[a-z]?)?\\)?|\\+|-)\\$$/);\n                    if (match) {\n                        return { match_: match[0], remainder: input.substr(match[0].length) };\n                    }\n                }\n                return null;\n            },\n            'amount2': function (input) { return this['amount'](input); },\n            '(KV letters),': /^(?:[A-Z][a-z]{0,2}|i)(?=,)/,\n            'formula$': function (input) {\n                if (input.match(/^\\([a-z]+\\)$/)) {\n                    return null;\n                }\n                var match = input.match(/^(?:[a-z]|(?:[0-9\\ \\+\\-\\,\\.\\(\\)]+[a-z])+[0-9\\ \\+\\-\\,\\.\\(\\)]*|(?:[a-z][0-9\\ \\+\\-\\,\\.\\(\\)]+)+[a-z]?)$/);\n                if (match) {\n                    return { match_: match[0], remainder: input.substr(match[0].length) };\n                }\n                return null;\n            },\n            'uprightEntities': /^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/,\n            '/': /^\\s*(\\/)\\s*/,\n            '//': /^\\s*(\\/\\/)\\s*/,\n            '*': /^\\s*[*.]\\s*/\n        },\n        findObserveGroups: function (input, begExcl, begIncl, endIncl, endExcl, beg2Excl, beg2Incl, end2Incl, end2Excl, combine) {\n            var _match = function (input, pattern) {\n                if (typeof pattern === \"string\") {\n                    if (input.indexOf(pattern) !== 0) {\n                        return null;\n                    }\n                    return pattern;\n                }\n                else {\n                    var match_1 = input.match(pattern);\n                    if (!match_1) {\n                        return null;\n                    }\n                    return match_1[0];\n                }\n            };\n            var _findObserveGroups = function (input, i, endChars) {\n                var braces = 0;\n                while (i < input.length) {\n                    var a = input.charAt(i);\n                    var match_2 = _match(input.substr(i), endChars);\n                    if (match_2 !== null && braces === 0) {\n                        return { endMatchBegin: i, endMatchEnd: i + match_2.length };\n                    }\n                    else if (a === \"{\") {\n                        braces++;\n                    }\n                    else if (a === \"}\") {\n                        if (braces === 0) {\n                            throw [\"ExtraCloseMissingOpen\", \"Extra close brace or missing open brace\"];\n                        }\n                        else {\n                            braces--;\n                        }\n                    }\n                    i++;\n                }\n                if (braces > 0) {\n                    return null;\n                }\n                return null;\n            };\n            var match = _match(input, begExcl);\n            if (match === null) {\n                return null;\n            }\n            input = input.substr(match.length);\n            match = _match(input, begIncl);\n            if (match === null) {\n                return null;\n            }\n            var e = _findObserveGroups(input, match.length, endIncl || endExcl);\n            if (e === null) {\n                return null;\n            }\n            var match1 = input.substring(0, (endIncl ? e.endMatchEnd : e.endMatchBegin));\n            if (!(beg2Excl || beg2Incl)) {\n                return {\n                    match_: match1,\n                    remainder: input.substr(e.endMatchEnd)\n                };\n            }\n            else {\n                var group2 = this.findObserveGroups(input.substr(e.endMatchEnd), beg2Excl, beg2Incl, end2Incl, end2Excl);\n                if (group2 === null) {\n                    return null;\n                }\n                var matchRet = [match1, group2.match_];\n                return {\n                    match_: (combine ? matchRet.join(\"\") : matchRet),\n                    remainder: group2.remainder\n                };\n            }\n        },\n        match_: function (m, input) {\n            var pattern = _mhchemParser.patterns.patterns[m];\n            if (pattern === undefined) {\n                throw [\"MhchemBugP\", \"mhchem bug P. Please report. (\" + m + \")\"];\n            }\n            else if (typeof pattern === \"function\") {\n                return _mhchemParser.patterns.patterns[m](input);\n            }\n            else {\n                var match = input.match(pattern);\n                if (match) {\n                    if (match.length > 2) {\n                        return { match_: match.slice(1), remainder: input.substr(match[0].length) };\n                    }\n                    else {\n                        return { match_: match[1] || match[0], remainder: input.substr(match[0].length) };\n                    }\n                }\n                return null;\n            }\n        }\n    },\n    actions: {\n        'a=': function (buffer, m) { buffer.a = (buffer.a || \"\") + m; return undefined; },\n        'b=': function (buffer, m) { buffer.b = (buffer.b || \"\") + m; return undefined; },\n        'p=': function (buffer, m) { buffer.p = (buffer.p || \"\") + m; return undefined; },\n        'o=': function (buffer, m) { buffer.o = (buffer.o || \"\") + m; return undefined; },\n        'o=+p1': function (buffer, _m, a) { buffer.o = (buffer.o || \"\") + a; return undefined; },\n        'q=': function (buffer, m) { buffer.q = (buffer.q || \"\") + m; return undefined; },\n        'd=': function (buffer, m) { buffer.d = (buffer.d || \"\") + m; return undefined; },\n        'rm=': function (buffer, m) { buffer.rm = (buffer.rm || \"\") + m; return undefined; },\n        'text=': function (buffer, m) { buffer.text_ = (buffer.text_ || \"\") + m; return undefined; },\n        'insert': function (_buffer, _m, a) { return { type_: a }; },\n        'insert+p1': function (_buffer, m, a) { return { type_: a, p1: m }; },\n        'insert+p1+p2': function (_buffer, m, a) { return { type_: a, p1: m[0], p2: m[1] }; },\n        'copy': function (_buffer, m) { return m; },\n        'write': function (_buffer, _m, a) { return a; },\n        'rm': function (_buffer, m) { return { type_: 'rm', p1: m }; },\n        'text': function (_buffer, m) { return _mhchemParser.go(m, 'text'); },\n        'tex-math': function (_buffer, m) { return _mhchemParser.go(m, 'tex-math'); },\n        'tex-math tight': function (_buffer, m) { return _mhchemParser.go(m, 'tex-math tight'); },\n        'bond': function (_buffer, m, k) { return { type_: 'bond', kind_: k || m }; },\n        'color0-output': function (_buffer, m) { return { type_: 'color0', color: m }; },\n        'ce': function (_buffer, m) { return _mhchemParser.go(m, 'ce'); },\n        'pu': function (_buffer, m) { return _mhchemParser.go(m, 'pu'); },\n        '1/2': function (_buffer, m) {\n            var ret = [];\n            if (m.match(/^[+\\-]/)) {\n                ret.push(m.substr(0, 1));\n                m = m.substr(1);\n            }\n            var n = m.match(/^([0-9]+|\\$[a-z]\\$|[a-z])\\/([0-9]+)(\\$[a-z]\\$|[a-z])?$/);\n            n[1] = n[1].replace(/\\$/g, \"\");\n            ret.push({ type_: 'frac', p1: n[1], p2: n[2] });\n            if (n[3]) {\n                n[3] = n[3].replace(/\\$/g, \"\");\n                ret.push({ type_: 'tex-math', p1: n[3] });\n            }\n            return ret;\n        },\n        '9,9': function (_buffer, m) { return _mhchemParser.go(m, '9,9'); }\n    },\n    stateMachines: {\n        'tex': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '0': { action_: 'copy' }\n                },\n                '\\\\ce{(...)}': {\n                    '0': { action_: [{ type_: 'write', option: \"{\" }, 'ce', { type_: 'write', option: \"}\" }] }\n                },\n                '\\\\pu{(...)}': {\n                    '0': { action_: [{ type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }] }\n                },\n                'else': {\n                    '0': { action_: 'copy' }\n                },\n            }),\n            actions: {}\n        },\n        'ce': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: 'output' }\n                },\n                'else': {\n                    '0|1|2': { action_: 'beginsWithBond=false', revisit: true, toContinue: true }\n                },\n                'oxidation$': {\n                    '0': { action_: 'oxidation-output' }\n                },\n                'CMT': {\n                    'r': { action_: 'rdt=', nextState: 'rt' },\n                    'rd': { action_: 'rqt=', nextState: 'rdt' }\n                },\n                'arrowUpDown': {\n                    '0|1|2|as': { action_: ['sb=false', 'output', 'operator'], nextState: '1' }\n                },\n                'uprightEntities': {\n                    '0|1|2': { action_: ['o=', 'output'], nextState: '1' }\n                },\n                'orbital': {\n                    '0|1|2|3': { action_: 'o=', nextState: 'o' }\n                },\n                '->': {\n                    '0|1|2|3': { action_: 'r=', nextState: 'r' },\n                    'a|as': { action_: ['output', 'r='], nextState: 'r' },\n                    '*': { action_: ['output', 'r='], nextState: 'r' }\n                },\n                '+': {\n                    'o': { action_: 'd= kv', nextState: 'd' },\n                    'd|D': { action_: 'd=', nextState: 'd' },\n                    'q': { action_: 'd=', nextState: 'qd' },\n                    'qd|qD': { action_: 'd=', nextState: 'qd' },\n                    'dq': { action_: ['output', 'd='], nextState: 'd' },\n                    '3': { action_: ['sb=false', 'output', 'operator'], nextState: '0' }\n                },\n                'amount': {\n                    '0|2': { action_: 'a=', nextState: 'a' }\n                },\n                'pm-operator': {\n                    '0|1|2|a|as': { action_: ['sb=false', 'output', { type_: 'operator', option: '\\\\pm' }], nextState: '0' }\n                },\n                'operator': {\n                    '0|1|2|a|as': { action_: ['sb=false', 'output', 'operator'], nextState: '0' }\n                },\n                '-$': {\n                    'o|q': { action_: ['charge or bond', 'output'], nextState: 'qd' },\n                    'd': { action_: 'd=', nextState: 'd' },\n                    'D': { action_: ['output', { type_: 'bond', option: \"-\" }], nextState: '3' },\n                    'q': { action_: 'd=', nextState: 'qd' },\n                    'qd': { action_: 'd=', nextState: 'qd' },\n                    'qD|dq': { action_: ['output', { type_: 'bond', option: \"-\" }], nextState: '3' }\n                },\n                '-9': {\n                    '3|o': { action_: ['output', { type_: 'insert', option: 'hyphen' }], nextState: '3' }\n                },\n                '- orbital overlap': {\n                    'o': { action_: ['output', { type_: 'insert', option: 'hyphen' }], nextState: '2' },\n                    'd': { action_: ['output', { type_: 'insert', option: 'hyphen' }], nextState: '2' }\n                },\n                '-': {\n                    '0|1|2': { action_: [{ type_: 'output', option: 1 }, 'beginsWithBond=true', { type_: 'bond', option: \"-\" }], nextState: '3' },\n                    '3': { action_: { type_: 'bond', option: \"-\" } },\n                    'a': { action_: ['output', { type_: 'insert', option: 'hyphen' }], nextState: '2' },\n                    'as': { action_: [{ type_: 'output', option: 2 }, { type_: 'bond', option: \"-\" }], nextState: '3' },\n                    'b': { action_: 'b=' },\n                    'o': { action_: { type_: '- after o/d', option: false }, nextState: '2' },\n                    'q': { action_: { type_: '- after o/d', option: false }, nextState: '2' },\n                    'd|qd|dq': { action_: { type_: '- after o/d', option: true }, nextState: '2' },\n                    'D|qD|p': { action_: ['output', { type_: 'bond', option: \"-\" }], nextState: '3' }\n                },\n                'amount2': {\n                    '1|3': { action_: 'a=', nextState: 'a' }\n                },\n                'letters': {\n                    '0|1|2|3|a|as|b|p|bp|o': { action_: 'o=', nextState: 'o' },\n                    'q|dq': { action_: ['output', 'o='], nextState: 'o' },\n                    'd|D|qd|qD': { action_: 'o after d', nextState: 'o' }\n                },\n                'digits': {\n                    'o': { action_: 'q=', nextState: 'q' },\n                    'd|D': { action_: 'q=', nextState: 'dq' },\n                    'q': { action_: ['output', 'o='], nextState: 'o' },\n                    'a': { action_: 'o=', nextState: 'o' }\n                },\n                'space A': {\n                    'b|p|bp': { action_: [] }\n                },\n                'space': {\n                    'a': { action_: [], nextState: 'as' },\n                    '0': { action_: 'sb=false' },\n                    '1|2': { action_: 'sb=true' },\n                    'r|rt|rd|rdt|rdq': { action_: 'output', nextState: '0' },\n                    '*': { action_: ['output', 'sb=true'], nextState: '1' }\n                },\n                '1st-level escape': {\n                    '1|2': { action_: ['output', { type_: 'insert+p1', option: '1st-level escape' }] },\n                    '*': { action_: ['output', { type_: 'insert+p1', option: '1st-level escape' }], nextState: '0' }\n                },\n                '[(...)]': {\n                    'r|rt': { action_: 'rd=', nextState: 'rd' },\n                    'rd|rdt': { action_: 'rq=', nextState: 'rdq' }\n                },\n                '...': {\n                    'o|d|D|dq|qd|qD': { action_: ['output', { type_: 'bond', option: \"...\" }], nextState: '3' },\n                    '*': { action_: [{ type_: 'output', option: 1 }, { type_: 'insert', option: 'ellipsis' }], nextState: '1' }\n                },\n                '. __* ': {\n                    '*': { action_: ['output', { type_: 'insert', option: 'addition compound' }], nextState: '1' }\n                },\n                'state of aggregation $': {\n                    '*': { action_: ['output', 'state of aggregation'], nextState: '1' }\n                },\n                '{[(': {\n                    'a|as|o': { action_: ['o=', 'output', 'parenthesisLevel++'], nextState: '2' },\n                    '0|1|2|3': { action_: ['o=', 'output', 'parenthesisLevel++'], nextState: '2' },\n                    '*': { action_: ['output', 'o=', 'output', 'parenthesisLevel++'], nextState: '2' }\n                },\n                ')]}': {\n                    '0|1|2|3|b|p|bp|o': { action_: ['o=', 'parenthesisLevel--'], nextState: 'o' },\n                    'a|as|d|D|q|qd|qD|dq': { action_: ['output', 'o=', 'parenthesisLevel--'], nextState: 'o' }\n                },\n                ', ': {\n                    '*': { action_: ['output', 'comma'], nextState: '0' }\n                },\n                '^_': {\n                    '*': { action_: [] }\n                },\n                '^{(...)}|^($...$)': {\n                    '0|1|2|as': { action_: 'b=', nextState: 'b' },\n                    'p': { action_: 'b=', nextState: 'bp' },\n                    '3|o': { action_: 'd= kv', nextState: 'D' },\n                    'q': { action_: 'd=', nextState: 'qD' },\n                    'd|D|qd|qD|dq': { action_: ['output', 'd='], nextState: 'D' }\n                },\n                '^a|^\\\\x{}{}|^\\\\x{}|^\\\\x|\\'': {\n                    '0|1|2|as': { action_: 'b=', nextState: 'b' },\n                    'p': { action_: 'b=', nextState: 'bp' },\n                    '3|o': { action_: 'd= kv', nextState: 'd' },\n                    'q': { action_: 'd=', nextState: 'qd' },\n                    'd|qd|D|qD': { action_: 'd=' },\n                    'dq': { action_: ['output', 'd='], nextState: 'd' }\n                },\n                '_{(state of aggregation)}$': {\n                    'd|D|q|qd|qD|dq': { action_: ['output', 'q='], nextState: 'q' }\n                },\n                '_{(...)}|_($...$)|_9|_\\\\x{}{}|_\\\\x{}|_\\\\x': {\n                    '0|1|2|as': { action_: 'p=', nextState: 'p' },\n                    'b': { action_: 'p=', nextState: 'bp' },\n                    '3|o': { action_: 'q=', nextState: 'q' },\n                    'd|D': { action_: 'q=', nextState: 'dq' },\n                    'q|qd|qD|dq': { action_: ['output', 'q='], nextState: 'q' }\n                },\n                '=<>': {\n                    '0|1|2|3|a|as|o|q|d|D|qd|qD|dq': { action_: [{ type_: 'output', option: 2 }, 'bond'], nextState: '3' }\n                },\n                '#': {\n                    '0|1|2|3|a|as|o': { action_: [{ type_: 'output', option: 2 }, { type_: 'bond', option: \"#\" }], nextState: '3' }\n                },\n                '{}^': {\n                    '*': { action_: [{ type_: 'output', option: 1 }, { type_: 'insert', option: 'tinySkip' }], nextState: '1' }\n                },\n                '{}': {\n                    '*': { action_: { type_: 'output', option: 1 }, nextState: '1' }\n                },\n                '{...}': {\n                    '0|1|2|3|a|as|b|p|bp': { action_: 'o=', nextState: 'o' },\n                    'o|d|D|q|qd|qD|dq': { action_: ['output', 'o='], nextState: 'o' }\n                },\n                '$...$': {\n                    'a': { action_: 'a=' },\n                    '0|1|2|3|as|b|p|bp|o': { action_: 'o=', nextState: 'o' },\n                    'as|o': { action_: 'o=' },\n                    'q|d|D|qd|qD|dq': { action_: ['output', 'o='], nextState: 'o' }\n                },\n                '\\\\bond{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 2 }, 'bond'], nextState: \"3\" }\n                },\n                '\\\\frac{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 1 }, 'frac-output'], nextState: '3' }\n                },\n                '\\\\overset{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 2 }, 'overset-output'], nextState: '3' }\n                },\n                '\\\\underset{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 2 }, 'underset-output'], nextState: '3' }\n                },\n                '\\\\underbrace{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 2 }, 'underbrace-output'], nextState: '3' }\n                },\n                '\\\\color{(...)}{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 2 }, 'color-output'], nextState: '3' }\n                },\n                '\\\\color{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 2 }, 'color0-output'] }\n                },\n                '\\\\ce{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 2 }, 'ce'], nextState: '3' }\n                },\n                '\\\\,': {\n                    '*': { action_: [{ type_: 'output', option: 1 }, 'copy'], nextState: '1' }\n                },\n                '\\\\pu{(...)}': {\n                    '*': { action_: ['output', { type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }], nextState: '3' }\n                },\n                '\\\\x{}{}|\\\\x{}|\\\\x': {\n                    '0|1|2|3|a|as|b|p|bp|o|c0': { action_: ['o=', 'output'], nextState: '3' },\n                    '*': { action_: ['output', 'o=', 'output'], nextState: '3' }\n                },\n                'others': {\n                    '*': { action_: [{ type_: 'output', option: 1 }, 'copy'], nextState: '3' }\n                },\n                'else2': {\n                    'a': { action_: 'a to o', nextState: 'o', revisit: true },\n                    'as': { action_: ['output', 'sb=true'], nextState: '1', revisit: true },\n                    'r|rt|rd|rdt|rdq': { action_: ['output'], nextState: '0', revisit: true },\n                    '*': { action_: ['output', 'copy'], nextState: '3' }\n                }\n            }),\n            actions: {\n                'o after d': function (buffer, m) {\n                    var ret;\n                    if ((buffer.d || \"\").match(/^[1-9][0-9]*$/)) {\n                        var tmp = buffer.d;\n                        buffer.d = undefined;\n                        ret = this['output'](buffer);\n                        ret.push({ type_: 'tinySkip' });\n                        buffer.b = tmp;\n                    }\n                    else {\n                        ret = this['output'](buffer);\n                    }\n                    _mhchemParser.actions['o='](buffer, m);\n                    return ret;\n                },\n                'd= kv': function (buffer, m) {\n                    buffer.d = m;\n                    buffer.dType = 'kv';\n                    return undefined;\n                },\n                'charge or bond': function (buffer, m) {\n                    if (buffer['beginsWithBond']) {\n                        var ret = [];\n                        _mhchemParser.concatArray(ret, this['output'](buffer));\n                        _mhchemParser.concatArray(ret, _mhchemParser.actions['bond'](buffer, m, \"-\"));\n                        return ret;\n                    }\n                    else {\n                        buffer.d = m;\n                        return undefined;\n                    }\n                },\n                '- after o/d': function (buffer, m, isAfterD) {\n                    var c1 = _mhchemParser.patterns.match_('orbital', buffer.o || \"\");\n                    var c2 = _mhchemParser.patterns.match_('one lowercase greek letter $', buffer.o || \"\");\n                    var c3 = _mhchemParser.patterns.match_('one lowercase latin letter $', buffer.o || \"\");\n                    var c4 = _mhchemParser.patterns.match_('$one lowercase latin letter$ $', buffer.o || \"\");\n                    var hyphenFollows = m === \"-\" && (c1 && c1.remainder === \"\" || c2 || c3 || c4);\n                    if (hyphenFollows && !buffer.a && !buffer.b && !buffer.p && !buffer.d && !buffer.q && !c1 && c3) {\n                        buffer.o = '$' + buffer.o + '$';\n                    }\n                    var ret = [];\n                    if (hyphenFollows) {\n                        _mhchemParser.concatArray(ret, this['output'](buffer));\n                        ret.push({ type_: 'hyphen' });\n                    }\n                    else {\n                        c1 = _mhchemParser.patterns.match_('digits', buffer.d || \"\");\n                        if (isAfterD && c1 && c1.remainder === '') {\n                            _mhchemParser.concatArray(ret, _mhchemParser.actions['d='](buffer, m));\n                            _mhchemParser.concatArray(ret, this['output'](buffer));\n                        }\n                        else {\n                            _mhchemParser.concatArray(ret, this['output'](buffer));\n                            _mhchemParser.concatArray(ret, _mhchemParser.actions['bond'](buffer, m, \"-\"));\n                        }\n                    }\n                    return ret;\n                },\n                'a to o': function (buffer) {\n                    buffer.o = buffer.a;\n                    buffer.a = undefined;\n                    return undefined;\n                },\n                'sb=true': function (buffer) { buffer.sb = true; return undefined; },\n                'sb=false': function (buffer) { buffer.sb = false; return undefined; },\n                'beginsWithBond=true': function (buffer) { buffer['beginsWithBond'] = true; return undefined; },\n                'beginsWithBond=false': function (buffer) { buffer['beginsWithBond'] = false; return undefined; },\n                'parenthesisLevel++': function (buffer) { buffer['parenthesisLevel']++; return undefined; },\n                'parenthesisLevel--': function (buffer) { buffer['parenthesisLevel']--; return undefined; },\n                'state of aggregation': function (_buffer, m) {\n                    return { type_: 'state of aggregation', p1: _mhchemParser.go(m, 'o') };\n                },\n                'comma': function (buffer, m) {\n                    var a = m.replace(/\\s*$/, '');\n                    var withSpace = (a !== m);\n                    if (withSpace && buffer['parenthesisLevel'] === 0) {\n                        return { type_: 'comma enumeration L', p1: a };\n                    }\n                    else {\n                        return { type_: 'comma enumeration M', p1: a };\n                    }\n                },\n                'output': function (buffer, _m, entityFollows) {\n                    var ret;\n                    if (!buffer.r) {\n                        ret = [];\n                        if (!buffer.a && !buffer.b && !buffer.p && !buffer.o && !buffer.q && !buffer.d && !entityFollows) {\n                        }\n                        else {\n                            if (buffer.sb) {\n                                ret.push({ type_: 'entitySkip' });\n                            }\n                            if (!buffer.o && !buffer.q && !buffer.d && !buffer.b && !buffer.p && entityFollows !== 2) {\n                                buffer.o = buffer.a;\n                                buffer.a = undefined;\n                            }\n                            else if (!buffer.o && !buffer.q && !buffer.d && (buffer.b || buffer.p)) {\n                                buffer.o = buffer.a;\n                                buffer.d = buffer.b;\n                                buffer.q = buffer.p;\n                                buffer.a = buffer.b = buffer.p = undefined;\n                            }\n                            else {\n                                if (buffer.o && buffer.dType === 'kv' && _mhchemParser.patterns.match_('d-oxidation$', buffer.d || \"\")) {\n                                    buffer.dType = 'oxidation';\n                                }\n                                else if (buffer.o && buffer.dType === 'kv' && !buffer.q) {\n                                    buffer.dType = undefined;\n                                }\n                            }\n                            ret.push({\n                                type_: 'chemfive',\n                                a: _mhchemParser.go(buffer.a, 'a'),\n                                b: _mhchemParser.go(buffer.b, 'bd'),\n                                p: _mhchemParser.go(buffer.p, 'pq'),\n                                o: _mhchemParser.go(buffer.o, 'o'),\n                                q: _mhchemParser.go(buffer.q, 'pq'),\n                                d: _mhchemParser.go(buffer.d, (buffer.dType === 'oxidation' ? 'oxidation' : 'bd')),\n                                dType: buffer.dType\n                            });\n                        }\n                    }\n                    else {\n                        var rd = void 0;\n                        if (buffer.rdt === 'M') {\n                            rd = _mhchemParser.go(buffer.rd, 'tex-math');\n                        }\n                        else if (buffer.rdt === 'T') {\n                            rd = [{ type_: 'text', p1: buffer.rd || \"\" }];\n                        }\n                        else {\n                            rd = _mhchemParser.go(buffer.rd, 'ce');\n                        }\n                        var rq = void 0;\n                        if (buffer.rqt === 'M') {\n                            rq = _mhchemParser.go(buffer.rq, 'tex-math');\n                        }\n                        else if (buffer.rqt === 'T') {\n                            rq = [{ type_: 'text', p1: buffer.rq || \"\" }];\n                        }\n                        else {\n                            rq = _mhchemParser.go(buffer.rq, 'ce');\n                        }\n                        ret = {\n                            type_: 'arrow',\n                            r: buffer.r,\n                            rd: rd,\n                            rq: rq\n                        };\n                    }\n                    for (var p in buffer) {\n                        if (p !== 'parenthesisLevel' && p !== 'beginsWithBond') {\n                            delete buffer[p];\n                        }\n                    }\n                    return ret;\n                },\n                'oxidation-output': function (_buffer, m) {\n                    var ret = [\"{\"];\n                    _mhchemParser.concatArray(ret, _mhchemParser.go(m, 'oxidation'));\n                    ret.push(\"}\");\n                    return ret;\n                },\n                'frac-output': function (_buffer, m) {\n                    return { type_: 'frac-ce', p1: _mhchemParser.go(m[0], 'ce'), p2: _mhchemParser.go(m[1], 'ce') };\n                },\n                'overset-output': function (_buffer, m) {\n                    return { type_: 'overset', p1: _mhchemParser.go(m[0], 'ce'), p2: _mhchemParser.go(m[1], 'ce') };\n                },\n                'underset-output': function (_buffer, m) {\n                    return { type_: 'underset', p1: _mhchemParser.go(m[0], 'ce'), p2: _mhchemParser.go(m[1], 'ce') };\n                },\n                'underbrace-output': function (_buffer, m) {\n                    return { type_: 'underbrace', p1: _mhchemParser.go(m[0], 'ce'), p2: _mhchemParser.go(m[1], 'ce') };\n                },\n                'color-output': function (_buffer, m) {\n                    return { type_: 'color', color1: m[0], color2: _mhchemParser.go(m[1], 'ce') };\n                },\n                'r=': function (buffer, m) { buffer.r = m; return undefined; },\n                'rdt=': function (buffer, m) { buffer.rdt = m; return undefined; },\n                'rd=': function (buffer, m) { buffer.rd = m; return undefined; },\n                'rqt=': function (buffer, m) { buffer.rqt = m; return undefined; },\n                'rq=': function (buffer, m) { buffer.rq = m; return undefined; },\n                'operator': function (_buffer, m, p1) { return { type_: 'operator', kind_: (p1 || m) }; }\n            }\n        },\n        'a': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: [] }\n                },\n                '1/2$': {\n                    '0': { action_: '1/2' }\n                },\n                'else': {\n                    '0': { action_: [], nextState: '1', revisit: true }\n                },\n                '${(...)}$__$(...)$': {\n                    '*': { action_: 'tex-math tight', nextState: '1' }\n                },\n                ',': {\n                    '*': { action_: { type_: 'insert', option: 'commaDecimal' } }\n                },\n                'else2': {\n                    '*': { action_: 'copy' }\n                }\n            }),\n            actions: {}\n        },\n        'o': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: [] }\n                },\n                '1/2$': {\n                    '0': { action_: '1/2' }\n                },\n                'else': {\n                    '0': { action_: [], nextState: '1', revisit: true }\n                },\n                'letters': {\n                    '*': { action_: 'rm' }\n                },\n                '\\\\ca': {\n                    '*': { action_: { type_: 'insert', option: 'circa' } }\n                },\n                '\\\\pu{(...)}': {\n                    '*': { action_: [{ type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }] }\n                },\n                '\\\\x{}{}|\\\\x{}|\\\\x': {\n                    '*': { action_: 'copy' }\n                },\n                '${(...)}$__$(...)$': {\n                    '*': { action_: 'tex-math' }\n                },\n                '{(...)}': {\n                    '*': { action_: [{ type_: 'write', option: \"{\" }, 'text', { type_: 'write', option: \"}\" }] }\n                },\n                'else2': {\n                    '*': { action_: 'copy' }\n                }\n            }),\n            actions: {}\n        },\n        'text': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: 'output' }\n                },\n                '{...}': {\n                    '*': { action_: 'text=' }\n                },\n                '${(...)}$__$(...)$': {\n                    '*': { action_: 'tex-math' }\n                },\n                '\\\\greek': {\n                    '*': { action_: ['output', 'rm'] }\n                },\n                '\\\\pu{(...)}': {\n                    '*': { action_: ['output', { type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }] }\n                },\n                '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n                    '*': { action_: ['output', 'copy'] }\n                },\n                'else': {\n                    '*': { action_: 'text=' }\n                }\n            }),\n            actions: {\n                'output': function (buffer) {\n                    if (buffer.text_) {\n                        var ret = { type_: 'text', p1: buffer.text_ };\n                        for (var p in buffer) {\n                            delete buffer[p];\n                        }\n                        return ret;\n                    }\n                    return undefined;\n                }\n            }\n        },\n        'pq': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: [] }\n                },\n                'state of aggregation $': {\n                    '*': { action_: 'state of aggregation' }\n                },\n                'i$': {\n                    '0': { action_: [], nextState: '!f', revisit: true }\n                },\n                '(KV letters),': {\n                    '0': { action_: 'rm', nextState: '0' }\n                },\n                'formula$': {\n                    '0': { action_: [], nextState: 'f', revisit: true }\n                },\n                '1/2$': {\n                    '0': { action_: '1/2' }\n                },\n                'else': {\n                    '0': { action_: [], nextState: '!f', revisit: true }\n                },\n                '${(...)}$__$(...)$': {\n                    '*': { action_: 'tex-math' }\n                },\n                '{(...)}': {\n                    '*': { action_: 'text' }\n                },\n                'a-z': {\n                    'f': { action_: 'tex-math' }\n                },\n                'letters': {\n                    '*': { action_: 'rm' }\n                },\n                '-9.,9': {\n                    '*': { action_: '9,9' }\n                },\n                ',': {\n                    '*': { action_: { type_: 'insert+p1', option: 'comma enumeration S' } }\n                },\n                '\\\\color{(...)}{(...)}': {\n                    '*': { action_: 'color-output' }\n                },\n                '\\\\color{(...)}': {\n                    '*': { action_: 'color0-output' }\n                },\n                '\\\\ce{(...)}': {\n                    '*': { action_: 'ce' }\n                },\n                '\\\\pu{(...)}': {\n                    '*': { action_: [{ type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }] }\n                },\n                '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n                    '*': { action_: 'copy' }\n                },\n                'else2': {\n                    '*': { action_: 'copy' }\n                }\n            }),\n            actions: {\n                'state of aggregation': function (_buffer, m) {\n                    return { type_: 'state of aggregation subscript', p1: _mhchemParser.go(m, 'o') };\n                },\n                'color-output': function (_buffer, m) {\n                    return { type_: 'color', color1: m[0], color2: _mhchemParser.go(m[1], 'pq') };\n                }\n            }\n        },\n        'bd': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: [] }\n                },\n                'x$': {\n                    '0': { action_: [], nextState: '!f', revisit: true }\n                },\n                'formula$': {\n                    '0': { action_: [], nextState: 'f', revisit: true }\n                },\n                'else': {\n                    '0': { action_: [], nextState: '!f', revisit: true }\n                },\n                '-9.,9 no missing 0': {\n                    '*': { action_: '9,9' }\n                },\n                '.': {\n                    '*': { action_: { type_: 'insert', option: 'electron dot' } }\n                },\n                'a-z': {\n                    'f': { action_: 'tex-math' }\n                },\n                'x': {\n                    '*': { action_: { type_: 'insert', option: 'KV x' } }\n                },\n                'letters': {\n                    '*': { action_: 'rm' }\n                },\n                '\\'': {\n                    '*': { action_: { type_: 'insert', option: 'prime' } }\n                },\n                '${(...)}$__$(...)$': {\n                    '*': { action_: 'tex-math' }\n                },\n                '{(...)}': {\n                    '*': { action_: 'text' }\n                },\n                '\\\\color{(...)}{(...)}': {\n                    '*': { action_: 'color-output' }\n                },\n                '\\\\color{(...)}': {\n                    '*': { action_: 'color0-output' }\n                },\n                '\\\\ce{(...)}': {\n                    '*': { action_: 'ce' }\n                },\n                '\\\\pu{(...)}': {\n                    '*': { action_: [{ type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }] }\n                },\n                '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n                    '*': { action_: 'copy' }\n                },\n                'else2': {\n                    '*': { action_: 'copy' }\n                }\n            }),\n            actions: {\n                'color-output': function (_buffer, m) {\n                    return { type_: 'color', color1: m[0], color2: _mhchemParser.go(m[1], 'bd') };\n                }\n            }\n        },\n        'oxidation': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: 'roman-numeral' }\n                },\n                'pm-operator': {\n                    '*': { action_: { type_: 'o=+p1', option: \"\\\\pm\" } }\n                },\n                'else': {\n                    '*': { action_: 'o=' }\n                }\n            }),\n            actions: {\n                'roman-numeral': function (buffer) { return { type_: 'roman numeral', p1: buffer.o || \"\" }; }\n            }\n        },\n        'tex-math': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: 'output' }\n                },\n                '\\\\ce{(...)}': {\n                    '*': { action_: ['output', 'ce'] }\n                },\n                '\\\\pu{(...)}': {\n                    '*': { action_: ['output', { type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }] }\n                },\n                '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n                    '*': { action_: 'o=' }\n                },\n                'else': {\n                    '*': { action_: 'o=' }\n                }\n            }),\n            actions: {\n                'output': function (buffer) {\n                    if (buffer.o) {\n                        var ret = { type_: 'tex-math', p1: buffer.o };\n                        for (var p in buffer) {\n                            delete buffer[p];\n                        }\n                        return ret;\n                    }\n                    return undefined;\n                }\n            }\n        },\n        'tex-math tight': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: 'output' }\n                },\n                '\\\\ce{(...)}': {\n                    '*': { action_: ['output', 'ce'] }\n                },\n                '\\\\pu{(...)}': {\n                    '*': { action_: ['output', { type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }] }\n                },\n                '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n                    '*': { action_: 'o=' }\n                },\n                '-|+': {\n                    '*': { action_: 'tight operator' }\n                },\n                'else': {\n                    '*': { action_: 'o=' }\n                }\n            }),\n            actions: {\n                'tight operator': function (buffer, m) { buffer.o = (buffer.o || \"\") + \"{\" + m + \"}\"; return undefined; },\n                'output': function (buffer) {\n                    if (buffer.o) {\n                        var ret = { type_: 'tex-math', p1: buffer.o };\n                        for (var p in buffer) {\n                            delete buffer[p];\n                        }\n                        return ret;\n                    }\n                    return undefined;\n                }\n            }\n        },\n        '9,9': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: [] }\n                },\n                ',': {\n                    '*': { action_: 'comma' }\n                },\n                'else': {\n                    '*': { action_: 'copy' }\n                }\n            }),\n            actions: {\n                'comma': function () { return { type_: 'commaDecimal' }; }\n            }\n        },\n        'pu': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: 'output' }\n                },\n                'space$': {\n                    '*': { action_: ['output', 'space'] }\n                },\n                '{[(|)]}': {\n                    '0|a': { action_: 'copy' }\n                },\n                '(-)(9)^(-9)': {\n                    '0': { action_: 'number^', nextState: 'a' }\n                },\n                '(-)(9.,9)(e)(99)': {\n                    '0': { action_: 'enumber', nextState: 'a' }\n                },\n                'space': {\n                    '0|a': { action_: [] }\n                },\n                'pm-operator': {\n                    '0|a': { action_: { type_: 'operator', option: '\\\\pm' }, nextState: '0' }\n                },\n                'operator': {\n                    '0|a': { action_: 'copy', nextState: '0' }\n                },\n                '//': {\n                    'd': { action_: 'o=', nextState: '/' }\n                },\n                '/': {\n                    'd': { action_: 'o=', nextState: '/' }\n                },\n                '{...}|else': {\n                    '0|d': { action_: 'd=', nextState: 'd' },\n                    'a': { action_: ['space', 'd='], nextState: 'd' },\n                    '/|q': { action_: 'q=', nextState: 'q' }\n                }\n            }),\n            actions: {\n                'enumber': function (_buffer, m) {\n                    var ret = [];\n                    if (m[0] === \"+-\" || m[0] === \"+/-\") {\n                        ret.push(\"\\\\pm \");\n                    }\n                    else if (m[0]) {\n                        ret.push(m[0]);\n                    }\n                    if (m[1]) {\n                        _mhchemParser.concatArray(ret, _mhchemParser.go(m[1], 'pu-9,9'));\n                        if (m[2]) {\n                            if (m[2].match(/[,.]/)) {\n                                _mhchemParser.concatArray(ret, _mhchemParser.go(m[2], 'pu-9,9'));\n                            }\n                            else {\n                                ret.push(m[2]);\n                            }\n                        }\n                        if (m[3] || m[4]) {\n                            if (m[3] === \"e\" || m[4] === \"*\") {\n                                ret.push({ type_: 'cdot' });\n                            }\n                            else {\n                                ret.push({ type_: 'times' });\n                            }\n                        }\n                    }\n                    if (m[5]) {\n                        ret.push(\"10^{\" + m[5] + \"}\");\n                    }\n                    return ret;\n                },\n                'number^': function (_buffer, m) {\n                    var ret = [];\n                    if (m[0] === \"+-\" || m[0] === \"+/-\") {\n                        ret.push(\"\\\\pm \");\n                    }\n                    else if (m[0]) {\n                        ret.push(m[0]);\n                    }\n                    _mhchemParser.concatArray(ret, _mhchemParser.go(m[1], 'pu-9,9'));\n                    ret.push(\"^{\" + m[2] + \"}\");\n                    return ret;\n                },\n                'operator': function (_buffer, m, p1) { return { type_: 'operator', kind_: (p1 || m) }; },\n                'space': function () { return { type_: 'pu-space-1' }; },\n                'output': function (buffer) {\n                    var ret;\n                    var md = _mhchemParser.patterns.match_('{(...)}', buffer.d || \"\");\n                    if (md && md.remainder === '') {\n                        buffer.d = md.match_;\n                    }\n                    var mq = _mhchemParser.patterns.match_('{(...)}', buffer.q || \"\");\n                    if (mq && mq.remainder === '') {\n                        buffer.q = mq.match_;\n                    }\n                    if (buffer.d) {\n                        buffer.d = buffer.d.replace(/\\u00B0C|\\^oC|\\^{o}C/g, \"{}^{\\\\circ}C\");\n                        buffer.d = buffer.d.replace(/\\u00B0F|\\^oF|\\^{o}F/g, \"{}^{\\\\circ}F\");\n                    }\n                    if (buffer.q) {\n                        buffer.q = buffer.q.replace(/\\u00B0C|\\^oC|\\^{o}C/g, \"{}^{\\\\circ}C\");\n                        buffer.q = buffer.q.replace(/\\u00B0F|\\^oF|\\^{o}F/g, \"{}^{\\\\circ}F\");\n                        var b5 = {\n                            d: _mhchemParser.go(buffer.d, 'pu'),\n                            q: _mhchemParser.go(buffer.q, 'pu')\n                        };\n                        if (buffer.o === '//') {\n                            ret = { type_: 'pu-frac', p1: b5.d, p2: b5.q };\n                        }\n                        else {\n                            ret = b5.d;\n                            if (b5.d.length > 1 || b5.q.length > 1) {\n                                ret.push({ type_: ' / ' });\n                            }\n                            else {\n                                ret.push({ type_: '/' });\n                            }\n                            _mhchemParser.concatArray(ret, b5.q);\n                        }\n                    }\n                    else {\n                        ret = _mhchemParser.go(buffer.d, 'pu-2');\n                    }\n                    for (var p in buffer) {\n                        delete buffer[p];\n                    }\n                    return ret;\n                }\n            }\n        },\n        'pu-2': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: 'output' }\n                },\n                '*': {\n                    '*': { action_: ['output', 'cdot'], nextState: '0' }\n                },\n                '\\\\x': {\n                    '*': { action_: 'rm=' }\n                },\n                'space': {\n                    '*': { action_: ['output', 'space'], nextState: '0' }\n                },\n                '^{(...)}|^(-1)': {\n                    '1': { action_: '^(-1)' }\n                },\n                '-9.,9': {\n                    '0': { action_: 'rm=', nextState: '0' },\n                    '1': { action_: '^(-1)', nextState: '0' }\n                },\n                '{...}|else': {\n                    '*': { action_: 'rm=', nextState: '1' }\n                }\n            }),\n            actions: {\n                'cdot': function () { return { type_: 'tight cdot' }; },\n                '^(-1)': function (buffer, m) { buffer.rm += \"^{\" + m + \"}\"; return undefined; },\n                'space': function () { return { type_: 'pu-space-2' }; },\n                'output': function (buffer) {\n                    var ret = [];\n                    if (buffer.rm) {\n                        var mrm = _mhchemParser.patterns.match_('{(...)}', buffer.rm || \"\");\n                        if (mrm && mrm.remainder === '') {\n                            ret = _mhchemParser.go(mrm.match_, 'pu');\n                        }\n                        else {\n                            ret = { type_: 'rm', p1: buffer.rm };\n                        }\n                    }\n                    for (var p in buffer) {\n                        delete buffer[p];\n                    }\n                    return ret;\n                }\n            }\n        },\n        'pu-9,9': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '0': { action_: 'output-0' },\n                    'o': { action_: 'output-o' }\n                },\n                ',': {\n                    '0': { action_: ['output-0', 'comma'], nextState: 'o' }\n                },\n                '.': {\n                    '0': { action_: ['output-0', 'copy'], nextState: 'o' }\n                },\n                'else': {\n                    '*': { action_: 'text=' }\n                }\n            }),\n            actions: {\n                'comma': function () { return { type_: 'commaDecimal' }; },\n                'output-0': function (buffer) {\n                    var ret = [];\n                    buffer.text_ = buffer.text_ || \"\";\n                    if (buffer.text_.length > 4) {\n                        var a = buffer.text_.length % 3;\n                        if (a === 0) {\n                            a = 3;\n                        }\n                        for (var i = buffer.text_.length - 3; i > 0; i -= 3) {\n                            ret.push(buffer.text_.substr(i, 3));\n                            ret.push({ type_: '1000 separator' });\n                        }\n                        ret.push(buffer.text_.substr(0, a));\n                        ret.reverse();\n                    }\n                    else {\n                        ret.push(buffer.text_);\n                    }\n                    for (var p in buffer) {\n                        delete buffer[p];\n                    }\n                    return ret;\n                },\n                'output-o': function (buffer) {\n                    var ret = [];\n                    buffer.text_ = buffer.text_ || \"\";\n                    if (buffer.text_.length > 4) {\n                        var a = buffer.text_.length - 3;\n                        var i = void 0;\n                        for (i = 0; i < a; i += 3) {\n                            ret.push(buffer.text_.substr(i, 3));\n                            ret.push({ type_: '1000 separator' });\n                        }\n                        ret.push(buffer.text_.substr(i));\n                    }\n                    else {\n                        ret.push(buffer.text_);\n                    }\n                    for (var p in buffer) {\n                        delete buffer[p];\n                    }\n                    return ret;\n                }\n            }\n        }\n    }\n};\nvar _mhchemTexify = {\n    go: function (input, addOuterBraces) {\n        if (!input) {\n            return \"\";\n        }\n        var res = \"\";\n        var cee = false;\n        for (var i = 0; i < input.length; i++) {\n            var inputi = input[i];\n            if (typeof inputi === \"string\") {\n                res += inputi;\n            }\n            else {\n                res += _mhchemTexify._go2(inputi);\n                if (inputi.type_ === '1st-level escape') {\n                    cee = true;\n                }\n            }\n        }\n        if (addOuterBraces && !cee && res) {\n            res = \"{\" + res + \"}\";\n        }\n        return res;\n    },\n    _goInner: function (input) {\n        return _mhchemTexify.go(input, false);\n    },\n    _go2: function (buf) {\n        var res;\n        switch (buf.type_) {\n            case 'chemfive':\n                res = \"\";\n                var b5 = {\n                    a: _mhchemTexify._goInner(buf.a),\n                    b: _mhchemTexify._goInner(buf.b),\n                    p: _mhchemTexify._goInner(buf.p),\n                    o: _mhchemTexify._goInner(buf.o),\n                    q: _mhchemTexify._goInner(buf.q),\n                    d: _mhchemTexify._goInner(buf.d)\n                };\n                if (b5.a) {\n                    if (b5.a.match(/^[+\\-]/)) {\n                        b5.a = \"{\" + b5.a + \"}\";\n                    }\n                    res += b5.a + \"\\\\,\";\n                }\n                if (b5.b || b5.p) {\n                    res += \"{\\\\vphantom{A}}\";\n                    res += \"^{\\\\hphantom{\" + (b5.b || \"\") + \"}}_{\\\\hphantom{\" + (b5.p || \"\") + \"}}\";\n                    res += \"\\\\mkern-1.5mu\";\n                    res += \"{\\\\vphantom{A}}\";\n                    res += \"^{\\\\smash[t]{\\\\vphantom{2}}\\\\llap{\" + (b5.b || \"\") + \"}}\";\n                    res += \"_{\\\\vphantom{2}\\\\llap{\\\\smash[t]{\" + (b5.p || \"\") + \"}}}\";\n                }\n                if (b5.o) {\n                    if (b5.o.match(/^[+\\-]/)) {\n                        b5.o = \"{\" + b5.o + \"}\";\n                    }\n                    res += b5.o;\n                }\n                if (buf.dType === 'kv') {\n                    if (b5.d || b5.q) {\n                        res += \"{\\\\vphantom{A}}\";\n                    }\n                    if (b5.d) {\n                        res += \"^{\" + b5.d + \"}\";\n                    }\n                    if (b5.q) {\n                        res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n                    }\n                }\n                else if (buf.dType === 'oxidation') {\n                    if (b5.d) {\n                        res += \"{\\\\vphantom{A}}\";\n                        res += \"^{\" + b5.d + \"}\";\n                    }\n                    if (b5.q) {\n                        res += \"{\\\\vphantom{A}}\";\n                        res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n                    }\n                }\n                else {\n                    if (b5.q) {\n                        res += \"{\\\\vphantom{A}}\";\n                        res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n                    }\n                    if (b5.d) {\n                        res += \"{\\\\vphantom{A}}\";\n                        res += \"^{\" + b5.d + \"}\";\n                    }\n                }\n                break;\n            case 'rm':\n                res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n                break;\n            case 'text':\n                if (buf.p1.match(/[\\^_]/)) {\n                    buf.p1 = buf.p1.replace(\" \", \"~\").replace(\"-\", \"\\\\text{-}\");\n                    res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n                }\n                else {\n                    res = \"\\\\text{\" + buf.p1 + \"}\";\n                }\n                break;\n            case 'roman numeral':\n                res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n                break;\n            case 'state of aggregation':\n                res = \"\\\\mskip2mu \" + _mhchemTexify._goInner(buf.p1);\n                break;\n            case 'state of aggregation subscript':\n                res = \"\\\\mskip1mu \" + _mhchemTexify._goInner(buf.p1);\n                break;\n            case 'bond':\n                res = _mhchemTexify._getBond(buf.kind_);\n                if (!res) {\n                    throw [\"MhchemErrorBond\", \"mhchem Error. Unknown bond type (\" + buf.kind_ + \")\"];\n                }\n                break;\n            case 'frac':\n                var c = \"\\\\frac{\" + buf.p1 + \"}{\" + buf.p2 + \"}\";\n                res = \"\\\\mathchoice{\\\\textstyle\" + c + \"}{\" + c + \"}{\" + c + \"}{\" + c + \"}\";\n                break;\n            case 'pu-frac':\n                var d = \"\\\\frac{\" + _mhchemTexify._goInner(buf.p1) + \"}{\" + _mhchemTexify._goInner(buf.p2) + \"}\";\n                res = \"\\\\mathchoice{\\\\textstyle\" + d + \"}{\" + d + \"}{\" + d + \"}{\" + d + \"}\";\n                break;\n            case 'tex-math':\n                res = buf.p1 + \" \";\n                break;\n            case 'frac-ce':\n                res = \"\\\\frac{\" + _mhchemTexify._goInner(buf.p1) + \"}{\" + _mhchemTexify._goInner(buf.p2) + \"}\";\n                break;\n            case 'overset':\n                res = \"\\\\overset{\" + _mhchemTexify._goInner(buf.p1) + \"}{\" + _mhchemTexify._goInner(buf.p2) + \"}\";\n                break;\n            case 'underset':\n                res = \"\\\\underset{\" + _mhchemTexify._goInner(buf.p1) + \"}{\" + _mhchemTexify._goInner(buf.p2) + \"}\";\n                break;\n            case 'underbrace':\n                res = \"\\\\underbrace{\" + _mhchemTexify._goInner(buf.p1) + \"}_{\" + _mhchemTexify._goInner(buf.p2) + \"}\";\n                break;\n            case 'color':\n                res = \"{\\\\color{\" + buf.color1 + \"}{\" + _mhchemTexify._goInner(buf.color2) + \"}}\";\n                break;\n            case 'color0':\n                res = \"\\\\color{\" + buf.color + \"}\";\n                break;\n            case 'arrow':\n                var b6 = {\n                    rd: _mhchemTexify._goInner(buf.rd),\n                    rq: _mhchemTexify._goInner(buf.rq)\n                };\n                var arrow = _mhchemTexify._getArrow(buf.r);\n                if (b6.rd || b6.rq) {\n                    if (buf.r === \"<=>\" || buf.r === \"<=>>\" || buf.r === \"<<=>\" || buf.r === \"<-->\") {\n                        arrow = \"\\\\long\" + arrow;\n                        if (b6.rd) {\n                            arrow = \"\\\\overset{\" + b6.rd + \"}{\" + arrow + \"}\";\n                        }\n                        if (b6.rq) {\n                            if (buf.r === \"<-->\") {\n                                arrow = \"\\\\underset{\\\\lower2mu{\" + b6.rq + \"}}{\" + arrow + \"}\";\n                            }\n                            else {\n                                arrow = \"\\\\underset{\\\\lower6mu{\" + b6.rq + \"}}{\" + arrow + \"}\";\n                            }\n                        }\n                        arrow = \" {}\\\\mathrel{\" + arrow + \"}{} \";\n                    }\n                    else {\n                        if (b6.rq) {\n                            arrow += \"[{\" + b6.rq + \"}]\";\n                        }\n                        arrow += \"{\" + b6.rd + \"}\";\n                        arrow = \" {}\\\\mathrel{\\\\x\" + arrow + \"}{} \";\n                    }\n                }\n                else {\n                    arrow = \" {}\\\\mathrel{\\\\long\" + arrow + \"}{} \";\n                }\n                res = arrow;\n                break;\n            case 'operator':\n                res = _mhchemTexify._getOperator(buf.kind_);\n                break;\n            case '1st-level escape':\n                res = buf.p1 + \" \";\n                break;\n            case 'space':\n                res = \" \";\n                break;\n            case 'tinySkip':\n                res = '\\\\mkern2mu';\n                break;\n            case 'entitySkip':\n                res = \"~\";\n                break;\n            case 'pu-space-1':\n                res = \"~\";\n                break;\n            case 'pu-space-2':\n                res = \"\\\\mkern3mu \";\n                break;\n            case '1000 separator':\n                res = \"\\\\mkern2mu \";\n                break;\n            case 'commaDecimal':\n                res = \"{,}\";\n                break;\n            case 'comma enumeration L':\n                res = \"{\" + buf.p1 + \"}\\\\mkern6mu \";\n                break;\n            case 'comma enumeration M':\n                res = \"{\" + buf.p1 + \"}\\\\mkern3mu \";\n                break;\n            case 'comma enumeration S':\n                res = \"{\" + buf.p1 + \"}\\\\mkern1mu \";\n                break;\n            case 'hyphen':\n                res = \"\\\\text{-}\";\n                break;\n            case 'addition compound':\n                res = \"\\\\,{\\\\cdot}\\\\,\";\n                break;\n            case 'electron dot':\n                res = \"\\\\mkern1mu \\\\bullet\\\\mkern1mu \";\n                break;\n            case 'KV x':\n                res = \"{\\\\times}\";\n                break;\n            case 'prime':\n                res = \"\\\\prime \";\n                break;\n            case 'cdot':\n                res = \"\\\\cdot \";\n                break;\n            case 'tight cdot':\n                res = \"\\\\mkern1mu{\\\\cdot}\\\\mkern1mu \";\n                break;\n            case 'times':\n                res = \"\\\\times \";\n                break;\n            case 'circa':\n                res = \"{\\\\sim}\";\n                break;\n            case '^':\n                res = \"uparrow\";\n                break;\n            case 'v':\n                res = \"downarrow\";\n                break;\n            case 'ellipsis':\n                res = \"\\\\ldots \";\n                break;\n            case '/':\n                res = \"/\";\n                break;\n            case ' / ':\n                res = \"\\\\,/\\\\,\";\n                break;\n            default:\n                assertNever(buf);\n                throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n        }\n        return res;\n    },\n    _getArrow: function (a) {\n        switch (a) {\n            case \"->\": return \"rightarrow\";\n            case \"\\u2192\": return \"rightarrow\";\n            case \"\\u27F6\": return \"rightarrow\";\n            case \"<-\": return \"leftarrow\";\n            case \"<->\": return \"leftrightarrow\";\n            case \"<-->\": return \"leftrightarrows\";\n            case \"<=>\": return \"rightleftharpoons\";\n            case \"\\u21CC\": return \"rightleftharpoons\";\n            case \"<=>>\": return \"Rightleftharpoons\";\n            case \"<<=>\": return \"Leftrightharpoons\";\n            default:\n                assertNever(a);\n                throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n        }\n    },\n    _getBond: function (a) {\n        switch (a) {\n            case \"-\": return \"{-}\";\n            case \"1\": return \"{-}\";\n            case \"=\": return \"{=}\";\n            case \"2\": return \"{=}\";\n            case \"#\": return \"{\\\\equiv}\";\n            case \"3\": return \"{\\\\equiv}\";\n            case \"~\": return \"{\\\\tripledash}\";\n            case \"~-\": return \"{\\\\rlap{\\\\lower.1em{-}}\\\\raise.1em{\\\\tripledash}}\";\n            case \"~=\": return \"{\\\\rlap{\\\\lower.2em{-}}\\\\rlap{\\\\raise.2em{\\\\tripledash}}-}\";\n            case \"~--\": return \"{\\\\rlap{\\\\lower.2em{-}}\\\\rlap{\\\\raise.2em{\\\\tripledash}}-}\";\n            case \"-~-\": return \"{\\\\rlap{\\\\lower.2em{-}}\\\\rlap{\\\\raise.2em{-}}\\\\tripledash}\";\n            case \"...\": return \"{{\\\\cdot}{\\\\cdot}{\\\\cdot}}\";\n            case \"....\": return \"{{\\\\cdot}{\\\\cdot}{\\\\cdot}{\\\\cdot}}\";\n            case \"->\": return \"{\\\\rightarrow}\";\n            case \"<-\": return \"{\\\\leftarrow}\";\n            case \"<\": return \"{<}\";\n            case \">\": return \"{>}\";\n            default:\n                assertNever(a);\n                throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n        }\n    },\n    _getOperator: function (a) {\n        switch (a) {\n            case \"+\": return \" {}+{} \";\n            case \"-\": return \" {}-{} \";\n            case \"=\": return \" {}={} \";\n            case \"<\": return \" {}<{} \";\n            case \">\": return \" {}>{} \";\n            case \"<<\": return \" {}\\\\ll{} \";\n            case \">>\": return \" {}\\\\gg{} \";\n            case \"\\\\pm\": return \" {}\\\\pm{} \";\n            case \"\\\\approx\": return \" {}\\\\approx{} \";\n            case \"$\\\\approx$\": return \" {}\\\\approx{} \";\n            case \"v\": return \" \\\\downarrow{} \";\n            case \"(v)\": return \" \\\\downarrow{} \";\n            case \"^\": return \" \\\\uparrow{} \";\n            case \"(^)\": return \" \\\\uparrow{} \";\n            default:\n                assertNever(a);\n                throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n        }\n    }\n};\nfunction assertNever(a) { }\n"],"names":["MathJax","loader","preLoad","AllPackages","ActionMethods","Macro","parser","name","arg","children","GetArgument","push","stack","env","configuration","mml","Push","create","actiontype","ParseArg","tip","CommandMap","toggle","mathtip","texttip","ActionConfiguration","Configuration","handler","macro","AbstractTags","AmsTags","AmsConfiguration","character","delimiter","environment","items","MultlineItem","prototype","kind","FlalignItem","tags","init","config","NEW_OPS","append","local","priority","_config","jax","parseOptions","options","multlineWidth","ams","multlineIndent","factory","start","args","EndEntry","this","table","length","fixInitialMO","nodes","shove","getProperty","mtd","columnalign","setProperty","row","Clear","EndRow","EndTable","m","label","getAttribute","getChildren","setAttribute","TexConstant","Align","LEFT","RIGHT","tag","getTag","arraydef","side","mtr","mlabel","concat","copyAttributes","end","ArrayItem","numbered","padded","center","n","cell","shift","maxrow","isKind","def","width","lspace","mpadded","setChildren","global","indentalign","EqnArrayItem","sm","CharacterMap","mathchar0mo","iiiint","texClass","TEXCLASS","OP","RegExpMap","AmsMethods","operatorLetter","mathring","nobreakspace","negmedspace","MATHSPACE","negativemediummathspace","negthickspace","negativethickmathspace","idotsint","dddot","ddddot","sideset","boxed","notag","eqref","substack","injlim","projlim","varliminf","varlimsup","varinjlim","varprojlim","DeclareMathOperator","operatorname","genfrac","frac","tfrac","dfrac","binom","tbinom","dbinom","cfrac","shoveleft","shoveright","xrightarrow","xleftarrow","EnvironmentMap","cols","thickmathspace","align","multline","split","gather","alignat","alignedat","aligned","gathered","xalignat","xxalignat","flalign","subarray","smallmatrix","matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix","cases","DelimiterMap","OPEN","CLOSE","mathchar0mi","digamma","varkappa","varGamma","mathvariant","Variant","ITALIC","varDelta","varTheta","varLambda","varXi","varPi","varSigma","varUpsilon","varPhi","varPsi","varOmega","beth","gimel","daleth","backprime","variantForm","hslash","varnothing","blacktriangle","triangledown","blacktriangledown","square","Box","blacksquare","lozenge","Diamond","blacklozenge","circledS","NORMAL","bigstar","sphericalangle","measuredangle","nexists","complement","mho","eth","Finv","diagup","Game","diagdown","Bbbk","DOUBLESTRUCK","yen","circledR","checkmark","maltese","dotplus","ltimes","smallsetminus","rtimes","Cap","doublecap","leftthreetimes","Cup","doublecup","rightthreetimes","barwedge","curlywedge","veebar","curlyvee","doublebarwedge","boxminus","circleddash","boxtimes","circledast","boxdot","circledcirc","boxplus","centerdot","divideontimes","intercal","leqq","geqq","leqslant","geqslant","eqslantless","eqslantgtr","lesssim","gtrsim","lessapprox","gtrapprox","approxeq","lessdot","gtrdot","lll","llless","ggg","gggtr","lessgtr","gtrless","lesseqgtr","gtreqless","lesseqqgtr","gtreqqless","doteqdot","Doteq","eqcirc","risingdotseq","circeq","fallingdotseq","triangleq","backsim","thicksim","backsimeq","thickapprox","subseteqq","supseteqq","Subset","Supset","sqsubset","sqsupset","preccurlyeq","succcurlyeq","curlyeqprec","curlyeqsucc","precsim","succsim","precapprox","succapprox","vartriangleleft","lhd","vartriangleright","rhd","trianglelefteq","unlhd","trianglerighteq","unrhd","vDash","Vdash","Vvdash","smallsmile","shortmid","smallfrown","shortparallel","bumpeq","between","Bumpeq","pitchfork","varpropto","backepsilon","blacktriangleleft","blacktriangleright","therefore","because","eqsim","vartriangle","Join","nless","ngtr","nleq","ngeq","nleqslant","ngeqslant","nleqq","ngeqq","lneq","gneq","lneqq","gneqq","lvertneqq","gvertneqq","lnsim","gnsim","lnapprox","gnapprox","nprec","nsucc","npreceq","nsucceq","precneqq","succneqq","precnsim","succnsim","precnapprox","succnapprox","nsim","ncong","nshortmid","nshortparallel","nmid","nparallel","nvdash","nvDash","nVdash","nVDash","ntriangleleft","ntriangleright","ntrianglelefteq","ntrianglerighteq","nsubseteq","nsupseteq","nsubseteqq","nsupseteqq","subsetneq","supsetneq","varsubsetneq","varsupsetneq","subsetneqq","supsetneqq","varsubsetneqq","varsupsetneqq","leftleftarrows","rightrightarrows","leftrightarrows","rightleftarrows","Lleftarrow","Rrightarrow","twoheadleftarrow","twoheadrightarrow","leftarrowtail","rightarrowtail","looparrowleft","looparrowright","leftrightharpoons","rightleftharpoons","curvearrowleft","curvearrowright","circlearrowleft","circlearrowright","Lsh","Rsh","upuparrows","downdownarrows","upharpoonleft","upharpoonright","downharpoonleft","restriction","multimap","downharpoonright","leftrightsquigarrow","rightsquigarrow","leadsto","dashrightarrow","dashleftarrow","nleftarrow","nrightarrow","nLeftarrow","nRightarrow","nleftrightarrow","nLeftrightarrow","implies","impliedby","splitSideSet","isInferred","childNodes","checkSideSetBase","child","getChildAt","splice","base","getText","begin","taggable","spacing","style","GetBrackets","getName","array","EqnArray","setArrayAlign","valign","match","count","parseInt","spaceStr","join","checkEqnEnv","item","itemFactory","displaystyle","rowspacing","columnspacing","minlabelspacing","framespacing","frame","FlalignArray","zeroWidthLabel","replace","columnwidth","star","GetStar","cs","trimSpaces","charAt","substr","op","handlers","retrieve","add","font","multiLetterIdentifiers","operatorLetters","setProperties","movesupsub","movablelimits","c","GetNext","i","GetCS","preScripts","preRest","postScripts","postRest","replaceChild","copyNode","appendChildren","mrow","appendChild","variable","integral","next","string","slice","chr","l","r","Em","bot","first","dstrut","depth","arrow","stretchy","REL","String","fromCodePoint","scriptlevel","setChild","over","bottom","bstrut","height","under","_name","top","Top","currentCS","Size","lr","num","den","lrMap","numNode","denNode","numalign","denomalign","left","right","thick","GetDelimiterArg","fixedFence","styleDigit","styleAlpha","currentTag","tagId","HandleNoTag","HandleRef","Accent","Tilde","Array","Spacer","NamedOp","Equation","AmsCdConfiguration","amscd","colspace","rowspace","harrowsize","varrowsize","hideHorizontalLabels","CD","minCDarrowwidth","minCDarrowheight","MacroMap","AmsCdMethods","minw","CD_minw","minh","CD_minh","Other","arrowRow","hdef","minsize","vdef","symmetric","rspace","a","GetUpTo","b","pad","nodeA","nodeB","arrowNode","ORD","isEntry","GetDimen","BboxMethods","background","bbox","math","parts","part","trim","BBoxPadding","BBoxStyle","Object","assign","mathbackground","styles","BboxConfiguration","BOLDVARIANT","createBoldToken","text","token","NodeFactory","createToken","addNode","rewriteBoldTokens","data","getList","node","variant","BOLD","removeProperties","BOLDITALIC","FRAKTUR","BOLDFRAKTUR","SCRIPT","BOLDSCRIPT","SANSSERIF","BOLDSANSSERIF","BoldsymbolMethods","Boldsymbol","boldsymbol","BoldsymbolConfiguration","postprocessors","BraketConfiguration","BraketItem","checkItem","toMml","BaseItem","fail","inner","open","close","fenced","attrs","fence","openNode","closeNode","INNER","bra","ket","braket","Infinity","Bra","Ket","Braket","Set","ketbra","Ketbra","BraketMethods","barmax","single","barcount","Bar","braketbar","BussproofsConfiguration","ProofTreeItem","preprocessors","saveDocument","clearDocument","makeBsprAttributes","balanceRules","leftLabel","rigthLabel","innerStack","BussproofsUtil","tree","prefix","AxiomC","UnaryInfC","BinaryInfC","TrinaryInfC","QuaternaryInfC","QuinaryInfC","RightLabel","LeftLabel","AXC","UIC","BIC","TIC","RL","LL","noLine","singleLine","solidLine","dashedLine","alwaysNoLine","alwaysSingleLine","alwaysSolidLine","alwaysDashedLine","rootAtTop","alwaysRootAtTop","rootAtBottom","alwaysRootAtBottom","fCenter","Axiom","UnaryInf","BinaryInf","TrinaryInf","QuaternaryInf","QuinaryInf","prooftree","BussproofsMethods","line","currentLine","content","paddedContent","internalMath","lpad","rpad","createRule","premise","conclusions","rightLabel","upper","lower","rule","rowlines","voffset","parseFCenterLine","axiom","indexOf","prem","conc","conclusion","fcenter","middle","Inference","childCount","Peek","unshift","Pop","Label","SetLine","always","RootAtTop","where","AxiomF","FCenter","_parser","InferenceF","doc","getBBox","root","outputJax","getRule","isType","parent","getPremises","direction","getPremise","premises","firstPremise","lastPremise","getConclusion","getColumn","inf","nextSibling","getParentInf","getSpaces","result","index","adjustValue","addSpace","space","nodeFactory","moveProperties","mspace","dimen2em","src","dest","forEach","x","value","removeProperty","addSequentSpace","sequent","position","adjustSequentPairwise","sequents","pop","compareSequents","Math","abs","tr","br","document","MathItem","display","nodeLists","seq","collect","adjustSequents","inferences","isProof","premiseF","premiseL","adjust","w","maxAdjust","max","column","sibling","pos","parentRule","property_prefix","blacklistedProperties","property","walkTree","_data","attr","getPropertyNames","RegExp","Error","_arg","CancelMethods","Cancel","notation","keyvalOptions","ENCLOSE_OPTIONS","Notation","UPDIAGONALSTRIKE","UPDIAGONALARROW","NORTHEASTARROW","cancel","bcancel","DOWNDIAGONALSTRIKE","xcancel","cancelto","CancelConfiguration","BeginItem","CasesBeginItem","subcounter","defaultTags","autoTag","counter","formatNumber","toString","fromCharCode","CasesTags","CasesMethods","NumCases","closing","Last","original","EmpheqUtil","Entry","tex","braces","PushAll","numcases","subnumcases","CasesConfiguration","filterCenterOver","getTexClass","centerOver","centernot","CenterOver","CenternotConfiguration","color","textcolor","definecolor","colorbox","fcolorbox","ColorMethods","ColorConfiguration","padding","borderWidth","packageData","set","model","ColorModel","COLORS","Map","colorPadding","unit","pad2","parseFloat","Color","colorDef","get","getColor","mathcolor","old","cname","defineColor","colorModel","fname","ColorModelProcessors","userColors","normalizeColor","has","modelProcessor","getColorByName","normalized","rgb","rgbParts","RGB","rgbPart","pn","floor","gray","col","hasColor","attributes","createMml","ColorArrayItem","cellcolor","rowcolor","columncolor","TableColor","type","lookup","ColortblConfiguration","ConfigurationHandler","ColorV2Methods","MACROSMAP","ENVIRONMENTMAP","ConfigMacrosConfiguration","macros","keys","isArray","MacroWithTemplate","configMacros","environments","BeginEnv","configEnvironments","BeginEnvItem","expandable","EmpheqBeginItem","EmpheqMethods","Empheq","empheq","adjustTable","eqnenv","opts","checkEnv","splitOptions","EmpheqMO","EmpheqDelim","GetDelimiter","empheqlbrace","empheqrbrace","empheqlbrack","empheqrbrack","empheqlangle","empheqrangle","empheqlparen","empheqrparen","empheqlvert","empheqrvert","empheqlVert","empheqrVert","empheqlfloor","empheqrfloor","empheqlceil","empheqrceil","empheqbiglbrace","empheqbigrbrace","empheqbiglbrack","empheqbigrbrack","empheqbiglangle","empheqbigrangle","empheqbiglparen","empheqbigrparen","empheqbiglvert","empheqbigrvert","empheqbiglVert","empheqbigrVert","empheqbiglfloor","empheqbigrfloor","empheqbiglceil","empheqbigrceil","empheql","empheqr","empheqbigl","empheqbigr","EmpheqConfiguration","func","allowed","columnCount","cellBlock","topRowTable","rowspanCell","reverse","allowEnv","equation","hasOwnProperty","EncloseMethods","Enclose","enclose","EncloseConfiguration","ExtpfeilMethods","xArrow","spaces","addMacro","xtwoheadrightarrow","xtwoheadleftarrow","xmapsto","xlongequal","xtofrom","Newextarrow","ExtpfeilConfiguration","NewcommandConfiguration","mchar","class","char","ohm","degree","celsius","perthousand","micro","GensymbConfiguration","href","cssId","HtmlConfiguration","HtmlMethods","url","GetArgumentMML","CLASS","oldClass","oldStyle","ID","copyChildren","fixPrescripts","PAIREDDELIMS","MathtoolsConfiguration","MultlinedItem","pairedDelims","mathtools","pairedDelimiters","MathtoolsUtil","addPairedDelims","MathtoolsTagFormat","tagforms","gap","multlinegap","firstskip","lastskip","last","call","xleftrightarrow","xLeftarrow","xRightarrow","xLeftrightarrow","xhookleftarrow","xhookrightarrow","xrightharpoondown","xleftharpoondown","xrightleftharpoons","xrightharpoonup","xleftharpoonup","xleftrightharpoons","mathllap","mathrlap","mathclap","clap","textllap","textrlap","textclap","cramped","crampedllap","crampedrlap","crampedclap","crampedsubstack","mathmbox","mathmakebox","overbracket","underbracket","refeq","MoveEqLeft","Aboxed","ArrowBetweenLines","vdotswithin","shortvdotswithin","MTFlushSpaceAbove","MTFlushSpaceBelow","DeclarePairedDelimiter","DeclarePairedDelimiterX","DeclarePairedDelimiterXPP","DeclarePairedDelimiters","DeclarePairedDelimitersX","DeclarePairedDelimitersXPP","centercolon","ordinarycolon","MTThinColon","coloneqq","Coloneqq","coloneq","Coloneq","eqqcolon","Eqqcolon","eqcolon","Eqcolon","colonapprox","Colonapprox","colonsim","Colonsim","dblcolon","nuparrow","ndownarrow","bigtimes","splitfrac","splitdfrac","xmathstrut","prescript","newtagform","renewtagform","usetagform","adjustlimits","mathtoolsset","MathtoolsMethods","dcases","rcases","drcases","psmallmatrix","bsmallmatrix","Bsmallmatrix","vsmallmatrix","Vsmallmatrix","crampedsubarray","multlined","spreadlines","lgathered","rgathered","MtMatrix","MtSmallMatrix","MtMultlined","HandleShove","SpreadLines","spread","spreadLines","Cases","MathLap","setDisplayLevel","Cramped","MtLap","MathMakeBox","MathMBox","UnderOverBracket","thickness","length2em","accent","border","t","em","copy","script","underOver","munderover","checkAlignment","rest","substituteArgs","symbol","VDotsWithin","isFlush","ShortVDotsWithin","FlushSpaceAbove","FlushSpaceBelow","addRowSpacing","PairedDelimiters","body","pre","post","size","delim","reduce","s","addArgs","checkMaxMacros","GetCsNameArgument","GetArgCount","CenterColon","force","thin","dy","Relation","unicode","NArrow","SplitFrac","linethickness","XMathStrut","dd","dh","plusOrMinus","Prescript","sup","getScript","sub","NewTagForm","renew","id","format","mtFormats","UseTagForm","mtCurrent","SetOptions","AmsEqnArray","tagID","TagsFactory","forms","form","formatTag","constructor","tagName","TagFormat","mtable","map","MhchemMethods","Machine","machine","mhchemParser","toTex","err","ce","pu","longrightleftharpoons","longRightleftharpoons","longLeftrightharpoons","longleftrightarrows","tripledash","xRightleftharpoons","xLeftrightharpoons","MhchemConfiguration","maxMacros","NEW_DELIMITER","NEW_COMMAND","NEW_ENVIRONMENT","newcommand","renewcommand","newenvironment","renewenvironment","NewcommandMethods","opt","bdef","edef","addEnvironment","GetCSname","params","GetTemplate","addDelimiter","applicable","newArgs","disassembleSymbol","p","_cs","symb","assembleSymbol","argCount","MatchParam","GetParameter","Parse","optional","NewcommandUtil","param","key","Symbol","cmd","j","hasBraces","NoErrorsConfiguration","message","_id","expr","mtext","title","NoUndefinedConfiguration","fallback","textNode","noundefined","PhysicsConfiguration","AutoOpen","physics","italicdiff","arrowdel","openCount","smash","errors","CALLIGRAPHIC","dotproduct","vdot","crossproduct","cross","cp","gradientnabla","real","imaginary","PhysicsMethods","pairs","biggs","Quantity","named","big","empty","argument","Eval","Commutator","latinCap","latinSmall","greekCap","greekSmall","digits","inRange","range","createVectorToken","code","codePointAt","vectorFont","vectorStar","VectorBold","oldToken","oldFont","StarMacro","argcount","vectorApplication","operator","fences","enlarge","outputBraket","star1","star2","arg1","arg2","arg3","OperatorApplication","VectorOperator","Expression","exp","Qqtext","Differential","optArg","power","parens","Derivative","argMax","argCounter","ignore","power1","power2","second","starBra","hasKet","starKet","saveI","BraKet","KetBra","Expectation","MatrixElement","MatrixQuantity","small","IdentityMatrix","isNaN","zeros","fill","columns","XMatrix","rows","PauliMatrix","DiagonalMatrix","anti","startI","endI","elements","element","currentI","e","makeDiagMatrix","AutoClose","_texclass","mo","autoclose","Vnabla","DiffD","NamedFn","SetOptionsUtil","filterPackage","extension","setoptions","allowOptions","undefined","allowPackageDefault","filterOption","option","allow","isObject","allowOptionsDefault","filterValue","_extension","_option","setOptionsMap","setOptions","SetOptionsConfiguration","require","_func","FindTeX","formatError","package","baseURL","maxBuffer","maxMaxros","autoload","configmacros","tagformat","tagformatConfig","number","formatId","formatUrl","TagFormatConfiguration","encodeURIComponent","TextcompConfiguration","OLDSTYLE","Insert","TextParser","TextMacrosMethods","saveText","internalText","level","texParser","TextBaseConfiguration","parse","StartItem","StopItem","MmlItem","StyleItem","TextMacrosConfiguration","textConf","ParserConfiguration","textmacros","packages","addTags","getDefault","setMmlFactory","mmlFactory","emph","rm","mit","oldstyle","cal","it","bf","bbFont","scr","frak","sf","tt","MONOSPACE","tiny","Tiny","scriptsize","normalsize","large","Large","LARGE","huge","Huge","Bbb","textnormal","textup","textrm","textit","textbf","textsf","texttt","dagger","ddagger","S","thinmathspace","mediummathspace","negativethinmathspace","enspace","quad","qquad","thinspace","negthinspace","hskip","hspace","kern","mskip","mkern","Rule","Space","ref","Comment","_c","PushMath","MathModeOnly","Misplaced","OpenBrace","envStack","CloseBrace","OpenQuote","CloseQuote","SelfQuote","addAttributes","Emph","ParseTextArg","SetFont","SetSize","mathsize","CheckAutoload","Autoload","retryAfter","Promise","resolve","Hskip","AbstractMmlNode","getExplicit","isToken","UnicodeMethods","UnicodeCache","Unicode","HD","HDsplit","N","fontfamily","fontweight","fontstyle","numeric","UnicodeConfiguration","upalpha","upbeta","upgamma","updelta","upepsilon","upzeta","upeta","uptheta","upiota","upkappa","uplambda","upmu","upnu","upxi","upomicron","uppi","uprho","upsigma","uptau","upupsilon","upphi","upchi","uppsi","upomega","upvarepsilon","upvartheta","upvarpi","upvarrho","upvarsigma","upvarphi","Upgamma","Updelta","Uptheta","Uplambda","Upxi","Uppi","Upsigma","Upupsilon","Upphi","Uppsi","Upomega","UpgreekConfiguration","VerbMethods","Verb","verb","VerbConfiguration","defineProperty","exports","input","_mhchemTexify","go","_mhchemParser","_mhchemCreateTransitions","o","pattern","state","transitions","stateArray","action_","k","type_","patternArray","task","stateMachine","lastInput","buffer","watchdog","output","stateMachines","iterateTransitions","matches","patterns","match_","iA","actions","concatArray","nextState","revisit","remainder","toContinue","iB","findObserveGroups","begExcl","begIncl","endIncl","endExcl","beg2Excl","beg2Incl","end2Incl","end2Excl","combine","_match","match_1","endChars","match_2","endMatchBegin","endMatchEnd","_findObserveGroups","match1","substring","group2","matchRet","_m","q","d","text_","_buffer","p1","p2","kind_","ret","tmp","dType","isAfterD","c1","c2","c3","c4","hyphenFollows","sb","entityFollows","rd","rdt","rq","rqt","color1","color2","md","mq","b5","mrm","addOuterBraces","res","cee","inputi","_go2","_goInner","buf","_getBond","b6","_getArrow","_getOperator"],"sourceRoot":""}